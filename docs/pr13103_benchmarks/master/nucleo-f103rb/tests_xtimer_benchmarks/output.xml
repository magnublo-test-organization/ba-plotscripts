<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 10:57:12.462" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.704" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:13.721" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:15.645" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:13.700" endtime="20201030 10:57:15.647"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.652" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:15.649" endtime="20201030 10:57:15.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.697" endtime="20201030 10:57:15.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.659" endtime="20201030 10:57:15.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.657" endtime="20201030 10:57:15.993"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.025" endtime="20201030 10:57:16.045"></status>
</kw>
<msg timestamp="20201030 10:57:16.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:57:16.022" endtime="20201030 10:57:16.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.049" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:57:16.047" endtime="20201030 10:57:16.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.052" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:16.050" endtime="20201030 10:57:16.052"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:16.015" endtime="20201030 10:57:16.053"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:16.009" endtime="20201030 10:57:16.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.006" endtime="20201030 10:57:16.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:16.061" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:16.060" endtime="20201030 10:57:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.055" endtime="20201030 10:57:16.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.004" endtime="20201030 10:57:16.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.002" endtime="20201030 10:57:16.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.065" endtime="20201030 10:57:16.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.998" endtime="20201030 10:57:16.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.072" endtime="20201030 10:57:16.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.995" endtime="20201030 10:57:16.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.693" endtime="20201030 10:57:16.078"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.093" endtime="20201030 10:57:16.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.089" endtime="20201030 10:57:16.116"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.153" endtime="20201030 10:57:16.171"></status>
</kw>
<msg timestamp="20201030 10:57:16.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.149" endtime="20201030 10:57:16.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.173" endtime="20201030 10:57:16.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.178" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:16.176" endtime="20201030 10:57:16.178"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:16.142" endtime="20201030 10:57:16.179"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:16.135" endtime="20201030 10:57:16.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.131" endtime="20201030 10:57:16.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:16.184" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:16.183" endtime="20201030 10:57:16.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.181" endtime="20201030 10:57:16.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.129" endtime="20201030 10:57:16.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.126" endtime="20201030 10:57:16.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.186" endtime="20201030 10:57:16.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.122" endtime="20201030 10:57:16.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.118" endtime="20201030 10:57:16.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.086" endtime="20201030 10:57:16.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.198" endtime="20201030 10:57:16.209"></status>
</kw>
<msg timestamp="20201030 10:57:16.209" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.197" endtime="20201030 10:57:16.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.212" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.210" endtime="20201030 10:57:16.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.213" endtime="20201030 10:57:16.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.193" endtime="20201030 10:57:16.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.191" endtime="20201030 10:57:16.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.222" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:57:16.221" endtime="20201030 10:57:16.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.224" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:57:16.223" endtime="20201030 10:57:16.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.217" endtime="20201030 10:57:16.225"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:16.079" endtime="20201030 10:57:16.226" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:12.723" endtime="20201030 10:57:16.230"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.352" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:16.367" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:18.308" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:16.347" endtime="20201030 10:57:18.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.315" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:18.312" endtime="20201030 10:57:18.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.344" endtime="20201030 10:57:18.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.322" endtime="20201030 10:57:18.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.319" endtime="20201030 10:57:18.658"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.688" endtime="20201030 10:57:18.715"></status>
</kw>
<msg timestamp="20201030 10:57:18.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'te...</msg>
<status status="PASS" starttime="20201030 10:57:18.684" endtime="20201030 10:57:18.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'te...</msg>
<status status="PASS" starttime="20201030 10:57:18.718" endtime="20201030 10:57:18.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.729" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:18.725" endtime="20201030 10:57:18.730"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.678" endtime="20201030 10:57:18.732"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.673" endtime="20201030 10:57:18.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.670" endtime="20201030 10:57:18.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:18.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:18.741" endtime="20201030 10:57:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.736" endtime="20201030 10:57:18.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.668" endtime="20201030 10:57:18.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.666" endtime="20201030 10:57:18.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.746" endtime="20201030 10:57:18.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.663" endtime="20201030 10:57:18.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.753" endtime="20201030 10:57:18.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.660" endtime="20201030 10:57:18.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.341" endtime="20201030 10:57:18.759"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.773" endtime="20201030 10:57:18.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.769" endtime="20201030 10:57:18.796"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.892" endtime="20201030 10:57:18.914"></status>
</kw>
<msg timestamp="20201030 10:57:18.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.889" endtime="20201030 10:57:18.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.918" endtime="20201030 10:57:18.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.929" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:18.924" endtime="20201030 10:57:18.929"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.882" endtime="20201030 10:57:18.931"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.875" endtime="20201030 10:57:18.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.810" endtime="20201030 10:57:18.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:18.941" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:18.940" endtime="20201030 10:57:18.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.935" endtime="20201030 10:57:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.808" endtime="20201030 10:57:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.806" endtime="20201030 10:57:18.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.945" endtime="20201030 10:57:18.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.802" endtime="20201030 10:57:18.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.798" endtime="20201030 10:57:18.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.766" endtime="20201030 10:57:18.952"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.975" endtime="20201030 10:57:18.989"></status>
</kw>
<msg timestamp="20201030 10:57:18.990" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.972" endtime="20201030 10:57:18.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.992" endtime="20201030 10:57:18.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.999" endtime="20201030 10:57:19.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.965" endtime="20201030 10:57:19.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.960" endtime="20201030 10:57:19.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.024" endtime="20201030 10:57:19.332"></status>
</kw>
<msg timestamp="20201030 10:57:19.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193729236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:19.021" endtime="20201030 10:57:19.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193729236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:19.339" endtime="20201030 10:57:19.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.352" endtime="20201030 10:57:19.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.014" endtime="20201030 10:57:19.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.007" endtime="20201030 10:57:19.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.368" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3569999999990534e-05}, {'diff': 1.3819999999997723e-05}, {'diff': 2.4820000000008724e-05}, {'diff': 2.7306000000004715e-05}, {'diff': 2.213900000000435e-05}, {'diff': 2.084700...</msg>
<status status="PASS" starttime="20201030 10:57:19.361" endtime="20201030 10:57:19.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:19.376" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3569999999990534e-05, 1.3819999999997723e-05, 2.4820000000008724e-05, 2.7306000000004715e-05, 2.213900000000435e-05, 2.0847000000018268e-05, 1.587499999999853e-05, 1.734700000000089e-05...</msg>
<status status="PASS" starttime="20201030 10:57:19.371" endtime="20201030 10:57:19.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.387" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:19.384" endtime="20201030 10:57:19.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.392" level="INFO">VALUE: [0, 1.3569999999990534e-05, 1.3819999999997723e-05, 2.4820000000008724e-05, 2.7306000000004715e-05, 2.213900000000435e-05, 2.0847000000018268e-05, 1.587499999999853e-05, 1.734700000000089e-05, 2.6292000000011084e-05, 1.6277999999980697e-05, 2.504100000000342e-05, 1.461099999999771e-05, 2.5026999999983035e-05, 6.888999999982159e-06, 2.1070000000011913e-05, 2.5458000000005976e-05, 1.815299999999298e-05, 1.5236000000001804e-05, 2.6902999999994792e-05, 1.7791000000016988e-05, 1.1278000000003452e-05, 2.6055999999996526e-05, 1.0235999999996803e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.389" endtime="20201030 10:57:19.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.378" endtime="20201030 10:57:19.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.956" endtime="20201030 10:57:19.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.955" endtime="20201030 10:57:19.396"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.417" endtime="20201030 10:57:19.430"></status>
</kw>
<msg timestamp="20201030 10:57:19.431" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.413" endtime="20201030 10:57:19.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.433" endtime="20201030 10:57:19.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.440" endtime="20201030 10:57:19.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.406" endtime="20201030 10:57:19.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.401" endtime="20201030 10:57:19.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.465" endtime="20201030 10:57:19.816"></status>
</kw>
<msg timestamp="20201030 10:57:19.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193729236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:19.460" endtime="20201030 10:57:19.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193729236, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:19.825" endtime="20201030 10:57:19.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.845" endtime="20201030 10:57:19.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.453" endtime="20201030 10:57:19.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.448" endtime="20201030 10:57:19.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.863" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3569999999990534e-05}, {'diff': 1.3819999999997723e-05}, {'diff': 2.4820000000008724e-05}, {'diff': 2.7306000000004715e-05}, {'diff': 2.213900000000435e-05}, {'diff': 2.084700...</msg>
<status status="PASS" starttime="20201030 10:57:19.854" endtime="20201030 10:57:19.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:19.873" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3569999999990534e-05, 1.3819999999997723e-05, 2.4820000000008724e-05, 2.7306000000004715e-05, 2.213900000000435e-05, 2.0847000000018268e-05, 1.587499999999853e-05, 1.734700000000089e-05...</msg>
<status status="PASS" starttime="20201030 10:57:19.865" endtime="20201030 10:57:19.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.884" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:19.882" endtime="20201030 10:57:19.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.890" level="INFO">VALUE: [0, 1.3569999999990534e-05, 1.3819999999997723e-05, 2.4820000000008724e-05, 2.7306000000004715e-05, 2.213900000000435e-05, 2.0847000000018268e-05, 1.587499999999853e-05, 1.734700000000089e-05, 2.6292000000011084e-05, 1.6277999999980697e-05, 2.504100000000342e-05, 1.461099999999771e-05, 2.5026999999983035e-05, 6.888999999982159e-06, 2.1070000000011913e-05, 2.5458000000005976e-05, 1.815299999999298e-05, 1.5236000000001804e-05, 2.6902999999994792e-05, 1.7791000000016988e-05, 1.1278000000003452e-05, 2.6055999999996526e-05, 1.0235999999996803e-05, 1.5028000000000263e-05, 0.43118367999999996, 1.8360999999966765e-05, 1.4194999999994629e-05, 2.1068999999984683e-05, 1.6916999999949667e-05, 2.2680000000052658e-05, 2.461100000006322e-05, 2.0874999999920263e-05, 2.3375000000047663e-05, 1.545899999999545e-05, 1.7512999999969026e-05, 2.2125000000094985e-05, 1.768099999999162e-05, 1.357000000001829e-05, 2.6736000000027182e-05, 1.376299999999997e-05, 1.3582999999983691e-05, 2.690199999999532e-05, 2.4805999999988337e-05, 1.1292000000051594e-05, 1.231999999995459e-05, 6.486999999943954e-06, 2.23200000000201e-05, 2.23200000000201e-05, 1.6680999999962864e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.887" endtime="20201030 10:57:19.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.875" endtime="20201030 10:57:19.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.398" endtime="20201030 10:57:19.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.397" endtime="20201030 10:57:19.895"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.918" endtime="20201030 10:57:19.931"></status>
</kw>
<msg timestamp="20201030 10:57:19.933" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.912" endtime="20201030 10:57:19.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.939" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.935" endtime="20201030 10:57:19.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.941" endtime="20201030 10:57:19.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.905" endtime="20201030 10:57:19.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.900" endtime="20201030 10:57:19.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.965" endtime="20201030 10:57:20.331"></status>
</kw>
<msg timestamp="20201030 10:57:20.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.194108833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.194131986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:19.962" endtime="20201030 10:57:20.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.194108833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.194131986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:20.342" endtime="20201030 10:57:20.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.365" endtime="20201030 10:57:20.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.954" endtime="20201030 10:57:20.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.950" endtime="20201030 10:57:20.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.383" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.461099999999771e-05}, {'diff': 2.5026999999983035e-05}, {'diff': 6.888999999982159e-06}, {'diff': 2.1070000000011913e-05}, {'diff': 2.5458000000005976e-05}, {'diff': 1.8152999...</msg>
<status status="PASS" starttime="20201030 10:57:20.373" endtime="20201030 10:57:20.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:20.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.461099999999771e-05, 2.5026999999983035e-05, 6.888999999982159e-06, 2.1070000000011913e-05, 2.5458000000005976e-05, 1.815299999999298e-05, 1.5236000000001804e-05, 2.6902999999994792e-05...</msg>
<status status="PASS" starttime="20201030 10:57:20.385" endtime="20201030 10:57:20.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.406" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:20.404" endtime="20201030 10:57:20.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.412" level="INFO">VALUE: [0, 1.461099999999771e-05, 2.5026999999983035e-05, 6.888999999982159e-06, 2.1070000000011913e-05, 2.5458000000005976e-05, 1.815299999999298e-05, 1.5236000000001804e-05, 2.6902999999994792e-05, 1.7791000000016988e-05, 1.1278000000003452e-05, 2.6055999999996526e-05, 1.0235999999996803e-05, 1.5028000000000263e-05, 0.43118367999999996, 1.8360999999966765e-05, 1.4194999999994629e-05, 2.1068999999984683e-05, 1.6916999999949667e-05, 2.2680000000052658e-05, 2.461100000006322e-05, 2.0874999999920263e-05, 2.3375000000047663e-05, 1.545899999999545e-05, 1.7512999999969026e-05, 2.2125000000094985e-05, 1.768099999999162e-05, 1.357000000001829e-05, 2.6736000000027182e-05, 1.376299999999997e-05, 1.3582999999983691e-05, 2.690199999999532e-05, 2.4805999999988337e-05, 1.1292000000051594e-05, 1.231999999995459e-05, 6.486999999943954e-06, 2.23200000000201e-05, 2.23200000000201e-05, 1.6680999999962864e-05, 0.4904050689999999, 1.8568999999857283e-05, 6.5140000000685205e-06, 2.3166000000074405e-05, 1.2500000000192912e-05, 1.7318999999904605e-05, 1.2110999999981331e-05, 1.6486000000037748e-05, 2.2152999999969225e-05, 2.8166999999967857e-05, 7.110999999948575e-06, 1.9610999999919443e-05, 1.1860999999946387e-05, 9.417000000011555e-06, 1.419400000002291e-05, 1.8985999999943104e-05, 2.23200000000201e-05, 2.5846999999856735e-05, 2.7320000000052858e-05, 1.1277000000031734e-05, 1.4181000000057509e-05, 1.9804999999983863e-05, 2.336200000008226e-05, 8.570000000096556e-06, 1.2528000000067152e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.408" endtime="20201030 10:57:20.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.397" endtime="20201030 10:57:20.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.897" endtime="20201030 10:57:20.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.896" endtime="20201030 10:57:20.416"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.437" endtime="20201030 10:57:20.450"></status>
</kw>
<msg timestamp="20201030 10:57:20.451" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.433" endtime="20201030 10:57:20.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.454" endtime="20201030 10:57:20.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.460" endtime="20201030 10:57:20.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.426" endtime="20201030 10:57:20.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.421" endtime="20201030 10:57:20.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.484" endtime="20201030 10:57:20.847"></status>
</kw>
<msg timestamp="20201030 10:57:20.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.626173347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.626183833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:20.480" endtime="20201030 10:57:20.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.626173347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.626183833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:20.858" endtime="20201030 10:57:20.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.881" endtime="20201030 10:57:20.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.473" endtime="20201030 10:57:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.468" endtime="20201030 10:57:20.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.899" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.768099999999162e-05}, {'diff': 1.357000000001829e-05}, {'diff': 2.6736000000027182e-05}, {'diff': 1.376299999999997e-05}, {'diff': 1.3582999999983691e-05}, {'diff': 2.69019999...</msg>
<status status="PASS" starttime="20201030 10:57:20.890" endtime="20201030 10:57:20.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:20.911" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.768099999999162e-05, 1.357000000001829e-05, 2.6736000000027182e-05, 1.376299999999997e-05, 1.3582999999983691e-05, 2.690199999999532e-05, 2.4805999999988337e-05, 1.1292000000051594e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:20.901" endtime="20201030 10:57:20.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:20.920" endtime="20201030 10:57:20.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.928" level="INFO">VALUE: [0, 1.768099999999162e-05, 1.357000000001829e-05, 2.6736000000027182e-05, 1.376299999999997e-05, 1.3582999999983691e-05, 2.690199999999532e-05, 2.4805999999988337e-05, 1.1292000000051594e-05, 1.231999999995459e-05, 6.486999999943954e-06, 2.23200000000201e-05, 2.23200000000201e-05, 1.6680999999962864e-05, 0.4904050689999999, 1.8568999999857283e-05, 6.5140000000685205e-06, 2.3166000000074405e-05, 1.2500000000192912e-05, 1.7318999999904605e-05, 1.2110999999981331e-05, 1.6486000000037748e-05, 2.2152999999969225e-05, 2.8166999999967857e-05, 7.110999999948575e-06, 1.9610999999919443e-05, 1.1860999999946387e-05, 9.417000000011555e-06, 1.419400000002291e-05, 1.8985999999943104e-05, 2.23200000000201e-05, 2.5846999999856735e-05, 2.7320000000052858e-05, 1.1277000000031734e-05, 1.4181000000057509e-05, 1.9804999999983863e-05, 2.336200000008226e-05, 8.570000000096556e-06, 1.2528000000067152e-05, 0.50705975, 1.7332999999952747e-05, 2.0459000000139227e-05, 7.069000000026193e-06, 1.2818999999941738e-05, 2.001399999995712e-05, 2.252799999991062e-05, 1.7527000000017168e-05, 2.083400000008062e-05, 1.608300000000007e-05, 1.9819000000032005e-05, 1.8139000000028105e-05, 2.361099999981242e-05, 1.5305000000020996e-05, 9.611999999936671e-06, 1.9430999999903165e-05, 1.9388999999980783e-05, 9.402999999963413e-06, 1.662499999999234e-05, 2.3153000000109003e-05, 2.8568999999922795e-05, 7.944999999898172e-06, 1.5847000000013267e-05, 2.105499999993654e-05, 2.1708000000009164e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.925" endtime="20201030 10:57:20.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.914" endtime="20201030 10:57:20.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.418" endtime="20201030 10:57:20.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.417" endtime="20201030 10:57:20.932"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.953" endtime="20201030 10:57:20.966"></status>
</kw>
<msg timestamp="20201030 10:57:20.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.950" endtime="20201030 10:57:20.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.973" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.969" endtime="20201030 10:57:20.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.976" endtime="20201030 10:57:20.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.942" endtime="20201030 10:57:20.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.938" endtime="20201030 10:57:20.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.999" endtime="20201030 10:57:21.363"></status>
</kw>
<msg timestamp="20201030 10:57:21.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.117421514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.117445542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:20.996" endtime="20201030 10:57:21.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.117421514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.117445542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:21.375" endtime="20201030 10:57:21.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.397" endtime="20201030 10:57:21.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.989" endtime="20201030 10:57:21.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.984" endtime="20201030 10:57:21.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.416" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1860999999946387e-05}, {'diff': 9.417000000011555e-06}, {'diff': 1.419400000002291e-05}, {'diff': 1.8985999999943104e-05}, {'diff': 2.23200000000201e-05}, {'diff': 2.584699999...</msg>
<status status="PASS" starttime="20201030 10:57:21.406" endtime="20201030 10:57:21.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:21.426" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1860999999946387e-05, 9.417000000011555e-06, 1.419400000002291e-05, 1.8985999999943104e-05, 2.23200000000201e-05, 2.5846999999856735e-05, 2.7320000000052858e-05, 1.1277000000031734e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:21.418" endtime="20201030 10:57:21.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:21.435" endtime="20201030 10:57:21.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.443" level="INFO">VALUE: [0, 1.1860999999946387e-05, 9.417000000011555e-06, 1.419400000002291e-05, 1.8985999999943104e-05, 2.23200000000201e-05, 2.5846999999856735e-05, 2.7320000000052858e-05, 1.1277000000031734e-05, 1.4181000000057509e-05, 1.9804999999983863e-05, 2.336200000008226e-05, 8.570000000096556e-06, 1.2528000000067152e-05, 0.50705975, 1.7332999999952747e-05, 2.0459000000139227e-05, 7.069000000026193e-06, 1.2818999999941738e-05, 2.001399999995712e-05, 2.252799999991062e-05, 1.7527000000017168e-05, 2.083400000008062e-05, 1.608300000000007e-05, 1.9819000000032005e-05, 1.8139000000028105e-05, 2.361099999981242e-05, 1.5305000000020996e-05, 9.611999999936671e-06, 1.9430999999903165e-05, 1.9388999999980783e-05, 9.402999999963413e-06, 1.662499999999234e-05, 2.3153000000109003e-05, 2.8568999999922795e-05, 7.944999999898172e-06, 1.5847000000013267e-05, 2.105499999993654e-05, 2.1708000000009164e-05, 0.5067159170000002, 1.6930999999775764e-05, 2.7527999999943376e-05, 1.3153000000265536e-05, 1.7929999999832802e-05, 2.1735999999883404e-05, 1.065299999991609e-05, 1.4597999999921285e-05, 2.7957999999994598e-05, 6.903000000058057e-06, 7.667000000211033e-06, 1.0694999999838473e-05, 1.9403000000028925e-05, 1.1291999999940572e-05, 1.4624999999934829e-05, 2.4401999999756896e-05, 1.238800000002982e-05, 1.209800000001593e-05, 1.6485999999815704e-05, 1.6264000000099088e-05, 1.0083000000271625e-05, 1.5846999999791223e-05, 1.2528000000067152e-05, 1.279199999970615e-05, 2.6485999999881216e-05]</msg>
<status status="PASS" starttime="20201030 10:57:21.440" endtime="20201030 10:57:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.429" endtime="20201030 10:57:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.934" endtime="20201030 10:57:21.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.933" endtime="20201030 10:57:21.447"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.468" endtime="20201030 10:57:21.483"></status>
</kw>
<msg timestamp="20201030 10:57:21.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.464" endtime="20201030 10:57:21.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.487" endtime="20201030 10:57:21.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.493" endtime="20201030 10:57:21.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.457" endtime="20201030 10:57:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.452" endtime="20201030 10:57:21.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.517" endtime="20201030 10:57:21.877"></status>
</kw>
<msg timestamp="20201030 10:57:21.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.625305833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.625316903, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:21.514" endtime="20201030 10:57:21.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.625305833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.625316903, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:21.889" endtime="20201030 10:57:21.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.911" endtime="20201030 10:57:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.506" endtime="20201030 10:57:21.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.501" endtime="20201030 10:57:21.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.929" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.361099999981242e-05}, {'diff': 1.5305000000020996e-05}, {'diff': 9.611999999936671e-06}, {'diff': 1.9430999999903165e-05}, {'diff': 1.9388999999980783e-05}, {'diff': 9.4029999...</msg>
<status status="PASS" starttime="20201030 10:57:21.920" endtime="20201030 10:57:21.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:21.941" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.361099999981242e-05, 1.5305000000020996e-05, 9.611999999936671e-06, 1.9430999999903165e-05, 1.9388999999980783e-05, 9.402999999963413e-06, 1.662499999999234e-05, 2.3153000000109003e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:21.931" endtime="20201030 10:57:21.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.952" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:21.950" endtime="20201030 10:57:21.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.958" level="INFO">VALUE: [0, 2.361099999981242e-05, 1.5305000000020996e-05, 9.611999999936671e-06, 1.9430999999903165e-05, 1.9388999999980783e-05, 9.402999999963413e-06, 1.662499999999234e-05, 2.3153000000109003e-05, 2.8568999999922795e-05, 7.944999999898172e-06, 1.5847000000013267e-05, 2.105499999993654e-05, 2.1708000000009164e-05, 0.5067159170000002, 1.6930999999775764e-05, 2.7527999999943376e-05, 1.3153000000265536e-05, 1.7929999999832802e-05, 2.1735999999883404e-05, 1.065299999991609e-05, 1.4597999999921285e-05, 2.7957999999994598e-05, 6.903000000058057e-06, 7.667000000211033e-06, 1.0694999999838473e-05, 1.9403000000028925e-05, 1.1291999999940572e-05, 1.4624999999934829e-05, 2.4401999999756896e-05, 1.238800000002982e-05, 1.209800000001593e-05, 1.6485999999815704e-05, 1.6264000000099088e-05, 1.0083000000271625e-05, 1.5846999999791223e-05, 1.2528000000067152e-05, 1.279199999970615e-05, 2.6485999999881216e-05, 0.5036645970000002, 8.52799999995213e-06, 2.7097999999892153e-05, 1.7111000000014087e-05, 9.597000000027833e-06, 1.7111000000014087e-05, 1.630499999993873e-05, 1.8610999999779665e-05, 1.9403000000028925e-05, 8.972000000273539e-06, 1.566599999991425e-05, 1.2944999999930928e-05, 1.4653000000031113e-05, 2.170799999978712e-05, 2.10140000000969e-05, 2.0457999999834442e-05, 2.9026999999626213e-05, 1.1084000000050054e-05, 1.8360999999966765e-05, 1.5250000000133213e-05, 1.6277999999925186e-05, 9.4170000002336e-06, 1.566599999991425e-05, 1.5499999999946112e-05, 2.106999999984538e-05]</msg>
<status status="PASS" starttime="20201030 10:57:21.955" endtime="20201030 10:57:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.944" endtime="20201030 10:57:21.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.449" endtime="20201030 10:57:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.448" endtime="20201030 10:57:21.962"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.983" endtime="20201030 10:57:21.997"></status>
</kw>
<msg timestamp="20201030 10:57:21.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.980" endtime="20201030 10:57:21.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.000" endtime="20201030 10:57:22.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.007" endtime="20201030 10:57:22.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.972" endtime="20201030 10:57:22.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.968" endtime="20201030 10:57:22.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.030" endtime="20201030 10:57:22.400"></status>
</kw>
<msg timestamp="20201030 10:57:22.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.132849306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.132863444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:22.027" endtime="20201030 10:57:22.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.132849306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.132863444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:22.411" endtime="20201030 10:57:22.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.424" endtime="20201030 10:57:22.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.020" endtime="20201030 10:57:22.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.015" endtime="20201030 10:57:22.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.432" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.9403000000028925e-05}, {'diff': 1.1291999999940572e-05}, {'diff': 1.4624999999934829e-05}, {'diff': 2.4401999999756896e-05}, {'diff': 1.238800000002982e-05}, {'diff': 1.209800...</msg>
<status status="PASS" starttime="20201030 10:57:22.428" endtime="20201030 10:57:22.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:22.438" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.9403000000028925e-05, 1.1291999999940572e-05, 1.4624999999934829e-05, 2.4401999999756896e-05, 1.238800000002982e-05, 1.209800000001593e-05, 1.6485999999815704e-05, 1.6264000000099088e-0...</msg>
<status status="PASS" starttime="20201030 10:57:22.433" endtime="20201030 10:57:22.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.443" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:22.442" endtime="20201030 10:57:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.446" level="INFO">VALUE: [0, 1.9403000000028925e-05, 1.1291999999940572e-05, 1.4624999999934829e-05, 2.4401999999756896e-05, 1.238800000002982e-05, 1.209800000001593e-05, 1.6485999999815704e-05, 1.6264000000099088e-05, 1.0083000000271625e-05, 1.5846999999791223e-05, 1.2528000000067152e-05, 1.279199999970615e-05, 2.6485999999881216e-05, 0.5036645970000002, 8.52799999995213e-06, 2.7097999999892153e-05, 1.7111000000014087e-05, 9.597000000027833e-06, 1.7111000000014087e-05, 1.630499999993873e-05, 1.8610999999779665e-05, 1.9403000000028925e-05, 8.972000000273539e-06, 1.566599999991425e-05, 1.2944999999930928e-05, 1.4653000000031113e-05, 2.170799999978712e-05, 2.10140000000969e-05, 2.0457999999834442e-05, 2.9026999999626213e-05, 1.1084000000050054e-05, 1.8360999999966765e-05, 1.5250000000133213e-05, 1.6277999999925186e-05, 9.4170000002336e-06, 1.566599999991425e-05, 1.5499999999946112e-05, 2.106999999984538e-05, 0.5036133609999998, 1.273599999995767e-05, 7.152999999870957e-06, 2.3971999999705673e-05, 2.0236000000117826e-05, 1.5652999999726802e-05, 1.7527000000239212e-05, 8.332999999804969e-06, 1.813900000025015e-05, 2.0444000000008344e-05, 2.5862000000209662e-05, 1.5028000000416597e-05, 2.5208000000276343e-05, 1.9194000000055667e-05, 2.54310000000757e-05, 1.7750000000038568e-05, 1.9207999999881764e-05, 1.89869999998038e-05, 1.0875000000076795e-05, 9.195000000072895e-06, 2.4611000000174243e-05, 2.35410000000158e-05, 2.2332999999985503e-05, 2.7736000000277983e-05, 2.7527999999943376e-05]</msg>
<status status="PASS" starttime="20201030 10:57:22.444" endtime="20201030 10:57:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.439" endtime="20201030 10:57:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.964" endtime="20201030 10:57:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.963" endtime="20201030 10:57:22.448"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.458" endtime="20201030 10:57:22.468"></status>
</kw>
<msg timestamp="20201030 10:57:22.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.456" endtime="20201030 10:57:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.470" endtime="20201030 10:57:22.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.473" endtime="20201030 10:57:22.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.453" endtime="20201030 10:57:22.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.451" endtime="20201030 10:57:22.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.484" endtime="20201030 10:57:22.819"></status>
</kw>
<msg timestamp="20201030 10:57:22.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.637309917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.637335153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:22.482" endtime="20201030 10:57:22.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.637309917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.637335153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:22.831" endtime="20201030 10:57:22.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.853" endtime="20201030 10:57:22.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.479" endtime="20201030 10:57:22.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.477" endtime="20201030 10:57:22.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.872" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4653000000031113e-05}, {'diff': 2.170799999978712e-05}, {'diff': 2.10140000000969e-05}, {'diff': 2.0457999999834442e-05}, {'diff': 2.9026999999626213e-05}, {'diff': 1.10840000...</msg>
<status status="PASS" starttime="20201030 10:57:22.862" endtime="20201030 10:57:22.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:22.882" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4653000000031113e-05, 2.170799999978712e-05, 2.10140000000969e-05, 2.0457999999834442e-05, 2.9026999999626213e-05, 1.1084000000050054e-05, 1.8360999999966765e-05, 1.5250000000133213e-05...</msg>
<status status="PASS" starttime="20201030 10:57:22.874" endtime="20201030 10:57:22.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:22.891" endtime="20201030 10:57:22.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.899" level="INFO">VALUE: [0, 1.4653000000031113e-05, 2.170799999978712e-05, 2.10140000000969e-05, 2.0457999999834442e-05, 2.9026999999626213e-05, 1.1084000000050054e-05, 1.8360999999966765e-05, 1.5250000000133213e-05, 1.6277999999925186e-05, 9.4170000002336e-06, 1.566599999991425e-05, 1.5499999999946112e-05, 2.106999999984538e-05, 0.5036133609999998, 1.273599999995767e-05, 7.152999999870957e-06, 2.3971999999705673e-05, 2.0236000000117826e-05, 1.5652999999726802e-05, 1.7527000000239212e-05, 8.332999999804969e-06, 1.813900000025015e-05, 2.0444000000008344e-05, 2.5862000000209662e-05, 1.5028000000416597e-05, 2.5208000000276343e-05, 1.9194000000055667e-05, 2.54310000000757e-05, 1.7750000000038568e-05, 1.9207999999881764e-05, 1.89869999998038e-05, 1.0875000000076795e-05, 9.195000000072895e-06, 2.4611000000174243e-05, 2.35410000000158e-05, 2.2332999999985503e-05, 2.7736000000277983e-05, 2.7527999999943376e-05, 0.46146898599999986, 1.0681000000012375e-05, 2.3763999999815155e-05, 1.9610999999919443e-05, 1.6485999999815704e-05, 2.393000000022738e-05, 1.8360999999966765e-05, 6.69499999972345e-06, 2.462500000000034e-05, 8.583000000061958e-06, 2.21109999998248e-05, 9.957999999699041e-06, 1.1070000000223956e-05, 1.169499999997825e-05, 1.8362000000049505e-05, 1.983299999963606e-05, 1.3569000000046572e-05, 1.1472999999817546e-05, 1.3389000000252338e-05, 2.3319999999937835e-05, 1.3569000000046572e-05, 1.6082999999778025e-05, 1.8707999999811875e-05, 1.4179999999974768e-05, 2.4207999999692476e-05]</msg>
<status status="PASS" starttime="20201030 10:57:22.896" endtime="20201030 10:57:22.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.885" endtime="20201030 10:57:22.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.449" endtime="20201030 10:57:22.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.448" endtime="20201030 10:57:22.903"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.924" endtime="20201030 10:57:22.939"></status>
</kw>
<msg timestamp="20201030 10:57:22.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.921" endtime="20201030 10:57:22.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.942" endtime="20201030 10:57:22.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.949" endtime="20201030 10:57:22.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.913" endtime="20201030 10:57:22.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.909" endtime="20201030 10:57:22.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.972" endtime="20201030 10:57:23.351"></status>
</kw>
<msg timestamp="20201030 10:57:23.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.141772625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.141788514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:22.969" endtime="20201030 10:57:23.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.141772625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.141788514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:23.362" endtime="20201030 10:57:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.385" endtime="20201030 10:57:23.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.962" endtime="20201030 10:57:23.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.957" endtime="20201030 10:57:23.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.404" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.5208000000276343e-05}, {'diff': 1.9194000000055667e-05}, {'diff': 2.54310000000757e-05}, {'diff': 1.7750000000038568e-05}, {'diff': 1.9207999999881764e-05}, {'diff': 1.8986999...</msg>
<status status="PASS" starttime="20201030 10:57:23.394" endtime="20201030 10:57:23.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:23.420" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.5208000000276343e-05, 1.9194000000055667e-05, 2.54310000000757e-05, 1.7750000000038568e-05, 1.9207999999881764e-05, 1.89869999998038e-05, 1.0875000000076795e-05, 9.195000000072895e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:23.406" endtime="20201030 10:57:23.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.431" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:23.429" endtime="20201030 10:57:23.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.437" level="INFO">VALUE: [0, 2.5208000000276343e-05, 1.9194000000055667e-05, 2.54310000000757e-05, 1.7750000000038568e-05, 1.9207999999881764e-05, 1.89869999998038e-05, 1.0875000000076795e-05, 9.195000000072895e-06, 2.4611000000174243e-05, 2.35410000000158e-05, 2.2332999999985503e-05, 2.7736000000277983e-05, 2.7527999999943376e-05, 0.46146898599999986, 1.0681000000012375e-05, 2.3763999999815155e-05, 1.9610999999919443e-05, 1.6485999999815704e-05, 2.393000000022738e-05, 1.8360999999966765e-05, 6.69499999972345e-06, 2.462500000000034e-05, 8.583000000061958e-06, 2.21109999998248e-05, 9.957999999699041e-06, 1.1070000000223956e-05, 1.169499999997825e-05, 1.8362000000049505e-05, 1.983299999963606e-05, 1.3569000000046572e-05, 1.1472999999817546e-05, 1.3389000000252338e-05, 2.3319999999937835e-05, 1.3569000000046572e-05, 1.6082999999778025e-05, 1.8707999999811875e-05, 1.4179999999974768e-05, 2.4207999999692476e-05, 0.45764256999999997, 1.6486999999898444e-05, 1.7514000000495855e-05, 2.3375000000491752e-05, 2.126299999982706e-05, 2.002799999978322e-05, 2.027800000004021e-05, 2.1069000000650817e-05, 1.773700000029521e-05, 2.230499999988922e-05, 1.1500000000275179e-05, 1.5069000000700328e-05, 2.5862000000209662e-05, 1.586099999961732e-05, 2.254199999995876e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106899999976264e-05, 2.1722000000501396e-05, 1.1500000000275179e-05, 6.486000000194281e-06, 2.4403000000283726e-05, 2.2528000000576753e-05, 9.401999999880672e-06, 4.820000000016478e-06]</msg>
<status status="PASS" starttime="20201030 10:57:23.433" endtime="20201030 10:57:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.422" endtime="20201030 10:57:23.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.905" endtime="20201030 10:57:23.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.904" endtime="20201030 10:57:23.441"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.462" endtime="20201030 10:57:23.475"></status>
</kw>
<msg timestamp="20201030 10:57:23.476" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.458" endtime="20201030 10:57:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.482" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.478" endtime="20201030 10:57:23.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.485" endtime="20201030 10:57:23.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.451" endtime="20201030 10:57:23.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.446" endtime="20201030 10:57:23.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.509" endtime="20201030 10:57:23.887"></status>
</kw>
<msg timestamp="20201030 10:57:23.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.604150125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.604170361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:23.505" endtime="20201030 10:57:23.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.604150125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.604170361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:23.899" endtime="20201030 10:57:23.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.921" endtime="20201030 10:57:23.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.498" endtime="20201030 10:57:23.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.493" endtime="20201030 10:57:23.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.939" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1070000000223956e-05}, {'diff': 1.169499999997825e-05}, {'diff': 1.8362000000049505e-05}, {'diff': 1.983299999963606e-05}, {'diff': 1.3569000000046572e-05}, {'diff': 1.1472999...</msg>
<status status="PASS" starttime="20201030 10:57:23.930" endtime="20201030 10:57:23.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:23.952" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1070000000223956e-05, 1.169499999997825e-05, 1.8362000000049505e-05, 1.983299999963606e-05, 1.3569000000046572e-05, 1.1472999999817546e-05, 1.3389000000252338e-05, 2.3319999999937835e-0...</msg>
<status status="PASS" starttime="20201030 10:57:23.941" endtime="20201030 10:57:23.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.971" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:23.969" endtime="20201030 10:57:23.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.977" level="INFO">VALUE: [0, 1.1070000000223956e-05, 1.169499999997825e-05, 1.8362000000049505e-05, 1.983299999963606e-05, 1.3569000000046572e-05, 1.1472999999817546e-05, 1.3389000000252338e-05, 2.3319999999937835e-05, 1.3569000000046572e-05, 1.6082999999778025e-05, 1.8707999999811875e-05, 1.4179999999974768e-05, 2.4207999999692476e-05, 0.45764256999999997, 1.6486999999898444e-05, 1.7514000000495855e-05, 2.3375000000491752e-05, 2.126299999982706e-05, 2.002799999978322e-05, 2.027800000004021e-05, 2.1069000000650817e-05, 1.773700000029521e-05, 2.230499999988922e-05, 1.1500000000275179e-05, 1.5069000000700328e-05, 2.5862000000209662e-05, 1.586099999961732e-05, 2.254199999995876e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106899999976264e-05, 2.1722000000501396e-05, 1.1500000000275179e-05, 6.486000000194281e-06, 2.4403000000283726e-05, 2.2528000000576753e-05, 9.401999999880672e-06, 4.820000000016478e-06, 0.5243171810000007, 2.4207999999248386e-05, 1.4360999999851742e-05, 1.2930999999660742e-05, 1.377799999957574e-05, 3.0027999999404642e-05, 1.561100000024851e-05, 2.438899999912536e-05, 1.6860999999757098e-05, 4.4030000001527014e-06, 2.070900000017417e-05, 1.1681000000152153e-05, 2.1485999999626415e-05, 2.398600000041995e-05, 1.9443999999424477e-05, 6.69499999972345e-06, 2.0236000000117826e-05, 9.389000000581404e-06, 1.6957999999789308e-05, 1.670799999953232e-05, 1.6693999999262132e-05, 1.3569000000046572e-05, 1.2750000000671946e-05, 1.7111000000014087e-05, 1.4986000000050126e-05]</msg>
<status status="PASS" starttime="20201030 10:57:23.973" endtime="20201030 10:57:23.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.962" endtime="20201030 10:57:23.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.443" endtime="20201030 10:57:23.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.442" endtime="20201030 10:57:23.981"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.002" endtime="20201030 10:57:24.015"></status>
</kw>
<msg timestamp="20201030 10:57:24.016" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.998" endtime="20201030 10:57:24.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.019" endtime="20201030 10:57:24.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.025" endtime="20201030 10:57:24.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.991" endtime="20201030 10:57:24.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.986" endtime="20201030 10:57:24.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.049" endtime="20201030 10:57:24.430"></status>
</kw>
<msg timestamp="20201030 10:57:24.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.062629194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.062639194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:24.045" endtime="20201030 10:57:24.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.062629194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.062639194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:24.441" endtime="20201030 10:57:24.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.464" endtime="20201030 10:57:24.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.038" endtime="20201030 10:57:24.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.033" endtime="20201030 10:57:24.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.482" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.5862000000209662e-05}, {'diff': 1.586099999961732e-05}, {'diff': 2.254199999995876e-05}, {'diff': 1.8153000000076247e-05}, {'diff': 1.3985999999910348e-05}, {'diff': 2.1068999...</msg>
<status status="PASS" starttime="20201030 10:57:24.472" endtime="20201030 10:57:24.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:24.493" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.5862000000209662e-05, 1.586099999961732e-05, 2.254199999995876e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106899999976264e-05, 2.1722000000501396e-05, 1.1500000000275179e-05...</msg>
<status status="PASS" starttime="20201030 10:57:24.484" endtime="20201030 10:57:24.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:24.501" endtime="20201030 10:57:24.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.509" level="INFO">VALUE: [0, 2.5862000000209662e-05, 1.586099999961732e-05, 2.254199999995876e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106899999976264e-05, 2.1722000000501396e-05, 1.1500000000275179e-05, 6.486000000194281e-06, 2.4403000000283726e-05, 2.2528000000576753e-05, 9.401999999880672e-06, 4.820000000016478e-06, 0.5243171810000007, 2.4207999999248386e-05, 1.4360999999851742e-05, 1.2930999999660742e-05, 1.377799999957574e-05, 3.0027999999404642e-05, 1.561100000024851e-05, 2.438899999912536e-05, 1.6860999999757098e-05, 4.4030000001527014e-06, 2.070900000017417e-05, 1.1681000000152153e-05, 2.1485999999626415e-05, 2.398600000041995e-05, 1.9443999999424477e-05, 6.69499999972345e-06, 2.0236000000117826e-05, 9.389000000581404e-06, 1.6957999999789308e-05, 1.670799999953232e-05, 1.6693999999262132e-05, 1.3569000000046572e-05, 1.2750000000671946e-05, 1.7111000000014087e-05, 1.4986000000050126e-05, 0.529438528, 1.08470000004246e-05, 2.502699999951119e-05, 1.9612000000002183e-05, 1.1902000000674207e-05, 1.6473000000516436e-05, 2.106999999984538e-05, 2.0249999999499835e-05, 1.3152999999377357e-05, 1.3721999999383172e-05, 1.0443999999942832e-05, 2.379199999946735e-05, 1.4333000000199547e-05, 1.5222000000036928e-05, 2.294400000035779e-05, 1.70969999997439e-05, 1.669400000015031e-05, 1.5250000000577302e-05, 1.0861000000694787e-05, 2.0056000000323593e-05, 1.8180999999728442e-05, 1.565300000017089e-05, 1.0485999999865214e-05, 2.2333000000429593e-05, 1.4401999999691384e-05]</msg>
<status status="PASS" starttime="20201030 10:57:24.506" endtime="20201030 10:57:24.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.495" endtime="20201030 10:57:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.983" endtime="20201030 10:57:24.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.982" endtime="20201030 10:57:24.514"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.535" endtime="20201030 10:57:24.550"></status>
</kw>
<msg timestamp="20201030 10:57:24.551" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.531" endtime="20201030 10:57:24.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.553" endtime="20201030 10:57:24.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.560" endtime="20201030 10:57:24.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.524" endtime="20201030 10:57:24.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.519" endtime="20201030 10:57:24.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.583" endtime="20201030 10:57:24.958"></status>
</kw>
<msg timestamp="20201030 10:57:24.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.587780278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.587796139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:24.580" endtime="20201030 10:57:24.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.587780278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.587796139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:24.969" endtime="20201030 10:57:24.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.992" endtime="20201030 10:57:24.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.573" endtime="20201030 10:57:24.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.568" endtime="20201030 10:57:24.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.011" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.1485999999626415e-05}, {'diff': 2.398600000041995e-05}, {'diff': 1.9443999999424477e-05}, {'diff': 6.69499999972345e-06}, {'diff': 2.0236000000117826e-05}, {'diff': 9.38900000...</msg>
<status status="PASS" starttime="20201030 10:57:25.001" endtime="20201030 10:57:25.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:25.023" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.1485999999626415e-05, 2.398600000041995e-05, 1.9443999999424477e-05, 6.69499999972345e-06, 2.0236000000117826e-05, 9.389000000581404e-06, 1.6957999999789308e-05, 1.670799999953232e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:25.013" endtime="20201030 10:57:25.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.034" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:25.031" endtime="20201030 10:57:25.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.039" level="INFO">VALUE: [0, 2.1485999999626415e-05, 2.398600000041995e-05, 1.9443999999424477e-05, 6.69499999972345e-06, 2.0236000000117826e-05, 9.389000000581404e-06, 1.6957999999789308e-05, 1.670799999953232e-05, 1.6693999999262132e-05, 1.3569000000046572e-05, 1.2750000000671946e-05, 1.7111000000014087e-05, 1.4986000000050126e-05, 0.529438528, 1.08470000004246e-05, 2.502699999951119e-05, 1.9612000000002183e-05, 1.1902000000674207e-05, 1.6473000000516436e-05, 2.106999999984538e-05, 2.0249999999499835e-05, 1.3152999999377357e-05, 1.3721999999383172e-05, 1.0443999999942832e-05, 2.379199999946735e-05, 1.4333000000199547e-05, 1.5222000000036928e-05, 2.294400000035779e-05, 1.70969999997439e-05, 1.669400000015031e-05, 1.5250000000577302e-05, 1.0861000000694787e-05, 2.0056000000323593e-05, 1.8180999999728442e-05, 1.565300000017089e-05, 1.0485999999865214e-05, 2.2333000000429593e-05, 1.4401999999691384e-05, 0.52425443, 1.065200000027744e-05, 2.5041999999864117e-05, 1.0860999999806609e-05, 1.6429999999623135e-05, 9.818999999744449e-06, 1.7320000000431435e-05, 1.5443999999753544e-05, 1.9610999999919443e-05, 1.3374999999982151e-05, 2.3320000000381924e-05, 2.086200000039895e-05, 1.6068999999951927e-05, 4.4030000001527014e-06, 1.4402000000579562e-05, 2.4820000000147502e-05, 1.773600000021247e-05, 1.938899999931465e-05, 2.5013999999323744e-05, 1.7527999999877864e-05, 1.1903000000756947e-05, 2.1278000000179986e-05, 1.645900000024625e-05, 2.393000000022738e-05, 1.6278000000369275e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.036" endtime="20201030 10:57:25.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.025" endtime="20201030 10:57:25.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.516" endtime="20201030 10:57:25.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.515" endtime="20201030 10:57:25.044"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.065" endtime="20201030 10:57:25.079"></status>
</kw>
<msg timestamp="20201030 10:57:25.080" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.061" endtime="20201030 10:57:25.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.082" endtime="20201030 10:57:25.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.089" endtime="20201030 10:57:25.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.054" endtime="20201030 10:57:25.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.049" endtime="20201030 10:57:25.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.112" endtime="20201030 10:57:25.486"></status>
</kw>
<msg timestamp="20201030 10:57:25.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.11802875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.118053639, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:57:25.109" endtime="20201030 10:57:25.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.11802875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.118053639, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:57:25.497" endtime="20201030 10:57:25.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.520" endtime="20201030 10:57:25.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.102" endtime="20201030 10:57:25.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.097" endtime="20201030 10:57:25.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.538" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4333000000199547e-05}, {'diff': 1.5222000000036928e-05}, {'diff': 2.294400000035779e-05}, {'diff': 1.70969999997439e-05}, {'diff': 1.669400000015031e-05}, {'diff': 1.525000000...</msg>
<status status="PASS" starttime="20201030 10:57:25.529" endtime="20201030 10:57:25.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:25.551" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4333000000199547e-05, 1.5222000000036928e-05, 2.294400000035779e-05, 1.70969999997439e-05, 1.669400000015031e-05, 1.5250000000577302e-05, 1.0861000000694787e-05, 2.0056000000323593e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:25.541" endtime="20201030 10:57:25.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.561" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:25.559" endtime="20201030 10:57:25.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.567" level="INFO">VALUE: [0, 1.4333000000199547e-05, 1.5222000000036928e-05, 2.294400000035779e-05, 1.70969999997439e-05, 1.669400000015031e-05, 1.5250000000577302e-05, 1.0861000000694787e-05, 2.0056000000323593e-05, 1.8180999999728442e-05, 1.565300000017089e-05, 1.0485999999865214e-05, 2.2333000000429593e-05, 1.4401999999691384e-05, 0.52425443, 1.065200000027744e-05, 2.5041999999864117e-05, 1.0860999999806609e-05, 1.6429999999623135e-05, 9.818999999744449e-06, 1.7320000000431435e-05, 1.5443999999753544e-05, 1.9610999999919443e-05, 1.3374999999982151e-05, 2.3320000000381924e-05, 2.086200000039895e-05, 1.6068999999951927e-05, 4.4030000001527014e-06, 1.4402000000579562e-05, 2.4820000000147502e-05, 1.773600000021247e-05, 1.938899999931465e-05, 2.5013999999323744e-05, 1.7527999999877864e-05, 1.1903000000756947e-05, 2.1278000000179986e-05, 1.645900000024625e-05, 2.393000000022738e-05, 1.6278000000369275e-05, 0.5172829439999997, 2.6929999999758536e-05, 1.5236999999501677e-05, 2.5846999999856735e-05, 1.8374999999792863e-05, 2.3568999999667994e-05, 1.8374999999792863e-05, 1.8555000000475275e-05, 5.610999999738908e-06, 2.4542000000238318e-05, 1.70969999997439e-05, 6.88899999978787e-06, 1.9610999999919443e-05, 2.606999999965609e-05, 1.9804999999983863e-05, 2.170800000023121e-05, 9.81999999982719e-06, 2.2723000000723914e-05, 8.597999999970796e-06, 1.5445000000724463e-05, 1.1084000000494143e-05, 2.0028000000671398e-05, 2.0693999999821244e-05, 1.981900000025405e-05, 2.481900000006476e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.564" endtime="20201030 10:57:25.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.553" endtime="20201030 10:57:25.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.046" endtime="20201030 10:57:25.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.045" endtime="20201030 10:57:25.571"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.592" endtime="20201030 10:57:25.606"></status>
</kw>
<msg timestamp="20201030 10:57:25.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.589" endtime="20201030 10:57:25.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.613" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.609" endtime="20201030 10:57:25.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.615" endtime="20201030 10:57:25.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.581" endtime="20201030 10:57:25.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.577" endtime="20201030 10:57:25.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.639" endtime="20201030 10:57:26.022"></status>
</kw>
<msg timestamp="20201030 10:57:26.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.643099181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.643109639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:25.636" endtime="20201030 10:57:26.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.643099181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.643109639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:26.034" endtime="20201030 10:57:26.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.056" endtime="20201030 10:57:26.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.628" endtime="20201030 10:57:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.624" endtime="20201030 10:57:26.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.074" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6068999999951927e-05}, {'diff': 4.4030000001527014e-06}, {'diff': 1.4402000000579562e-05}, {'diff': 2.4820000000147502e-05}, {'diff': 1.773600000021247e-05}, {'diff': 1.938899...</msg>
<status status="PASS" starttime="20201030 10:57:26.065" endtime="20201030 10:57:26.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:26.086" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6068999999951927e-05, 4.4030000001527014e-06, 1.4402000000579562e-05, 2.4820000000147502e-05, 1.773600000021247e-05, 1.938899999931465e-05, 2.5013999999323744e-05, 1.7527999999877864e-0...</msg>
<status status="PASS" starttime="20201030 10:57:26.077" endtime="20201030 10:57:26.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.096" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:26.093" endtime="20201030 10:57:26.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.101" level="INFO">VALUE: [0, 1.6068999999951927e-05, 4.4030000001527014e-06, 1.4402000000579562e-05, 2.4820000000147502e-05, 1.773600000021247e-05, 1.938899999931465e-05, 2.5013999999323744e-05, 1.7527999999877864e-05, 1.1903000000756947e-05, 2.1278000000179986e-05, 1.645900000024625e-05, 2.393000000022738e-05, 1.6278000000369275e-05, 0.5172829439999997, 2.6929999999758536e-05, 1.5236999999501677e-05, 2.5846999999856735e-05, 1.8374999999792863e-05, 2.3568999999667994e-05, 1.8374999999792863e-05, 1.8555000000475275e-05, 5.610999999738908e-06, 2.4542000000238318e-05, 1.70969999997439e-05, 6.88899999978787e-06, 1.9610999999919443e-05, 2.606999999965609e-05, 1.9804999999983863e-05, 2.170800000023121e-05, 9.81999999982719e-06, 2.2723000000723914e-05, 8.597999999970796e-06, 1.5445000000724463e-05, 1.1084000000494143e-05, 2.0028000000671398e-05, 2.0693999999821244e-05, 1.981900000025405e-05, 2.481900000006476e-05, 0.5161498889999994, 1.3346999999441778e-05, 8.207999999676474e-06, 1.898599999972106e-05, 2.0874999999698218e-05, 6.695000000611628e-06, 1.9402000000390274e-05, 2.5444000000263145e-05, 2.3167000000157145e-05, 1.6485999999815704e-05, 2.294399999946961e-05, 9.624999999680028e-06, 1.6486000000703882e-05, 1.18469999996762e-05, 1.8764000000004444e-05, 1.001399999989161e-05, 1.5026999999889767e-05, 1.7929999999388713e-05, 1.858300000012747e-05, 1.819499999999863e-05, 2.358299999993818e-05, 2.290299999962997e-05, 1.79439999996589e-05, 2.022299999993038e-05, 2.4208000000136565e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.098" endtime="20201030 10:57:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.087" endtime="20201030 10:57:26.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.573" endtime="20201030 10:57:26.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.572" endtime="20201030 10:57:26.106"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.126" endtime="20201030 10:57:26.141"></status>
</kw>
<msg timestamp="20201030 10:57:26.142" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.123" endtime="20201030 10:57:26.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.148" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.144" endtime="20201030 10:57:26.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.151" endtime="20201030 10:57:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.115" endtime="20201030 10:57:26.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.111" endtime="20201030 10:57:26.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.174" endtime="20201030 10:57:26.548"></status>
</kw>
<msg timestamp="20201030 10:57:26.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.161258972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.161275264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:26.171" endtime="20201030 10:57:26.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.161258972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.161275264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:26.559" endtime="20201030 10:57:26.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.581" endtime="20201030 10:57:26.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.163" endtime="20201030 10:57:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.159" endtime="20201030 10:57:26.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.599" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.9610999999919443e-05}, {'diff': 2.606999999965609e-05}, {'diff': 1.9804999999983863e-05}, {'diff': 2.170800000023121e-05}, {'diff': 9.81999999982719e-06}, {'diff': 2.272300000...</msg>
<status status="PASS" starttime="20201030 10:57:26.589" endtime="20201030 10:57:26.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:26.611" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.9610999999919443e-05, 2.606999999965609e-05, 1.9804999999983863e-05, 2.170800000023121e-05, 9.81999999982719e-06, 2.2723000000723914e-05, 8.597999999970796e-06, 1.5445000000724463e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:26.602" endtime="20201030 10:57:26.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:26.619" endtime="20201030 10:57:26.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.627" level="INFO">VALUE: [0, 1.9610999999919443e-05, 2.606999999965609e-05, 1.9804999999983863e-05, 2.170800000023121e-05, 9.81999999982719e-06, 2.2723000000723914e-05, 8.597999999970796e-06, 1.5445000000724463e-05, 1.1084000000494143e-05, 2.0028000000671398e-05, 2.0693999999821244e-05, 1.981900000025405e-05, 2.481900000006476e-05, 0.5161498889999994, 1.3346999999441778e-05, 8.207999999676474e-06, 1.898599999972106e-05, 2.0874999999698218e-05, 6.695000000611628e-06, 1.9402000000390274e-05, 2.5444000000263145e-05, 2.3167000000157145e-05, 1.6485999999815704e-05, 2.294399999946961e-05, 9.624999999680028e-06, 1.6486000000703882e-05, 1.18469999996762e-05, 1.8764000000004444e-05, 1.001399999989161e-05, 1.5026999999889767e-05, 1.7929999999388713e-05, 1.858300000012747e-05, 1.819499999999863e-05, 2.358299999993818e-05, 2.290299999962997e-05, 1.79439999996589e-05, 2.022299999993038e-05, 2.4208000000136565e-05, 0.5248856530000001, 1.3555999999859125e-05, 1.7318999999460516e-05, 1.3152000000182795e-05, 1.9610999999919443e-05, 2.190300000037837e-05, 1.6068999999951927e-05, 1.1070000000223956e-05, 2.1693999999961022e-05, 2.6486999999519867e-05, 1.6485999999815704e-05, 1.9416999999855022e-05, 1.5249999999689123e-05, 1.3764000000193732e-05, 2.5263999999580733e-05, 2.3167000000157145e-05, 2.452799999996813e-05, 9.194999999628806e-06, 1.0916999999999177e-05, 1.0790999999343853e-05, 2.254200000084694e-05, 2.315299999988696e-05, 1.125000000001819e-05, 2.1735999999883404e-05, 1.3360999999711964e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.624" endtime="20201030 10:57:26.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.613" endtime="20201030 10:57:26.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.107" endtime="20201030 10:57:26.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.106" endtime="20201030 10:57:26.632"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.652" endtime="20201030 10:57:26.666"></status>
</kw>
<msg timestamp="20201030 10:57:26.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.649" endtime="20201030 10:57:26.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.669" endtime="20201030 10:57:26.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.675" endtime="20201030 10:57:26.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.641" endtime="20201030 10:57:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.637" endtime="20201030 10:57:26.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.699" endtime="20201030 10:57:27.068"></status>
</kw>
<msg timestamp="20201030 10:57:27.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.678285556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.678295153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:26.696" endtime="20201030 10:57:27.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.678285556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.678295153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:27.079" endtime="20201030 10:57:27.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.101" endtime="20201030 10:57:27.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.688" endtime="20201030 10:57:27.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.684" endtime="20201030 10:57:27.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.119" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6486000000703882e-05}, {'diff': 1.18469999996762e-05}, {'diff': 1.8764000000004444e-05}, {'diff': 1.001399999989161e-05}, {'diff': 1.5026999999889767e-05}, {'diff': 1.79299999...</msg>
<status status="PASS" starttime="20201030 10:57:27.110" endtime="20201030 10:57:27.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:27.132" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6486000000703882e-05, 1.18469999996762e-05, 1.8764000000004444e-05, 1.001399999989161e-05, 1.5026999999889767e-05, 1.7929999999388713e-05, 1.858300000012747e-05, 1.819499999999863e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:27.122" endtime="20201030 10:57:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.142" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:27.140" endtime="20201030 10:57:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.148" level="INFO">VALUE: [0, 1.6486000000703882e-05, 1.18469999996762e-05, 1.8764000000004444e-05, 1.001399999989161e-05, 1.5026999999889767e-05, 1.7929999999388713e-05, 1.858300000012747e-05, 1.819499999999863e-05, 2.358299999993818e-05, 2.290299999962997e-05, 1.79439999996589e-05, 2.022299999993038e-05, 2.4208000000136565e-05, 0.5248856530000001, 1.3555999999859125e-05, 1.7318999999460516e-05, 1.3152000000182795e-05, 1.9610999999919443e-05, 2.190300000037837e-05, 1.6068999999951927e-05, 1.1070000000223956e-05, 2.1693999999961022e-05, 2.6486999999519867e-05, 1.6485999999815704e-05, 1.9416999999855022e-05, 1.5249999999689123e-05, 1.3764000000193732e-05, 2.5263999999580733e-05, 2.3167000000157145e-05, 2.452799999996813e-05, 9.194999999628806e-06, 1.0916999999999177e-05, 1.0790999999343853e-05, 2.254200000084694e-05, 2.315299999988696e-05, 1.125000000001819e-05, 2.1735999999883404e-05, 1.3360999999711964e-05, 0.5115537220000004, 2.2083999999367165e-05, 2.1917000000648557e-05, 2.3402000000061207e-05, 1.7332999999730703e-05, 1.1917000000138955e-05, 1.1222000000365995e-05, 1.9610999999919443e-05, 1.938899999931465e-05, 2.481900000006476e-05, 2.3973000000232503e-05, 1.0387999999750264e-05, 1.962500000018963e-05, 2.2319000000159406e-05, 1.7278000000509053e-05, 1.8166999999458255e-05, 1.7041999999634072e-05, 1.98339999997188e-05, 1.6068999999951927e-05, 1.566599999947016e-05, 1.3764000000193732e-05, 1.2528000000067152e-05, 1.229200000008035e-05, 1.6485999999815704e-05, 1.1264000000288377e-05]</msg>
<status status="PASS" starttime="20201030 10:57:27.145" endtime="20201030 10:57:27.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.134" endtime="20201030 10:57:27.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.633" endtime="20201030 10:57:27.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.632" endtime="20201030 10:57:27.152"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.172" endtime="20201030 10:57:27.186"></status>
</kw>
<msg timestamp="20201030 10:57:27.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.169" endtime="20201030 10:57:27.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.190" endtime="20201030 10:57:27.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.196" endtime="20201030 10:57:27.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.162" endtime="20201030 10:57:27.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.157" endtime="20201030 10:57:27.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.219" endtime="20201030 10:57:27.586"></status>
</kw>
<msg timestamp="20201030 10:57:27.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.204011389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.204024736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:27.216" endtime="20201030 10:57:27.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.204011389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.204024736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:27.597" endtime="20201030 10:57:27.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.619" endtime="20201030 10:57:27.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.209" endtime="20201030 10:57:27.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.204" endtime="20201030 10:57:27.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.638" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5249999999689123e-05}, {'diff': 1.3764000000193732e-05}, {'diff': 2.5263999999580733e-05}, {'diff': 2.3167000000157145e-05}, {'diff': 2.452799999996813e-05}, {'diff': 9.194999...</msg>
<status status="PASS" starttime="20201030 10:57:27.628" endtime="20201030 10:57:27.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:27.649" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5249999999689123e-05, 1.3764000000193732e-05, 2.5263999999580733e-05, 2.3167000000157145e-05, 2.452799999996813e-05, 9.194999999628806e-06, 1.0916999999999177e-05, 1.0790999999343853e-0...</msg>
<status status="PASS" starttime="20201030 10:57:27.640" endtime="20201030 10:57:27.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.659" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:27.656" endtime="20201030 10:57:27.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.664" level="INFO">VALUE: [0, 1.5249999999689123e-05, 1.3764000000193732e-05, 2.5263999999580733e-05, 2.3167000000157145e-05, 2.452799999996813e-05, 9.194999999628806e-06, 1.0916999999999177e-05, 1.0790999999343853e-05, 2.254200000084694e-05, 2.315299999988696e-05, 1.125000000001819e-05, 2.1735999999883404e-05, 1.3360999999711964e-05, 0.5115537220000004, 2.2083999999367165e-05, 2.1917000000648557e-05, 2.3402000000061207e-05, 1.7332999999730703e-05, 1.1917000000138955e-05, 1.1222000000365995e-05, 1.9610999999919443e-05, 1.938899999931465e-05, 2.481900000006476e-05, 2.3973000000232503e-05, 1.0387999999750264e-05, 1.962500000018963e-05, 2.2319000000159406e-05, 1.7278000000509053e-05, 1.8166999999458255e-05, 1.7041999999634072e-05, 1.98339999997188e-05, 1.6068999999951927e-05, 1.566599999947016e-05, 1.3764000000193732e-05, 1.2528000000067152e-05, 1.229200000008035e-05, 1.6485999999815704e-05, 1.1264000000288377e-05, 0.5107064999999995, 1.2124999999585384e-05, 2.3416999999525956e-05, 2.379200000035553e-05, 1.2347000000190178e-05, 1.318099999991773e-05, 2.290299999962997e-05, 2.0487000000457556e-05, 1.6278000000369275e-05, 2.0445000000535174e-05, 2.061100000005922e-05, 1.252800000095533e-05, 1.7735999998436114e-05, 7.3199999999218335e-06, 1.62499999998289e-05, 8.346999999631066e-06, 1.5055000000430141e-05, 1.2305000000267796e-05, 1.2721999999243394e-05, 1.5445000000724463e-05, 2.5444000000263145e-05, 1.8125000000424052e-05, 1.754200000014805e-05, 1.1929999999438223e-05, 1.3166000000452982e-05]</msg>
<status status="PASS" starttime="20201030 10:57:27.661" endtime="20201030 10:57:27.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.650" endtime="20201030 10:57:27.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.154" endtime="20201030 10:57:27.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.153" endtime="20201030 10:57:27.669"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.689" endtime="20201030 10:57:27.704"></status>
</kw>
<msg timestamp="20201030 10:57:27.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.686" endtime="20201030 10:57:27.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.708" endtime="20201030 10:57:27.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.714" endtime="20201030 10:57:27.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.679" endtime="20201030 10:57:27.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.674" endtime="20201030 10:57:27.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.737" endtime="20201030 10:57:28.105"></status>
</kw>
<msg timestamp="20201030 10:57:28.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.716386569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.716406597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:27.734" endtime="20201030 10:57:28.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.716386569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.716406597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:28.116" endtime="20201030 10:57:28.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.139" endtime="20201030 10:57:28.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.727" endtime="20201030 10:57:28.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.722" endtime="20201030 10:57:28.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.157" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.962500000018963e-05}, {'diff': 2.2319000000159406e-05}, {'diff': 1.7278000000509053e-05}, {'diff': 1.8166999999458255e-05}, {'diff': 1.7041999999634072e-05}, {'diff': 1.983399...</msg>
<status status="PASS" starttime="20201030 10:57:28.148" endtime="20201030 10:57:28.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:28.173" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.962500000018963e-05, 2.2319000000159406e-05, 1.7278000000509053e-05, 1.8166999999458255e-05, 1.7041999999634072e-05, 1.98339999997188e-05, 1.6068999999951927e-05, 1.566599999947016e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:28.159" endtime="20201030 10:57:28.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.183" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:28.181" endtime="20201030 10:57:28.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.189" level="INFO">VALUE: [0, 1.962500000018963e-05, 2.2319000000159406e-05, 1.7278000000509053e-05, 1.8166999999458255e-05, 1.7041999999634072e-05, 1.98339999997188e-05, 1.6068999999951927e-05, 1.566599999947016e-05, 1.3764000000193732e-05, 1.2528000000067152e-05, 1.229200000008035e-05, 1.6485999999815704e-05, 1.1264000000288377e-05, 0.5107064999999995, 1.2124999999585384e-05, 2.3416999999525956e-05, 2.379200000035553e-05, 1.2347000000190178e-05, 1.318099999991773e-05, 2.290299999962997e-05, 2.0487000000457556e-05, 1.6278000000369275e-05, 2.0445000000535174e-05, 2.061100000005922e-05, 1.252800000095533e-05, 1.7735999998436114e-05, 7.3199999999218335e-06, 1.62499999998289e-05, 8.346999999631066e-06, 1.5055000000430141e-05, 1.2305000000267796e-05, 1.2721999999243394e-05, 1.5445000000724463e-05, 2.5444000000263145e-05, 1.8125000000424052e-05, 1.754200000014805e-05, 1.1929999999438223e-05, 1.3166000000452982e-05, 0.5065266529999999, 2.1861000000455988e-05, 2.2319999999353968e-05, 1.690300000056766e-05, 1.3166999998759366e-05, 1.0458000000213019e-05, 1.79439999996589e-05, 2.129100000125561e-05, 2.8778000000784232e-05, 5.652999998773112e-06, 1.5833000000853303e-05, 9.834000000097376e-06, 2.711099999963551e-05, 1.754100000006531e-05, 2.1916999999760378e-05, 7.541000000443887e-06, 8.153000001343003e-06, 1.729200000077924e-05, 1.793100000035963e-05, 2.502799999959393e-05, 1.0860999999806609e-05, 1.7319999999543256e-05, 2.3361000000221566e-05, 2.0235999999229648e-05, 2.1084000000115566e-05]</msg>
<status status="PASS" starttime="20201030 10:57:28.186" endtime="20201030 10:57:28.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.175" endtime="20201030 10:57:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.670" endtime="20201030 10:57:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.669" endtime="20201030 10:57:28.193"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.213" endtime="20201030 10:57:28.227"></status>
</kw>
<msg timestamp="20201030 10:57:28.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.210" endtime="20201030 10:57:28.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.234" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.231" endtime="20201030 10:57:28.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.237" endtime="20201030 10:57:28.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.203" endtime="20201030 10:57:28.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.198" endtime="20201030 10:57:28.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.260" endtime="20201030 10:57:28.634"></status>
</kw>
<msg timestamp="20201030 10:57:28.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.227946375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.22796725, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:57:28.257" endtime="20201030 10:57:28.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.227946375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.22796725, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:57:28.645" endtime="20201030 10:57:28.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.667" endtime="20201030 10:57:28.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.250" endtime="20201030 10:57:28.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.245" endtime="20201030 10:57:28.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.686" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7735999998436114e-05}, {'diff': 7.3199999999218335e-06}, {'diff': 1.62499999998289e-05}, {'diff': 8.346999999631066e-06}, {'diff': 1.5055000000430141e-05}, {'diff': 1.23050000...</msg>
<status status="PASS" starttime="20201030 10:57:28.676" endtime="20201030 10:57:28.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:28.698" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7735999998436114e-05, 7.3199999999218335e-06, 1.62499999998289e-05, 8.346999999631066e-06, 1.5055000000430141e-05, 1.2305000000267796e-05, 1.2721999999243394e-05, 1.5445000000724463e-05...</msg>
<status status="PASS" starttime="20201030 10:57:28.688" endtime="20201030 10:57:28.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.708" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:28.706" endtime="20201030 10:57:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.714" level="INFO">VALUE: [0, 1.7735999998436114e-05, 7.3199999999218335e-06, 1.62499999998289e-05, 8.346999999631066e-06, 1.5055000000430141e-05, 1.2305000000267796e-05, 1.2721999999243394e-05, 1.5445000000724463e-05, 2.5444000000263145e-05, 1.8125000000424052e-05, 1.754200000014805e-05, 1.1929999999438223e-05, 1.3166000000452982e-05, 0.5065266529999999, 2.1861000000455988e-05, 2.2319999999353968e-05, 1.690300000056766e-05, 1.3166999998759366e-05, 1.0458000000213019e-05, 1.79439999996589e-05, 2.129100000125561e-05, 2.8778000000784232e-05, 5.652999998773112e-06, 1.5833000000853303e-05, 9.834000000097376e-06, 2.711099999963551e-05, 1.754100000006531e-05, 2.1916999999760378e-05, 7.541000000443887e-06, 8.153000001343003e-06, 1.729200000077924e-05, 1.793100000035963e-05, 2.502799999959393e-05, 1.0860999999806609e-05, 1.7319999999543256e-05, 2.3361000000221566e-05, 2.0235999999229648e-05, 2.1084000000115566e-05, 0.5109177500000008, 1.5236999999501677e-05, 1.6915999999866926e-05, 1.9013999999373254e-05, 1.962500000018963e-05, 1.6278000000369275e-05, 1.982000000033679e-05, 1.3152999999377357e-05, 1.75270000006833e-05, 1.7111000000014087e-05, 2.2332999998653236e-05, 1.4819999998749722e-05, 1.606999999914649e-05, 1.7332999998842524e-05, 2.462500000000034e-05, 1.8999999999991246e-05, 1.7513999999607677e-05, 2.7749999999215902e-05, 8.986999999294198e-06, 2.2680000000718792e-05, 1.626399999921091e-05, 1.7318999999460516e-05, 2.0457999999834442e-05, 1.541700000018409e-05, 1.1875000000216573e-05]</msg>
<status status="PASS" starttime="20201030 10:57:28.710" endtime="20201030 10:57:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.700" endtime="20201030 10:57:28.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.195" endtime="20201030 10:57:28.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.194" endtime="20201030 10:57:28.718"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.738" endtime="20201030 10:57:28.752"></status>
</kw>
<msg timestamp="20201030 10:57:28.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.735" endtime="20201030 10:57:28.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.755" endtime="20201030 10:57:28.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.761" endtime="20201030 10:57:28.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.728" endtime="20201030 10:57:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.723" endtime="20201030 10:57:28.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.785" endtime="20201030 10:57:29.148"></status>
</kw>
<msg timestamp="20201030 10:57:29.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.735320556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.735327042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:28.781" endtime="20201030 10:57:29.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.735320556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.735327042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:29.153" endtime="20201030 10:57:29.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.163" endtime="20201030 10:57:29.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.774" endtime="20201030 10:57:29.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.769" endtime="20201030 10:57:29.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.172" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.711099999963551e-05}, {'diff': 1.754100000006531e-05}, {'diff': 2.1916999999760378e-05}, {'diff': 7.541000000443887e-06}, {'diff': 8.153000001343003e-06}, {'diff': 1.729200000...</msg>
<status status="PASS" starttime="20201030 10:57:29.168" endtime="20201030 10:57:29.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:29.177" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.711099999963551e-05, 1.754100000006531e-05, 2.1916999999760378e-05, 7.541000000443887e-06, 8.153000001343003e-06, 1.729200000077924e-05, 1.793100000035963e-05, 2.502799999959393e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:57:29.173" endtime="20201030 10:57:29.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.182" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:29.181" endtime="20201030 10:57:29.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.185" level="INFO">VALUE: [0, 2.711099999963551e-05, 1.754100000006531e-05, 2.1916999999760378e-05, 7.541000000443887e-06, 8.153000001343003e-06, 1.729200000077924e-05, 1.793100000035963e-05, 2.502799999959393e-05, 1.0860999999806609e-05, 1.7319999999543256e-05, 2.3361000000221566e-05, 2.0235999999229648e-05, 2.1084000000115566e-05, 0.5109177500000008, 1.5236999999501677e-05, 1.6915999999866926e-05, 1.9013999999373254e-05, 1.962500000018963e-05, 1.6278000000369275e-05, 1.982000000033679e-05, 1.3152999999377357e-05, 1.75270000006833e-05, 1.7111000000014087e-05, 2.2332999998653236e-05, 1.4819999998749722e-05, 1.606999999914649e-05, 1.7332999998842524e-05, 2.462500000000034e-05, 1.8999999999991246e-05, 1.7513999999607677e-05, 2.7749999999215902e-05, 8.986999999294198e-06, 2.2680000000718792e-05, 1.626399999921091e-05, 1.7318999999460516e-05, 2.0457999999834442e-05, 1.541700000018409e-05, 1.1875000000216573e-05, 0.513261291000001, 1.8348000001111586e-05, 2.379100000027279e-05, 1.605599999976448e-05, 1.5028000001748865e-05, 2.066599999928087e-05, 2.5098000000056686e-05, 2.7514000001005456e-05, 8.764000000383021e-06, 1.8167000000346434e-05, 2.4193999999866378e-05, 1.7957999999040908e-05, 5.028000000351085e-06, 1.5319000000957317e-05, 2.230599999997196e-05, 1.2153000000125758e-05, 1.8568999999857283e-05, 1.94170000007432e-05, 1.8792000000544817e-05, 1.8819999999308834e-05, 9.000000000369823e-06, 1.9610999999031264e-05, 1.0082999999383446e-05, 9.193999998657887e-06, 1.669500000112123e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.183" endtime="20201030 10:57:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.178" endtime="20201030 10:57:29.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.720" endtime="20201030 10:57:29.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.719" endtime="20201030 10:57:29.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.953" endtime="20201030 10:57:29.187"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:18.760" endtime="20201030 10:57:29.188" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.198" endtime="20201030 10:57:29.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.195" endtime="20201030 10:57:29.221"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.256" endtime="20201030 10:57:29.276"></status>
</kw>
<msg timestamp="20201030 10:57:29.277" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.252" endtime="20201030 10:57:29.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.280" endtime="20201030 10:57:29.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.290" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:29.286" endtime="20201030 10:57:29.291"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:29.245" endtime="20201030 10:57:29.293"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:29.239" endtime="20201030 10:57:29.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.236" endtime="20201030 10:57:29.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:29.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:29.302" endtime="20201030 10:57:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.298" endtime="20201030 10:57:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.233" endtime="20201030 10:57:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.231" endtime="20201030 10:57:29.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.307" endtime="20201030 10:57:29.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.227" endtime="20201030 10:57:29.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.222" endtime="20201030 10:57:29.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.193" endtime="20201030 10:57:29.314"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.338" endtime="20201030 10:57:29.352"></status>
</kw>
<msg timestamp="20201030 10:57:29.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.334" endtime="20201030 10:57:29.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.356" endtime="20201030 10:57:29.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.362" endtime="20201030 10:57:29.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.327" endtime="20201030 10:57:29.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.322" endtime="20201030 10:57:29.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.386" endtime="20201030 10:57:29.731"></status>
</kw>
<msg timestamp="20201030 10:57:29.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131923722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.382" endtime="20201030 10:57:29.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131923722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.741" endtime="20201030 10:57:29.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.759" endtime="20201030 10:57:29.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.375" endtime="20201030 10:57:29.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.370" endtime="20201030 10:57:29.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.776" level="INFO">${RESULT} = [{'diff': 1.5549999999864283e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.610999999984708e-06}, {'diff': 1.596999999992077e-06}, {'diff': 1.610999999984708e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:29.768" endtime="20201030 10:57:29.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:29.786" level="INFO">${OVERHEAD} = {'diff': [1.5549999999864283e-06, 1.6939999999965316e-06, 1.541999999993271e-06, 1.610999999984708e-06, 1.596999999992077e-06, 1.610999999984708e-06, 1.4999999999876223e-06, 1.6110000000124636e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:57:29.778" endtime="20201030 10:57:29.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.796" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:29.793" endtime="20201030 10:57:29.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.801" level="INFO">VALUE: [1.5549999999864283e-06, 1.6939999999965316e-06, 1.541999999993271e-06, 1.610999999984708e-06, 1.596999999992077e-06, 1.610999999984708e-06, 1.4999999999876223e-06, 1.6110000000124636e-06, 1.6110000000124636e-06, 1.582999999999446e-06, 1.6119999999841816e-06, 1.5560000000136576e-06, 1.4999999999876223e-06, 1.6250000000050946e-06, 1.5979999999915506e-06, 1.610999999984708e-06, 1.6110000000124636e-06, 1.596999999992077e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.6110000000124636e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.6120000000119372e-06, 1.6110000000124636e-06, 1.6389999999977256e-06, 1.555000000014184e-06, 1.6110000000124636e-06, 1.624999999977339e-06, 1.624999999977339e-06, 1.6110000000124636e-06, 1.541999999993271e-06, 1.555999999985902e-06, 1.5549999999864283e-06, 1.5549999999864283e-06, 1.6110000000124636e-06, 1.555000000014184e-06, 1.6110000000124636e-06, 1.6250000000050946e-06, 1.541999999993271e-06, 1.6110000000124636e-06, 1.610999999984708e-06, 1.555000000014184e-06, 1.5549999999864283e-06, 1.6250000000050946e-06, 1.555999999985902e-06, 1.5839999999989196e-06, 1.6110000000124636e-06, 1.5560000000136576e-06, 1.541999999993271e-06]</msg>
<status status="PASS" starttime="20201030 10:57:29.798" endtime="20201030 10:57:29.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.788" endtime="20201030 10:57:29.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.319" endtime="20201030 10:57:29.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.318" endtime="20201030 10:57:29.806"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.826" endtime="20201030 10:57:29.841"></status>
</kw>
<msg timestamp="20201030 10:57:29.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.823" endtime="20201030 10:57:29.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.845" endtime="20201030 10:57:29.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.851" endtime="20201030 10:57:29.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.816" endtime="20201030 10:57:29.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.811" endtime="20201030 10:57:29.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.876" endtime="20201030 10:57:30.239"></status>
</kw>
<msg timestamp="20201030 10:57:30.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.872" endtime="20201030 10:57:30.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.251" endtime="20201030 10:57:30.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.273" endtime="20201030 10:57:30.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.864" endtime="20201030 10:57:30.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.859" endtime="20201030 10:57:30.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.291" level="INFO">${RESULT} = [{'diff': 1.555000000014184e-06}, {'diff': 1.6110000000124636e-06}, {'diff': 1.6250000000050946e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.6110000000124636e-06}, {'diff': 1.610999999984708e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:30.281" endtime="20201030 10:57:30.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:30.302" level="INFO">${OVERHEAD} = {'diff': [1.555000000014184e-06, 1.6110000000124636e-06, 1.6250000000050946e-06, 1.541999999993271e-06, 1.6110000000124636e-06, 1.610999999984708e-06, 1.555000000014184e-06, 1.5549999999864283e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:57:30.293" endtime="20201030 10:57:30.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.312" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:30.309" endtime="20201030 10:57:30.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.318" level="INFO">VALUE: [1.555000000014184e-06, 1.6110000000124636e-06, 1.6250000000050946e-06, 1.541999999993271e-06, 1.6110000000124636e-06, 1.610999999984708e-06, 1.555000000014184e-06, 1.5549999999864283e-06, 1.6250000000050946e-06, 1.555999999985902e-06, 1.5839999999989196e-06, 1.6110000000124636e-06, 1.5560000000136576e-06, 1.541999999993271e-06, 1.5549999999864283e-06, 1.6109999999569524e-06, 1.6520000000186386e-06, 1.5700000000062886e-06, 1.6109999999569524e-06, 1.5549999999864283e-06, 1.5420000000210266e-06, 1.5970000000198326e-06, 1.6109999999569524e-06, 1.5420000000210266e-06, 1.5690000000345705e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5979999999915506e-06, 1.5970000000198326e-06, 1.5830000000827127e-06, 1.5690000000345705e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.6250000000050946e-06, 1.5549999999864283e-06, 1.6250000000050946e-06, 1.6670000000384988e-06, 1.5839999999434085e-06, 1.5560000000691687e-06, 1.5549999999864283e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5549999999864283e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5549999999864283e-06, 1.6110000000679747e-06, 1.6800000000039006e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5279999999728844e-06, 1.5549999999864283e-06, 1.5969999999088103e-06, 1.5549999999864283e-06, 1.5559999999581464e-06, 1.6109999999569524e-06, 1.5420000000210266e-06, 1.5970000000198326e-06, 1.5690000000345705e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06]</msg>
<status status="PASS" starttime="20201030 10:57:30.314" endtime="20201030 10:57:30.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.303" endtime="20201030 10:57:30.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.808" endtime="20201030 10:57:30.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.807" endtime="20201030 10:57:30.323"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.344" endtime="20201030 10:57:30.359"></status>
</kw>
<msg timestamp="20201030 10:57:30.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.341" endtime="20201030 10:57:30.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.362" endtime="20201030 10:57:30.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.369" endtime="20201030 10:57:30.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.333" endtime="20201030 10:57:30.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.329" endtime="20201030 10:57:30.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.392" endtime="20201030 10:57:30.752"></status>
</kw>
<msg timestamp="20201030 10:57:30.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.608612722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.60861425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:30.389" endtime="20201030 10:57:30.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.608612722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.60861425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:30.763" endtime="20201030 10:57:30.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.785" endtime="20201030 10:57:30.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.381" endtime="20201030 10:57:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.377" endtime="20201030 10:57:30.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.803" level="INFO">${RESULT} = [{'diff': 1.5279999999728844e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.5969999999088103e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.6109999999569524e-...</msg>
<status status="PASS" starttime="20201030 10:57:30.794" endtime="20201030 10:57:30.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:30.815" level="INFO">${OVERHEAD} = {'diff': [1.5279999999728844e-06, 1.5549999999864283e-06, 1.5969999999088103e-06, 1.5549999999864283e-06, 1.5559999999581464e-06, 1.6109999999569524e-06, 1.5420000000210266e-06, 1.5970000000198326e-06...</msg>
<status status="PASS" starttime="20201030 10:57:30.806" endtime="20201030 10:57:30.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.825" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:30.823" endtime="20201030 10:57:30.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.831" level="INFO">VALUE: [1.5279999999728844e-06, 1.5549999999864283e-06, 1.5969999999088103e-06, 1.5549999999864283e-06, 1.5559999999581464e-06, 1.6109999999569524e-06, 1.5420000000210266e-06, 1.5970000000198326e-06, 1.5690000000345705e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5559999999581464e-06, 1.5970000000198326e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6119999999286705e-06, 1.6109999998459301e-06, 1.6110000000679747e-06, 1.6529999999903566e-06, 1.598000000102573e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5979999998805283e-06, 1.6109999998459301e-06, 1.5829999999716904e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.596999999797788e-06, 1.6110000000679747e-06, 1.5700000000062886e-06, 1.5419999999100042e-06, 1.5700000000062886e-06, 1.6249999998940723e-06, 1.5550000000974507e-06, 1.5970000000198326e-06, 1.5559999999581464e-06, 1.5970000000198326e-06, 1.5689999999235482e-06, 1.5700000000062886e-06, 1.5970000000198326e-06, 1.6109999998459301e-06, 1.4999999999876223e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5970000000198326e-06, 1.6520000001296609e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.6109999998459301e-06, 1.5559999999581464e-06, 1.6389999999422145e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.6109999998459301e-06, 1.6249999998940723e-06]</msg>
<status status="PASS" starttime="20201030 10:57:30.828" endtime="20201030 10:57:30.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.817" endtime="20201030 10:57:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.325" endtime="20201030 10:57:30.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.324" endtime="20201030 10:57:30.836"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.856" endtime="20201030 10:57:30.871"></status>
</kw>
<msg timestamp="20201030 10:57:30.872" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.853" endtime="20201030 10:57:30.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.874" endtime="20201030 10:57:30.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.881" endtime="20201030 10:57:30.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.846" endtime="20201030 10:57:30.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.841" endtime="20201030 10:57:30.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.904" endtime="20201030 10:57:31.264"></status>
</kw>
<msg timestamp="20201030 10:57:31.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.115288208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.115289819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.901" endtime="20201030 10:57:31.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.115288208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.115289819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.276" endtime="20201030 10:57:31.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.298" endtime="20201030 10:57:31.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.894" endtime="20201030 10:57:31.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.889" endtime="20201030 10:57:31.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.317" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5970000000198326e-06}, {'diff': 1.6520000001296609e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.596999999797788e-0...</msg>
<status status="PASS" starttime="20201030 10:57:31.306" endtime="20201030 10:57:31.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:31.328" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.6110000000679747e-06, 1.5970000000198326e-06, 1.6520000001296609e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.6109999998459301e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:31.320" endtime="20201030 10:57:31.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.338" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:31.336" endtime="20201030 10:57:31.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.344" level="INFO">VALUE: [1.6110000000679747e-06, 1.6110000000679747e-06, 1.5970000000198326e-06, 1.6520000001296609e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.6109999998459301e-06, 1.5559999999581464e-06, 1.6389999999422145e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.6109999998459301e-06, 1.6249999998940723e-06, 1.5419999999100042e-06, 1.5970000000198326e-06, 1.5419999999100042e-06, 1.6109999998459301e-06, 1.4720000001133826e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.6109999998459301e-06, 1.5690000001455928e-06, 1.4999999999876223e-06, 1.6119999999286705e-06, 1.5550000000974507e-06, 1.5550000000974507e-06, 1.556000000180191e-06, 1.554999999875406e-06, 1.556000000180191e-06, 1.5559999999581464e-06, 1.6119999999286705e-06, 1.6249999998940723e-06, 1.5970000000198326e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5419999999100042e-06, 1.5970000000198326e-06, 1.556000000180191e-06, 1.6110000000679747e-06, 1.6109999998459301e-06, 1.5419999999100042e-06, 1.5700000000062886e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.6250000001161169e-06, 1.6389999999422145e-06, 1.6110000000679747e-06, 1.556000000180191e-06, 1.5970000000198326e-06, 1.6250000001161169e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5280000000839067e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000000062886e-06, 1.6110000000679747e-06, 1.6109999998459301e-06, 1.6110000000679747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:31.341" endtime="20201030 10:57:31.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.330" endtime="20201030 10:57:31.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.838" endtime="20201030 10:57:31.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.837" endtime="20201030 10:57:31.349"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.370" endtime="20201030 10:57:31.384"></status>
</kw>
<msg timestamp="20201030 10:57:31.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.366" endtime="20201030 10:57:31.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.392" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.388" endtime="20201030 10:57:31.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.394" endtime="20201030 10:57:31.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.359" endtime="20201030 10:57:31.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.354" endtime="20201030 10:57:31.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.419" endtime="20201030 10:57:31.768"></status>
</kw>
<msg timestamp="20201030 10:57:31.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.617523292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.617524889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.416" endtime="20201030 10:57:31.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.617523292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.617524889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.779" endtime="20201030 10:57:31.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.802" endtime="20201030 10:57:31.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.407" endtime="20201030 10:57:31.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.402" endtime="20201030 10:57:31.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.820" level="INFO">${RESULT} = [{'diff': 1.5970000000198326e-06}, {'diff': 1.6250000001161169e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5829999999716904e-...</msg>
<status status="PASS" starttime="20201030 10:57:31.810" endtime="20201030 10:57:31.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:31.830" level="INFO">${OVERHEAD} = {'diff': [1.5970000000198326e-06, 1.6250000001161169e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5280000000839067e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:31.822" endtime="20201030 10:57:31.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.840" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:31.838" endtime="20201030 10:57:31.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.846" level="INFO">VALUE: [1.5970000000198326e-06, 1.6250000001161169e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5280000000839067e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000000062886e-06, 1.6110000000679747e-06, 1.6109999998459301e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.6119999997066259e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5410000000493085e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.500000000209667e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.612000000150715e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.612000000150715e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5970000002418772e-06, 1.4999999997655777e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.6110000000679747e-06, 1.5970000002418772e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.6109999996238855e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.6249999998940723e-06, 1.5559999999581464e-06, 1.6519999999076163e-06, 1.6109999996238855e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201030 10:57:31.842" endtime="20201030 10:57:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.832" endtime="20201030 10:57:31.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.351" endtime="20201030 10:57:31.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.350" endtime="20201030 10:57:31.851"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.873" endtime="20201030 10:57:31.887"></status>
</kw>
<msg timestamp="20201030 10:57:31.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.869" endtime="20201030 10:57:31.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.891" endtime="20201030 10:57:31.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.897" endtime="20201030 10:57:31.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.862" endtime="20201030 10:57:31.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.856" endtime="20201030 10:57:31.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.920" endtime="20201030 10:57:32.280"></status>
</kw>
<msg timestamp="20201030 10:57:32.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.121844347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.121845889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.917" endtime="20201030 10:57:32.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.121844347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.121845889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.291" endtime="20201030 10:57:32.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.313" endtime="20201030 10:57:32.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.910" endtime="20201030 10:57:32.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.905" endtime="20201030 10:57:32.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.331" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.6109999996238855e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201030 10:57:32.322" endtime="20201030 10:57:32.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:32.343" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.6109999996238855e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.6110000000679747e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:32.333" endtime="20201030 10:57:32.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.353" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:32.351" endtime="20201030 10:57:32.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.359" level="INFO">VALUE: [1.5419999996879596e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.6109999996238855e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.6249999998940723e-06, 1.5559999999581464e-06, 1.6519999999076163e-06, 1.6109999996238855e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5970000002418772e-06, 1.6669999998164542e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.5830000004157796e-06, 1.6110000000679747e-06, 1.612000000150715e-06, 1.5689999997015036e-06, 1.596999999797788e-06, 1.5280000003059513e-06, 1.5689999997015036e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.5550000003194953e-06, 1.5409999996052193e-06, 1.5550000003194953e-06, 1.6249999998940723e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.5559999999581464e-06, 1.6249999998940723e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.6109999996238855e-06, 1.4870000000222205e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5840000000544308e-06, 1.5419999996879596e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.6249999998940723e-06]</msg>
<status status="PASS" starttime="20201030 10:57:32.355" endtime="20201030 10:57:32.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.345" endtime="20201030 10:57:32.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.853" endtime="20201030 10:57:32.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.852" endtime="20201030 10:57:32.364"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.384" endtime="20201030 10:57:32.398"></status>
</kw>
<msg timestamp="20201030 10:57:32.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.380" endtime="20201030 10:57:32.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.406" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.402" endtime="20201030 10:57:32.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.408" endtime="20201030 10:57:32.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.373" endtime="20201030 10:57:32.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.369" endtime="20201030 10:57:32.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.431" endtime="20201030 10:57:32.776"></status>
</kw>
<msg timestamp="20201030 10:57:32.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.614970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.614972208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.428" endtime="20201030 10:57:32.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.614970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.614972208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.787" endtime="20201030 10:57:32.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.809" endtime="20201030 10:57:32.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.421" endtime="20201030 10:57:32.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.416" endtime="20201030 10:57:32.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.827" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-...</msg>
<status status="PASS" starttime="20201030 10:57:32.818" endtime="20201030 10:57:32.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:32.843" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5840000000544308e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:32.829" endtime="20201030 10:57:32.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:32.851" endtime="20201030 10:57:32.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.859" level="INFO">VALUE: [1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5840000000544308e-06, 1.5419999996879596e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.6249999998940723e-06, 1.5410000000493085e-06, 1.6109999996238855e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.6119999997066259e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.554999999875406e-06, 1.612000000150715e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6109999996238855e-06, 1.554999999875406e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.639000000164259e-06, 1.6519999999076163e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.5970000002418772e-06, 1.5419999996879596e-06, 1.6670000002605434e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.639000000164259e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6109999996238855e-06, 1.5970000002418772e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.4860000003835694e-06]</msg>
<status status="PASS" starttime="20201030 10:57:32.856" endtime="20201030 10:57:32.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.845" endtime="20201030 10:57:32.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.365" endtime="20201030 10:57:32.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.364" endtime="20201030 10:57:32.864"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.884" endtime="20201030 10:57:32.899"></status>
</kw>
<msg timestamp="20201030 10:57:32.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.881" endtime="20201030 10:57:32.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.902" endtime="20201030 10:57:32.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.909" endtime="20201030 10:57:32.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.874" endtime="20201030 10:57:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.869" endtime="20201030 10:57:32.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.932" endtime="20201030 10:57:33.304"></status>
</kw>
<msg timestamp="20201030 10:57:33.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117039292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.929" endtime="20201030 10:57:33.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117039292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.315" endtime="20201030 10:57:33.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.337" endtime="20201030 10:57:33.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.921" endtime="20201030 10:57:33.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.917" endtime="20201030 10:57:33.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.356" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.6250000003381615e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5420000001320489e-...</msg>
<status status="PASS" starttime="20201030 10:57:33.346" endtime="20201030 10:57:33.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:33.366" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.639000000164259e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:33.358" endtime="20201030 10:57:33.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.376" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:33.374" endtime="20201030 10:57:33.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.382" level="INFO">VALUE: [1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.639000000164259e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6109999996238855e-06, 1.5970000002418772e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5269999997791217e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5970000002418772e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6249999998940723e-06, 1.639000000164259e-06, 1.527000000223211e-06, 1.596999999797788e-06, 1.6119999997066259e-06, 1.5829999999716904e-06, 1.527999999861862e-06, 1.5970000002418772e-06, 1.500000000209667e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.6250000003381615e-06, 1.554999999875406e-06, 1.5970000002418772e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6249999998940723e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6109999996238855e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.6249999998940723e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5550000003194953e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.4729999997520338e-06]</msg>
<status status="PASS" starttime="20201030 10:57:33.378" endtime="20201030 10:57:33.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.368" endtime="20201030 10:57:33.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.866" endtime="20201030 10:57:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.865" endtime="20201030 10:57:33.387"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.415" endtime="20201030 10:57:33.430"></status>
</kw>
<msg timestamp="20201030 10:57:33.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.410" endtime="20201030 10:57:33.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.433" endtime="20201030 10:57:33.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.440" endtime="20201030 10:57:33.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.401" endtime="20201030 10:57:33.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.395" endtime="20201030 10:57:33.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.463" endtime="20201030 10:57:33.841"></status>
</kw>
<msg timestamp="20201030 10:57:33.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.607438542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.607440097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.460" endtime="20201030 10:57:33.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.607438542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.607440097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.852" endtime="20201030 10:57:33.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.874" endtime="20201030 10:57:33.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.453" endtime="20201030 10:57:33.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.448" endtime="20201030 10:57:33.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.892" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.6109999996238855e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5700000002283332e-06...</msg>
<status status="PASS" starttime="20201030 10:57:33.882" endtime="20201030 10:57:33.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:33.904" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.554999999875406e-06, 1.6109999996238855e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.6249999998940723e-06, 1.5690000001455928e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:33.894" endtime="20201030 10:57:33.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:33.911" endtime="20201030 10:57:33.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.919" level="INFO">VALUE: [1.554999999875406e-06, 1.554999999875406e-06, 1.6109999996238855e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.6249999998940723e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5550000003194953e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.4729999997520338e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.6109999991797963e-06, 1.5700000002283332e-06, 1.596999999797788e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.6389999997201699e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.624999999449983e-06, 1.5830000004157796e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5970000006859664e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5689999992574144e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.612000000150715e-06, 1.6110000000679747e-06, 1.5980000007687067e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5979999998805283e-06]</msg>
<status status="PASS" starttime="20201030 10:57:33.916" endtime="20201030 10:57:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.906" endtime="20201030 10:57:33.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.388" endtime="20201030 10:57:33.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.388" endtime="20201030 10:57:33.924"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.944" endtime="20201030 10:57:33.960"></status>
</kw>
<msg timestamp="20201030 10:57:33.961" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.941" endtime="20201030 10:57:33.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.967" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.963" endtime="20201030 10:57:33.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.969" endtime="20201030 10:57:33.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.934" endtime="20201030 10:57:33.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.929" endtime="20201030 10:57:33.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.992" endtime="20201030 10:57:34.364"></status>
</kw>
<msg timestamp="20201030 10:57:34.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.128113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.128114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.989" endtime="20201030 10:57:34.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.128113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.128114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.375" endtime="20201030 10:57:34.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.397" endtime="20201030 10:57:34.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.982" endtime="20201030 10:57:34.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.977" endtime="20201030 10:57:34.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.415" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5700000002283332e-...</msg>
<status status="PASS" starttime="20201030 10:57:34.405" endtime="20201030 10:57:34.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:34.427" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.612000000150715e-06, 1.6110000000679747e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:34.417" endtime="20201030 10:57:34.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.437" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:34.435" endtime="20201030 10:57:34.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.443" level="INFO">VALUE: [1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.612000000150715e-06, 1.6110000000679747e-06, 1.5980000007687067e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.612000000150715e-06, 1.6390000006083483e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.612000000150715e-06, 1.5980000007687067e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6519999999076163e-06, 1.6250000003381615e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.612000000150715e-06, 1.5699999993401548e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6529999999903566e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.6109999991797963e-06, 1.6250000003381615e-06]</msg>
<status status="PASS" starttime="20201030 10:57:34.439" endtime="20201030 10:57:34.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.429" endtime="20201030 10:57:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.926" endtime="20201030 10:57:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.925" endtime="20201030 10:57:34.454"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.474" endtime="20201030 10:57:34.490"></status>
</kw>
<msg timestamp="20201030 10:57:34.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.471" endtime="20201030 10:57:34.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.493" endtime="20201030 10:57:34.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.499" endtime="20201030 10:57:34.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.464" endtime="20201030 10:57:34.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.459" endtime="20201030 10:57:34.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.523" endtime="20201030 10:57:34.887"></status>
</kw>
<msg timestamp="20201030 10:57:34.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.64697425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.646975847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:34.519" endtime="20201030 10:57:34.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.64697425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.646975847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:34.898" endtime="20201030 10:57:34.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.921" endtime="20201030 10:57:34.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.512" endtime="20201030 10:57:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.507" endtime="20201030 10:57:34.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.938" level="INFO">${RESULT} = [{'diff': 1.596999999797788e-06}, {'diff': 1.612000000150715e-06}, {'diff': 1.5699999993401548e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.596999999797788e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:34.929" endtime="20201030 10:57:34.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:34.949" level="INFO">${OVERHEAD} = {'diff': [1.596999999797788e-06, 1.612000000150715e-06, 1.5699999993401548e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6...</msg>
<status status="PASS" starttime="20201030 10:57:34.940" endtime="20201030 10:57:34.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.959" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:34.957" endtime="20201030 10:57:34.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.965" level="INFO">VALUE: [1.596999999797788e-06, 1.612000000150715e-06, 1.5699999993401548e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6529999999903566e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.6109999991797963e-06, 1.6250000003381615e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6250000003381615e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.6250000003381615e-06, 1.5700000002283332e-06, 1.596999999797788e-06, 1.612000000150715e-06, 1.596999999797788e-06, 1.5830000004157796e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.6949999999127385e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.4720000001133826e-06, 1.6939999998299982e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.624999999449983e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201030 10:57:34.961" endtime="20201030 10:57:34.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.951" endtime="20201030 10:57:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.456" endtime="20201030 10:57:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.455" endtime="20201030 10:57:34.970"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.990" endtime="20201030 10:57:35.006"></status>
</kw>
<msg timestamp="20201030 10:57:35.008" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.987" endtime="20201030 10:57:35.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.014" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.010" endtime="20201030 10:57:35.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.016" endtime="20201030 10:57:35.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.980" endtime="20201030 10:57:35.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.975" endtime="20201030 10:57:35.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.039" endtime="20201030 10:57:35.399"></status>
</kw>
<msg timestamp="20201030 10:57:35.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.165738319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.165739875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.036" endtime="20201030 10:57:35.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.165738319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.165739875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.411" endtime="20201030 10:57:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.433" endtime="20201030 10:57:35.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.029" endtime="20201030 10:57:35.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.024" endtime="20201030 10:57:35.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.451" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.624999999449983e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.6110000000679747e-0...</msg>
<status status="PASS" starttime="20201030 10:57:35.441" endtime="20201030 10:57:35.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:35.463" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.624999999449983e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:35.453" endtime="20201030 10:57:35.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:35.470" endtime="20201030 10:57:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.478" level="INFO">VALUE: [1.5559999999581464e-06, 1.624999999449983e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5979999998805283e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.666000000177803e-06, 1.5419999996879596e-06, 1.6529999999903566e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5979999998805283e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6810000005307302e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.6389999997201699e-06, 1.5129999999530241e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.475" endtime="20201030 10:57:35.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.464" endtime="20201030 10:57:35.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.972" endtime="20201030 10:57:35.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.971" endtime="20201030 10:57:35.483"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.504" endtime="20201030 10:57:35.518"></status>
</kw>
<msg timestamp="20201030 10:57:35.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.500" endtime="20201030 10:57:35.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.521" endtime="20201030 10:57:35.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.528" endtime="20201030 10:57:35.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.493" endtime="20201030 10:57:35.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.488" endtime="20201030 10:57:35.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.551" endtime="20201030 10:57:35.921"></status>
</kw>
<msg timestamp="20201030 10:57:35.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.673939278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.673940847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.548" endtime="20201030 10:57:35.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.673939278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.673940847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.932" endtime="20201030 10:57:35.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.954" endtime="20201030 10:57:35.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.540" endtime="20201030 10:57:35.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.536" endtime="20201030 10:57:35.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.972" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5279999994177729e-06}, {'diff': 1.554999999875406e-06...</msg>
<status status="PASS" starttime="20201030 10:57:35.963" endtime="20201030 10:57:35.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:35.984" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:35.974" endtime="20201030 10:57:35.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.994" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:35.992" endtime="20201030 10:57:35.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.000" level="INFO">VALUE: [1.5690000001455928e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.6389999997201699e-06, 1.5129999999530241e-06, 1.5140000000357645e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.6109999991797963e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.6109999991797963e-06, 1.6250000003381615e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5140000000357645e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.6389999997201699e-06, 1.5830000004157796e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6799999995598114e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.6119999992625367e-06, 1.6250000003381615e-06, 1.6810000005307302e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5979999998805283e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.996" endtime="20201030 10:57:36.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.986" endtime="20201030 10:57:36.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.485" endtime="20201030 10:57:36.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.484" endtime="20201030 10:57:36.005"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.025" endtime="20201030 10:57:36.040"></status>
</kw>
<msg timestamp="20201030 10:57:36.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.022" endtime="20201030 10:57:36.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.048" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.044" endtime="20201030 10:57:36.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.050" endtime="20201030 10:57:36.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.015" endtime="20201030 10:57:36.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.010" endtime="20201030 10:57:36.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.073" endtime="20201030 10:57:36.446"></status>
</kw>
<msg timestamp="20201030 10:57:36.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.176149903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.176151472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.070" endtime="20201030 10:57:36.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.176149903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.176151472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.457" endtime="20201030 10:57:36.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.479" endtime="20201030 10:57:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.063" endtime="20201030 10:57:36.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.058" endtime="20201030 10:57:36.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.497" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.6119999992625367e-0...</msg>
<status status="PASS" starttime="20201030 10:57:36.488" endtime="20201030 10:57:36.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:36.508" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.6119999992625367e-06, 1.6250000003381615e-06, 1.6810000005307302e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:36.499" endtime="20201030 10:57:36.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.518" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:36.516" endtime="20201030 10:57:36.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.523" level="INFO">VALUE: [1.5690000001455928e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.6119999992625367e-06, 1.6250000003381615e-06, 1.6810000005307302e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5979999998805283e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.6250000003381615e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.624999999449983e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.6250000003381615e-06, 1.6109999991797963e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5280000003059513e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.5839999996103415e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.6109999991797963e-06, 1.5829999995276012e-06, 1.6110000000679747e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.520" endtime="20201030 10:57:36.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.510" endtime="20201030 10:57:36.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.007" endtime="20201030 10:57:36.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.006" endtime="20201030 10:57:36.528"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.549" endtime="20201030 10:57:36.565"></status>
</kw>
<msg timestamp="20201030 10:57:36.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.545" endtime="20201030 10:57:36.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.572" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.568" endtime="20201030 10:57:36.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.575" endtime="20201030 10:57:36.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.538" endtime="20201030 10:57:36.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.534" endtime="20201030 10:57:36.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.591" endtime="20201030 10:57:36.953"></status>
</kw>
<msg timestamp="20201030 10:57:36.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.688646833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.688648417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.589" endtime="20201030 10:57:36.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.688646833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.688648417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.965" endtime="20201030 10:57:36.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.987" endtime="20201030 10:57:36.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.586" endtime="20201030 10:57:36.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.583" endtime="20201030 10:57:36.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.005" level="INFO">${RESULT} = [{'diff': 1.5839999996103415e-06}, {'diff': 1.5830000004157796e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.6109999991797963e-06}, {'diff': 1.5829999995276012e-...</msg>
<status status="PASS" starttime="20201030 10:57:36.995" endtime="20201030 10:57:37.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:37.017" level="INFO">${OVERHEAD} = {'diff': [1.5839999996103415e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.6109999991797963e-06, 1.5829999995276012e-06, 1.6110000000679747e-06, 1.527000000223211e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:37.007" endtime="20201030 10:57:37.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.027" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:37.025" endtime="20201030 10:57:37.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.033" level="INFO">VALUE: [1.5839999996103415e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.6109999991797963e-06, 1.5829999995276012e-06, 1.6110000000679747e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5409999996052193e-06, 1.6109999991797963e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.6250000003381615e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5980000007687067e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.612000000150715e-06, 1.624999999449983e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.6390000006083483e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.6110000000679747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.029" endtime="20201030 10:57:37.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.019" endtime="20201030 10:57:37.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.530" endtime="20201030 10:57:37.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.529" endtime="20201030 10:57:37.038"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.058" endtime="20201030 10:57:37.072"></status>
</kw>
<msg timestamp="20201030 10:57:37.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.054" endtime="20201030 10:57:37.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.076" endtime="20201030 10:57:37.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.082" endtime="20201030 10:57:37.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.047" endtime="20201030 10:57:37.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.043" endtime="20201030 10:57:37.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.105" endtime="20201030 10:57:37.470"></status>
</kw>
<msg timestamp="20201030 10:57:37.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.204296264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.204297875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.102" endtime="20201030 10:57:37.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.204296264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.204297875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.481" endtime="20201030 10:57:37.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.503" endtime="20201030 10:57:37.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.095" endtime="20201030 10:57:37.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.090" endtime="20201030 10:57:37.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.522" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.5699999993401548e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5830000004157796e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.6390000006083483e-0...</msg>
<status status="PASS" starttime="20201030 10:57:37.512" endtime="20201030 10:57:37.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:37.538" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.6390000006083483e-06, 1.5410000004933977e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:37.524" endtime="20201030 10:57:37.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.548" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:37.546" endtime="20201030 10:57:37.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.554" level="INFO">VALUE: [1.6110000000679747e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.6390000006083483e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.6110000000679747e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5410000004933977e-06, 1.6250000003381615e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.612000000150715e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.666000000177803e-06, 1.596999999797788e-06, 1.6109999991797963e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5410000004933977e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.5700000002283332e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5129999999530241e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.6110000000679747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.551" endtime="20201030 10:57:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.540" endtime="20201030 10:57:37.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.039" endtime="20201030 10:57:37.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.038" endtime="20201030 10:57:37.559"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.579" endtime="20201030 10:57:37.594"></status>
</kw>
<msg timestamp="20201030 10:57:37.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.576" endtime="20201030 10:57:37.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.598" endtime="20201030 10:57:37.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.604" endtime="20201030 10:57:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.569" endtime="20201030 10:57:37.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.564" endtime="20201030 10:57:37.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.627" endtime="20201030 10:57:37.988"></status>
</kw>
<msg timestamp="20201030 10:57:37.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.702243597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.702245153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.624" endtime="20201030 10:57:37.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.702243597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.702245153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.000" endtime="20201030 10:57:38.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.022" endtime="20201030 10:57:38.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.617" endtime="20201030 10:57:38.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.612" endtime="20201030 10:57:38.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.040" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5979999998805283e-06}, {'diff': 1.5700000002283332e-...</msg>
<status status="PASS" starttime="20201030 10:57:38.031" endtime="20201030 10:57:38.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:38.051" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.5700000002283332e-06, 1.5970000006859664e-06, 1.554999999875406e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:38.042" endtime="20201030 10:57:38.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:38.059" endtime="20201030 10:57:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.067" level="INFO">VALUE: [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.5700000002283332e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5129999999530241e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.6519999999076163e-06, 1.6390000006083483e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.6389999988319914e-06, 1.6390000006083483e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.62500000122634e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.624999999449983e-06, 1.6389999988319914e-06, 1.583000001303958e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.6390000006083483e-06, 1.5560000008463248e-06, 1.5840000013866984e-06, 1.624999999449983e-06, 1.62500000122634e-06, 1.5560000008463248e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.6660000010659815e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.624999999449983e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5969999989096095e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.063" endtime="20201030 10:57:38.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.052" endtime="20201030 10:57:38.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.561" endtime="20201030 10:57:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.560" endtime="20201030 10:57:38.071"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.092" endtime="20201030 10:57:38.109"></status>
</kw>
<msg timestamp="20201030 10:57:38.110" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.088" endtime="20201030 10:57:38.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.112" endtime="20201030 10:57:38.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.119" endtime="20201030 10:57:38.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.081" endtime="20201030 10:57:38.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.077" endtime="20201030 10:57:38.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.142" endtime="20201030 10:57:38.513"></status>
</kw>
<msg timestamp="20201030 10:57:38.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.213929722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.213931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.139" endtime="20201030 10:57:38.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.213929722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.213931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.524" endtime="20201030 10:57:38.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.546" endtime="20201030 10:57:38.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.131" endtime="20201030 10:57:38.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.127" endtime="20201030 10:57:38.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.564" level="INFO">${RESULT} = [{'diff': 1.62500000122634e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.624999999449983e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.6660000010659815e-06}, {'diff': 1.6110000000679747e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:38.555" endtime="20201030 10:57:38.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:38.576" level="INFO">${OVERHEAD} = {'diff': [1.62500000122634e-06, 1.5560000008463248e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.6660000010659815e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.624999999449983e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:57:38.567" endtime="20201030 10:57:38.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.586" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:38.584" endtime="20201030 10:57:38.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.592" level="INFO">VALUE: [1.62500000122634e-06, 1.5560000008463248e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.6660000010659815e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.624999999449983e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5969999989096095e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.583000001303958e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.6110000000679747e-06, 1.624999999449983e-06, 1.5690000001455928e-06, 1.583000001303958e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5829999995276012e-06, 1.59799999899235e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.6949999999127385e-06, 1.6110000000679747e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.666999999372365e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.624999999449983e-06, 1.5409999996052193e-06, 1.62500000122634e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5699999984519764e-06, 1.513999999147586e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.62500000122634e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.5969999989096095e-06, 1.5549999989872276e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.588" endtime="20201030 10:57:38.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.578" endtime="20201030 10:57:38.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.073" endtime="20201030 10:57:38.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.072" endtime="20201030 10:57:38.597"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.617" endtime="20201030 10:57:38.632"></status>
</kw>
<msg timestamp="20201030 10:57:38.634" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.614" endtime="20201030 10:57:38.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.640" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.636" endtime="20201030 10:57:38.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.642" endtime="20201030 10:57:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.607" endtime="20201030 10:57:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.602" endtime="20201030 10:57:38.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.666" endtime="20201030 10:57:39.037"></status>
</kw>
<msg timestamp="20201030 10:57:39.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.718699458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.718701069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.662" endtime="20201030 10:57:39.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.718699458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.718701069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.049" endtime="20201030 10:57:39.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.071" endtime="20201030 10:57:39.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.655" endtime="20201030 10:57:39.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.650" endtime="20201030 10:57:39.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.089" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.62500000122634e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201030 10:57:39.079" endtime="20201030 10:57:39.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:39.101" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.6110000000679747e-06, 1.62500000122634e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.624999999449983e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:39.091" endtime="20201030 10:57:39.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.111" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:39.109" endtime="20201030 10:57:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.117" level="INFO">VALUE: [1.6110000000679747e-06, 1.6110000000679747e-06, 1.62500000122634e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.624999999449983e-06, 1.6110000000679747e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.5969999989096095e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5969999989096095e-06, 1.5550000007635845e-06, 1.6389999988319914e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.612000000150715e-06, 1.6109999982916179e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.6809999987543733e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5980000007687067e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.612000000150715e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.6810000005307302e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5549999989872276e-06, 1.6110000000679747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.114" endtime="20201030 10:57:39.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.103" endtime="20201030 10:57:39.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.599" endtime="20201030 10:57:39.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.598" endtime="20201030 10:57:39.122"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.142" endtime="20201030 10:57:39.156"></status>
</kw>
<msg timestamp="20201030 10:57:39.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.139" endtime="20201030 10:57:39.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.160" endtime="20201030 10:57:39.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.166" endtime="20201030 10:57:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.132" endtime="20201030 10:57:39.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.127" endtime="20201030 10:57:39.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.189" endtime="20201030 10:57:39.565"></status>
</kw>
<msg timestamp="20201030 10:57:39.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.231701597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.231703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.186" endtime="20201030 10:57:39.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.231701597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.231703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.576" endtime="20201030 10:57:39.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.599" endtime="20201030 10:57:39.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.179" endtime="20201030 10:57:39.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.174" endtime="20201030 10:57:39.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.617" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.612000000150715e-0...</msg>
<status status="PASS" starttime="20201030 10:57:39.607" endtime="20201030 10:57:39.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:39.627" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.612000000150715e-06, 1.5829999995276012e-06, 1.5550000007635845e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:39.619" endtime="20201030 10:57:39.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.638" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:39.635" endtime="20201030 10:57:39.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.643" level="INFO">VALUE: [1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.612000000150715e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.6810000005307302e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5549999989872276e-06, 1.6110000000679747e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.5829999995276012e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5839999996103415e-06, 1.5550000007635845e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.624999999449983e-06, 1.5550000007635845e-06, 1.4860000003835694e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.624999999449983e-06, 1.526999998446854e-06, 1.6110000000679747e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.5969999989096095e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.612000000150715e-06, 1.624999999449983e-06, 1.6390000006083483e-06, 1.527000000223211e-06, 1.5279999985295944e-06, 1.6109999982916179e-06, 1.5409999996052193e-06, 1.6529999999903566e-06, 1.5969999989096095e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.640" endtime="20201030 10:57:39.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.629" endtime="20201030 10:57:39.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.124" endtime="20201030 10:57:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.123" endtime="20201030 10:57:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.316" endtime="20201030 10:57:39.658"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:29.190" endtime="20201030 10:57:39.660" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.678" endtime="20201030 10:57:39.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.674" endtime="20201030 10:57:39.701"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.736" endtime="20201030 10:57:39.757"></status>
</kw>
<msg timestamp="20201030 10:57:39.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.733" endtime="20201030 10:57:39.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.761" endtime="20201030 10:57:39.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.772" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:39.767" endtime="20201030 10:57:39.772"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:39.726" endtime="20201030 10:57:39.774"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:39.719" endtime="20201030 10:57:39.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.717" endtime="20201030 10:57:39.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:39.784" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:39.783" endtime="20201030 10:57:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.778" endtime="20201030 10:57:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.713" endtime="20201030 10:57:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.711" endtime="20201030 10:57:39.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.788" endtime="20201030 10:57:39.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.707" endtime="20201030 10:57:39.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.703" endtime="20201030 10:57:39.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.671" endtime="20201030 10:57:39.795"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.818" endtime="20201030 10:57:39.842"></status>
</kw>
<msg timestamp="20201030 10:57:39.843" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.815" endtime="20201030 10:57:39.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.850" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.846" endtime="20201030 10:57:39.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.852" endtime="20201030 10:57:39.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.807" endtime="20201030 10:57:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.802" endtime="20201030 10:57:39.859"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.864" endtime="20201030 10:57:39.869"></status>
</kw>
<msg timestamp="20201030 10:57:39.870" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:39.861" endtime="20201030 10:57:39.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.880" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:39.878" endtime="20201030 10:57:39.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.884" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:39.882" endtime="20201030 10:57:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.872" endtime="20201030 10:57:39.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.896" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:39.894" endtime="20201030 10:57:39.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.900" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:39.898" endtime="20201030 10:57:39.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.888" endtime="20201030 10:57:39.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.922" endtime="20201030 10:57:40.276"></status>
</kw>
<msg timestamp="20201030 10:57:40.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1340715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134075931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:39.919" endtime="20201030 10:57:40.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1340715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134075931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:40.285" endtime="20201030 10:57:40.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.304" endtime="20201030 10:57:40.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.911" endtime="20201030 10:57:40.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.906" endtime="20201030 10:57:40.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.321" level="INFO">${RESULT} = [{'diff': 4.430999999999186e-06}, {'diff': 4.5980000000223065e-06}, {'diff': 4.556000000016658e-06}, {'diff': 4.610999999987708e-06}, {'diff': 4.541999999996271e-06}, {'diff': 4.611999999987182e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:40.312" endtime="20201030 10:57:40.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:40.331" level="INFO">${OVERHEAD} = {'diff': [4.430999999999186e-06, 4.5980000000223065e-06, 4.556000000016658e-06, 4.610999999987708e-06, 4.541999999996271e-06, 4.611999999987182e-06, 4.555999999988902e-06, 4.6670000000137435e-06, 4.54...</msg>
<status status="PASS" starttime="20201030 10:57:40.323" endtime="20201030 10:57:40.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.342" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:40.339" endtime="20201030 10:57:40.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.347" level="INFO">VALUE: [4.430999999999186e-06, 4.5980000000223065e-06, 4.556000000016658e-06, 4.610999999987708e-06, 4.541999999996271e-06, 4.611999999987182e-06, 4.555999999988902e-06, 4.6670000000137435e-06, 4.540999999996798e-06, 4.625000000008095e-06, 4.610999999987708e-06, 4.639000000000726e-06, 4.554999999989429e-06, 4.555000000017184e-06, 4.610999999987708e-06, 4.555999999988902e-06, 4.625000000008095e-06, 4.56899999998206e-06, 4.58400000000192e-06, 4.555999999988902e-06, 4.554999999989429e-06, 4.596999999995077e-06, 4.556000000016658e-06, 4.58400000000192e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.554999999989429e-06, 4.556000000016658e-06, 4.570000000009289e-06, 4.554999999989429e-06, 4.610999999987708e-06, 4.540999999996798e-06, 4.540999999996798e-06, 4.611000000015464e-06, 4.610999999987708e-06, 4.610999999987708e-06, 4.541999999996271e-06, 4.610999999987708e-06, 4.556000000016658e-06, 4.611000000015464e-06, 4.541999999996271e-06, 4.556000000016658e-06, 4.610999999987708e-06, 4.611000000015464e-06, 4.597999999994551e-06, 4.6120000000149375e-06, 4.639000000000726e-06, 4.56899999998206e-06, 4.569000000009815e-06, 4.569000000009815e-06]</msg>
<status status="PASS" starttime="20201030 10:57:40.344" endtime="20201030 10:57:40.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.332" endtime="20201030 10:57:40.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.797" endtime="20201030 10:57:40.352"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:39.665" endtime="20201030 10:57:40.354" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.373" endtime="20201030 10:57:40.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.368" endtime="20201030 10:57:40.397"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.430" endtime="20201030 10:57:40.450"></status>
</kw>
<msg timestamp="20201030 10:57:40.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.426" endtime="20201030 10:57:40.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.453" endtime="20201030 10:57:40.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.464" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:40.460" endtime="20201030 10:57:40.465"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.419" endtime="20201030 10:57:40.467"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.413" endtime="20201030 10:57:40.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.410" endtime="20201030 10:57:40.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:40.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:40.476" endtime="20201030 10:57:40.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.471" endtime="20201030 10:57:40.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.408" endtime="20201030 10:57:40.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.407" endtime="20201030 10:57:40.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.480" endtime="20201030 10:57:40.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.403" endtime="20201030 10:57:40.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.398" endtime="20201030 10:57:40.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.365" endtime="20201030 10:57:40.488"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.511" endtime="20201030 10:57:40.587"></status>
</kw>
<msg timestamp="20201030 10:57:40.588" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.507" endtime="20201030 10:57:40.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.595" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.591" endtime="20201030 10:57:40.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.597" endtime="20201030 10:57:40.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.500" endtime="20201030 10:57:40.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.494" endtime="20201030 10:57:40.604"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.609" endtime="20201030 10:57:40.613"></status>
</kw>
<msg timestamp="20201030 10:57:40.615" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:40.606" endtime="20201030 10:57:40.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.627" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:40.622" endtime="20201030 10:57:40.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.631" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:40.629" endtime="20201030 10:57:40.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.616" endtime="20201030 10:57:40.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.643" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:40.641" endtime="20201030 10:57:40.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.648" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:40.645" endtime="20201030 10:57:40.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.635" endtime="20201030 10:57:40.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.666" endtime="20201030 10:57:41.014"></status>
</kw>
<msg timestamp="20201030 10:57:41.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131326292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131364139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.663" endtime="20201030 10:57:41.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131326292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131364139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.023" endtime="20201030 10:57:41.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.041" endtime="20201030 10:57:41.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.656" endtime="20201030 10:57:41.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.651" endtime="20201030 10:57:41.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.058" level="INFO">${RESULT} = [{'diff': 3.784699999997976e-05}, {'diff': 3.769400000000478e-05}, {'diff': 3.780600000000134e-05}, {'diff': 3.7778000000016076e-05}, {'diff': 3.7693999999977024e-05}, {'diff': 3.770799999999741e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:41.050" endtime="20201030 10:57:41.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:41.068" level="INFO">${OVERHEAD} = {'diff': [3.784699999997976e-05, 3.769400000000478e-05, 3.780600000000134e-05, 3.7778000000016076e-05, 3.7693999999977024e-05, 3.770799999999741e-05, 3.775000000000306e-05, 3.770799999999741e-05, 3.77...</msg>
<status status="PASS" starttime="20201030 10:57:41.060" endtime="20201030 10:57:41.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.080" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:41.077" endtime="20201030 10:57:41.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.086" level="INFO">VALUE: [3.784699999997976e-05, 3.769400000000478e-05, 3.780600000000134e-05, 3.7778000000016076e-05, 3.7693999999977024e-05, 3.770799999999741e-05, 3.775000000000306e-05, 3.770799999999741e-05, 3.779200000000871e-05, 3.783299999998713e-05, 3.768100000001162e-05, 3.7764000000023445e-05, 3.770799999999741e-05, 3.7708999999996884e-05, 3.7762999999996216e-05, 3.7708000000025166e-05, 3.770799999999741e-05, 3.7708999999996884e-05, 3.775000000000306e-05, 3.779199999998095e-05, 3.7791000000009234e-05, 3.776399999999569e-05, 3.775000000000306e-05, 3.7736999999982146e-05, 3.770799999999741e-05, 3.7778000000016076e-05, 3.77220000000178e-05, 3.777799999998832e-05, 3.772199999999004e-05, 3.776399999999569e-05, 3.777799999998832e-05, 3.776399999999569e-05, 3.779200000000871e-05, 3.776399999999569e-05, 3.777799999998832e-05, 3.7708000000025166e-05, 3.779099999998148e-05, 3.769500000000425e-05, 3.775000000000306e-05, 3.776399999999569e-05, 3.779199999998095e-05, 3.776399999999569e-05, 3.7708999999996884e-05, 3.770799999999741e-05, 3.776399999999569e-05, 3.776399999999569e-05, 3.770799999999741e-05, 3.776399999999569e-05, 3.772199999999004e-05, 3.7708999999996884e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.083" endtime="20201030 10:57:41.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.070" endtime="20201030 10:57:41.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.489" endtime="20201030 10:57:41.090"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:40.359" endtime="20201030 10:57:41.093" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.111" endtime="20201030 10:57:41.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.107" endtime="20201030 10:57:41.134"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.167" endtime="20201030 10:57:41.188"></status>
</kw>
<msg timestamp="20201030 10:57:41.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.164" endtime="20201030 10:57:41.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.191" endtime="20201030 10:57:41.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.202" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:41.198" endtime="20201030 10:57:41.202"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:41.156" endtime="20201030 10:57:41.204"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:41.150" endtime="20201030 10:57:41.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.147" endtime="20201030 10:57:41.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:41.214" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:41.213" endtime="20201030 10:57:41.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.208" endtime="20201030 10:57:41.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.146" endtime="20201030 10:57:41.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.144" endtime="20201030 10:57:41.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.218" endtime="20201030 10:57:41.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.140" endtime="20201030 10:57:41.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.136" endtime="20201030 10:57:41.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.104" endtime="20201030 10:57:41.225"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.250" endtime="20201030 10:57:41.469"></status>
</kw>
<msg timestamp="20201030 10:57:41.471" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.245" endtime="20201030 10:57:41.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.477" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.473" endtime="20201030 10:57:41.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.479" endtime="20201030 10:57:41.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.238" endtime="20201030 10:57:41.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.232" endtime="20201030 10:57:41.486"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.491" endtime="20201030 10:57:41.496"></status>
</kw>
<msg timestamp="20201030 10:57:41.497" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:41.488" endtime="20201030 10:57:41.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.507" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:41.504" endtime="20201030 10:57:41.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.511" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:41.509" endtime="20201030 10:57:41.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.498" endtime="20201030 10:57:41.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.523" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:41.521" endtime="20201030 10:57:41.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.528" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:41.525" endtime="20201030 10:57:41.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.515" endtime="20201030 10:57:41.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.546" endtime="20201030 10:57:41.890"></status>
</kw>
<msg timestamp="20201030 10:57:41.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135698667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.543" endtime="20201030 10:57:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135698667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.899" endtime="20201030 10:57:41.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.916" endtime="20201030 10:57:41.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.536" endtime="20201030 10:57:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.531" endtime="20201030 10:57:41.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.934" level="INFO">${RESULT} = [{'diff': 7.263900000001322e-05}, {'diff': 7.201400000000913e-05}, {'diff': 7.199999999998874e-05}, {'diff': 7.206900000000793e-05}, {'diff': 7.204199999999439e-05}, {'diff': 7.208300000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:41.925" endtime="20201030 10:57:41.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:41.948" level="INFO">${OVERHEAD} = {'diff': [7.263900000001322e-05, 7.201400000000913e-05, 7.199999999998874e-05, 7.206900000000793e-05, 7.204199999999439e-05, 7.208300000000056e-05, 7.202800000000176e-05, 7.208400000000004e-05, 7.2041...</msg>
<status status="PASS" starttime="20201030 10:57:41.936" endtime="20201030 10:57:41.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.960" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:41.957" endtime="20201030 10:57:41.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.965" level="INFO">VALUE: [7.263900000001322e-05, 7.201400000000913e-05, 7.199999999998874e-05, 7.206900000000793e-05, 7.204199999999439e-05, 7.208300000000056e-05, 7.202800000000176e-05, 7.208400000000004e-05, 7.204199999999439e-05, 7.206900000000793e-05, 7.204199999999439e-05, 7.20700000000074e-05, 7.206900000000793e-05, 7.195899999998256e-05, 7.208300000000056e-05, 7.206900000000793e-05, 7.208400000000004e-05, 7.208300000000056e-05, 7.201400000000913e-05, 7.201399999998137e-05, 7.201399999998137e-05, 7.206900000000793e-05, 7.202700000000228e-05, 7.208300000000056e-05, 7.2027999999974e-05, 7.209799999999267e-05, 7.208300000000056e-05, 7.201300000000965e-05, 7.195800000001085e-05, 7.208399999997228e-05, 7.201400000000913e-05, 7.204199999999439e-05, 7.198599999996835e-05, 7.204100000002267e-05, 7.201400000000913e-05, 7.20969999999932e-05, 7.199999999996098e-05, 7.201399999995362e-05, 7.201400000000913e-05, 7.201400000000913e-05, 7.201400000000913e-05, 7.20969999999932e-05, 7.198600000002386e-05, 7.20969999999932e-05, 7.201400000000913e-05, 7.20000000000165e-05, 7.201400000000913e-05, 7.206999999997965e-05, 7.201400000000913e-05, 7.202699999997453e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.962" endtime="20201030 10:57:41.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.950" endtime="20201030 10:57:41.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.227" endtime="20201030 10:57:41.969"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:41.098" endtime="20201030 10:57:41.971" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.990" endtime="20201030 10:57:42.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.987" endtime="20201030 10:57:42.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.048" endtime="20201030 10:57:42.068"></status>
</kw>
<msg timestamp="20201030 10:57:42.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.044" endtime="20201030 10:57:42.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.072" endtime="20201030 10:57:42.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:42.078" endtime="20201030 10:57:42.083"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:42.037" endtime="20201030 10:57:42.085"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:42.031" endtime="20201030 10:57:42.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.028" endtime="20201030 10:57:42.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:42.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:42.094" endtime="20201030 10:57:42.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.089" endtime="20201030 10:57:42.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.026" endtime="20201030 10:57:42.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.024" endtime="20201030 10:57:42.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.099" endtime="20201030 10:57:42.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.020" endtime="20201030 10:57:42.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.016" endtime="20201030 10:57:42.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.983" endtime="20201030 10:57:42.106"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.131" endtime="20201030 10:57:42.155"></status>
</kw>
<msg timestamp="20201030 10:57:42.157" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.128" endtime="20201030 10:57:42.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.163" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.159" endtime="20201030 10:57:42.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.165" endtime="20201030 10:57:42.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.118" endtime="20201030 10:57:42.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.112" endtime="20201030 10:57:42.172"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.177" endtime="20201030 10:57:42.182"></status>
</kw>
<msg timestamp="20201030 10:57:42.183" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:42.174" endtime="20201030 10:57:42.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.193" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:42.191" endtime="20201030 10:57:42.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.197" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:42.195" endtime="20201030 10:57:42.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.185" endtime="20201030 10:57:42.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.209" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:42.207" endtime="20201030 10:57:42.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.213" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:42.211" endtime="20201030 10:57:42.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.201" endtime="20201030 10:57:42.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.232" endtime="20201030 10:57:42.583"></status>
</kw>
<msg timestamp="20201030 10:57:42.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134147861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134149222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.229" endtime="20201030 10:57:42.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134147861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134149222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.592" endtime="20201030 10:57:42.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.611" endtime="20201030 10:57:42.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.222" endtime="20201030 10:57:42.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.217" endtime="20201030 10:57:42.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.628" level="INFO">${RESULT} = [{'diff': 1.3610000000052747e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.360999999977519e-06}, {'diff': 1.3889999999905367e-06}, {'diff': 1.3610000000052747e-06}, {'diff': 1.3749999999979057e-0...</msg>
<status status="PASS" starttime="20201030 10:57:42.619" endtime="20201030 10:57:42.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:42.639" level="INFO">${OVERHEAD} = {'diff': [1.3610000000052747e-06, 1.3749999999979057e-06, 1.360999999977519e-06, 1.3889999999905367e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3749999999979057e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:42.630" endtime="20201030 10:57:42.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.650" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:42.648" endtime="20201030 10:57:42.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.656" level="INFO">VALUE: [1.3610000000052747e-06, 1.3749999999979057e-06, 1.360999999977519e-06, 1.3889999999905367e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.360999999977519e-06, 1.3610000000052747e-06, 1.360999999977519e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.360999999977519e-06, 1.3610000000052747e-06, 1.3889999999905367e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.4020000000114496e-06, 1.3620000000047483e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.346999999984888e-06, 1.3620000000047483e-06, 1.346999999984888e-06, 1.3620000000047483e-06, 1.3330000000200126e-06, 1.3199999999990997e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.291999999986082e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3610000000052747e-06, 1.3610000000052747e-06, 1.4160000000040807e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.3610000000052747e-06, 1.3619999999769927e-06, 1.3610000000052747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.653" endtime="20201030 10:57:42.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.641" endtime="20201030 10:57:42.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.108" endtime="20201030 10:57:42.660"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:41.977" endtime="20201030 10:57:42.662" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.681" endtime="20201030 10:57:42.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.677" endtime="20201030 10:57:42.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.737" endtime="20201030 10:57:42.758"></status>
</kw>
<msg timestamp="20201030 10:57:42.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.734" endtime="20201030 10:57:42.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.762" endtime="20201030 10:57:42.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.773" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:42.768" endtime="20201030 10:57:42.773"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:42.727" endtime="20201030 10:57:42.775"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:42.720" endtime="20201030 10:57:42.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.717" endtime="20201030 10:57:42.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:42.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:42.784" endtime="20201030 10:57:42.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.779" endtime="20201030 10:57:42.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.716" endtime="20201030 10:57:42.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.714" endtime="20201030 10:57:42.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.789" endtime="20201030 10:57:42.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.710" endtime="20201030 10:57:42.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.705" endtime="20201030 10:57:42.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.674" endtime="20201030 10:57:42.796"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.821" endtime="20201030 10:57:42.899"></status>
</kw>
<msg timestamp="20201030 10:57:42.900" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.818" endtime="20201030 10:57:42.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.906" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.902" endtime="20201030 10:57:42.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.909" endtime="20201030 10:57:42.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.810" endtime="20201030 10:57:42.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.802" endtime="20201030 10:57:42.916"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.920" endtime="20201030 10:57:42.925"></status>
</kw>
<msg timestamp="20201030 10:57:42.927" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:42.917" endtime="20201030 10:57:42.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.937" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:42.935" endtime="20201030 10:57:42.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.941" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:42.939" endtime="20201030 10:57:42.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.929" endtime="20201030 10:57:42.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.953" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:42.951" endtime="20201030 10:57:42.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.958" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:42.955" endtime="20201030 10:57:42.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.945" endtime="20201030 10:57:42.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.976" endtime="20201030 10:57:43.325"></status>
</kw>
<msg timestamp="20201030 10:57:43.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135358389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135369972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.973" endtime="20201030 10:57:43.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135358389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135369972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.334" endtime="20201030 10:57:43.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.352" endtime="20201030 10:57:43.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.966" endtime="20201030 10:57:43.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.961" endtime="20201030 10:57:43.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.369" level="INFO">${RESULT} = [{'diff': 1.1583000000009447e-05}, {'diff': 1.158400000000892e-05}, {'diff': 1.1541000000003798e-05}, {'diff': 1.156899999998906e-05}, {'diff': 1.156899999998906e-05}, {'diff': 1.1555999999995903e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:43.361" endtime="20201030 10:57:43.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:43.381" level="INFO">${OVERHEAD} = {'diff': [1.1583000000009447e-05, 1.158400000000892e-05, 1.1541000000003798e-05, 1.156899999998906e-05, 1.156899999998906e-05, 1.1555999999995903e-05, 1.1583999999981165e-05, 1.156899999998906e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:57:43.372" endtime="20201030 10:57:43.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.392" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:43.390" endtime="20201030 10:57:43.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.397" level="INFO">VALUE: [1.1583000000009447e-05, 1.158400000000892e-05, 1.1541000000003798e-05, 1.156899999998906e-05, 1.156899999998906e-05, 1.1555999999995903e-05, 1.1583999999981165e-05, 1.156899999998906e-05, 1.157000000001629e-05, 1.155499999999643e-05, 1.158400000000892e-05, 1.1555999999995903e-05, 1.1527000000011167e-05, 1.155499999999643e-05, 1.1499999999997623e-05, 1.1611000000022464e-05, 1.1555999999995903e-05, 1.1582999999981691e-05, 1.156899999998906e-05, 1.1556000000023658e-05, 1.156899999998906e-05, 1.1569999999988534e-05, 1.156899999998906e-05, 1.157000000001629e-05, 1.1513999999990254e-05, 1.1569000000016816e-05, 1.1569999999988534e-05, 1.1569999999988534e-05, 1.1582999999981691e-05, 1.158400000000892e-05, 1.1582999999981691e-05, 1.155499999999643e-05, 1.156899999998906e-05, 1.1485999999977237e-05, 1.158400000000892e-05, 1.155499999999643e-05, 1.1542000000003272e-05, 1.156899999998906e-05, 1.158400000000892e-05, 1.1583999999981165e-05, 1.1569999999988534e-05, 1.1569999999988534e-05, 1.1639000000007726e-05, 1.156899999998906e-05, 1.1569000000016816e-05, 1.157000000001629e-05, 1.1569999999988534e-05, 1.1513000000018536e-05, 1.1569000000016816e-05, 1.1569999999988534e-05]</msg>
<status status="PASS" starttime="20201030 10:57:43.394" endtime="20201030 10:57:43.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.382" endtime="20201030 10:57:43.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.798" endtime="20201030 10:57:43.401"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:42.667" endtime="20201030 10:57:43.403" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.422" endtime="20201030 10:57:43.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.418" endtime="20201030 10:57:43.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.479" endtime="20201030 10:57:43.499"></status>
</kw>
<msg timestamp="20201030 10:57:43.500" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.475" endtime="20201030 10:57:43.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.502" endtime="20201030 10:57:43.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.513" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:43.509" endtime="20201030 10:57:43.514"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.468" endtime="20201030 10:57:43.516"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.461" endtime="20201030 10:57:43.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.459" endtime="20201030 10:57:43.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:43.526" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:43.525" endtime="20201030 10:57:43.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.520" endtime="20201030 10:57:43.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.457" endtime="20201030 10:57:43.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.455" endtime="20201030 10:57:43.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.531" endtime="20201030 10:57:43.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.451" endtime="20201030 10:57:43.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.447" endtime="20201030 10:57:43.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.415" endtime="20201030 10:57:43.539"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.562" endtime="20201030 10:57:43.783"></status>
</kw>
<msg timestamp="20201030 10:57:43.784" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.558" endtime="20201030 10:57:43.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.790" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.786" endtime="20201030 10:57:43.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.792" endtime="20201030 10:57:43.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.551" endtime="20201030 10:57:43.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.545" endtime="20201030 10:57:43.799"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.804" endtime="20201030 10:57:43.808"></status>
</kw>
<msg timestamp="20201030 10:57:43.809" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:43.801" endtime="20201030 10:57:43.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.820" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:43.818" endtime="20201030 10:57:43.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.825" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:43.822" endtime="20201030 10:57:43.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.812" endtime="20201030 10:57:43.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.836" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:43.834" endtime="20201030 10:57:43.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.841" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:43.839" endtime="20201030 10:57:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.828" endtime="20201030 10:57:43.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.860" endtime="20201030 10:57:44.208"></status>
</kw>
<msg timestamp="20201030 10:57:44.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136630208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136652194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.856" endtime="20201030 10:57:44.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136630208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136652194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.217" endtime="20201030 10:57:44.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.235" endtime="20201030 10:57:44.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.849" endtime="20201030 10:57:44.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.844" endtime="20201030 10:57:44.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.252" level="INFO">${RESULT} = [{'diff': 2.1986000000001615e-05}, {'diff': 2.1957999999988598e-05}, {'diff': 2.1957999999988598e-05}, {'diff': 2.1973000000008458e-05}, {'diff': 2.2013999999986877e-05}, {'diff': 2.1986000000001615e-...</msg>
<status status="PASS" starttime="20201030 10:57:44.243" endtime="20201030 10:57:44.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:44.263" level="INFO">${OVERHEAD} = {'diff': [2.1986000000001615e-05, 2.1957999999988598e-05, 2.1957999999988598e-05, 2.1973000000008458e-05, 2.2013999999986877e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.202799999997951e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:44.254" endtime="20201030 10:57:44.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.274" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:44.272" endtime="20201030 10:57:44.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.280" level="INFO">VALUE: [2.1986000000001615e-05, 2.1957999999988598e-05, 2.1957999999988598e-05, 2.1973000000008458e-05, 2.2013999999986877e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.202799999997951e-05, 2.198599999997386e-05, 2.1986000000001615e-05, 2.1958000000016353e-05, 2.1972000000008984e-05, 2.2013999999986877e-05, 2.1986000000001615e-05, 2.198700000000109e-05, 2.1972000000008984e-05, 2.198700000000109e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.1999999999994246e-05, 2.1999999999994246e-05, 2.1999999999994246e-05, 2.1986000000001615e-05, 2.1903000000017547e-05, 2.2012999999987404e-05, 2.2000000000022002e-05, 2.1986000000001615e-05, 2.198700000000109e-05, 2.198600000002937e-05, 2.2000000000022002e-05, 2.2000000000022002e-05, 2.197199999998123e-05, 2.197199999998123e-05, 2.198600000002937e-05, 2.198600000002937e-05, 2.2000000000022002e-05, 2.1944999999967685e-05, 2.197199999998123e-05, 2.2000000000022002e-05, 2.197200000003674e-05, 2.198600000002937e-05, 2.199999999996649e-05, 2.2012999999987404e-05, 2.198599999997386e-05, 2.199999999996649e-05, 2.198599999997386e-05, 2.198600000002937e-05, 2.2000000000022002e-05, 2.2014000000014633e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.277" endtime="20201030 10:57:44.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.265" endtime="20201030 10:57:44.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.540" endtime="20201030 10:57:44.284"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:43.408" endtime="20201030 10:57:44.286" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.304" endtime="20201030 10:57:44.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.300" endtime="20201030 10:57:44.328"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.361" endtime="20201030 10:57:44.383"></status>
</kw>
<msg timestamp="20201030 10:57:44.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.357" endtime="20201030 10:57:44.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.387" endtime="20201030 10:57:44.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.398" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:44.393" endtime="20201030 10:57:44.398"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:44.350" endtime="20201030 10:57:44.400"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:44.344" endtime="20201030 10:57:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.341" endtime="20201030 10:57:44.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:44.410" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:44.409" endtime="20201030 10:57:44.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.404" endtime="20201030 10:57:44.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.339" endtime="20201030 10:57:44.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.338" endtime="20201030 10:57:44.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.414" endtime="20201030 10:57:44.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.333" endtime="20201030 10:57:44.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.329" endtime="20201030 10:57:44.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.297" endtime="20201030 10:57:44.421"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.431" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:44.447" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:46.383" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:44.427" endtime="20201030 10:57:46.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.389" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:46.386" endtime="20201030 10:57:46.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.423" endtime="20201030 10:57:46.392"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.401" endtime="20201030 10:57:46.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.397" endtime="20201030 10:57:46.424"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.446" endtime="20201030 10:57:46.457"></status>
</kw>
<msg timestamp="20201030 10:57:46.458" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.443" endtime="20201030 10:57:46.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.464" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.460" endtime="20201030 10:57:46.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.467" endtime="20201030 10:57:46.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.435" endtime="20201030 10:57:46.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.430" endtime="20201030 10:57:46.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.491" endtime="20201030 10:57:46.801"></status>
</kw>
<msg timestamp="20201030 10:57:46.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035685875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035687389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:46.488" endtime="20201030 10:57:46.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035685875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035687389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:46.807" endtime="20201030 10:57:46.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.825" endtime="20201030 10:57:46.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.480" endtime="20201030 10:57:46.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.476" endtime="20201030 10:57:46.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:46.842" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 4.583000000002446e-06}, {'diff': 4.582999999995507e-06}, {'diff': 4.583000000002446e-06}, {'diff': 4.583999999994981e-06}, {'diff': 4.58400000000192e-06}, {'diff': 4.59800000000...</msg>
<status status="PASS" starttime="20201030 10:57:46.834" endtime="20201030 10:57:46.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.851" level="INFO">${RESULT} = {'diff': [0, 4.583000000002446e-06, 4.582999999995507e-06, 4.583000000002446e-06, 4.583999999994981e-06, 4.58400000000192e-06, 4.59800000000149e-06, 4.57000000000235e-06, 4.597000000002016e-06, 4.5829...</msg>
<status status="PASS" starttime="20201030 10:57:46.844" endtime="20201030 10:57:46.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.862" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:46.859" endtime="20201030 10:57:46.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.867" level="INFO">VALUE: [0, 4.583000000002446e-06, 4.582999999995507e-06, 4.583000000002446e-06, 4.583999999994981e-06, 4.58400000000192e-06, 4.59800000000149e-06, 4.57000000000235e-06, 4.597000000002016e-06, 4.582999999995507e-06, 4.597000000002016e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.583999999994981e-06, 4.58400000000192e-06, 4.61200000000106e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.582999999995507e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.58400000000192e-06, 4.59800000000149e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.582999999995507e-06, 4.597000000002016e-06, 4.582999999995507e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.583999999994981e-06, 4.58400000000192e-06, 4.555999999995841e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.597000000002016e-06, 4.652999999993357e-06, 4.583000000002446e-06, 4.582999999995507e-06, 4.58400000000192e-06, 4.583999999994981e-06, 4.59800000000149e-06, 4.57000000000235e-06, 4.582999999995507e-06, 4.583000000002446e-06, 4.582999999995507e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201030 10:57:46.864" endtime="20201030 10:57:46.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.853" endtime="20201030 10:57:46.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.426" endtime="20201030 10:57:46.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.395" endtime="20201030 10:57:46.871"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.877" endtime="20201030 10:57:46.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.873" endtime="20201030 10:57:46.900"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.921" endtime="20201030 10:57:46.932"></status>
</kw>
<msg timestamp="20201030 10:57:46.933" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.918" endtime="20201030 10:57:46.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.940" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.936" endtime="20201030 10:57:46.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.942" endtime="20201030 10:57:46.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.911" endtime="20201030 10:57:46.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.906" endtime="20201030 10:57:46.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.968" endtime="20201030 10:57:47.304"></status>
</kw>
<msg timestamp="20201030 10:57:47.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034656708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.964" endtime="20201030 10:57:47.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034656708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.313" endtime="20201030 10:57:47.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.332" endtime="20201030 10:57:47.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.955" endtime="20201030 10:57:47.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.951" endtime="20201030 10:57:47.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:47.348" level="INFO">${PHILIP_RES} = [{'diff': 8.916000000004642e-06}, {'diff': 9.014000000001632e-06}, {'diff': 8.902999999997607e-06}, {'diff': 8.999999999995123e-06}, {'diff': 8.915999999997704e-06}, {'diff': 9.014000000001632e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:47.340" endtime="20201030 10:57:47.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.357" level="INFO">${RESULT} = {'diff': [8.916000000004642e-06, 9.014000000001632e-06, 8.902999999997607e-06, 8.999999999995123e-06, 8.915999999997704e-06, 9.014000000001632e-06, 8.903000000004546e-06, 9.014000000001632e-06, 8.8609...</msg>
<status status="PASS" starttime="20201030 10:57:47.350" endtime="20201030 10:57:47.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.368" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:47.365" endtime="20201030 10:57:47.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.373" level="INFO">VALUE: [8.916000000004642e-06, 9.014000000001632e-06, 8.902999999997607e-06, 8.999999999995123e-06, 8.915999999997704e-06, 9.014000000001632e-06, 8.903000000004546e-06, 9.014000000001632e-06, 8.860999999998898e-06, 8.958999999995887e-06, 8.902999999997607e-06, 9.027000000001728e-06, 8.847000000006267e-06, 9.014000000001632e-06, 8.819999999999661e-06, 8.999999999995123e-06, 8.902999999997607e-06, 9.055000000000868e-06, 8.902999999997607e-06, 9.014000000001632e-06, 8.888999999998037e-06, 9.014000000001632e-06, 8.902999999997607e-06, 9.055000000000868e-06, 8.902999999997607e-06, 9.000000000002062e-06, 8.915999999997704e-06, 9.014000000001632e-06, 8.901999999998134e-06, 9.013999999994693e-06, 8.902999999997607e-06, 9.069999999999911e-06, 8.903000000004546e-06, 9.014000000001632e-06, 8.901999999998134e-06, 9.014000000001632e-06, 8.902999999997607e-06, 9.014000000001632e-06, 8.889000000004976e-06, 9.041000000001298e-06, 8.972999999995457e-06, 9.014000000001632e-06, 8.888999999998037e-06, 9.013999999994693e-06, 8.888999999998037e-06, 9.014000000001632e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.916999999997177e-06, 8.985999999995553e-06]</msg>
<status status="PASS" starttime="20201030 10:57:47.370" endtime="20201030 10:57:47.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.359" endtime="20201030 10:57:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.902" endtime="20201030 10:57:47.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.872" endtime="20201030 10:57:47.377"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.383" endtime="20201030 10:57:47.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.379" endtime="20201030 10:57:47.406"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.429" endtime="20201030 10:57:47.439"></status>
</kw>
<msg timestamp="20201030 10:57:47.440" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.425" endtime="20201030 10:57:47.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.447" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.443" endtime="20201030 10:57:47.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.449" endtime="20201030 10:57:47.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.417" endtime="20201030 10:57:47.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.411" endtime="20201030 10:57:47.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.472" endtime="20201030 10:57:47.808"></status>
</kw>
<msg timestamp="20201030 10:57:47.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035871347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.469" endtime="20201030 10:57:47.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035871347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.818" endtime="20201030 10:57:47.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.837" endtime="20201030 10:57:47.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.462" endtime="20201030 10:57:47.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.457" endtime="20201030 10:57:47.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:47.853" level="INFO">${PHILIP_RES} = [{'diff': 1.3943999999994905e-05}, {'diff': 1.3987000000000027e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.3973000000000457e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.3986000000000554e-...</msg>
<status status="PASS" starttime="20201030 10:57:47.845" endtime="20201030 10:57:47.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.862" level="INFO">${RESULT} = {'diff': [1.3943999999994905e-05, 1.3987000000000027e-05, 1.4027999999999263e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3958000000001414e-05...</msg>
<status status="PASS" starttime="20201030 10:57:47.855" endtime="20201030 10:57:47.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.874" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:47.871" endtime="20201030 10:57:47.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.880" level="INFO">VALUE: [1.3943999999994905e-05, 1.3987000000000027e-05, 1.4027999999999263e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3958000000001414e-05, 1.3987000000000027e-05, 1.3903000000002608e-05, 1.3959000000000887e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.4013999999999693e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.3957999999994475e-05, 1.3917000000002178e-05, 1.3930000000002274e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.4013999999999693e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3915999999995765e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.3973000000000457e-05, 1.3944000000001844e-05, 1.3959000000000887e-05, 1.3957999999994475e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3986000000000554e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.877" endtime="20201030 10:57:47.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.864" endtime="20201030 10:57:47.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.407" endtime="20201030 10:57:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.378" endtime="20201030 10:57:47.884"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.890" endtime="20201030 10:57:47.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.886" endtime="20201030 10:57:47.913"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.934" endtime="20201030 10:57:47.946"></status>
</kw>
<msg timestamp="20201030 10:57:47.948" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.931" endtime="20201030 10:57:47.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.954" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.950" endtime="20201030 10:57:47.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.956" endtime="20201030 10:57:47.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.924" endtime="20201030 10:57:47.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.918" endtime="20201030 10:57:47.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.979" endtime="20201030 10:57:48.316"></status>
</kw>
<msg timestamp="20201030 10:57:48.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034880139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034899875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.976" endtime="20201030 10:57:48.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034880139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034899875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.326" endtime="20201030 10:57:48.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.345" endtime="20201030 10:57:48.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.969" endtime="20201030 10:57:48.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.964" endtime="20201030 10:57:48.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:48.361" level="INFO">${PHILIP_RES} = [{'diff': 1.9735999999999365e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9958000000000475e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 1.9888000000002626e-...</msg>
<status status="PASS" starttime="20201030 10:57:48.353" endtime="20201030 10:57:48.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.377" level="INFO">${RESULT} = {'diff': [1.9735999999999365e-05, 1.9972000000000045e-05, 1.9721999999999795e-05, 1.9958000000000475e-05, 1.9735999999999365e-05, 1.9888000000002626e-05, 1.9749999999998935e-05, 1.994500000000038e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:48.363" endtime="20201030 10:57:48.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.387" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:48.385" endtime="20201030 10:57:48.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.393" level="INFO">VALUE: [1.9735999999999365e-05, 1.9972000000000045e-05, 1.9721999999999795e-05, 1.9958000000000475e-05, 1.9735999999999365e-05, 1.9888000000002626e-05, 1.9749999999998935e-05, 1.994500000000038e-05, 1.9708000000000225e-05, 1.9972000000000045e-05, 1.9749999999998935e-05, 1.9972000000000045e-05, 1.968100000000056e-05, 1.995899999999995e-05, 1.9721999999999795e-05, 1.9972000000000045e-05, 1.9778000000005014e-05, 1.9958000000000475e-05, 1.979099999999817e-05, 1.9930000000001336e-05, 1.9721999999999795e-05, 1.998699999999909e-05, 1.9721999999999795e-05, 1.9958000000000475e-05, 1.973699999999884e-05, 1.9958000000000475e-05, 1.9735999999999365e-05, 1.9958000000000475e-05, 1.9749999999998935e-05, 1.9958000000000475e-05, 1.9721999999999795e-05, 1.9943999999993967e-05, 1.9735999999999365e-05, 1.9958000000000475e-05, 1.9735999999999365e-05, 1.995899999999995e-05, 1.9749999999998935e-05, 1.9972000000000045e-05, 1.9708000000000225e-05, 1.9944000000000905e-05, 1.9749999999998935e-05, 1.9944000000000905e-05, 1.9749999999998935e-05, 1.9958000000000475e-05, 1.9721999999999795e-05, 1.9943999999993967e-05, 1.9736000000006304e-05, 1.9972000000000045e-05, 1.9749999999998935e-05, 1.993100000000081e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.390" endtime="20201030 10:57:48.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.379" endtime="20201030 10:57:48.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.914" endtime="20201030 10:57:48.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.885" endtime="20201030 10:57:48.397"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.403" endtime="20201030 10:57:48.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.399" endtime="20201030 10:57:48.426"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.448" endtime="20201030 10:57:48.459"></status>
</kw>
<msg timestamp="20201030 10:57:48.460" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.444" endtime="20201030 10:57:48.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.466" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.462" endtime="20201030 10:57:48.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.469" endtime="20201030 10:57:48.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.436" endtime="20201030 10:57:48.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.431" endtime="20201030 10:57:48.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.492" endtime="20201030 10:57:48.829"></status>
</kw>
<msg timestamp="20201030 10:57:48.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035507806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.489" endtime="20201030 10:57:48.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035507806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.838" endtime="20201030 10:57:48.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.856" endtime="20201030 10:57:48.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.481" endtime="20201030 10:57:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.477" endtime="20201030 10:57:48.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:48.872" level="INFO">${PHILIP_RES} = [{'diff': 2.6264000000005006e-05}, {'diff': 2.6194000000000217e-05}, {'diff': 2.6221999999999357e-05}, {'diff': 2.613900000000141e-05}, {'diff': 2.6180000000000647e-05}, {'diff': 2.6207999999999787e-0...</msg>
<status status="PASS" starttime="20201030 10:57:48.865" endtime="20201030 10:57:48.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.883" level="INFO">${RESULT} = {'diff': [2.6264000000005006e-05, 2.6194000000000217e-05, 2.6221999999999357e-05, 2.613900000000141e-05, 2.6180000000000647e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.619499999999969e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:48.874" endtime="20201030 10:57:48.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.894" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:48.892" endtime="20201030 10:57:48.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.899" level="INFO">VALUE: [2.6264000000005006e-05, 2.6194000000000217e-05, 2.6221999999999357e-05, 2.613900000000141e-05, 2.6180000000000647e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.619499999999969e-05, 2.619499999999969e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6277999999997637e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.620899999999926e-05, 2.616700000000055e-05, 2.615300000000098e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.6179999999993708e-05, 2.6194000000000217e-05, 2.619499999999969e-05, 2.620899999999926e-05, 2.619499999999969e-05, 2.620899999999926e-05, 2.619499999999969e-05, 2.618100000000012e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.622299999999883e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.6138999999994472e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.896" endtime="20201030 10:57:48.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.885" endtime="20201030 10:57:48.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.427" endtime="20201030 10:57:48.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.398" endtime="20201030 10:57:48.904"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.910" endtime="20201030 10:57:48.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.906" endtime="20201030 10:57:48.933"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.955" endtime="20201030 10:57:48.967"></status>
</kw>
<msg timestamp="20201030 10:57:48.968" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.951" endtime="20201030 10:57:48.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.974" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.970" endtime="20201030 10:57:48.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.976" endtime="20201030 10:57:48.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.943" endtime="20201030 10:57:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.938" endtime="20201030 10:57:48.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.000" endtime="20201030 10:57:49.338"></status>
</kw>
<msg timestamp="20201030 10:57:49.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035545319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035578667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.996" endtime="20201030 10:57:49.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035545319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035578667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.348" endtime="20201030 10:57:49.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.366" endtime="20201030 10:57:49.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.989" endtime="20201030 10:57:49.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.984" endtime="20201030 10:57:49.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:49.382" level="INFO">${PHILIP_RES} = [{'diff': 3.334800000000249e-05}, {'diff': 3.370800000000035e-05}, {'diff': 3.3346999999996074e-05}, {'diff': 3.368000000000121e-05}, {'diff': 3.336200000000206e-05}, {'diff': 3.368100000000068e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.375" endtime="20201030 10:57:49.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.392" level="INFO">${RESULT} = {'diff': [3.334800000000249e-05, 3.370800000000035e-05, 3.3346999999996074e-05, 3.368000000000121e-05, 3.336200000000206e-05, 3.368100000000068e-05, 3.333300000000344e-05, 3.370800000000035e-05, 3.334...</msg>
<status status="PASS" starttime="20201030 10:57:49.384" endtime="20201030 10:57:49.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.402" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:49.400" endtime="20201030 10:57:49.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.407" level="INFO">VALUE: [3.334800000000249e-05, 3.370800000000035e-05, 3.3346999999996074e-05, 3.368000000000121e-05, 3.336200000000206e-05, 3.368100000000068e-05, 3.333300000000344e-05, 3.370800000000035e-05, 3.334799999999555e-05, 3.368100000000068e-05, 3.337500000000215e-05, 3.368000000000121e-05, 3.333399999999598e-05, 3.368100000000068e-05, 3.333300000000344e-05, 3.368000000000121e-05, 3.333400000000292e-05, 3.368100000000068e-05, 3.3346999999996074e-05, 3.369400000000078e-05, 3.334700000000301e-05, 3.373599999999949e-05, 3.3346999999996074e-05, 3.370800000000035e-05, 4.3388999999997846e-05, 3.370899999999982e-05, 3.330600000000378e-05, 3.368000000000121e-05, 3.334700000000301e-05, 3.3638999999995034e-05, 3.3360999999995644e-05, 3.368000000000121e-05, 3.336100000000258e-05, 3.369500000000025e-05, 3.336100000000258e-05, 3.370799999999341e-05, 3.3346999999996074e-05, 3.368100000000068e-05, 3.334700000000301e-05, 3.366600000000164e-05, 3.3346999999996074e-05, 3.366700000000111e-05, 3.333400000000292e-05, 3.366600000000164e-05, 3.329199999999727e-05, 3.3680999999993744e-05, 3.336200000000206e-05, 3.374999999999906e-05, 3.336100000000258e-05, 3.368100000000068e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.404" endtime="20201030 10:57:49.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.393" endtime="20201030 10:57:49.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.934" endtime="20201030 10:57:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.905" endtime="20201030 10:57:49.412"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.417" endtime="20201030 10:57:49.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.414" endtime="20201030 10:57:49.441"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.463" endtime="20201030 10:57:49.476"></status>
</kw>
<msg timestamp="20201030 10:57:49.477" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.459" endtime="20201030 10:57:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.483" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.479" endtime="20201030 10:57:49.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.486" endtime="20201030 10:57:49.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.452" endtime="20201030 10:57:49.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.446" endtime="20201030 10:57:49.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.509" endtime="20201030 10:57:49.864"></status>
</kw>
<msg timestamp="20201030 10:57:49.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037116375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037157569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.506" endtime="20201030 10:57:49.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037116375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037157569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.874" endtime="20201030 10:57:49.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.894" endtime="20201030 10:57:49.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.499" endtime="20201030 10:57:49.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.494" endtime="20201030 10:57:49.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:49.911" level="INFO">${PHILIP_RES} = [{'diff': 4.119400000000134e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 4.1195000000000814e-05}, {'diff': 4.120800000000091e-05}, {'diff': 4.1195000000000814e-05}, {'diff': 4.119400000000134e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:49.903" endtime="20201030 10:57:49.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.921" level="INFO">${RESULT} = {'diff': [4.119400000000134e-05, 4.1125000000002965e-05, 4.1195000000000814e-05, 4.120800000000091e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.1195000000000814e-05, 4.120800000000091e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:57:49.913" endtime="20201030 10:57:49.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.932" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:49.930" endtime="20201030 10:57:49.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.938" level="INFO">VALUE: [4.119400000000134e-05, 4.1125000000002965e-05, 4.1195000000000814e-05, 4.120800000000091e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.1195000000000814e-05, 4.120800000000091e-05, 4.120800000000091e-05, 4.127799999999876e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.1222999999999954e-05, 4.120800000000091e-05, 4.1209000000000384e-05, 4.120800000000091e-05, 4.1195000000000814e-05, 4.120800000000091e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.124999999999962e-05, 4.120799999999397e-05, 4.1194999999993875e-05, 4.117999999999483e-05, 4.1194999999993875e-05, 4.122200000000048e-05, 4.1181000000001244e-05, 4.122200000000048e-05, 4.1209000000000384e-05, 4.119400000000134e-05, 4.1209000000000384e-05, 4.119400000000134e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.1181000000001244e-05, 4.120800000000091e-05, 4.119400000000134e-05, 4.120800000000091e-05, 4.120800000000091e-05, 4.123600000000005e-05, 4.120800000000091e-05, 4.1195000000000814e-05, 4.119400000000134e-05, 4.1181000000001244e-05, 4.119400000000134e-05, 4.122200000000048e-05, 4.123600000000005e-05, 4.122200000000048e-05, 4.120800000000091e-05, 4.1195000000000814e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.935" endtime="20201030 10:57:49.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.923" endtime="20201030 10:57:49.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.442" endtime="20201030 10:57:49.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.412" endtime="20201030 10:57:49.943"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.949" endtime="20201030 10:57:49.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.945" endtime="20201030 10:57:49.973"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.006" endtime="20201030 10:57:50.019"></status>
</kw>
<msg timestamp="20201030 10:57:50.020" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.002" endtime="20201030 10:57:50.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.027" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.022" endtime="20201030 10:57:50.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.029" endtime="20201030 10:57:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.994" endtime="20201030 10:57:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.989" endtime="20201030 10:57:50.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.049" endtime="20201030 10:57:50.391"></status>
</kw>
<msg timestamp="20201030 10:57:50.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047323472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047373236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.047" endtime="20201030 10:57:50.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047323472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047373236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.401" endtime="20201030 10:57:50.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.421" endtime="20201030 10:57:50.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.043" endtime="20201030 10:57:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.038" endtime="20201030 10:57:50.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:50.438" level="INFO">${PHILIP_RES} = [{'diff': 4.976400000000075e-05}, {'diff': 5.0181000000003306e-05}, {'diff': 4.975000000000118e-05}, {'diff': 5.016600000000426e-05}, {'diff': 4.976400000000075e-05}, {'diff': 5.0181000000003306e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:50.430" endtime="20201030 10:57:50.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.448" level="INFO">${RESULT} = {'diff': [4.976400000000075e-05, 5.0181000000003306e-05, 4.975000000000118e-05, 5.016600000000426e-05, 4.976400000000075e-05, 5.0181000000003306e-05, 4.975000000000118e-05, 5.0195000000002876e-05, 4.9...</msg>
<status status="PASS" starttime="20201030 10:57:50.440" endtime="20201030 10:57:50.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.459" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:50.457" endtime="20201030 10:57:50.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.467" level="INFO">VALUE: [4.976400000000075e-05, 5.0181000000003306e-05, 4.975000000000118e-05, 5.016600000000426e-05, 4.976400000000075e-05, 5.0181000000003306e-05, 4.975000000000118e-05, 5.0195000000002876e-05, 4.973599999999467e-05, 5.0181000000003306e-05, 4.9721999999995103e-05, 5.018000000000383e-05, 4.973600000000161e-05, 5.018000000000383e-05, 4.975000000000118e-05, 5.025000000000168e-05, 4.973600000000161e-05, 5.018099999999637e-05, 4.972200000000204e-05, 5.012499999999809e-05, 4.975000000000118e-05, 5.0179999999996894e-05, 4.973600000000161e-05, 5.015299999999723e-05, 4.973600000000161e-05, 5.018099999999637e-05, 4.972200000000204e-05, 5.0179999999996894e-05, 4.973600000000161e-05, 5.0165999999997324e-05, 4.969499999999544e-05, 5.0167000000003736e-05, 4.975000000000118e-05, 5.0209000000002446e-05, 4.973599999999467e-05, 5.0167000000003736e-05, 4.974999999999424e-05, 5.01940000000034e-05, 4.975000000000118e-05, 5.016600000000426e-05, 4.975000000000118e-05, 5.020800000000297e-05, 4.973600000000161e-05, 5.01669999999968e-05, 4.975000000000118e-05, 5.0193999999996464e-05, 4.975000000000118e-05, 5.0221999999995603e-05, 4.972200000000204e-05, 5.019499999999594e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.462" endtime="20201030 10:57:50.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.450" endtime="20201030 10:57:50.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.982" endtime="20201030 10:57:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.944" endtime="20201030 10:57:50.471"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.478" endtime="20201030 10:57:50.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.473" endtime="20201030 10:57:50.502"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.525" endtime="20201030 10:57:50.538"></status>
</kw>
<msg timestamp="20201030 10:57:50.540" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.521" endtime="20201030 10:57:50.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.546" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.542" endtime="20201030 10:57:50.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.549" endtime="20201030 10:57:50.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.513" endtime="20201030 10:57:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.508" endtime="20201030 10:57:50.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.574" endtime="20201030 10:57:50.947"></status>
</kw>
<msg timestamp="20201030 10:57:50.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037174222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.570" endtime="20201030 10:57:50.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037174222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.957" endtime="20201030 10:57:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.977" endtime="20201030 10:57:50.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.563" endtime="20201030 10:57:50.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.558" endtime="20201030 10:57:50.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:50.994" level="INFO">${PHILIP_RES} = [{'diff': 5.8971999999997415e-05}, {'diff': 5.8985999999996985e-05}, {'diff': 5.8986000000003924e-05}, {'diff': 5.89870000000034e-05}, {'diff': 5.8971999999997415e-05}, {'diff': 5.9000000000003494e-05...</msg>
<status status="PASS" starttime="20201030 10:57:50.986" endtime="20201030 10:57:50.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.006" level="INFO">${RESULT} = {'diff': [5.8971999999997415e-05, 5.8985999999996985e-05, 5.8986000000003924e-05, 5.89870000000034e-05, 5.8971999999997415e-05, 5.9000000000003494e-05, 5.8986000000003924e-05, 5.8915999999999136e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:50.996" endtime="20201030 10:57:51.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.017" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:51.015" endtime="20201030 10:57:51.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.023" level="INFO">VALUE: [5.8971999999997415e-05, 5.8985999999996985e-05, 5.8986000000003924e-05, 5.89870000000034e-05, 5.8971999999997415e-05, 5.9000000000003494e-05, 5.8986000000003924e-05, 5.8915999999999136e-05, 5.9000000000003494e-05, 5.8986000000003924e-05, 5.897300000000383e-05, 5.8972000000004354e-05, 5.8972000000004354e-05, 5.9028000000002634e-05, 5.8916000000006075e-05, 5.8944000000005214e-05, 5.9000000000003494e-05, 5.9000000000003494e-05, 5.8944000000005214e-05, 5.8972000000004354e-05, 5.8972000000004354e-05, 5.897300000000383e-05, 5.8972000000004354e-05, 5.8972000000004354e-05, 5.897300000000383e-05, 5.9000000000003494e-05, 5.890299999999904e-05, 5.8986000000003924e-05, 5.8972000000004354e-05, 5.8972000000004354e-05, 5.8943999999998276e-05, 5.8986000000003924e-05, 5.8972000000004354e-05, 5.8972000000004354e-05, 5.8986000000003924e-05, 5.9014000000003064e-05, 5.8957999999997845e-05, 5.8971999999997415e-05, 5.89870000000034e-05, 5.8901999999999566e-05, 5.9014000000003064e-05, 5.8957999999997845e-05, 5.897300000000383e-05, 5.8985999999996985e-05, 5.8971999999997415e-05, 5.8985999999996985e-05, 5.8957999999997845e-05, 5.8999999999996555e-05, 5.8971999999997415e-05, 5.897299999999689e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.020" endtime="20201030 10:57:51.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.008" endtime="20201030 10:57:51.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.504" endtime="20201030 10:57:51.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.472" endtime="20201030 10:57:51.028"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.034" endtime="20201030 10:57:51.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.031" endtime="20201030 10:57:51.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.081" endtime="20201030 10:57:51.096"></status>
</kw>
<msg timestamp="20201030 10:57:51.097" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.078" endtime="20201030 10:57:51.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.104" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.100" endtime="20201030 10:57:51.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.106" endtime="20201030 10:57:51.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.070" endtime="20201030 10:57:51.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.064" endtime="20201030 10:57:51.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.131" endtime="20201030 10:57:51.506"></status>
</kw>
<msg timestamp="20201030 10:57:51.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037396972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037465889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.128" endtime="20201030 10:57:51.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037396972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037465889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.516" endtime="20201030 10:57:51.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.536" endtime="20201030 10:57:51.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.120" endtime="20201030 10:57:51.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.115" endtime="20201030 10:57:51.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:51.553" level="INFO">${PHILIP_RES} = [{'diff': 6.891700000000167e-05}, {'diff': 6.951399999999969e-05}, {'diff': 6.893000000000177e-05}, {'diff': 6.945800000000141e-05}, {'diff': 6.887500000000296e-05}, {'diff': 6.947200000000098e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:51.545" endtime="20201030 10:57:51.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.565" level="INFO">${RESULT} = {'diff': [6.891700000000167e-05, 6.951399999999969e-05, 6.893000000000177e-05, 6.945800000000141e-05, 6.887500000000296e-05, 6.947200000000098e-05, 6.890199999999569e-05, 6.941699999999523e-05, 6.8930...</msg>
<status status="PASS" starttime="20201030 10:57:51.555" endtime="20201030 10:57:51.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.576" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:51.573" endtime="20201030 10:57:51.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.582" level="INFO">VALUE: [6.891700000000167e-05, 6.951399999999969e-05, 6.893000000000177e-05, 6.945800000000141e-05, 6.887500000000296e-05, 6.947200000000098e-05, 6.890199999999569e-05, 6.941699999999523e-05, 6.89309999999943e-05, 6.947200000000098e-05, 6.89030000000021e-05, 6.947200000000098e-05, 6.89030000000021e-05, 6.947200000000098e-05, 6.893000000000177e-05, 6.945900000000088e-05, 6.893100000000124e-05, 6.947200000000098e-05, 6.891699999999473e-05, 6.947299999999351e-05, 6.887499999999602e-05, 6.951399999999969e-05, 6.891700000000167e-05, 6.950000000000012e-05, 6.89030000000021e-05, 6.947200000000098e-05, 6.888900000000253e-05, 6.955500000000586e-05, 6.892999999999483e-05, 6.94439999999949e-05, 6.891699999999473e-05, 6.945900000000088e-05, 6.89160000000022e-05, 6.947200000000098e-05, 6.89030000000021e-05, 6.947200000000098e-05, 6.89160000000022e-05, 6.944400000000184e-05, 6.887499999999602e-05, 6.947200000000098e-05, 6.888799999999612e-05, 6.947199999999404e-05, 6.888899999999559e-05, 6.944400000000184e-05, 6.890200000000263e-05, 6.944500000000131e-05, 6.893100000000124e-05, 6.948600000000055e-05, 6.89030000000021e-05, 6.941599999999576e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.578" endtime="20201030 10:57:51.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.567" endtime="20201030 10:57:51.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.060" endtime="20201030 10:57:51.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.029" endtime="20201030 10:57:51.587"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.593" endtime="20201030 10:57:51.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.589" endtime="20201030 10:57:51.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.642" endtime="20201030 10:57:51.657"></status>
</kw>
<msg timestamp="20201030 10:57:51.658" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.639" endtime="20201030 10:57:51.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.664" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.660" endtime="20201030 10:57:51.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.666" endtime="20201030 10:57:51.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.630" endtime="20201030 10:57:51.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.624" endtime="20201030 10:57:51.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.690" endtime="20201030 10:57:52.052"></status>
</kw>
<msg timestamp="20201030 10:57:52.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039152764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.686" endtime="20201030 10:57:52.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039152764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.063" endtime="20201030 10:57:52.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.083" endtime="20201030 10:57:52.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.679" endtime="20201030 10:57:52.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.674" endtime="20201030 10:57:52.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:52.100" level="INFO">${PHILIP_RES} = [{'diff': 7.952800000000232e-05}, {'diff': 7.95269999999959e-05}, {'diff': 7.954200000000189e-05}, {'diff': 7.954200000000189e-05}, {'diff': 7.954099999999548e-05}, {'diff': 7.951399999999581e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:52.092" endtime="20201030 10:57:52.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.110" level="INFO">${RESULT} = {'diff': [7.952800000000232e-05, 7.95269999999959e-05, 7.954200000000189e-05, 7.954200000000189e-05, 7.954099999999548e-05, 7.951399999999581e-05, 7.952800000000232e-05, 7.954200000000189e-05, 7.95409...</msg>
<status status="PASS" starttime="20201030 10:57:52.102" endtime="20201030 10:57:52.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.121" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:52.119" endtime="20201030 10:57:52.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.127" level="INFO">VALUE: [7.952800000000232e-05, 7.95269999999959e-05, 7.954200000000189e-05, 7.954200000000189e-05, 7.954099999999548e-05, 7.951399999999581e-05, 7.952800000000232e-05, 7.954200000000189e-05, 7.954099999999548e-05, 7.961100000000026e-05, 7.954200000000189e-05, 9.047200000000116e-05, 7.95269999999959e-05, 7.952800000000232e-05, 7.954200000000189e-05, 7.954200000000189e-05, 7.95269999999959e-05, 7.951400000000275e-05, 7.954200000000189e-05, 7.954099999999548e-05, 7.952800000000232e-05, 7.951400000000275e-05, 7.954099999999548e-05, 7.951399999999581e-05, 7.945800000000447e-05, 7.955500000000199e-05, 7.954199999999495e-05, 7.951400000000275e-05, 7.947300000000351e-05, 7.954099999999548e-05, 7.952800000000232e-05, 7.952800000000232e-05, 7.95269999999959e-05, 7.955600000000146e-05, 7.954200000000189e-05, 7.951400000000275e-05, 7.952799999999538e-05, 7.952800000000232e-05, 7.954200000000189e-05, 7.954099999999548e-05, 7.954200000000189e-05, 7.955600000000146e-05, 7.95269999999959e-05, 7.954199999999495e-05, 7.957000000000103e-05, 7.954100000000242e-05, 7.951399999999581e-05, 7.951400000000275e-05, 7.954100000000242e-05, 7.954099999999548e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.124" endtime="20201030 10:57:52.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.112" endtime="20201030 10:57:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.620" endtime="20201030 10:57:52.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.588" endtime="20201030 10:57:52.132"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.139" endtime="20201030 10:57:52.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.135" endtime="20201030 10:57:52.163"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.185" endtime="20201030 10:57:52.202"></status>
</kw>
<msg timestamp="20201030 10:57:52.203" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.182" endtime="20201030 10:57:52.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.209" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.205" endtime="20201030 10:57:52.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.212" endtime="20201030 10:57:52.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.174" endtime="20201030 10:57:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.168" endtime="20201030 10:57:52.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.239" endtime="20201030 10:57:52.586"></status>
</kw>
<msg timestamp="20201030 10:57:52.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037224528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037315389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.235" endtime="20201030 10:57:52.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037224528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037315389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.596" endtime="20201030 10:57:52.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.615" endtime="20201030 10:57:52.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.227" endtime="20201030 10:57:52.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.222" endtime="20201030 10:57:52.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:52.631" level="INFO">${PHILIP_RES} = [{'diff': 9.086099999999764e-05}, {'diff': 9.154200000000001e-05}, {'diff': 9.087499999999721e-05}, {'diff': 9.144400000000302e-05}, {'diff': 9.083400000000491e-05}, {'diff': 9.151399999999393e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:52.623" endtime="20201030 10:57:52.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.641" level="INFO">${RESULT} = {'diff': [9.086099999999764e-05, 9.154200000000001e-05, 9.087499999999721e-05, 9.144400000000302e-05, 9.083400000000491e-05, 9.151399999999393e-05, 9.080499999999936e-05, 9.155599999999958e-05, 9.0860...</msg>
<status status="PASS" starttime="20201030 10:57:52.633" endtime="20201030 10:57:52.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.651" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:52.649" endtime="20201030 10:57:52.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.657" level="INFO">VALUE: [9.086099999999764e-05, 9.154200000000001e-05, 9.087499999999721e-05, 9.144400000000302e-05, 9.083400000000491e-05, 9.151399999999393e-05, 9.080499999999936e-05, 9.155599999999958e-05, 9.086099999999764e-05, 9.152700000000097e-05, 9.08329999999985e-05, 9.147200000000216e-05, 9.086100000000458e-05, 9.152800000000044e-05, 9.084799999999754e-05, 9.152800000000044e-05, 9.079199999999926e-05, 9.151400000000087e-05, 9.086100000000458e-05, 9.152700000000097e-05, 9.087500000000415e-05, 9.152800000000044e-05, 9.084699999999807e-05, 9.152800000000044e-05, 9.086100000000458e-05, 9.15000000000013e-05, 9.086100000000458e-05, 9.152800000000044e-05, 9.084699999999807e-05, 9.155599999999958e-05, 9.087499999999721e-05, 9.158299999999925e-05, 9.086100000000458e-05, 9.152800000000044e-05, 9.079099999999979e-05, 9.151400000000087e-05, 9.087499999999721e-05, 9.152800000000044e-05, 9.088899999999678e-05, 9.155599999999958e-05, 9.084700000000501e-05, 9.15000000000013e-05, 9.086099999999764e-05, 9.151400000000087e-05, 9.090299999999635e-05, 9.152800000000044e-05, 9.087500000000415e-05, 9.151400000000087e-05, 9.093000000000295e-05, 9.152800000000044e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.654" endtime="20201030 10:57:52.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.642" endtime="20201030 10:57:52.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.164" endtime="20201030 10:57:52.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.133" endtime="20201030 10:57:52.662"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.668" endtime="20201030 10:57:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.664" endtime="20201030 10:57:52.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.714" endtime="20201030 10:57:52.730"></status>
</kw>
<msg timestamp="20201030 10:57:52.731" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.711" endtime="20201030 10:57:52.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.738" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.733" endtime="20201030 10:57:52.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.740" endtime="20201030 10:57:52.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.703" endtime="20201030 10:57:52.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.698" endtime="20201030 10:57:52.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.764" endtime="20201030 10:57:53.112"></status>
</kw>
<msg timestamp="20201030 10:57:53.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036918792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037021681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.760" endtime="20201030 10:57:53.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036918792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037021681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.123" endtime="20201030 10:57:53.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.143" endtime="20201030 10:57:53.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.753" endtime="20201030 10:57:53.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.748" endtime="20201030 10:57:53.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:53.159" level="INFO">${PHILIP_RES} = [{'diff': 0.00010288900000000184}, {'diff': 0.00010287500000000227}, {'diff': 0.00010286200000000217}, {'diff': 0.00010288900000000184}, {'diff': 0.00010287499999999533}, {'diff': 0.000102874999999995...</msg>
<status status="PASS" starttime="20201030 10:57:53.152" endtime="20201030 10:57:53.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.169" level="INFO">${RESULT} = {'diff': [0.00010288900000000184, 0.00010287500000000227, 0.00010286200000000217, 0.00010288900000000184, 0.00010287499999999533, 0.00010287499999999533, 0.00010286099999999576, 0.00010288900000000184...</msg>
<status status="PASS" starttime="20201030 10:57:53.161" endtime="20201030 10:57:53.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.179" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:53.177" endtime="20201030 10:57:53.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.186" level="INFO">VALUE: [0.00010288900000000184, 0.00010287500000000227, 0.00010286200000000217, 0.00010288900000000184, 0.00010287499999999533, 0.00010287499999999533, 0.00010286099999999576, 0.00010288900000000184, 0.00010284700000000313, 0.00010287500000000227, 0.00010283300000000356, 0.0001028610000000027, 0.00010287499999999533, 0.00010287499999999533, 0.0001028889999999949, 0.00010286099999999576, 0.00010288900000000184, 0.0001028610000000027, 0.00010288900000000184, 0.0001028610000000027, 0.00010287500000000227, 0.00010287499999999533, 0.00010287499999999533, 0.00010286099999999576, 0.00010283400000000303, 0.00010288900000000184, 0.00010287500000000227, 0.00010287500000000227, 0.00010288900000000184, 0.00010284699999999619, 0.00010287499999999533, 0.0001028889999999949, 0.00010287499999999533, 0.00010287500000000227, 0.00010288900000000184, 0.00010281900000000399, 0.0001028610000000027, 0.00010291700000000098, 0.00010284699999999619, 0.00010287499999999533, 0.00010287499999999533, 0.00010279099999999791, 0.00010288900000000184, 0.00010290300000000141, 0.00010282000000000346, 0.00010287500000000227, 0.00010287500000000227, 0.00010288900000000184, 0.0001028889999999949, 0.00010286099999999576]</msg>
<status status="PASS" starttime="20201030 10:57:53.181" endtime="20201030 10:57:53.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.170" endtime="20201030 10:57:53.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.692" endtime="20201030 10:57:53.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.663" endtime="20201030 10:57:53.191"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.197" endtime="20201030 10:57:53.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.193" endtime="20201030 10:57:53.221"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.243" endtime="20201030 10:57:53.260"></status>
</kw>
<msg timestamp="20201030 10:57:53.261" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.239" endtime="20201030 10:57:53.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.268" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.264" endtime="20201030 10:57:53.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.270" endtime="20201030 10:57:53.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.231" endtime="20201030 10:57:53.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.226" endtime="20201030 10:57:53.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.294" endtime="20201030 10:57:53.658"></status>
</kw>
<msg timestamp="20201030 10:57:53.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035819528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.291" endtime="20201030 10:57:53.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035819528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.667" endtime="20201030 10:57:53.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.686" endtime="20201030 10:57:53.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.283" endtime="20201030 10:57:53.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.279" endtime="20201030 10:57:53.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:53.702" level="INFO">${PHILIP_RES} = [{'diff': 0.00011563899999999377}, {'diff': 0.00011638900000000146}, {'diff': 0.00011563800000000124}, {'diff': 0.00011638900000000146}, {'diff': 0.00011558400000000191}, {'diff': 0.000116304999999997...</msg>
<status status="PASS" starttime="20201030 10:57:53.694" endtime="20201030 10:57:53.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.716" level="INFO">${RESULT} = {'diff': [0.00011563899999999377, 0.00011638900000000146, 0.00011563800000000124, 0.00011638900000000146, 0.00011558400000000191, 0.0001163049999999971, 0.00011556899999999592, 0.0001163750000000019, ...</msg>
<status status="PASS" starttime="20201030 10:57:53.704" endtime="20201030 10:57:53.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.727" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:53.725" endtime="20201030 10:57:53.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.732" level="INFO">VALUE: [0.00011563899999999377, 0.00011638900000000146, 0.00011563800000000124, 0.00011638900000000146, 0.00011558400000000191, 0.0001163049999999971, 0.00011556899999999592, 0.0001163750000000019, 0.000115597000000002, 0.00011634700000000275, 0.000115597000000002, 0.00011636099999999538, 0.00011558399999999497, 0.00011636100000000232, 0.00011556900000000286, 0.00011640300000000103, 0.00011558300000000243, 0.00011637499999999495, 0.00011552799999999669, 0.0001163750000000019, 0.00011559800000000148, 0.0001163620000000018, 0.00011557000000000234, 0.00011636099999999538, 0.000115597000000002, 0.00011634700000000275, 0.00011565200000000081, 0.00011634700000000275, 0.00011558400000000191, 0.00011638899999999452, 0.00011558399999999497, 0.00011634700000000275, 0.00011556900000000286, 0.0001163750000000019, 0.000115597000000002, 0.00011634799999999529, 0.0001155699999999954, 0.00011634800000000223, 0.00011558400000000191, 0.00011636100000000232, 0.000115597000000002, 0.00011634699999999581, 0.00011556899999999592, 0.00011636100000000232, 0.00011555600000000277, 0.00011636100000000232, 0.00012470900000000062, 0.00011555600000000277, 0.00011634700000000275, 0.0001155829999999955]</msg>
<status status="PASS" starttime="20201030 10:57:53.729" endtime="20201030 10:57:53.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.718" endtime="20201030 10:57:53.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.222" endtime="20201030 10:57:53.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.192" endtime="20201030 10:57:53.737"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.743" endtime="20201030 10:57:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.739" endtime="20201030 10:57:53.767"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.788" endtime="20201030 10:57:53.805"></status>
</kw>
<msg timestamp="20201030 10:57:53.806" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.784" endtime="20201030 10:57:53.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.813" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.809" endtime="20201030 10:57:53.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.815" endtime="20201030 10:57:53.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.777" endtime="20201030 10:57:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.772" endtime="20201030 10:57:53.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.839" endtime="20201030 10:57:54.197"></status>
</kw>
<msg timestamp="20201030 10:57:54.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035177833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035306806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.836" endtime="20201030 10:57:54.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035177833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035306806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.206" endtime="20201030 10:57:54.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.224" endtime="20201030 10:57:54.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.829" endtime="20201030 10:57:54.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.824" endtime="20201030 10:57:54.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:54.240" level="INFO">${PHILIP_RES} = [{'diff': 0.00012897300000000445}, {'diff': 0.00012895799999999846}, {'diff': 0.0001289859999999976}, {'diff': 0.0001289859999999976}, {'diff': 0.0001289859999999976}, {'diff': 0.00012898600000000454}...</msg>
<status status="PASS" starttime="20201030 10:57:54.233" endtime="20201030 10:57:54.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.251" level="INFO">${RESULT} = {'diff': [0.00012897300000000445, 0.00012895799999999846, 0.0001289859999999976, 0.0001289859999999976, 0.0001289859999999976, 0.00012898600000000454, 0.00012897199999999803, 0.00012899999999999717, 0...</msg>
<status status="PASS" starttime="20201030 10:57:54.242" endtime="20201030 10:57:54.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.262" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:54.260" endtime="20201030 10:57:54.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.267" level="INFO">VALUE: [0.00012897300000000445, 0.00012895799999999846, 0.0001289859999999976, 0.0001289859999999976, 0.0001289859999999976, 0.00012898600000000454, 0.00012897199999999803, 0.00012899999999999717, 0.00012892999999999932, 0.00012898600000000454, 0.00012897199999999803, 0.0001290279999999963, 0.00012897199999999803, 0.0001289580000000054, 0.00012892999999999932, 0.0001289859999999976, 0.0001289859999999976, 0.0001289859999999976, 0.00012898600000000454, 0.0001289859999999976, 0.0001289859999999976, 0.00012899999999999717, 0.00012898600000000454, 0.0001289859999999976, 0.0001290279999999963, 0.00012897199999999803, 0.00012898600000000454, 0.00012898600000000454, 0.0001289859999999976, 0.0001289859999999976, 0.00012898600000000454, 0.00012897200000000497, 0.0001289859999999976, 0.00012897199999999803, 0.0001289859999999976, 0.00012898600000000454, 0.0001289859999999976, 0.00012897199999999803, 0.00012897199999999803, 0.00012898600000000454, 0.0001290000000000041, 0.00012902699999999684, 0.0001289859999999976, 0.00012898600000000454, 0.00012898600000000454, 0.00012895899999999794, 0.00012890299999999966, 0.0001289859999999976, 0.00012895900000000488, 0.0001289859999999976]</msg>
<status status="PASS" starttime="20201030 10:57:54.264" endtime="20201030 10:57:54.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.253" endtime="20201030 10:57:54.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.768" endtime="20201030 10:57:54.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.738" endtime="20201030 10:57:54.272"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.278" endtime="20201030 10:57:54.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.274" endtime="20201030 10:57:54.302"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.323" endtime="20201030 10:57:54.341"></status>
</kw>
<msg timestamp="20201030 10:57:54.342" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.320" endtime="20201030 10:57:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.348" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.344" endtime="20201030 10:57:54.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.351" endtime="20201030 10:57:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.312" endtime="20201030 10:57:54.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.307" endtime="20201030 10:57:54.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.374" endtime="20201030 10:57:54.731"></status>
</kw>
<msg timestamp="20201030 10:57:54.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035588333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.371" endtime="20201030 10:57:54.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035588333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.741" endtime="20201030 10:57:54.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.759" endtime="20201030 10:57:54.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.364" endtime="20201030 10:57:54.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.359" endtime="20201030 10:57:54.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:54.775" level="INFO">${PHILIP_RES} = [{'diff': 0.00014308400000000165}, {'diff': 0.00014398600000000567}, {'diff': 0.00014304100000000347}, {'diff': 0.00014395899999999906}, {'diff': 0.00014308300000000218}, {'diff': 0.000144000000000005...</msg>
<status status="PASS" starttime="20201030 10:57:54.768" endtime="20201030 10:57:54.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.784" level="INFO">${RESULT} = {'diff': [0.00014308400000000165, 0.00014398600000000567, 0.00014304100000000347, 0.00014395899999999906, 0.00014308300000000218, 0.00014400000000000523, 0.00014309800000000122, 0.00014398599999999873...</msg>
<status status="PASS" starttime="20201030 10:57:54.777" endtime="20201030 10:57:54.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.795" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:54.793" endtime="20201030 10:57:54.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.801" level="INFO">VALUE: [0.00014308400000000165, 0.00014398600000000567, 0.00014304100000000347, 0.00014395899999999906, 0.00014308300000000218, 0.00014400000000000523, 0.00014309800000000122, 0.00014398599999999873, 0.00014311100000000132, 0.00014395899999999906, 0.0001430690000000026, 0.00014393000000000045, 0.00014305600000000251, 0.00014391700000000035, 0.00014308400000000165, 0.00014398599999999873, 0.0001430549999999961, 0.00014397299999999863, 0.00014302799999999644, 0.00014388800000000174, 0.00014306999999999515, 0.00014395799999999959, 0.0001430969999999948, 0.00014398599999999873, 0.0001430969999999948, 0.00014397299999999863, 0.00014306899999999567, 0.00014394400000000002, 0.00014308399999999472, 0.00014395799999999959, 0.00014308299999999524, 0.00014397299999999863, 0.00014302799999999644, 0.00014398599999999873, 0.00014308400000000165, 0.00014398599999999873, 0.00014308400000000165, 0.00014397199999999916, 0.0001430690000000026, 0.00014397299999999863, 0.00014309700000000175, 0.00014397199999999916, 0.00015732000000000246, 0.0001430690000000026, 0.00014400000000000523, 0.00014302800000000337, 0.00014398599999999873, 0.00014307000000000208, 0.00014402699999999796, 0.00014309700000000175]</msg>
<status status="PASS" starttime="20201030 10:57:54.798" endtime="20201030 10:57:54.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.786" endtime="20201030 10:57:54.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.303" endtime="20201030 10:57:54.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.273" endtime="20201030 10:57:54.806"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.811" endtime="20201030 10:57:54.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.808" endtime="20201030 10:57:54.835"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.856" endtime="20201030 10:57:54.875"></status>
</kw>
<msg timestamp="20201030 10:57:54.877" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.853" endtime="20201030 10:57:54.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.883" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.879" endtime="20201030 10:57:54.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.885" endtime="20201030 10:57:54.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.846" endtime="20201030 10:57:54.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.840" endtime="20201030 10:57:54.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.909" endtime="20201030 10:57:55.254"></status>
</kw>
<msg timestamp="20201030 10:57:55.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035585111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.906" endtime="20201030 10:57:55.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035585111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.263" endtime="20201030 10:57:55.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.282" endtime="20201030 10:57:55.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.898" endtime="20201030 10:57:55.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.893" endtime="20201030 10:57:55.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:55.298" level="INFO">${PHILIP_RES} = [{'diff': 0.00015780599999999645}, {'diff': 0.00015787500000000176}, {'diff': 0.00015787500000000176}, {'diff': 0.00015787499999999483}, {'diff': 0.00015786099999999526}, {'diff': 0.000157888999999994...</msg>
<status status="PASS" starttime="20201030 10:57:55.290" endtime="20201030 10:57:55.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.307" level="INFO">${RESULT} = {'diff': [0.00015780599999999645, 0.00015787500000000176, 0.00015787500000000176, 0.00015787499999999483, 0.00015786099999999526, 0.0001578889999999944, 0.00015784699999999569, 0.00015788900000000133,...</msg>
<status status="PASS" starttime="20201030 10:57:55.300" endtime="20201030 10:57:55.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.318" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:55.316" endtime="20201030 10:57:55.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.323" level="INFO">VALUE: [0.00015780599999999645, 0.00015787500000000176, 0.00015787500000000176, 0.00015787499999999483, 0.00015786099999999526, 0.0001578889999999944, 0.00015784699999999569, 0.00015788900000000133, 0.00015779200000000382, 0.00015787500000000176, 0.00015787500000000176, 0.00015788900000000133, 0.00015791700000000047, 0.0001579030000000009, 0.0001578610000000022, 0.0001578610000000022, 0.0001578610000000022, 0.00015788900000000133, 0.00015787500000000176, 0.00015787500000000176, 0.0001578889999999944, 0.00015787499999999483, 0.00015787499999999483, 0.00015787499999999483, 0.00015787500000000176, 0.0001578610000000022, 0.0001579030000000009, 0.00015790200000000143, 0.00015787500000000176, 0.00015787500000000176, 0.00015781900000000348, 0.0001578610000000022, 0.00015788900000000133, 0.00015787500000000176, 0.00015787499999999483, 0.00015791599999999406, 0.0001578889999999944, 0.0001578889999999944, 0.00015787499999999483, 0.00015788900000000133, 0.0001579030000000009, 0.0001578480000000021, 0.0001579030000000009, 0.00015787500000000176, 0.0001578610000000022, 0.00015786200000000167, 0.00015788900000000133, 0.00015788900000000133, 0.00015780499999999698, 0.0001579030000000009]</msg>
<status status="PASS" starttime="20201030 10:57:55.320" endtime="20201030 10:57:55.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.309" endtime="20201030 10:57:55.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.836" endtime="20201030 10:57:55.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.807" endtime="20201030 10:57:55.328"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.334" endtime="20201030 10:57:55.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.331" endtime="20201030 10:57:55.358"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.381" endtime="20201030 10:57:55.400"></status>
</kw>
<msg timestamp="20201030 10:57:55.401" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.377" endtime="20201030 10:57:55.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.408" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.403" endtime="20201030 10:57:55.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.410" endtime="20201030 10:57:55.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.370" endtime="20201030 10:57:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.364" endtime="20201030 10:57:55.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.434" endtime="20201030 10:57:55.775"></status>
</kw>
<msg timestamp="20201030 10:57:55.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036874931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.431" endtime="20201030 10:57:55.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036874931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.785" endtime="20201030 10:57:55.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.803" endtime="20201030 10:57:55.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.423" endtime="20201030 10:57:55.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.418" endtime="20201030 10:57:55.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:55.819" level="INFO">${PHILIP_RES} = [{'diff': 0.00017336199999999635}, {'diff': 0.00017437499999999745}, {'diff': 0.00017341600000000262}, {'diff': 0.0001743469999999983}, {'diff': 0.00017336100000000382}, {'diff': 0.0001743479999999977...</msg>
<status status="PASS" starttime="20201030 10:57:55.812" endtime="20201030 10:57:55.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.829" level="INFO">${RESULT} = {'diff': [0.00017336199999999635, 0.00017437499999999745, 0.00017341600000000262, 0.0001743469999999983, 0.00017336100000000382, 0.00017434799999999778, 0.00017334700000000425, 0.00017438899999999702,...</msg>
<status status="PASS" starttime="20201030 10:57:55.821" endtime="20201030 10:57:55.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.839" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:55.837" endtime="20201030 10:57:55.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.846" level="INFO">VALUE: [0.00017336199999999635, 0.00017437499999999745, 0.00017341600000000262, 0.0001743469999999983, 0.00017336100000000382, 0.00017434799999999778, 0.00017334700000000425, 0.00017438899999999702, 0.00017336099999999688, 0.0001743750000000044, 0.00017336099999999688, 0.00017444500000000224, 0.00017336099999999688, 0.00017437499999999745, 0.00017333299999999774, 0.00017437499999999745, 0.00017336100000000382, 0.00017436099999999788, 0.00017336100000000382, 0.00017436099999999788, 0.00017336099999999688, 0.0001743750000000044, 0.00017337499999999645, 0.00017433400000000515, 0.00017336099999999688, 0.0001743750000000044, 0.00017336099999999688, 0.0001743469999999983, 0.0001733750000000034, 0.00017436099999999788, 0.00017332000000000458, 0.0001743469999999983, 0.00017336100000000382, 0.0001743339999999982, 0.00017336099999999688, 0.00017438900000000396, 0.00017333299999999774, 0.00017436100000000482, 0.00017336099999999688, 0.00017437499999999745, 0.0001733750000000034, 0.00017436099999999788, 0.00017336100000000382, 0.00017437499999999745, 0.00017336100000000382, 0.00017436099999999788, 0.00017334799999999678, 0.0001743469999999983, 0.00017337499999999645, 0.0001743750000000044]</msg>
<status status="PASS" starttime="20201030 10:57:55.842" endtime="20201030 10:57:55.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.830" endtime="20201030 10:57:55.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.359" endtime="20201030 10:57:55.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.329" endtime="20201030 10:57:55.851"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.857" endtime="20201030 10:57:55.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.854" endtime="20201030 10:57:55.881"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.902" endtime="20201030 10:57:55.923"></status>
</kw>
<msg timestamp="20201030 10:57:55.924" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.899" endtime="20201030 10:57:55.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.930" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.926" endtime="20201030 10:57:55.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.932" endtime="20201030 10:57:55.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.891" endtime="20201030 10:57:55.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.886" endtime="20201030 10:57:55.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.956" endtime="20201030 10:57:56.297"></status>
</kw>
<msg timestamp="20201030 10:57:56.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035099569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035289125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.953" endtime="20201030 10:57:56.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035099569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035289125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.306" endtime="20201030 10:57:56.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.325" endtime="20201030 10:57:56.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.945" endtime="20201030 10:57:56.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.941" endtime="20201030 10:57:56.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:56.341" level="INFO">${PHILIP_RES} = [{'diff': 0.00018955600000000045}, {'diff': 0.0001895410000000014}, {'diff': 0.00018956900000000054}, {'diff': 0.00018955500000000097}, {'diff': 0.0001895280000000013}, {'diff': 0.00018955600000000045...</msg>
<status status="PASS" starttime="20201030 10:57:56.333" endtime="20201030 10:57:56.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.352" level="INFO">${RESULT} = {'diff': [0.00018955600000000045, 0.0001895410000000014, 0.00018956900000000054, 0.00018955500000000097, 0.0001895280000000013, 0.00018955600000000045, 0.00019904100000000396, 0.00019058400000000059, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.343" endtime="20201030 10:57:56.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.362" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:56.360" endtime="20201030 10:57:56.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.368" level="INFO">VALUE: [0.00018955600000000045, 0.0001895410000000014, 0.00018956900000000054, 0.00018955500000000097, 0.0001895280000000013, 0.00018955600000000045, 0.00019904100000000396, 0.00019058400000000059, 0.00019061100000000025, 0.00019061100000000025, 0.00019061100000000025, 0.00019059700000000068, 0.0001905830000000011, 0.00019059700000000068, 0.0001906389999999994, 0.00019055600000000145, 0.00019058400000000059, 0.00019058400000000059, 0.00019061199999999973, 0.00019062499999999982, 0.0001906809999999981, 0.00019061100000000025, 0.00019061100000000025, 0.00019059700000000068, 0.00019059700000000068, 0.00019059700000000068, 0.0001905830000000011, 0.0001906519999999995, 0.00019059700000000068, 0.00019055600000000145, 0.00019059700000000068, 0.00019061199999999973, 0.00019061199999999973, 0.00019058400000000059, 0.00019062499999999982, 0.00019059700000000068, 0.00019059700000000068, 0.00019061100000000025, 0.00019059700000000068, 0.00019061100000000025, 0.00019062499999999982, 0.00019056900000000154, 0.00019061100000000025, 0.00019061100000000025, 0.00019061199999999973, 0.00019061100000000025, 0.00019062499999999982, 0.00019059700000000068, 0.0001905410000000024, 0.00019062499999999982]</msg>
<status status="PASS" starttime="20201030 10:57:56.365" endtime="20201030 10:57:56.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.353" endtime="20201030 10:57:56.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.882" endtime="20201030 10:57:56.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.852" endtime="20201030 10:57:56.373"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.379" endtime="20201030 10:57:56.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.375" endtime="20201030 10:57:56.402"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.423" endtime="20201030 10:57:56.445"></status>
</kw>
<msg timestamp="20201030 10:57:56.446" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.420" endtime="20201030 10:57:56.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.453" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.449" endtime="20201030 10:57:56.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.455" endtime="20201030 10:57:56.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.413" endtime="20201030 10:57:56.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.407" endtime="20201030 10:57:56.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.480" endtime="20201030 10:57:56.788"></status>
</kw>
<msg timestamp="20201030 10:57:56.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035642625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.476" endtime="20201030 10:57:56.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035436264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035642625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.792" endtime="20201030 10:57:56.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.800" endtime="20201030 10:57:56.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.469" endtime="20201030 10:57:56.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.463" endtime="20201030 10:57:56.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:56.808" level="INFO">${PHILIP_RES} = [{'diff': 0.0002063609999999952}, {'diff': 0.00020754199999999806}, {'diff': 0.00020648600000000572}, {'diff': 0.00020754199999999806}, {'diff': 0.0002064719999999992}, {'diff': 0.00020752699999999902...</msg>
<status status="PASS" starttime="20201030 10:57:56.804" endtime="20201030 10:57:56.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.813" level="INFO">${RESULT} = {'diff': [0.0002063609999999952, 0.00020754199999999806, 0.00020648600000000572, 0.00020754199999999806, 0.0002064719999999992, 0.00020752699999999902, 0.00020638900000000127, 0.00020754199999999806, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.809" endtime="20201030 10:57:56.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.818" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:56.817" endtime="20201030 10:57:56.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.821" level="INFO">VALUE: [0.0002063609999999952, 0.00020754199999999806, 0.00020648600000000572, 0.00020754199999999806, 0.0002064719999999992, 0.00020752699999999902, 0.00020638900000000127, 0.00020754199999999806, 0.00020644400000000007, 0.0002075279999999985, 0.0002064300000000005, 0.00020754199999999806, 0.0002063750000000017, 0.0002075550000000051, 0.0002064719999999992, 0.00020752800000000543, 0.0002226389999999967, 0.00020641600000000093, 0.0002075279999999985, 0.00020643099999999998, 0.00020761100000000338, 0.00020643099999999998, 0.00020752800000000543, 0.0002064300000000005, 0.00020755600000000457, 0.00020644400000000007, 0.00020752800000000543, 0.0002064170000000004, 0.00020752699999999902, 0.00020640300000000084, 0.00020747299999999969, 0.00020644400000000007, 0.00020755599999999763, 0.00020641600000000093, 0.00020754199999999806, 0.00020643099999999998, 0.00020755499999999816, 0.0002064170000000004, 0.0002075279999999985, 0.00020644400000000007, 0.00020755599999999763, 0.00020641600000000093, 0.0002075279999999985, 0.0002064170000000004, 0.00020748599999999978, 0.00020643099999999998, 0.0002075970000000038, 0.00020641600000000093, 0.00020751399999999892, 0.0002064170000000004]</msg>
<status status="PASS" starttime="20201030 10:57:56.819" endtime="20201030 10:57:56.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.814" endtime="20201030 10:57:56.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.403" endtime="20201030 10:57:56.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.374" endtime="20201030 10:57:56.823"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.826" endtime="20201030 10:57:56.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.824" endtime="20201030 10:57:56.846"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.856" endtime="20201030 10:57:56.876"></status>
</kw>
<msg timestamp="20201030 10:57:56.876" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.854" endtime="20201030 10:57:56.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.879" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.877" endtime="20201030 10:57:56.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.880" endtime="20201030 10:57:56.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.851" endtime="20201030 10:57:56.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.849" endtime="20201030 10:57:56.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.891" endtime="20201030 10:57:57.228"></status>
</kw>
<msg timestamp="20201030 10:57:57.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.890" endtime="20201030 10:57:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.237" endtime="20201030 10:57:57.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.256" endtime="20201030 10:57:57.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.886" endtime="20201030 10:57:57.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.884" endtime="20201030 10:57:57.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:57.272" level="INFO">${PHILIP_RES} = [{'diff': 0.00022400000000000198}, {'diff': 0.00022401399999999808}, {'diff': 0.00022400000000000198}, {'diff': 0.0002240410000000012}, {'diff': 0.00022405500000000078}, {'diff': 0.0002239999999999985...</msg>
<status status="PASS" starttime="20201030 10:57:57.264" endtime="20201030 10:57:57.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.281" level="INFO">${RESULT} = {'diff': [0.00022400000000000198, 0.00022401399999999808, 0.00022400000000000198, 0.0002240410000000012, 0.00022405500000000078, 0.0002239999999999985, 0.00022400000000000198, 0.00022400000000000198, ...</msg>
<status status="PASS" starttime="20201030 10:57:57.274" endtime="20201030 10:57:57.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.292" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:57.290" endtime="20201030 10:57:57.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.297" level="INFO">VALUE: [0.00022400000000000198, 0.00022401399999999808, 0.00022400000000000198, 0.0002240410000000012, 0.00022405500000000078, 0.0002239999999999985, 0.00022400000000000198, 0.00022400000000000198, 0.00022401399999999808, 0.0002239999999999985, 0.0002239860000000024, 0.00022395800000000327, 0.00022398599999999894, 0.00022400000000000198, 0.00022398599999999894, 0.0002239999999999985, 0.0002239999999999985, 0.00022395900000000274, 0.00022397199999999937, 0.00022398599999999894, 0.0002239860000000024, 0.0002239860000000024, 0.0002239999999999985, 0.0002239999999999985, 0.0002239999999999985, 0.00022401400000000155, 0.00022401399999999808, 0.00022398599999999894, 0.00022400000000000198, 0.00022398599999999894, 0.00022398599999999894, 0.00022400000000000198, 0.0002239999999999985, 0.00022398599999999894, 0.0002239999999999985, 0.00022400000000000198, 0.00022398599999999894, 0.00022398599999999894, 0.00022394400000000023, 0.00022400000000000198, 0.0002239999999999985, 0.00022401399999999808, 0.00022402800000000112, 0.00022402699999999817, 0.0002239999999999985, 0.0002239999999999985, 0.0002240139999999946, 0.00022401300000000207, 0.0002240410000000012, 0.00022400000000000198]</msg>
<status status="PASS" starttime="20201030 10:57:57.294" endtime="20201030 10:57:57.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.283" endtime="20201030 10:57:57.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.847" endtime="20201030 10:57:57.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.824" endtime="20201030 10:57:57.302"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.308" endtime="20201030 10:57:57.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.304" endtime="20201030 10:57:57.332"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.353" endtime="20201030 10:57:57.378"></status>
</kw>
<msg timestamp="20201030 10:57:57.379" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.349" endtime="20201030 10:57:57.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.385" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.381" endtime="20201030 10:57:57.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.387" endtime="20201030 10:57:57.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.342" endtime="20201030 10:57:57.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.337" endtime="20201030 10:57:57.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.411" endtime="20201030 10:57:57.753"></status>
</kw>
<msg timestamp="20201030 10:57:57.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036807917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037050167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.408" endtime="20201030 10:57:57.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036807917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037050167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.763" endtime="20201030 10:57:57.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.781" endtime="20201030 10:57:57.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.400" endtime="20201030 10:57:57.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.396" endtime="20201030 10:57:57.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:57.797" level="INFO">${PHILIP_RES} = [{'diff': 0.0002422499999999994}, {'diff': 0.00024351400000000023}, {'diff': 0.00024226399999999898}, {'diff': 0.0002435279999999998}, {'diff': 0.00024223599999999984}, {'diff': 0.0002434860000000011}...</msg>
<status status="PASS" starttime="20201030 10:57:57.789" endtime="20201030 10:57:57.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.806" level="INFO">${RESULT} = {'diff': [0.0002422499999999994, 0.00024351400000000023, 0.00024226399999999898, 0.0002435279999999998, 0.00024223599999999984, 0.0002434860000000011, 0.00024226399999999898, 0.00024350000000000066, 0...</msg>
<status status="PASS" starttime="20201030 10:57:57.799" endtime="20201030 10:57:57.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.817" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:57.815" endtime="20201030 10:57:57.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.822" level="INFO">VALUE: [0.0002422499999999994, 0.00024351400000000023, 0.00024226399999999898, 0.0002435279999999998, 0.00024223599999999984, 0.0002434860000000011, 0.00024226399999999898, 0.00024350000000000066, 0.00024226400000000592, 0.0002434860000000011, 0.00024223599999999984, 0.00024350000000000066, 0.00024227799999999855, 0.00024351400000000023, 0.00024226399999999898, 0.00024350000000000066, 0.00024229100000000559, 0.0002434860000000011, 0.00024227799999999855, 0.0002434860000000011, 0.00024227799999999855, 0.00024345800000000195, 0.00024226400000000592, 0.00024348599999999415, 0.00024229199999999812, 0.00024350000000000066, 0.00024227799999999855, 0.00024347200000000152, 0.00024223599999999984, 0.000243457999999995, 0.00024226400000000592, 0.00024351400000000023, 0.00024226399999999898, 0.00024344500000000185, 0.00024226399999999898, 0.00024350000000000066, 0.0002422499999999994, 0.00024347299999999406, 0.00024230600000000463, 0.00024351400000000023, 0.00024226399999999898, 0.0002434860000000011, 0.0002421950000000006, 0.000243457999999995, 0.0002422499999999994, 0.0002434860000000011, 0.00024227699999999908, 0.0002434860000000011, 0.0002423059999999977, 0.00024351400000000023]</msg>
<status status="PASS" starttime="20201030 10:57:57.819" endtime="20201030 10:57:57.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.808" endtime="20201030 10:57:57.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.333" endtime="20201030 10:57:57.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.303" endtime="20201030 10:57:57.827"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.833" endtime="20201030 10:57:57.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.830" endtime="20201030 10:57:57.857"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.880" endtime="20201030 10:57:57.904"></status>
</kw>
<msg timestamp="20201030 10:57:57.905" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.876" endtime="20201030 10:57:57.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.911" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.907" endtime="20201030 10:57:57.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.914" endtime="20201030 10:57:57.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.869" endtime="20201030 10:57:57.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.863" endtime="20201030 10:57:57.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.938" endtime="20201030 10:57:58.279"></status>
</kw>
<msg timestamp="20201030 10:57:58.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036823208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037084403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.934" endtime="20201030 10:57:58.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036823208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037084403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.289" endtime="20201030 10:57:58.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.307" endtime="20201030 10:57:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.927" endtime="20201030 10:57:58.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.922" endtime="20201030 10:57:58.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:58.323" level="INFO">${PHILIP_RES} = [{'diff': 0.0002611949999999988}, {'diff': 0.00026122300000000487}, {'diff': 0.000261235999999998}, {'diff': 0.00026122199999999846}, {'diff': 0.0002612919999999963}, {'diff': 0.0002612079999999989}, ...</msg>
<status status="PASS" starttime="20201030 10:57:58.316" endtime="20201030 10:57:58.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.333" level="INFO">${RESULT} = {'diff': [0.0002611949999999988, 0.00026122300000000487, 0.000261235999999998, 0.00026122199999999846, 0.0002612919999999963, 0.0002612079999999989, 0.0002612079999999989, 0.0002612220000000054, 0.000...</msg>
<status status="PASS" starttime="20201030 10:57:58.325" endtime="20201030 10:57:58.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.343" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:58.341" endtime="20201030 10:57:58.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.350" level="INFO">VALUE: [0.0002611949999999988, 0.00026122300000000487, 0.000261235999999998, 0.00026122199999999846, 0.0002612919999999963, 0.0002612079999999989, 0.0002612079999999989, 0.0002612220000000054, 0.00026122299999999793, 0.00026122199999999846, 0.0002612079999999989, 0.0002612079999999989, 0.0002612220000000054, 0.0002612079999999989, 0.00026122199999999846, 0.0002612369999999975, 0.00026122199999999846, 0.00026122199999999846, 0.00026125000000000453, 0.000261235999999998, 0.0002612079999999989, 0.000261235999999998, 0.0002612369999999975, 0.0002612090000000053, 0.0002612220000000054, 0.00026122199999999846, 0.00026122199999999846, 0.00026122199999999846, 0.000261235999999998, 0.00026123700000000444, 0.00026122299999999793, 0.0002612079999999989, 0.0002612079999999989, 0.0002612079999999989, 0.0002612079999999989, 0.0002612220000000054, 0.00026122299999999793, 0.00026122299999999793, 0.000261235999999998, 0.00026122199999999846, 0.00026116699999999965, 0.0002612220000000054, 0.00026116699999999965, 0.00026127799999999674, 0.00026120899999999836, 0.00026122199999999846, 0.0002612220000000054, 0.00026123600000000496, 0.00026122199999999846, 0.0002612079999999989]</msg>
<status status="PASS" starttime="20201030 10:57:58.345" endtime="20201030 10:57:58.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.334" endtime="20201030 10:57:58.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.858" endtime="20201030 10:57:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.828" endtime="20201030 10:57:58.355"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.361" endtime="20201030 10:57:58.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.357" endtime="20201030 10:57:58.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.406" endtime="20201030 10:57:58.431"></status>
</kw>
<msg timestamp="20201030 10:57:58.432" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.402" endtime="20201030 10:57:58.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.439" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.434" endtime="20201030 10:57:58.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.441" endtime="20201030 10:57:58.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.395" endtime="20201030 10:57:58.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.390" endtime="20201030 10:57:58.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.465" endtime="20201030 10:57:58.806"></status>
</kw>
<msg timestamp="20201030 10:57:58.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035158111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035438958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.461" endtime="20201030 10:57:58.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035158111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035438958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.815" endtime="20201030 10:57:58.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.834" endtime="20201030 10:57:58.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.454" endtime="20201030 10:57:58.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.449" endtime="20201030 10:57:58.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:58.850" level="INFO">${PHILIP_RES} = [{'diff': 0.00028084700000000073}, {'diff': 0.00028217999999999993}, {'diff': 0.0002808749999999999}, {'diff': 0.00028220899999999854}, {'diff': 0.0002808749999999999}, {'diff': 0.00028222199999999864...</msg>
<status status="PASS" starttime="20201030 10:57:58.842" endtime="20201030 10:57:58.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.864" level="INFO">${RESULT} = {'diff': [0.00028084700000000073, 0.00028217999999999993, 0.0002808749999999999, 0.00028220899999999854, 0.0002808749999999999, 0.00028222199999999864, 0.0002808049999999951, 0.0002822359999999982, 0....</msg>
<status status="PASS" starttime="20201030 10:57:58.852" endtime="20201030 10:57:58.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.875" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:58.873" endtime="20201030 10:57:58.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.880" level="INFO">VALUE: [0.00028084700000000073, 0.00028217999999999993, 0.0002808749999999999, 0.00028220899999999854, 0.0002808749999999999, 0.00028222199999999864, 0.0002808049999999951, 0.0002822359999999982, 0.0002808610000000003, 0.00028222199999999864, 0.00028088899999999944, 0.0002821950000000059, 0.00028088899999999944, 0.00028222199999999864, 0.0002808190000000016, 0.000282194999999999, 0.0002808329999999942, 0.0002822229999999981, 0.00028093099999999815, 0.000282194999999999, 0.0002808749999999999, 0.000282194999999999, 0.0002808610000000003, 0.0002822229999999981, 0.0002808749999999999, 0.000282194999999999, 0.0002809170000000055, 0.0002822229999999981, 0.0002808749999999999, 0.00028222300000000505, 0.0002808619999999998, 0.0002822500000000047, 0.00028088799999999997, 0.0002822229999999981, 0.0002808619999999998, 0.0002822229999999981, 0.00028088799999999997, 0.000282194999999999, 0.0002808749999999999, 0.0002822090000000055, 0.00028088899999999944, 0.00028220899999999854, 0.0002808749999999999, 0.00028220899999999854, 0.0002808750000000068, 0.0002822229999999981, 0.0002808749999999999, 0.0002823049999999966, 0.00028088799999999997, 0.0002821950000000059]</msg>
<status status="PASS" starttime="20201030 10:57:58.877" endtime="20201030 10:57:58.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.866" endtime="20201030 10:57:58.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.386" endtime="20201030 10:57:58.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.356" endtime="20201030 10:57:58.885"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.891" endtime="20201030 10:57:58.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.888" endtime="20201030 10:57:58.915"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.936" endtime="20201030 10:57:58.962"></status>
</kw>
<msg timestamp="20201030 10:57:58.964" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.932" endtime="20201030 10:57:58.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.970" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.966" endtime="20201030 10:57:58.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.972" endtime="20201030 10:57:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.925" endtime="20201030 10:57:58.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.920" endtime="20201030 10:57:58.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.996" endtime="20201030 10:57:59.337"></status>
</kw>
<msg timestamp="20201030 10:57:59.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035500403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.993" endtime="20201030 10:57:59.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035500403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.347" endtime="20201030 10:57:59.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.365" endtime="20201030 10:57:59.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.985" endtime="20201030 10:57:59.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.980" endtime="20201030 10:57:59.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:59.381" level="INFO">${PHILIP_RES} = [{'diff': 0.0003012500000000029}, {'diff': 0.0003012219999999968}, {'diff': 0.0003012920000000016}, {'diff': 0.0003012219999999968}, {'diff': 0.00030120799999999726}, {'diff': 0.0003012640000000025}, ...</msg>
<status status="PASS" starttime="20201030 10:57:59.373" endtime="20201030 10:57:59.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.392" level="INFO">${RESULT} = {'diff': [0.0003012500000000029, 0.0003012219999999968, 0.0003012920000000016, 0.0003012219999999968, 0.00030120799999999726, 0.0003012640000000025, 0.00030120799999999726, 0.0003012219999999968, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:59.383" endtime="20201030 10:57:59.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.402" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:59.400" endtime="20201030 10:57:59.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.408" level="INFO">VALUE: [0.0003012500000000029, 0.0003012219999999968, 0.0003012920000000016, 0.0003012219999999968, 0.00030120799999999726, 0.0003012640000000025, 0.00030120799999999726, 0.0003012219999999968, 0.0003012500000000029, 0.0003012219999999968, 0.00030120799999999726, 0.0003012219999999968, 0.0003012359999999964, 0.00030123600000000333, 0.00030122300000000324, 0.00030123600000000333, 0.0003012500000000029, 0.0003011799999999981, 0.0003012229999999963, 0.00030120799999999726, 0.0003012500000000029, 0.00030122200000000376, 0.0003012359999999964, 0.0003012219999999968, 0.0003012919999999947, 0.00030122300000000324, 0.00030120799999999726, 0.00030123600000000333, 0.0003012219999999968, 0.0003012370000000028, 0.00030123699999999587, 0.00030120799999999726, 0.00030123600000000333, 0.00030123600000000333, 0.0003012219999999968, 0.00030122200000000376, 0.0003011809999999976, 0.00030123600000000333, 0.0003012219999999968, 0.0003011940000000046, 0.00030123699999999587, 0.00030129100000000214, 0.00030124999999999597, 0.00030122200000000376, 0.00030130599999999425, 0.00031594399999999856, 0.00030116599999999855, 0.0003011389999999989, 0.00030122200000000376, 0.00030127800000000204]</msg>
<status status="PASS" starttime="20201030 10:57:59.405" endtime="20201030 10:57:59.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.394" endtime="20201030 10:57:59.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.916" endtime="20201030 10:57:59.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.886" endtime="20201030 10:57:59.413"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.419" endtime="20201030 10:57:59.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.415" endtime="20201030 10:57:59.442"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.463" endtime="20201030 10:57:59.491"></status>
</kw>
<msg timestamp="20201030 10:57:59.492" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.460" endtime="20201030 10:57:59.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.498" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.494" endtime="20201030 10:57:59.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.501" endtime="20201030 10:57:59.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.453" endtime="20201030 10:57:59.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.447" endtime="20201030 10:57:59.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.524" endtime="20201030 10:57:59.868"></status>
</kw>
<msg timestamp="20201030 10:57:59.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035200972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035523236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.521" endtime="20201030 10:57:59.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035200972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035523236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.877" endtime="20201030 10:57:59.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.896" endtime="20201030 10:57:59.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.514" endtime="20201030 10:57:59.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.509" endtime="20201030 10:57:59.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:59.912" level="INFO">${PHILIP_RES} = [{'diff': 0.00032226400000000266}, {'diff': 0.000323722999999998}, {'diff': 0.0003222229999999965}, {'diff': 0.0003236799999999998}, {'diff': 0.00032226400000000266}, {'diff': 0.00032372200000000545},...</msg>
<status status="PASS" starttime="20201030 10:57:59.904" endtime="20201030 10:57:59.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.921" level="INFO">${RESULT} = {'diff': [0.00032226400000000266, 0.000323722999999998, 0.0003222229999999965, 0.0003236799999999998, 0.00032226400000000266, 0.00032372200000000545, 0.00032227800000000223, 0.00032369499999999884, 0....</msg>
<status status="PASS" starttime="20201030 10:57:59.914" endtime="20201030 10:57:59.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.932" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:59.929" endtime="20201030 10:57:59.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.937" level="INFO">VALUE: [0.00032226400000000266, 0.000323722999999998, 0.0003222229999999965, 0.0003236799999999998, 0.00032226400000000266, 0.00032372200000000545, 0.00032227800000000223, 0.00032369499999999884, 0.0003222639999999957, 0.0003237219999999985, 0.0003222230000000034, 0.00032370799999999894, 0.0003222630000000032, 0.00032370799999999894, 0.0003223340000000005, 0.0003237639999999972, 0.0003222639999999957, 0.00032370799999999894, 0.0003222500000000031, 0.0003236799999999998, 0.00032227800000000223, 0.0003237219999999985, 0.0003222779999999953, 0.000323722999999998, 0.0003222500000000031, 0.00032377800000000373, 0.00032227700000000276, 0.00032370799999999894, 0.00032227800000000223, 0.000323722999999998, 0.0003222639999999957, 0.00032374999999999765, 0.0003222500000000031, 0.0003237080000000059, 0.0003222639999999957, 0.00032369399999999937, 0.00032226400000000266, 0.0003237219999999985, 0.00032227800000000223, 0.00032363900000000057, 0.00032226400000000266, 0.0003237219999999985, 0.0003222909999999954, 0.00032370799999999894, 0.00032227800000000223, 0.0003236950000000058, 0.00032227800000000223, 0.0003237219999999985, 0.0003222639999999957, 0.00032370799999999894]</msg>
<status status="PASS" starttime="20201030 10:57:59.934" endtime="20201030 10:57:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.923" endtime="20201030 10:57:59.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.443" endtime="20201030 10:57:59.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.414" endtime="20201030 10:57:59.942"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.948" endtime="20201030 10:57:59.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.944" endtime="20201030 10:57:59.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.993" endtime="20201030 10:58:00.023"></status>
</kw>
<msg timestamp="20201030 10:58:00.025" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.989" endtime="20201030 10:58:00.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.031" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.027" endtime="20201030 10:58:00.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.033" endtime="20201030 10:58:00.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.982" endtime="20201030 10:58:00.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.977" endtime="20201030 10:58:00.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.057" endtime="20201030 10:58:00.359"></status>
</kw>
<msg timestamp="20201030 10:58:00.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036889028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.054" endtime="20201030 10:58:00.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036889028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.363" endtime="20201030 10:58:00.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.372" endtime="20201030 10:58:00.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.047" endtime="20201030 10:58:00.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.042" endtime="20201030 10:58:00.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:00.379" level="INFO">${PHILIP_RES} = [{'diff': 0.00034404100000000326}, {'diff': 0.000344000000000004}, {'diff': 0.0003440140000000036}, {'diff': 0.0003439859999999975}, {'diff': 0.0003439999999999971}, {'diff': 0.0003439859999999975}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.376" endtime="20201030 10:58:00.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.383" level="INFO">${RESULT} = {'diff': [0.00034404100000000326, 0.000344000000000004, 0.0003440140000000036, 0.0003439859999999975, 0.0003439999999999971, 0.0003439859999999975, 0.00034397199999999795, 0.00034401399999999666, 0.00...</msg>
<status status="PASS" starttime="20201030 10:58:00.380" endtime="20201030 10:58:00.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.389" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:00.387" endtime="20201030 10:58:00.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.391" level="INFO">VALUE: [0.00034404100000000326, 0.000344000000000004, 0.0003440140000000036, 0.0003439859999999975, 0.0003439999999999971, 0.0003439859999999975, 0.00034397199999999795, 0.00034401399999999666, 0.0003440140000000036, 0.0003440690000000024, 0.0003440140000000036, 0.0003440140000000036, 0.00034402800000000316, 0.0003439999999999971, 0.0003530829999999971, 0.00034547199999999945, 0.0003455140000000051, 0.00034551399999999816, 0.00034551399999999816, 0.00034555500000000433, 0.00034558400000000294, 0.0003454999999999986, 0.0003455000000000055, 0.00034552699999999825, 0.00034551399999999816, 0.000345485999999999, 0.0003454999999999986, 0.0003454999999999986, 0.0003454729999999989, 0.0003454999999999986, 0.00034545899999999935, 0.0003455419999999973, 0.00034547199999999945, 0.00034547199999999945, 0.00034551399999999816, 0.0003455140000000051, 0.00034551399999999816, 0.0003455279999999977, 0.0003455000000000055, 0.0003455279999999977, 0.00034551399999999816, 0.00034555500000000433, 0.00034558299999999653, 0.0003454999999999986, 0.0003455000000000055, 0.00034551399999999816, 0.00034551399999999816, 0.0003455000000000055, 0.00034545899999999935, 0.0003454440000000003]</msg>
<status status="PASS" starttime="20201030 10:58:00.390" endtime="20201030 10:58:00.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.384" endtime="20201030 10:58:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.973" endtime="20201030 10:58:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.943" endtime="20201030 10:58:00.399"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.402" endtime="20201030 10:58:00.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.401" endtime="20201030 10:58:00.423"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.433" endtime="20201030 10:58:00.461"></status>
</kw>
<msg timestamp="20201030 10:58:00.462" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.432" endtime="20201030 10:58:00.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.465" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.463" endtime="20201030 10:58:00.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.466" endtime="20201030 10:58:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.429" endtime="20201030 10:58:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.426" endtime="20201030 10:58:00.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.477" endtime="20201030 10:58:00.781"></status>
</kw>
<msg timestamp="20201030 10:58:00.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020804569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.475" endtime="20201030 10:58:00.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020804569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.790" endtime="20201030 10:58:00.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.809" endtime="20201030 10:58:00.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.472" endtime="20201030 10:58:00.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.470" endtime="20201030 10:58:00.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:00.825" level="INFO">${PHILIP_RES} = [{'diff': 0.00036644499999999997}, {'diff': 0.00036801399999999984}, {'diff': 0.0003664440000000005}, {'diff': 0.00036801399999999984}, {'diff': 0.0003664310000000004}, {'diff': 0.0003679999999999968}...</msg>
<status status="PASS" starttime="20201030 10:58:00.817" endtime="20201030 10:58:00.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.834" level="INFO">${RESULT} = {'diff': [0.00036644499999999997, 0.00036801399999999984, 0.0003664440000000005, 0.00036801399999999984, 0.0003664310000000004, 0.0003679999999999968, 0.00036641699999999736, 0.00036795900000000104, 0...</msg>
<status status="PASS" starttime="20201030 10:58:00.827" endtime="20201030 10:58:00.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.844" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:00.842" endtime="20201030 10:58:00.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.851" level="INFO">VALUE: [0.00036644499999999997, 0.00036801399999999984, 0.0003664440000000005, 0.00036801399999999984, 0.0003664310000000004, 0.0003679999999999968, 0.00036641699999999736, 0.00036795900000000104, 0.00036645899999999954, 0.00036800000000000027, 0.0003664309999999969, 0.00036801399999999984, 0.0003663890000000017, 0.00036800000000000027, 0.0003664310000000004, 0.00036802699999999994, 0.0003664310000000004, 0.0003679730000000006, 0.00036644499999999997, 0.0003679730000000006, 0.0003664309999999969, 0.0003679860000000007, 0.00036644499999999997, 0.0003680279999999994, 0.00036644499999999997, 0.0003680140000000033, 0.000366429999999994, 0.00036799999999999333, 0.00036644499999999997, 0.00036801399999999984, 0.00036644499999999997, 0.00036800000000000027, 0.00036644499999999997, 0.00036800000000000027, 0.0003664300000000009, 0.00036798599999999376, 0.00036645800000000006, 0.00036801399999999984, 0.0003664440000000005, 0.00036800000000000027, 0.00036647199999999963, 0.0003679860000000007, 0.0003664020000000018, 0.00036797200000000113, 0.00036645800000000006, 0.00036800000000000027, 0.0003664440000000005, 0.0003679860000000007, 0.0003664440000000005, 0.0003679860000000007]</msg>
<status status="PASS" starttime="20201030 10:58:00.847" endtime="20201030 10:58:00.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.836" endtime="20201030 10:58:00.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.423" endtime="20201030 10:58:00.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.400" endtime="20201030 10:58:00.857"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.862" endtime="20201030 10:58:00.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.859" endtime="20201030 10:58:00.886"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.907" endtime="20201030 10:58:00.939"></status>
</kw>
<msg timestamp="20201030 10:58:00.940" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.904" endtime="20201030 10:58:00.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.946" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.942" endtime="20201030 10:58:00.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.949" endtime="20201030 10:58:00.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.896" endtime="20201030 10:58:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.891" endtime="20201030 10:58:00.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.972" endtime="20201030 10:58:01.313"></status>
</kw>
<msg timestamp="20201030 10:58:01.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035161125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035550653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.969" endtime="20201030 10:58:01.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035161125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035550653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.322" endtime="20201030 10:58:01.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.340" endtime="20201030 10:58:01.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.962" endtime="20201030 10:58:01.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.957" endtime="20201030 10:58:01.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:01.357" level="INFO">${PHILIP_RES} = [{'diff': 0.0003895280000000001}, {'diff': 0.00038955499999999976}, {'diff': 0.00038965299999999675}, {'diff': 0.00038965299999999675}, {'diff': 0.0003895699999999988}, {'diff': 0.00038954199999999967...</msg>
<status status="PASS" starttime="20201030 10:58:01.349" endtime="20201030 10:58:01.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.367" level="INFO">${RESULT} = {'diff': [0.0003895280000000001, 0.00038955499999999976, 0.00038965299999999675, 0.00038965299999999675, 0.0003895699999999988, 0.00038954199999999967, 0.00038955499999999976, 0.0003895699999999988, 0...</msg>
<status status="PASS" starttime="20201030 10:58:01.359" endtime="20201030 10:58:01.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.378" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:01.376" endtime="20201030 10:58:01.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.383" level="INFO">VALUE: [0.0003895280000000001, 0.00038955499999999976, 0.00038965299999999675, 0.00038965299999999675, 0.0003895699999999988, 0.00038954199999999967, 0.00038955499999999976, 0.0003895699999999988, 0.00038956899999999933, 0.00038954199999999967, 0.0003895829999999989, 0.00038956900000000627, 0.00038957000000000575, 0.00038956899999999933, 0.00038957000000000575, 0.00038956899999999933, 0.00038956900000000627, 0.00038955599999999924, 0.00038955499999999976, 0.00038955599999999924, 0.00038956900000000627, 0.00038956900000000627, 0.00038957000000000575, 0.00038955499999999976, 0.00040208400000000394, 0.0003911939999999975, 0.00039119499999999696, 0.0003911799999999979, 0.0003911950000000039, 0.0003911799999999979, 0.0003911809999999974, 0.00039120799999999706, 0.00039111099999999954, 0.00039118000000000486, 0.00039122199999999663, 0.0003911799999999979, 0.0003911809999999974, 0.0003911390000000056, 0.0003911950000000039, 0.0003911799999999979, 0.00039124999999999577, 0.0003911939999999975, 0.0003911390000000056, 0.00039118000000000486, 0.00039115299999999825, 0.00039115299999999825, 0.0003911389999999987, 0.00039118100000000433, 0.00039120900000000347, 0.00039115299999999825]</msg>
<status status="PASS" starttime="20201030 10:58:01.380" endtime="20201030 10:58:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.369" endtime="20201030 10:58:01.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.887" endtime="20201030 10:58:01.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.857" endtime="20201030 10:58:01.389"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.394" endtime="20201030 10:58:01.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.391" endtime="20201030 10:58:01.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.439" endtime="20201030 10:58:01.471"></status>
</kw>
<msg timestamp="20201030 10:58:01.472" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.436" endtime="20201030 10:58:01.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.479" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.475" endtime="20201030 10:58:01.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.481" endtime="20201030 10:58:01.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.428" endtime="20201030 10:58:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.423" endtime="20201030 10:58:01.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.505" endtime="20201030 10:58:01.858"></status>
</kw>
<msg timestamp="20201030 10:58:01.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035173958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035587347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.501" endtime="20201030 10:58:01.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035173958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035587347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.868" endtime="20201030 10:58:01.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.886" endtime="20201030 10:58:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.494" endtime="20201030 10:58:01.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.489" endtime="20201030 10:58:01.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:01.902" level="INFO">${PHILIP_RES} = [{'diff': 0.0004133890000000001}, {'diff': 0.000415055999999997}, {'diff': 0.0004133890000000001}, {'diff': 0.0004150700000000035}, {'diff': 0.00041341699999999926}, {'diff': 0.0004353890000000013}, {...</msg>
<status status="PASS" starttime="20201030 10:58:01.895" endtime="20201030 10:58:01.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.913" level="INFO">${RESULT} = {'diff': [0.0004133890000000001, 0.000415055999999997, 0.0004133890000000001, 0.0004150700000000035, 0.00041341699999999926, 0.0004353890000000013, 0.0004134439999999989, 0.0004150419999999974, 0.0004...</msg>
<status status="PASS" starttime="20201030 10:58:01.904" endtime="20201030 10:58:01.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.924" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:01.922" endtime="20201030 10:58:01.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.929" level="INFO">VALUE: [0.0004133890000000001, 0.000415055999999997, 0.0004133890000000001, 0.0004150700000000035, 0.00041341699999999926, 0.0004353890000000013, 0.0004134439999999989, 0.0004150419999999974, 0.00041337500000000055, 0.0004150410000000049, 0.00041338800000000064, 0.00041509700000000316, 0.00041345899999999797, 0.0004150560000000039, 0.0004134029999999997, 0.0004150700000000035, 0.00041337500000000055, 0.0004150689999999971, 0.00041337500000000055, 0.0004150830000000036, 0.0004133890000000001, 0.000415055999999997, 0.00041343099999999883, 0.00041504200000000435, 0.0004133890000000001, 0.00041502799999999784, 0.0004134020000000002, 0.0004151250000000023, 0.0004134020000000002, 0.0004150419999999974, 0.0004133890000000001, 0.0004150700000000035, 0.0004133890000000001, 0.0004150560000000039, 0.0004133890000000001, 0.0004150549999999975, 0.0004134020000000002, 0.00041505500000000445, 0.00041341699999999926, 0.0004150419999999974, 0.00041341699999999926, 0.0004150560000000039, 0.0004133890000000001, 0.000415055999999997, 0.00041337500000000055, 0.00041509700000000316, 0.00041337500000000055, 0.0004150549999999975, 0.0004134029999999997, 0.00041504200000000435]</msg>
<status status="PASS" starttime="20201030 10:58:01.926" endtime="20201030 10:58:01.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.915" endtime="20201030 10:58:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.419" endtime="20201030 10:58:01.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.389" endtime="20201030 10:58:01.934"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.940" endtime="20201030 10:58:01.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.937" endtime="20201030 10:58:01.964"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.985" endtime="20201030 10:58:02.019"></status>
</kw>
<msg timestamp="20201030 10:58:02.020" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.982" endtime="20201030 10:58:02.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.026" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.022" endtime="20201030 10:58:02.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.029" endtime="20201030 10:58:02.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.974" endtime="20201030 10:58:02.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.969" endtime="20201030 10:58:02.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.053" endtime="20201030 10:58:02.396"></status>
</kw>
<msg timestamp="20201030 10:58:02.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035345806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.049" endtime="20201030 10:58:02.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035345806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.406" endtime="20201030 10:58:02.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.424" endtime="20201030 10:58:02.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.042" endtime="20201030 10:58:02.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.037" endtime="20201030 10:58:02.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:02.441" level="INFO">${PHILIP_RES} = [{'diff': 0.00043790199999999696}, {'diff': 0.00043794399999999567}, {'diff': 0.0004379310000000025}, {'diff': 0.0004379310000000025}, {'diff': 0.00043791700000000294}, {'diff': 0.00043790299999999643...</msg>
<status status="PASS" starttime="20201030 10:58:02.433" endtime="20201030 10:58:02.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.450" level="INFO">${RESULT} = {'diff': [0.00043790199999999696, 0.00043794399999999567, 0.0004379310000000025, 0.0004379310000000025, 0.00043791700000000294, 0.00043790299999999643, 0.00043791599999999653, 0.00043791599999999653, ...</msg>
<status status="PASS" starttime="20201030 10:58:02.443" endtime="20201030 10:58:02.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.460" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:02.458" endtime="20201030 10:58:02.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.466" level="INFO">VALUE: [0.00043790199999999696, 0.00043794399999999567, 0.0004379310000000025, 0.0004379310000000025, 0.00043791700000000294, 0.00043790299999999643, 0.00043791599999999653, 0.00043791599999999653, 0.00043790300000000337, 0.0004379580000000022, 0.000437916999999996, 0.00043790299999999643, 0.0004378329999999986, 0.00043787500000000423, 0.0004379020000000039, 0.00043784800000000457, 0.00043788899999999686, 0.000437916999999996, 0.0004378890000000038, 0.00043791700000000294, 0.0004378890000000038, 0.00043790199999999696, 0.00043790199999999696, 0.00043790300000000337, 0.00043791700000000294, 0.00043791700000000294, 0.00043784699999999815, 0.0004379309999999956, 0.0004571519999999954, 0.00043962499999999904, 0.0004396389999999986, 0.0004396380000000061, 0.00043962499999999904, 0.0004396389999999986, 0.0004396389999999986, 0.0004396109999999995, 0.0004395969999999999, 0.00043957000000000024, 0.00043966699999999775, 0.00043962499999999904, 0.0004396109999999995, 0.00043962499999999904, 0.000439625000000006, 0.00043962499999999904, 0.00043962499999999904, 0.0004395979999999994, 0.00043962499999999904, 0.0004396529999999982, 0.0004396389999999986, 0.00043963900000000555]</msg>
<status status="PASS" starttime="20201030 10:58:02.463" endtime="20201030 10:58:02.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.452" endtime="20201030 10:58:02.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.965" endtime="20201030 10:58:02.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.935" endtime="20201030 10:58:02.471"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.477" endtime="20201030 10:58:02.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.473" endtime="20201030 10:58:02.500"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.522" endtime="20201030 10:58:02.558"></status>
</kw>
<msg timestamp="20201030 10:58:02.559" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.518" endtime="20201030 10:58:02.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.566" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.562" endtime="20201030 10:58:02.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.568" endtime="20201030 10:58:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.511" endtime="20201030 10:58:02.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.506" endtime="20201030 10:58:02.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.592" endtime="20201030 10:58:02.934"></status>
</kw>
<msg timestamp="20201030 10:58:02.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036833694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037298667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.588" endtime="20201030 10:58:02.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036833694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037298667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.943" endtime="20201030 10:58:02.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.962" endtime="20201030 10:58:02.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.581" endtime="20201030 10:58:02.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.576" endtime="20201030 10:58:02.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:02.978" level="INFO">${PHILIP_RES} = [{'diff': 0.00046497300000000047}, {'diff': 0.0004631249999999948}, {'diff': 0.00046490200000000315}, {'diff': 0.00046312500000000173}, {'diff': 0.0004648889999999961}, {'diff': 0.00046311100000000216...</msg>
<status status="PASS" starttime="20201030 10:58:02.970" endtime="20201030 10:58:02.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.987" level="INFO">${RESULT} = {'diff': [0.00046497300000000047, 0.0004631249999999948, 0.00046490200000000315, 0.00046312500000000173, 0.0004648889999999961, 0.00046311100000000216, 0.0004648750000000035, 0.0004631109999999952, 0....</msg>
<status status="PASS" starttime="20201030 10:58:02.980" endtime="20201030 10:58:02.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.998" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:02.996" endtime="20201030 10:58:02.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.003" level="INFO">VALUE: [0.00046497300000000047, 0.0004631249999999948, 0.00046490200000000315, 0.00046312500000000173, 0.0004648889999999961, 0.00046311100000000216, 0.0004648750000000035, 0.0004631109999999952, 0.00046494400000000186, 0.00046312500000000173, 0.0004649029999999957, 0.00046311200000000163, 0.0004649030000000026, 0.0004631109999999952, 0.0004649170000000022, 0.0004631390000000013, 0.0004648889999999961, 0.0004631390000000013, 0.0004648889999999961, 0.0004631390000000013, 0.00046490200000000315, 0.00046312500000000173, 0.0004649029999999957, 0.00046311100000000216, 0.0004649300000000023, 0.0004631390000000013, 0.0004648750000000035, 0.00046311200000000163, 0.0004648889999999961, 0.00046312500000000173, 0.0004648469999999974, 0.00046312500000000173, 0.0004649170000000022, 0.0004630840000000025, 0.0004649019999999962, 0.0004631940000000001, 0.0004649159999999958, 0.00046312500000000173, 0.0004649030000000026, 0.00046309699999999565, 0.00046487499999999654, 0.00046311100000000216, 0.00046487499999999654, 0.00046311200000000163, 0.0004649300000000023, 0.0004631109999999952, 0.00046486099999999697, 0.00046312500000000173, 0.00046486099999999697, 0.00046311100000000216]</msg>
<status status="PASS" starttime="20201030 10:58:03.000" endtime="20201030 10:58:03.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.989" endtime="20201030 10:58:03.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.501" endtime="20201030 10:58:03.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.472" endtime="20201030 10:58:03.008"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.014" endtime="20201030 10:58:03.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.011" endtime="20201030 10:58:03.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.061" endtime="20201030 10:58:03.096"></status>
</kw>
<msg timestamp="20201030 10:58:03.097" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.057" endtime="20201030 10:58:03.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.104" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.100" endtime="20201030 10:58:03.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.106" endtime="20201030 10:58:03.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.050" endtime="20201030 10:58:03.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.044" endtime="20201030 10:58:03.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.130" endtime="20201030 10:58:03.470"></status>
</kw>
<msg timestamp="20201030 10:58:03.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037187569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.127" endtime="20201030 10:58:03.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037187569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.480" endtime="20201030 10:58:03.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.498" endtime="20201030 10:58:03.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.119" endtime="20201030 10:58:03.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.114" endtime="20201030 10:58:03.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:03.514" level="INFO">${PHILIP_RES} = [{'diff': 0.0004890129999999965}, {'diff': 0.0004890140000000029}, {'diff': 0.0004890279999999955}, {'diff': 0.000489027000000003}, {'diff': 0.0004890140000000029}, {'diff': 0.0004890419999999951}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:03.507" endtime="20201030 10:58:03.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.523" level="INFO">${RESULT} = {'diff': [0.0004890129999999965, 0.0004890140000000029, 0.0004890279999999955, 0.000489027000000003, 0.0004890140000000029, 0.0004890419999999951, 0.000489026999999996, 0.0004890140000000029, 0.000488...</msg>
<status status="PASS" starttime="20201030 10:58:03.516" endtime="20201030 10:58:03.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.534" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:03.532" endtime="20201030 10:58:03.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.541" level="INFO">VALUE: [0.0004890129999999965, 0.0004890140000000029, 0.0004890279999999955, 0.000489027000000003, 0.0004890140000000029, 0.0004890419999999951, 0.000489026999999996, 0.0004890140000000029, 0.0004889729999999967, 0.0004890280000000025, 0.0004890280000000025, 0.0004890279999999955, 0.0004890280000000025, 0.0004890280000000025, 0.0004889999999999964, 0.0004890280000000025, 0.0004890280000000025, 0.000489026999999996, 0.0004890000000000033, 0.0004889720000000042, 0.0004889999999999964, 0.0004890140000000029, 0.000489042000000002, 0.000489026999999996, 0.0004890140000000029, 0.0004890280000000025, 0.0004890409999999956, 0.0004889860000000038, 0.0004890280000000025, 0.000489013999999996, 0.0004890140000000029, 0.0004889589999999971, 0.0004890279999999955, 0.0004890280000000025, 0.0004890140000000029, 0.0004890279999999955, 0.000489042000000002, 0.0005037500000000042, 0.0004890140000000029, 0.0004890279999999955, 0.0004890140000000029, 0.0004890140000000029, 0.0004890419999999951, 0.0004889590000000041, 0.0004890280000000025, 0.0004890279999999955, 0.0004890140000000029, 0.0004890140000000029, 0.0004890280000000025, 0.0004890409999999956]</msg>
<status status="PASS" starttime="20201030 10:58:03.536" endtime="20201030 10:58:03.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.525" endtime="20201030 10:58:03.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.039" endtime="20201030 10:58:03.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.009" endtime="20201030 10:58:03.546"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.552" endtime="20201030 10:58:03.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.548" endtime="20201030 10:58:03.575"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.596" endtime="20201030 10:58:03.634"></status>
</kw>
<msg timestamp="20201030 10:58:03.636" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.593" endtime="20201030 10:58:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.642" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.638" endtime="20201030 10:58:03.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.644" endtime="20201030 10:58:03.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.586" endtime="20201030 10:58:03.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.580" endtime="20201030 10:58:03.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.668" endtime="20201030 10:58:03.991"></status>
</kw>
<msg timestamp="20201030 10:58:03.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035648097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.665" endtime="20201030 10:58:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035648097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.995" endtime="20201030 10:58:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.003" endtime="20201030 10:58:04.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.657" endtime="20201030 10:58:04.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.653" endtime="20201030 10:58:04.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:04.014" level="INFO">${PHILIP_RES} = [{'diff': 0.0005156249999999987}, {'diff': 0.0005174999999999971}, {'diff': 0.0005156669999999974}, {'diff': 0.0005175000000000041}, {'diff': 0.0005156250000000057}, {'diff': 0.0005175139999999967}, {...</msg>
<status status="PASS" starttime="20201030 10:58:04.007" endtime="20201030 10:58:04.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.028" level="INFO">${RESULT} = {'diff': [0.0005156249999999987, 0.0005174999999999971, 0.0005156669999999974, 0.0005175000000000041, 0.0005156250000000057, 0.0005175139999999967, 0.000515680999999997, 0.0005175700000000019, 0.00051...</msg>
<status status="PASS" starttime="20201030 10:58:04.016" endtime="20201030 10:58:04.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.039" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:04.037" endtime="20201030 10:58:04.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.044" level="INFO">VALUE: [0.0005156249999999987, 0.0005174999999999971, 0.0005156669999999974, 0.0005175000000000041, 0.0005156250000000057, 0.0005175139999999967, 0.000515680999999997, 0.0005175700000000019, 0.0005156250000000057, 0.0005175140000000036, 0.0005156669999999974, 0.0005175140000000036, 0.0005156950000000035, 0.0005175280000000032, 0.0005156249999999987, 0.0005175140000000036, 0.0005156109999999992, 0.0005175139999999967, 0.0005156389999999983, 0.0005174579999999984, 0.0005156670000000044, 0.0005175139999999967, 0.0005156389999999983, 0.0005175140000000036, 0.0005156250000000057, 0.0005175700000000019, 0.0005156389999999983, 0.0005174999999999971, 0.0005156250000000057, 0.0005174579999999984, 0.0005156389999999983, 0.0005175420000000028, 0.0005156250000000057, 0.0005175140000000036, 0.0005156109999999992, 0.0005174999999999971, 0.0005156110000000061, 0.0005175420000000028, 0.0005156249999999987, 0.0005175139999999967, 0.0005156390000000052, 0.0005175280000000032, 0.0005156389999999983, 0.0005175269999999968, 0.0005156109999999992, 0.0005175280000000032, 0.0005156389999999983, 0.000517471999999998, 0.0005156119999999986, 0.000517569999999995]</msg>
<status status="PASS" starttime="20201030 10:58:04.041" endtime="20201030 10:58:04.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.030" endtime="20201030 10:58:04.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.576" endtime="20201030 10:58:04.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.547" endtime="20201030 10:58:04.049"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.055" endtime="20201030 10:58:04.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.051" endtime="20201030 10:58:04.079"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.100" endtime="20201030 10:58:04.139"></status>
</kw>
<msg timestamp="20201030 10:58:04.140" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.096" endtime="20201030 10:58:04.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.146" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.142" endtime="20201030 10:58:04.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.148" endtime="20201030 10:58:04.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.089" endtime="20201030 10:58:04.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.084" endtime="20201030 10:58:04.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.172" endtime="20201030 10:58:04.512"></status>
</kw>
<msg timestamp="20201030 10:58:04.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035482833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.169" endtime="20201030 10:58:04.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035482833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.521" endtime="20201030 10:58:04.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.540" endtime="20201030 10:58:04.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.161" endtime="20201030 10:58:04.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.157" endtime="20201030 10:58:04.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:04.556" level="INFO">${PHILIP_RES} = [{'diff': 0.0005429159999999975}, {'diff': 0.0005429160000000044}, {'diff': 0.0005429159999999975}, {'diff': 0.000542929999999997}, {'diff': 0.0005429170000000039}, {'diff': 0.0005429859999999953}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:04.548" endtime="20201030 10:58:04.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.567" level="INFO">${RESULT} = {'diff': [0.0005429159999999975, 0.0005429160000000044, 0.0005429159999999975, 0.000542929999999997, 0.0005429170000000039, 0.0005429859999999953, 0.0005429590000000026, 0.0005429169999999969, 0.00054...</msg>
<status status="PASS" starttime="20201030 10:58:04.558" endtime="20201030 10:58:04.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.578" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:04.575" endtime="20201030 10:58:04.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.583" level="INFO">VALUE: [0.0005429159999999975, 0.0005429160000000044, 0.0005429159999999975, 0.000542929999999997, 0.0005429170000000039, 0.0005429859999999953, 0.0005429590000000026, 0.0005429169999999969, 0.0005428469999999991, 0.0005429720000000027, 0.0005429309999999965, 0.0005429030000000043, 0.0005429439999999966, 0.0005429160000000044, 0.0005428749999999982, 0.000542930000000004, 0.0005428329999999995, 0.0005429029999999974, 0.0005429440000000035, 0.0005429169999999969, 0.000542945000000003, 0.0005429169999999969, 0.0005429310000000034, 0.0005429169999999969, 0.0005429169999999969, 0.0005429580000000031, 0.0005429169999999969, 0.0005429170000000039, 0.0005429169999999969, 0.0005429160000000044, 0.000542929999999997, 0.0005429159999999975, 0.0005429160000000044, 0.0005429029999999974, 0.0005429310000000034, 0.0005429730000000021, 0.0005429310000000034, 0.0005429310000000034, 0.0005429169999999969, 0.0005429310000000034, 0.0005429449999999961, 0.0005429170000000039, 0.0005429019999999979, 0.0005429159999999975, 0.0005429159999999975, 0.0005429439999999966, 0.0005429160000000044, 0.0005429580000000031, 0.0005429159999999905, 0.0005429030000000112]</msg>
<status status="PASS" starttime="20201030 10:58:04.580" endtime="20201030 10:58:04.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.569" endtime="20201030 10:58:04.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.080" endtime="20201030 10:58:04.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.050" endtime="20201030 10:58:04.588"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.594" endtime="20201030 10:58:04.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.590" endtime="20201030 10:58:04.617"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.638" endtime="20201030 10:58:04.679"></status>
</kw>
<msg timestamp="20201030 10:58:04.681" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.635" endtime="20201030 10:58:04.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.687" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.683" endtime="20201030 10:58:04.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.689" endtime="20201030 10:58:04.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.628" endtime="20201030 10:58:04.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.622" endtime="20201030 10:58:04.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.713" endtime="20201030 10:58:05.057"></status>
</kw>
<msg timestamp="20201030 10:58:05.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035121458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035692389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.710" endtime="20201030 10:58:05.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035121458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035692389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.066" endtime="20201030 10:58:05.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.084" endtime="20201030 10:58:05.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.702" endtime="20201030 10:58:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.697" endtime="20201030 10:58:05.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:05.101" level="INFO">${PHILIP_RES} = [{'diff': 0.0005709309999999967}, {'diff': 0.0005729020000000001}, {'diff': 0.0005709029999999976}, {'diff': 0.0005729029999999996}, {'diff': 0.0005709169999999972}, {'diff': 0.0005729299999999993}, {...</msg>
<status status="PASS" starttime="20201030 10:58:05.093" endtime="20201030 10:58:05.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.110" level="INFO">${RESULT} = {'diff': [0.0005709309999999967, 0.0005729020000000001, 0.0005709029999999976, 0.0005729029999999996, 0.0005709169999999972, 0.0005729299999999993, 0.0005709160000000046, 0.000572889, 0.00057088900000...</msg>
<status status="PASS" starttime="20201030 10:58:05.103" endtime="20201030 10:58:05.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.120" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:05.118" endtime="20201030 10:58:05.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.126" level="INFO">VALUE: [0.0005709309999999967, 0.0005729020000000001, 0.0005709029999999976, 0.0005729029999999996, 0.0005709169999999972, 0.0005729299999999993, 0.0005709160000000046, 0.000572889, 0.000570889000000005, 0.0005729159999999997, 0.0005709160000000046, 0.0005729169999999992, 0.0005708609999999989, 0.0005729169999999992, 0.0005709019999999981, 0.0005729029999999996, 0.0005709169999999972, 0.0005729169999999992, 0.0005709019999999981, 0.0005729029999999996, 0.000570889000000005, 0.000572987000000004, 0.0005709300000000042, 0.0005729300000000062, 0.0005895419999999985, 0.0005709169999999972, 0.0005729169999999992, 0.0005709159999999977, 0.0005729159999999997, 0.0005709309999999967, 0.0005729169999999992, 0.0005709019999999981, 0.0005729029999999996, 0.0005709169999999972, 0.0005729169999999992, 0.0005709160000000046, 0.0005729029999999996, 0.0005709030000000045, 0.0005729029999999996, 0.0005708749999999985, 0.0005728470000000013, 0.0005709169999999972, 0.000572889, 0.0005709029999999976, 0.0005728610000000009, 0.0005709170000000041, 0.0005729169999999922, 0.0005708469999999993, 0.0005729020000000001, 0.000570889000000005]</msg>
<status status="PASS" starttime="20201030 10:58:05.123" endtime="20201030 10:58:05.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.111" endtime="20201030 10:58:05.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.618" endtime="20201030 10:58:05.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.589" endtime="20201030 10:58:05.131"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.137" endtime="20201030 10:58:05.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.133" endtime="20201030 10:58:05.160"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.181" endtime="20201030 10:58:05.225"></status>
</kw>
<msg timestamp="20201030 10:58:05.227" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.178" endtime="20201030 10:58:05.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.233" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.229" endtime="20201030 10:58:05.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.235" endtime="20201030 10:58:05.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.171" endtime="20201030 10:58:05.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.165" endtime="20201030 10:58:05.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.259" endtime="20201030 10:58:05.600"></status>
</kw>
<msg timestamp="20201030 10:58:05.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037597306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.256" endtime="20201030 10:58:05.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037597306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.610" endtime="20201030 10:58:05.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.628" endtime="20201030 10:58:05.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.248" endtime="20201030 10:58:05.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.243" endtime="20201030 10:58:05.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:05.644" level="INFO">${PHILIP_RES} = [{'diff': 0.0005996119999999994}, {'diff': 0.0005995979999999998}, {'diff': 0.0005995699999999937}, {'diff': 0.0005995840000000002}, {'diff': 0.0005995840000000002}, {'diff': 0.0005995979999999998}, {...</msg>
<status status="PASS" starttime="20201030 10:58:05.637" endtime="20201030 10:58:05.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.653" level="INFO">${RESULT} = {'diff': [0.0005996119999999994, 0.0005995979999999998, 0.0005995699999999937, 0.0005995840000000002, 0.0005995840000000002, 0.0005995979999999998, 0.0005995559999999941, 0.0005995979999999998, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:58:05.646" endtime="20201030 10:58:05.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.664" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:05.661" endtime="20201030 10:58:05.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.669" level="INFO">VALUE: [0.0005996119999999994, 0.0005995979999999998, 0.0005995699999999937, 0.0005995840000000002, 0.0005995840000000002, 0.0005995979999999998, 0.0005995559999999941, 0.0005995979999999998, 0.000599528000000002, 0.0005995700000000007, 0.0005995840000000002, 0.0005995979999999998, 0.0005995979999999998, 0.0005996249999999995, 0.0005995979999999998, 0.0005995979999999998, 0.000599638999999999, 0.0005996109999999999, 0.0005995979999999998, 0.0005995979999999998, 0.0005996249999999995, 0.0005996109999999999, 0.0005995970000000003, 0.0005995840000000002, 0.0005995970000000003, 0.0005995689999999942, 0.0005995840000000002, 0.0005995970000000003, 0.0005995970000000003, 0.0005995970000000003, 0.0005995970000000003, 0.0005995830000000008, 0.0005996109999999999, 0.0005995970000000003, 0.0005996109999999999, 0.000599638999999999, 0.0005995970000000003, 0.0005995690000000012, 0.0005996109999999999, 0.0005995970000000003, 0.0005996109999999999, 0.0005995969999999934, 0.0006200420000000012, 0.000601639000000001, 0.0006016670000000002, 0.0006016520000000081, 0.000601639000000001, 0.0006016110000000019, 0.0006016529999999937, 0.0006016120000000014]</msg>
<status status="PASS" starttime="20201030 10:58:05.666" endtime="20201030 10:58:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.655" endtime="20201030 10:58:05.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.161" endtime="20201030 10:58:05.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.131" endtime="20201030 10:58:05.681"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.687" endtime="20201030 10:58:05.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.683" endtime="20201030 10:58:05.710"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.733" endtime="20201030 10:58:05.778"></status>
</kw>
<msg timestamp="20201030 10:58:05.779" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.730" endtime="20201030 10:58:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.786" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.782" endtime="20201030 10:58:05.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.789" endtime="20201030 10:58:05.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.723" endtime="20201030 10:58:05.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.717" endtime="20201030 10:58:05.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.814" endtime="20201030 10:58:06.155"></status>
</kw>
<msg timestamp="20201030 10:58:06.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036908347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037537319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.810" endtime="20201030 10:58:06.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036908347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037537319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.164" endtime="20201030 10:58:06.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.183" endtime="20201030 10:58:06.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.803" endtime="20201030 10:58:06.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.798" endtime="20201030 10:58:06.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:06.199" level="INFO">${PHILIP_RES} = [{'diff': 0.0006289719999999985}, {'diff': 0.000631084000000004}, {'diff': 0.0006408609999999995}, {'diff': 0.0006310830000000045}, {'diff': 0.0006289579999999989}, {'diff': 0.0006310829999999976}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:06.191" endtime="20201030 10:58:06.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.208" level="INFO">${RESULT} = {'diff': [0.0006289719999999985, 0.000631084000000004, 0.0006408609999999995, 0.0006310830000000045, 0.0006289579999999989, 0.0006310829999999976, 0.000628986000000005, 0.000631068999999998, 0.0006289...</msg>
<status status="PASS" starttime="20201030 10:58:06.201" endtime="20201030 10:58:06.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.219" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:06.216" endtime="20201030 10:58:06.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.226" level="INFO">VALUE: [0.0006289719999999985, 0.000631084000000004, 0.0006408609999999995, 0.0006310830000000045, 0.0006289579999999989, 0.0006310829999999976, 0.000628986000000005, 0.000631068999999998, 0.0006289580000000058, 0.0006310829999999976, 0.0006289719999999985, 0.0006310970000000041, 0.0006290419999999963, 0.0006310410000000058, 0.000628972999999998, 0.0006310830000000045, 0.0006289719999999985, 0.0006310969999999971, 0.0006289730000000049, 0.0006310829999999976, 0.000628986000000005, 0.0006310969999999971, 0.0006289589999999984, 0.0006310829999999976, 0.0006289579999999989, 0.0006310970000000041, 0.000628972999999998, 0.0006310970000000041, 0.000628985999999998, 0.0006311249999999963, 0.0006289450000000057, 0.0006310699999999975, 0.000628985999999998, 0.0006310829999999976, 0.0006289020000000006, 0.0006310420000000053, 0.000628985999999998, 0.0006310129999999997, 0.0006289860000000119, 0.0006310830000000045, 0.0006289579999999989, 0.000631068999999998, 0.0006289730000000049, 0.000631084000000004, 0.0006289579999999989, 0.0006310549999999915, 0.0006289720000000054, 0.000631055999999991, 0.0006290139999999972, 0.0006310969999999971]</msg>
<status status="PASS" starttime="20201030 10:58:06.221" endtime="20201030 10:58:06.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.210" endtime="20201030 10:58:06.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.712" endtime="20201030 10:58:06.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.682" endtime="20201030 10:58:06.231"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.237" endtime="20201030 10:58:06.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.233" endtime="20201030 10:58:06.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.281" endtime="20201030 10:58:06.326"></status>
</kw>
<msg timestamp="20201030 10:58:06.327" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.278" endtime="20201030 10:58:06.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.334" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.330" endtime="20201030 10:58:06.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.336" endtime="20201030 10:58:06.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.271" endtime="20201030 10:58:06.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.265" endtime="20201030 10:58:06.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.360" endtime="20201030 10:58:06.701"></status>
</kw>
<msg timestamp="20201030 10:58:06.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035129569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035788653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.356" endtime="20201030 10:58:06.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035129569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035788653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.711" endtime="20201030 10:58:06.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.729" endtime="20201030 10:58:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.349" endtime="20201030 10:58:06.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.344" endtime="20201030 10:58:06.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:06.745" level="INFO">${PHILIP_RES} = [{'diff': 0.0006590839999999973}, {'diff': 0.0006590280000000059}, {'diff': 0.000659027999999999}, {'diff': 0.0006590409999999991}, {'diff': 0.0006590549999999987}, {'diff': 0.000659027999999999}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:06.738" endtime="20201030 10:58:06.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.756" level="INFO">${RESULT} = {'diff': [0.0006590839999999973, 0.0006590280000000059, 0.000659027999999999, 0.0006590409999999991, 0.0006590549999999987, 0.000659027999999999, 0.0006590419999999986, 0.0006590420000000055, 0.000659...</msg>
<status status="PASS" starttime="20201030 10:58:06.747" endtime="20201030 10:58:06.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.766" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:06.764" endtime="20201030 10:58:06.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.772" level="INFO">VALUE: [0.0006590839999999973, 0.0006590280000000059, 0.000659027999999999, 0.0006590409999999991, 0.0006590549999999987, 0.000659027999999999, 0.0006590419999999986, 0.0006590420000000055, 0.0006590559999999981, 0.0006590549999999987, 0.0006590139999999994, 0.0006590139999999994, 0.0006590560000000051, 0.0006590420000000055, 0.0006590559999999981, 0.0006729580000000013, 0.0006612369999999951, 0.000661222000000003, 0.0006612780000000013, 0.0006612080000000034, 0.0006612089999999959, 0.000661222000000003, 0.0006612089999999959, 0.000661222000000003, 0.0006612230000000024, 0.0006611939999999969, 0.0006612090000000029, 0.0006612639999999947, 0.0006611530000000046, 0.0006612079999999965, 0.0006612230000000024, 0.0006611939999999969, 0.0006612090000000029, 0.0006611669999999972, 0.0006612090000000029, 0.000661221999999996, 0.0006612089999999959, 0.0006612360000000025, 0.0006612090000000029, 0.0006612079999999965, 0.000661222000000003, 0.0006612079999999965, 0.0006612230000000024, 0.0006612079999999965, 0.0006611950000000033, 0.0006612219999999891, 0.0006612230000000024, 0.0006612360000000095, 0.0006612079999999965, 0.0006612079999999965]</msg>
<status status="PASS" starttime="20201030 10:58:06.769" endtime="20201030 10:58:06.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.757" endtime="20201030 10:58:06.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.261" endtime="20201030 10:58:06.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.232" endtime="20201030 10:58:06.777"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.783" endtime="20201030 10:58:06.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.779" endtime="20201030 10:58:06.806"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.829" endtime="20201030 10:58:06.876"></status>
</kw>
<msg timestamp="20201030 10:58:06.877" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.825" endtime="20201030 10:58:06.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.884" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.880" endtime="20201030 10:58:06.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.886" endtime="20201030 10:58:06.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.817" endtime="20201030 10:58:06.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.812" endtime="20201030 10:58:06.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.910" endtime="20201030 10:58:07.249"></status>
</kw>
<msg timestamp="20201030 10:58:07.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037803111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.907" endtime="20201030 10:58:07.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037803111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.253" endtime="20201030 10:58:07.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.261" endtime="20201030 10:58:07.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.899" endtime="20201030 10:58:07.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.894" endtime="20201030 10:58:07.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:07.269" level="INFO">${PHILIP_RES} = [{'diff': 0.0006898050000000017}, {'diff': 0.000692054999999997}, {'diff': 0.0006898330000000008}, {'diff': 0.0006920270000000048}, {'diff': 0.0006898050000000017}, {'diff': 0.0006920419999999969}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:07.265" endtime="20201030 10:58:07.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.274" level="INFO">${RESULT} = {'diff': [0.0006898050000000017, 0.000692054999999997, 0.0006898330000000008, 0.0006920270000000048, 0.0006898050000000017, 0.0006920419999999969, 0.0006898470000000004, 0.0006920269999999978, 0.00068...</msg>
<status status="PASS" starttime="20201030 10:58:07.270" endtime="20201030 10:58:07.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.279" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:07.278" endtime="20201030 10:58:07.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.281" level="INFO">VALUE: [0.0006898050000000017, 0.000692054999999997, 0.0006898330000000008, 0.0006920270000000048, 0.0006898050000000017, 0.0006920419999999969, 0.0006898470000000004, 0.0006920269999999978, 0.0006898470000000004, 0.0006920270000000048, 0.0006898190000000012, 0.000692054999999997, 0.0006897910000000021, 0.0006920129999999983, 0.0006898330000000008, 0.0006920280000000043, 0.0006898050000000017, 0.0006920139999999977, 0.0006897500000000029, 0.0006920140000000047, 0.0006897919999999946, 0.000692054999999997, 0.0006898190000000012, 0.0006920279999999973, 0.000689861, 0.0006920420000000038, 0.0006898200000000007, 0.0006898060000000011, 0.0006920279999999973, 0.0006898470000000004, 0.0006920420000000038, 0.0006898200000000007, 0.0006920139999999977, 0.0006898060000000011, 0.0006920279999999973, 0.0006898060000000011, 0.0006920279999999973, 0.0006897639999999955, 0.0006920279999999973, 0.0006898480000000068, 0.0006920420000000038, 0.0006898200000000076, 0.0006920139999999908, 0.0006898189999999943, 0.0006920420000000038, 0.0006898189999999943, 0.0006920410000000043, 0.0006898749999999926, 0.0006920560000000103, 0.0006898049999999878]</msg>
<status status="PASS" starttime="20201030 10:58:07.280" endtime="20201030 10:58:07.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.275" endtime="20201030 10:58:07.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.807" endtime="20201030 10:58:07.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.778" endtime="20201030 10:58:07.284"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.287" endtime="20201030 10:58:07.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.285" endtime="20201030 10:58:07.307"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.317" endtime="20201030 10:58:07.364"></status>
</kw>
<msg timestamp="20201030 10:58:07.365" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.315" endtime="20201030 10:58:07.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.371" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.367" endtime="20201030 10:58:07.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.374" endtime="20201030 10:58:07.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.312" endtime="20201030 10:58:07.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.309" endtime="20201030 10:58:07.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.398" endtime="20201030 10:58:07.746"></status>
</kw>
<msg timestamp="20201030 10:58:07.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.394" endtime="20201030 10:58:07.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.755" endtime="20201030 10:58:07.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.773" endtime="20201030 10:58:07.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.387" endtime="20201030 10:58:07.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.382" endtime="20201030 10:58:07.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:07.790" level="INFO">${PHILIP_RES} = [{'diff': 0.0007212920000000018}, {'diff': 0.0007212909999999989}, {'diff': 0.0007212639999999992}, {'diff': 0.0007213329999999976}, {'diff': 0.0007212919999999984}, {'diff': 0.0007212779999999988}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.782" endtime="20201030 10:58:07.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.799" level="INFO">${RESULT} = {'diff': [0.0007212920000000018, 0.0007212909999999989, 0.0007212639999999992, 0.0007213329999999976, 0.0007212919999999984, 0.0007212779999999988, 0.0007213330000000011, 0.0007212780000000023, 0.0007...</msg>
<status status="PASS" starttime="20201030 10:58:07.792" endtime="20201030 10:58:07.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.809" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:07.807" endtime="20201030 10:58:07.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.814" level="INFO">VALUE: [0.0007212920000000018, 0.0007212909999999989, 0.0007212639999999992, 0.0007213329999999976, 0.0007212919999999984, 0.0007212779999999988, 0.0007213330000000011, 0.0007212780000000023, 0.0007212640000000027, 0.0007212920000000018, 0.000721208000000001, 0.0007212499999999997, 0.0007212499999999997, 0.0007212919999999984, 0.0007212780000000023, 0.0007212499999999997, 0.0007212499999999997, 0.0007212639999999992, 0.0007212639999999992, 0.0007212769999999993, 0.0007212919999999984, 0.0007212780000000057, 0.0007212779999999988, 0.0007212780000000057, 0.0007212779999999988, 0.0007212779999999988, 0.0007212769999999993, 0.0007212220000000005, 0.0007212769999999993, 0.0007212779999999988, 0.0007212780000000057, 0.0007212639999999992, 0.0007461250000000003, 0.0007235280000000011, 0.0007235420000000006, 0.0007235279999999941, 0.0007235550000000007, 0.0007235410000000012, 0.0007235969999999994, 0.0007235560000000002, 0.0007235420000000006, 0.0007235410000000012, 0.0007235550000000007, 0.0007235699999999998, 0.0007235420000000006, 0.0007235560000000002, 0.0007235690000000003, 0.0007235560000000002, 0.0007235280000000011, 0.0007235420000000006]</msg>
<status status="PASS" starttime="20201030 10:58:07.812" endtime="20201030 10:58:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.800" endtime="20201030 10:58:07.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.307" endtime="20201030 10:58:07.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.284" endtime="20201030 10:58:07.820"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.826" endtime="20201030 10:58:07.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.822" endtime="20201030 10:58:07.849"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.872" endtime="20201030 10:58:07.924"></status>
</kw>
<msg timestamp="20201030 10:58:07.925" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.868" endtime="20201030 10:58:07.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.931" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.927" endtime="20201030 10:58:07.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.934" endtime="20201030 10:58:07.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.861" endtime="20201030 10:58:07.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.855" endtime="20201030 10:58:07.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.957" endtime="20201030 10:58:08.298"></status>
</kw>
<msg timestamp="20201030 10:58:08.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039413736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.954" endtime="20201030 10:58:08.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039413736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.307" endtime="20201030 10:58:08.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.326" endtime="20201030 10:58:08.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.947" endtime="20201030 10:58:08.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.942" endtime="20201030 10:58:08.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:08.342" level="INFO">${PHILIP_RES} = [{'diff': 0.0007534999999999972}, {'diff': 0.0007557090000000002}, {'diff': 0.0007534450000000054}, {'diff': 0.0007557499999999995}, {'diff': 0.0007534309999999989}, {'diff': 0.000755763999999999}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:08.334" endtime="20201030 10:58:08.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.351" level="INFO">${RESULT} = {'diff': [0.0007534999999999972, 0.0007557090000000002, 0.0007534450000000054, 0.0007557499999999995, 0.0007534309999999989, 0.000755763999999999, 0.0007534159999999998, 0.0007557359999999999, 0.00075...</msg>
<status status="PASS" starttime="20201030 10:58:08.344" endtime="20201030 10:58:08.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.361" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:08.359" endtime="20201030 10:58:08.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.367" level="INFO">VALUE: [0.0007534999999999972, 0.0007557090000000002, 0.0007534450000000054, 0.0007557499999999995, 0.0007534309999999989, 0.000755763999999999, 0.0007534159999999998, 0.0007557359999999999, 0.0007534159999999998, 0.0007556799999999947, 0.0007534440000000059, 0.0007557359999999999, 0.0007534449999999984, 0.0007558190000000048, 0.0007534029999999997, 0.000755763999999999, 0.000753361000000001, 0.0007557499999999995, 0.0007534159999999998, 0.000755763999999999, 0.000753443999999999, 0.0007557920000000051, 0.0007534309999999989, 0.0007557359999999999, 0.0007534169999999993, 0.0007557499999999995, 0.0007534169999999993, 0.000755763999999999, 0.0007534449999999984, 0.0007813610000000082, 0.0007534170000000062, 0.0007557639999999921, 0.0007534449999999915, 0.000755764000000006, 0.0007534169999999923, 0.0007557499999999995, 0.0007534160000000067, 0.0007557499999999995, 0.0007534299999999994, 0.0007557639999999921, 0.0007534309999999989, 0.0007558330000000113, 0.0007534309999999989, 0.0007557639999999921, 0.0007534449999999915, 0.000755764000000006, 0.0007534440000000059, 0.0007557779999999986, 0.0007534299999999994, 0.000755764000000006]</msg>
<status status="PASS" starttime="20201030 10:58:08.364" endtime="20201030 10:58:08.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.353" endtime="20201030 10:58:08.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.851" endtime="20201030 10:58:08.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.821" endtime="20201030 10:58:08.372"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.378" endtime="20201030 10:58:08.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.374" endtime="20201030 10:58:08.401"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.424" endtime="20201030 10:58:08.476"></status>
</kw>
<msg timestamp="20201030 10:58:08.477" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.421" endtime="20201030 10:58:08.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.483" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.479" endtime="20201030 10:58:08.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.486" endtime="20201030 10:58:08.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.414" endtime="20201030 10:58:08.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.408" endtime="20201030 10:58:08.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.510" endtime="20201030 10:58:08.853"></status>
</kw>
<msg timestamp="20201030 10:58:08.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036961389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037747681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.506" endtime="20201030 10:58:08.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036961389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037747681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.863" endtime="20201030 10:58:08.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.881" endtime="20201030 10:58:08.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.499" endtime="20201030 10:58:08.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.494" endtime="20201030 10:58:08.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:08.898" level="INFO">${PHILIP_RES} = [{'diff': 0.0007862920000000009}, {'diff': 0.0007862780000000014}, {'diff': 0.000786276999999995}, {'diff': 0.0007862920000000009}, {'diff': 0.0007862640000000018}, {'diff': 0.0007862779999999944}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:08.890" endtime="20201030 10:58:08.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.908" level="INFO">${RESULT} = {'diff': [0.0007862920000000009, 0.0007862780000000014, 0.000786276999999995, 0.0007862920000000009, 0.0007862640000000018, 0.0007862779999999944, 0.0007863469999999997, 0.0007862630000000023, 0.00078...</msg>
<status status="PASS" starttime="20201030 10:58:08.900" endtime="20201030 10:58:08.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.919" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:08.916" endtime="20201030 10:58:08.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.926" level="INFO">VALUE: [0.0007862920000000009, 0.0007862780000000014, 0.000786276999999995, 0.0007862920000000009, 0.0007862640000000018, 0.0007862779999999944, 0.0007863469999999997, 0.0007862630000000023, 0.0007862909999999945, 0.0007862780000000014, 0.0007862920000000009, 0.0007862780000000014, 0.0007862780000000014, 0.000786305000000001, 0.0007862920000000009, 0.0007862920000000009, 0.0007862920000000009, 0.0007863060000000005, 0.0007862770000000019, 0.0007863049999999941, 0.0007862780000000014, 0.0007862920000000009, 0.0007862780000000014, 0.0007862500000000022, 0.0007862640000000018, 0.0007862770000000019, 0.0007862780000000014, 0.0007862500000000022, 0.0007862780000000014, 0.0007863330000000002, 0.0007862770000000019, 0.0007862910000000084, 0.0007862639999999949, 0.0007862920000000079, 0.0007863189999999937, 0.0007862640000000087, 0.0008090969999999947, 0.0007886799999999999, 0.0007886659999999934, 0.0007886530000000003, 0.0007886669999999929, 0.0007886520000000008, 0.0007886809999999994, 0.0007886809999999994, 0.0007886799999999999, 0.0007886519999999869, 0.0007886530000000003, 0.0007886670000000068, 0.0007886799999999999, 0.0007886670000000068]</msg>
<status status="PASS" starttime="20201030 10:58:08.921" endtime="20201030 10:58:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.910" endtime="20201030 10:58:08.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.402" endtime="20201030 10:58:08.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.373" endtime="20201030 10:58:08.931"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.937" endtime="20201030 10:58:08.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.933" endtime="20201030 10:58:08.960"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.981" endtime="20201030 10:58:09.035"></status>
</kw>
<msg timestamp="20201030 10:58:09.037" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.978" endtime="20201030 10:58:09.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.043" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.039" endtime="20201030 10:58:09.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.045" endtime="20201030 10:58:09.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.971" endtime="20201030 10:58:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.965" endtime="20201030 10:58:09.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.069" endtime="20201030 10:58:09.410"></status>
</kw>
<msg timestamp="20201030 10:58:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036011819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.065" endtime="20201030 10:58:09.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036011819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.419" endtime="20201030 10:58:09.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.437" endtime="20201030 10:58:09.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.058" endtime="20201030 10:58:09.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.053" endtime="20201030 10:58:09.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:09.453" level="INFO">${PHILIP_RES} = [{'diff': 0.000819832999999999}, {'diff': 0.0008222909999999958}, {'diff': 0.0008198469999999985}, {'diff': 0.0008222630000000036}, {'diff': 0.0008198199999999989}, {'diff': 0.0008222640000000031}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:09.446" endtime="20201030 10:58:09.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.468" level="INFO">${RESULT} = {'diff': [0.000819832999999999, 0.0008222909999999958, 0.0008198469999999985, 0.0008222630000000036, 0.0008198199999999989, 0.0008222640000000031, 0.0008198890000000042, 0.0008222640000000031, 0.00081...</msg>
<status status="PASS" starttime="20201030 10:58:09.456" endtime="20201030 10:58:09.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.479" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:09.476" endtime="20201030 10:58:09.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.484" level="INFO">VALUE: [0.000819832999999999, 0.0008222909999999958, 0.0008198469999999985, 0.0008222630000000036, 0.0008198199999999989, 0.0008222640000000031, 0.0008198890000000042, 0.0008222640000000031, 0.0008198339999999985, 0.000822235999999997, 0.000819750000000001, 0.0008223049999999954, 0.0008198609999999981, 0.0008222769999999963, 0.0008198189999999994, 0.0008222780000000027, 0.0008198060000000063, 0.0008222780000000027, 0.0008198199999999989, 0.0008222920000000022, 0.0008198059999999993, 0.0008222779999999957, 0.000819832999999999, 0.0008222629999999967, 0.0008198189999999994, 0.000822235999999997, 0.0008197919999999997, 0.0008222640000000031, 0.0008198200000000058, 0.0008222640000000031, 0.0008198199999999989, 0.0008222639999999962, 0.000819832999999992, 0.0008222780000000096, 0.0008198330000000059, 0.0008335129999999941, 0.0008198330000000059, 0.0008222640000000031, 0.0008197780000000071, 0.0008222640000000031, 0.0008198340000000054, 0.0008222920000000022, 0.000819832999999992, 0.0008222639999999892, 0.0008198610000000051, 0.0008222630000000036, 0.0008198330000000059, 0.000822333999999994, 0.0008198749999999977, 0.0008222780000000096]</msg>
<status status="PASS" starttime="20201030 10:58:09.481" endtime="20201030 10:58:09.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.470" endtime="20201030 10:58:09.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.961" endtime="20201030 10:58:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.932" endtime="20201030 10:58:09.489"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.495" endtime="20201030 10:58:09.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.491" endtime="20201030 10:58:09.519"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.540" endtime="20201030 10:58:09.595"></status>
</kw>
<msg timestamp="20201030 10:58:09.596" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.536" endtime="20201030 10:58:09.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.602" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.598" endtime="20201030 10:58:09.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.605" endtime="20201030 10:58:09.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.529" endtime="20201030 10:58:09.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.524" endtime="20201030 10:58:09.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.628" endtime="20201030 10:58:09.975"></status>
</kw>
<msg timestamp="20201030 10:58:09.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035220167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036074181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.625" endtime="20201030 10:58:09.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035220167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036074181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.984" endtime="20201030 10:58:10.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.002" endtime="20201030 10:58:10.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.618" endtime="20201030 10:58:10.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.613" endtime="20201030 10:58:10.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:10.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0008540140000000002}, {'diff': 0.0008540699999999984}, {'diff': 0.0008540559999999989}, {'diff': 0.0008540279999999997}, {'diff': 0.0008540279999999997}, {'diff': 0.0008540830000000055}, {...</msg>
<status status="PASS" starttime="20201030 10:58:10.011" endtime="20201030 10:58:10.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.029" level="INFO">${RESULT} = {'diff': [0.0008540140000000002, 0.0008540699999999984, 0.0008540559999999989, 0.0008540279999999997, 0.0008540279999999997, 0.0008540830000000055, 0.0008540829999999985, 0.0008541390000000038, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:58:10.021" endtime="20201030 10:58:10.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.040" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:10.038" endtime="20201030 10:58:10.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.046" level="INFO">VALUE: [0.0008540140000000002, 0.0008540699999999984, 0.0008540559999999989, 0.0008540279999999997, 0.0008540279999999997, 0.0008540830000000055, 0.0008540829999999985, 0.0008541390000000038, 0.0008541109999999977, 0.0008540419999999993, 0.000854068999999999, 0.0008540419999999993, 0.0008540549999999994, 0.0008540559999999989, 0.0008540690000000059, 0.0008540549999999994, 0.000854068999999999, 0.0008540829999999985, 0.0008541249999999972, 0.000854068999999999, 0.0008540419999999993, 0.0008540550000000063, 0.0008540549999999994, 0.000854068999999999, 0.000854068999999999, 0.0008540549999999994, 0.0008540409999999998, 0.0008540279999999997, 0.0008540690000000059, 0.0008540270000000003, 0.0008540550000000063, 0.0008540280000000067, 0.0008749720000000016, 0.0008565970000000006, 0.0008565560000000083, 0.0008565690000000015, 0.0008565700000000009, 0.0008565559999999944, 0.0008565560000000083, 0.0008565559999999944, 0.0008565700000000009, 0.0008565560000000083, 0.0008565700000000009, 0.0008565559999999944, 0.0008565839999999936, 0.0008565559999999944, 0.0008565700000000009, 0.0008565700000000009, 0.0008565700000000009, 0.0008565700000000009]</msg>
<status status="PASS" starttime="20201030 10:58:10.043" endtime="20201030 10:58:10.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.031" endtime="20201030 10:58:10.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.520" endtime="20201030 10:58:10.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.490" endtime="20201030 10:58:10.051"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.057" endtime="20201030 10:58:10.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.053" endtime="20201030 10:58:10.080"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.101" endtime="20201030 10:58:10.158"></status>
</kw>
<msg timestamp="20201030 10:58:10.160" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.098" endtime="20201030 10:58:10.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.166" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.162" endtime="20201030 10:58:10.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.168" endtime="20201030 10:58:10.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.091" endtime="20201030 10:58:10.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.085" endtime="20201030 10:58:10.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.192" endtime="20201030 10:58:10.536"></status>
</kw>
<msg timestamp="20201030 10:58:10.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035203056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.189" endtime="20201030 10:58:10.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035203056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.545" endtime="20201030 10:58:10.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.564" endtime="20201030 10:58:10.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.181" endtime="20201030 10:58:10.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.177" endtime="20201030 10:58:10.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:10.580" level="INFO">${PHILIP_RES} = [{'diff': 0.0008889859999999944}, {'diff': 0.0008915560000000017}, {'diff': 0.0008890140000000005}, {'diff': 0.0008915700000000013}, {'diff': 0.000889013000000001}, {'diff': 0.0008915560000000017}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:10.572" endtime="20201030 10:58:10.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.588" level="INFO">${RESULT} = {'diff': [0.0008889859999999944, 0.0008915560000000017, 0.0008890140000000005, 0.0008915700000000013, 0.000889013000000001, 0.0008915560000000017, 0.0008890000000000009, 0.0008915560000000017, 0.00088...</msg>
<status status="PASS" starttime="20201030 10:58:10.582" endtime="20201030 10:58:10.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.593" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:10.592" endtime="20201030 10:58:10.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.596" level="INFO">VALUE: [0.0008889859999999944, 0.0008915560000000017, 0.0008890140000000005, 0.0008915700000000013, 0.000889013000000001, 0.0008915560000000017, 0.0008890000000000009, 0.0008915560000000017, 0.0008889860000000013, 0.0008915559999999947, 0.0008890140000000005, 0.0008915420000000021, 0.0008890000000000009, 0.0008915419999999952, 0.0008890000000000009, 0.0008915550000000022, 0.0008890000000000009, 0.0008915550000000022, 0.0008889859999999944, 0.0008915560000000017, 0.0008890000000000009, 0.000891514000000003, 0.0008890000000000009, 0.0008915549999999953, 0.0008890140000000005, 0.0008915550000000022, 0.0009112780000000015, 0.0008915419999999952, 0.0008890000000000078, 0.0008915560000000017, 0.0008889859999999944, 0.0008915280000000025, 0.0008889720000000018, 0.0008915700000000082, 0.000888999999999987, 0.0008915280000000025, 0.0008890139999999935, 0.0008915560000000017, 0.0008889859999999944, 0.000891513999999996, 0.0008889450000000021, 0.0008915550000000022, 0.0008890000000000009, 0.0008915559999999878, 0.0008889580000000091, 0.000891513999999996, 0.0008890140000000074, 0.0008915830000000013, 0.0008889720000000018, 0.0008915419999999952]</msg>
<status status="PASS" starttime="20201030 10:58:10.594" endtime="20201030 10:58:10.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.589" endtime="20201030 10:58:10.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.081" endtime="20201030 10:58:10.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.052" endtime="20201030 10:58:10.598"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.601" endtime="20201030 10:58:10.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.599" endtime="20201030 10:58:10.621"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.631" endtime="20201030 10:58:10.689"></status>
</kw>
<msg timestamp="20201030 10:58:10.689" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.629" endtime="20201030 10:58:10.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.692" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.690" endtime="20201030 10:58:10.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.693" endtime="20201030 10:58:10.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.626" endtime="20201030 10:58:10.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.623" endtime="20201030 10:58:10.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.704" endtime="20201030 10:58:11.031"></status>
</kw>
<msg timestamp="20201030 10:58:11.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.703" endtime="20201030 10:58:11.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.040" endtime="20201030 10:58:11.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.059" endtime="20201030 10:58:11.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.699" endtime="20201030 10:58:11.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.697" endtime="20201030 10:58:11.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:11.075" level="INFO">${PHILIP_RES} = [{'diff': 0.0009246109999999988}, {'diff': 0.0009246119999999983}, {'diff': 0.0009246250000000018}, {'diff': 0.0009246110000000023}, {'diff': 0.0009246390000000014}, {'diff': 0.0009246109999999988}, {...</msg>
<status status="PASS" starttime="20201030 10:58:11.067" endtime="20201030 10:58:11.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.084" level="INFO">${RESULT} = {'diff': [0.0009246109999999988, 0.0009246119999999983, 0.0009246250000000018, 0.0009246110000000023, 0.0009246390000000014, 0.0009246109999999988, 0.0009246389999999979, 0.0009246389999999979, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:58:11.077" endtime="20201030 10:58:11.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.095" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:11.092" endtime="20201030 10:58:11.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.100" level="INFO">VALUE: [0.0009246109999999988, 0.0009246119999999983, 0.0009246250000000018, 0.0009246110000000023, 0.0009246390000000014, 0.0009246109999999988, 0.0009246389999999979, 0.0009246389999999979, 0.0009246940000000002, 0.0009246249999999984, 0.0009246249999999984, 0.0009246529999999975, 0.0009246249999999984, 0.0009246249999999984, 0.000924651999999998, 0.0009246379999999985, 0.0009246390000000049, 0.0009246530000000044, 0.0009246110000000057, 0.0009246390000000049, 0.0009506810000000018, 0.000924651999999998, 0.0009245979999999987, 0.0009246249999999984, 0.0009246530000000044, 0.0009246250000000053, 0.0009246390000000049, 0.0009245410000000009, 0.000924667000000004, 0.0009246109999999988, 0.0009246109999999988, 0.0009246249999999984, 0.0009246940000000037, 0.0009246249999999984, 0.0009246249999999984, 0.0009245979999999987, 0.0009246119999999983, 0.0009246109999999988, 0.0009246249999999984, 0.0009246109999999988, 0.0009246109999999988, 0.0009245690000000001, 0.0009246529999999975, 0.0009245690000000001, 0.0009245969999999992, 0.0009246529999999975, 0.0009246799999999972, 0.0009246109999999919, 0.000924638999999991, 0.0009246249999999984]</msg>
<status status="PASS" starttime="20201030 10:58:11.097" endtime="20201030 10:58:11.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.086" endtime="20201030 10:58:11.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.622" endtime="20201030 10:58:11.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.598" endtime="20201030 10:58:11.111"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.116" endtime="20201030 10:58:11.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.113" endtime="20201030 10:58:11.140"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.163" endtime="20201030 10:58:11.224"></status>
</kw>
<msg timestamp="20201030 10:58:11.226" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.160" endtime="20201030 10:58:11.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.232" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.228" endtime="20201030 10:58:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.234" endtime="20201030 10:58:11.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.152" endtime="20201030 10:58:11.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.147" endtime="20201030 10:58:11.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.258" endtime="20201030 10:58:11.604"></status>
</kw>
<msg timestamp="20201030 10:58:11.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036847861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037808819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.255" endtime="20201030 10:58:11.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036847861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037808819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.613" endtime="20201030 10:58:11.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.632" endtime="20201030 10:58:11.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.247" endtime="20201030 10:58:11.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.243" endtime="20201030 10:58:11.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:11.648" level="INFO">${PHILIP_RES} = [{'diff': 0.0009609579999999979}, {'diff': 0.0009636250000000027}, {'diff': 0.0009609720000000044}, {'diff': 0.0009635970000000035}, {'diff': 0.0009609719999999974}, {'diff': 0.0009636249999999957}, {...</msg>
<status status="PASS" starttime="20201030 10:58:11.641" endtime="20201030 10:58:11.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.657" level="INFO">${RESULT} = {'diff': [0.0009609579999999979, 0.0009636250000000027, 0.0009609720000000044, 0.0009635970000000035, 0.0009609719999999974, 0.0009636249999999957, 0.0009609589999999973, 0.0009636249999999957, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:58:11.650" endtime="20201030 10:58:11.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.668" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:11.666" endtime="20201030 10:58:11.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.675" level="INFO">VALUE: [0.0009609579999999979, 0.0009636250000000027, 0.0009609720000000044, 0.0009635970000000035, 0.0009609719999999974, 0.0009636249999999957, 0.0009609589999999973, 0.0009636249999999957, 0.0009609029999999991, 0.0009636250000000027, 0.0009609580000000048, 0.000993444000000003, 0.0009636390000000022, 0.0009609449999999978, 0.0009636109999999962, 0.0009609589999999973, 0.0009636390000000022, 0.0009609029999999991, 0.0009636250000000027, 0.0009609579999999979, 0.0009636250000000027, 0.000960985999999997, 0.0009636109999999962, 0.0009609449999999978, 0.0009636250000000027, 0.0009609449999999978, 0.0009636109999999892, 0.0009609299999999987, 0.0009636120000000026, 0.0009609299999999987, 0.0009636110000000031, 0.0009609589999999973, 0.0009636110000000031, 0.0009609450000000047, 0.0009636249999999957, 0.0009609579999999979, 0.0009636110000000031, 0.0009609299999999987, 0.0009635829999999901, 0.0009609579999999979, 0.0009635689999999975, 0.0009609309999999982, 0.0009636530000000088, 0.0009609450000000047, 0.0009707500000000063, 0.0009636109999999892, 0.0009608889999999926, 0.0009636249999999957, 0.0009608890000000064, 0.0009635979999999961]</msg>
<status status="PASS" starttime="20201030 10:58:11.670" endtime="20201030 10:58:11.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.659" endtime="20201030 10:58:11.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.141" endtime="20201030 10:58:11.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.111" endtime="20201030 10:58:11.680"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.688" endtime="20201030 10:58:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.683" endtime="20201030 10:58:11.711"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.733" endtime="20201030 10:58:11.796"></status>
</kw>
<msg timestamp="20201030 10:58:11.797" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.729" endtime="20201030 10:58:11.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.803" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.799" endtime="20201030 10:58:11.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.806" endtime="20201030 10:58:11.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.722" endtime="20201030 10:58:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.717" endtime="20201030 10:58:11.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.829" endtime="20201030 10:58:12.169"></status>
</kw>
<msg timestamp="20201030 10:58:12.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035468, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036465972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:11.826" endtime="20201030 10:58:12.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035468, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036465972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:12.179" endtime="20201030 10:58:12.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.197" endtime="20201030 10:58:12.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.819" endtime="20201030 10:58:12.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.814" endtime="20201030 10:58:12.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.213" level="INFO">${PHILIP_RES} = [{'diff': 0.0009979719999999997}, {'diff': 0.0009979580000000002}, {'diff': 0.000997945}, {'diff': 0.0009979580000000002}, {'diff': 0.0009979589999999997}, {'diff': 0.0009979580000000002}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:58:12.205" endtime="20201030 10:58:12.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.223" level="INFO">${RESULT} = {'diff': [0.0009979719999999997, 0.0009979580000000002, 0.000997945, 0.0009979580000000002, 0.0009979589999999997, 0.0009979580000000002, 0.0009980409999999981, 0.0009979729999999992, 0.00099797200000...</msg>
<status status="PASS" starttime="20201030 10:58:12.215" endtime="20201030 10:58:12.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.234" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.232" endtime="20201030 10:58:12.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.239" level="INFO">VALUE: [0.0009979719999999997, 0.0009979580000000002, 0.000997945, 0.0009979580000000002, 0.0009979589999999997, 0.0009979580000000002, 0.0009980409999999981, 0.0009979729999999992, 0.0009979720000000067, 0.000997917000000001, 0.0009979729999999992, 0.0009979580000000002, 0.0009979719999999997, 0.0009978879999999954, 0.000997930000000001, 0.000997945, 0.0009979719999999997, 0.0009979580000000002, 0.000997945, 0.0009979859999999993, 0.0009979580000000002, 0.000998027999999998, 0.0009979580000000002, 0.0009979719999999997, 0.0009979999999999989, 0.0009979580000000071, 0.0009979729999999992, 0.0009979579999999932, 0.0009979719999999997, 0.0009979999999999989, 0.0010215420000000003, 0.0010006800000000038, 0.0010007219999999956, 0.0010006940000000103, 0.0010006939999999964, 0.001000722999999995, 0.001000722999999995, 0.0010006800000000038, 0.0010006109999999985, 0.0010006800000000038, 0.0010006800000000038, 0.001000707999999989, 0.001000694999999996, 0.001000694999999996, 0.0010006939999999964, 0.0010006940000000103, 0.0010006109999999985, 0.0010006800000000038, 0.0010006810000000033, 0.001000694999999996]</msg>
<status status="PASS" starttime="20201030 10:58:12.236" endtime="20201030 10:58:12.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.225" endtime="20201030 10:58:12.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.712" endtime="20201030 10:58:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.681" endtime="20201030 10:58:12.244"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.250" endtime="20201030 10:58:12.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.247" endtime="20201030 10:58:12.274"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.295" endtime="20201030 10:58:12.361"></status>
</kw>
<msg timestamp="20201030 10:58:12.362" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.292" endtime="20201030 10:58:12.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.368" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.364" endtime="20201030 10:58:12.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.370" endtime="20201030 10:58:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.284" endtime="20201030 10:58:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.279" endtime="20201030 10:58:12.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.394" endtime="20201030 10:58:12.735"></status>
</kw>
<msg timestamp="20201030 10:58:12.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035341375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.391" endtime="20201030 10:58:12.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035341375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.744" endtime="20201030 10:58:12.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.763" endtime="20201030 10:58:12.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.383" endtime="20201030 10:58:12.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.379" endtime="20201030 10:58:12.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.779" level="INFO">${PHILIP_RES} = [{'diff': 0.0010356809999999966}, {'diff': 0.0010384859999999982}, {'diff': 0.0010356810000000036}, {'diff': 0.0010384590000000055}, {'diff': 0.0010357090000000027}, {'diff': 0.0010384869999999977}, {...</msg>
<status status="PASS" starttime="20201030 10:58:12.771" endtime="20201030 10:58:12.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.790" level="INFO">${RESULT} = {'diff': [0.0010356809999999966, 0.0010384859999999982, 0.0010356810000000036, 0.0010384590000000055, 0.0010357090000000027, 0.0010384869999999977, 0.0010357219999999959, 0.001038457999999999, 0.00103...</msg>
<status status="PASS" starttime="20201030 10:58:12.781" endtime="20201030 10:58:12.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.800" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.798" endtime="20201030 10:58:12.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.806" level="INFO">VALUE: [0.0010356809999999966, 0.0010384859999999982, 0.0010356810000000036, 0.0010384590000000055, 0.0010357090000000027, 0.0010384869999999977, 0.0010357219999999959, 0.001038457999999999, 0.0010356529999999975, 0.001038444999999999, 0.001035667000000004, 0.001038457999999999, 0.0010356659999999976, 0.0010384719999999986, 0.0010356939999999967, 0.0010384439999999995, 0.0010356940000000037, 0.00103843, 0.0010356659999999976, 0.0010384859999999982, 0.0010357219999999959, 0.0010384859999999982, 0.0010356940000000037, 0.001038444999999999, 0.0010618469999999908, 0.0010356110000000057, 0.0010384439999999995, 0.0010356799999999972, 0.001038458000000006, 0.0010357080000000102, 0.0010384719999999986, 0.0010356810000000105, 0.001038527999999997, 0.0010356950000000031, 0.0010384590000000055, 0.0010357089999999958, 0.001038472999999998, 0.0010356810000000105, 0.001038458000000006, 0.0010357089999999958, 0.0010384719999999986, 0.0010356669999999901, 0.0010384439999999995, 0.0010356799999999972, 0.001038458000000006, 0.0010356799999999972, 0.0010384719999999986, 0.0010356940000000037, 0.0010385140000000043, 0.001035638999999991]</msg>
<status status="PASS" starttime="20201030 10:58:12.803" endtime="20201030 10:58:12.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.791" endtime="20201030 10:58:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.275" endtime="20201030 10:58:12.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.245" endtime="20201030 10:58:12.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.393" endtime="20201030 10:58:12.811"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:44.291" endtime="20201030 10:58:12.813" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:16.236" endtime="20201030 10:58:12.837"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.018" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:13.034" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:14.980" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:13.014" endtime="20201030 10:58:14.981"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.987" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:14.983" endtime="20201030 10:58:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.012" endtime="20201030 10:58:14.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.994" endtime="20201030 10:58:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.991" endtime="20201030 10:58:15.328"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.358" endtime="20201030 10:58:15.384"></status>
</kw>
<msg timestamp="20201030 10:58:15.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests...</msg>
<status status="PASS" starttime="20201030 10:58:15.354" endtime="20201030 10:58:15.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests...</msg>
<status status="PASS" starttime="20201030 10:58:15.388" endtime="20201030 10:58:15.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.400" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:15.395" endtime="20201030 10:58:15.400"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:15.348" endtime="20201030 10:58:15.402"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:15.343" endtime="20201030 10:58:15.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.340" endtime="20201030 10:58:15.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:15.415" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:15.413" endtime="20201030 10:58:15.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.406" endtime="20201030 10:58:15.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.338" endtime="20201030 10:58:15.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.336" endtime="20201030 10:58:15.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.418" endtime="20201030 10:58:15.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.333" endtime="20201030 10:58:15.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.425" endtime="20201030 10:58:15.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.330" endtime="20201030 10:58:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.009" endtime="20201030 10:58:15.431"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.445" endtime="20201030 10:58:15.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.442" endtime="20201030 10:58:15.469"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.504" endtime="20201030 10:58:15.525"></status>
</kw>
<msg timestamp="20201030 10:58:15.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.500" endtime="20201030 10:58:15.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.528" endtime="20201030 10:58:15.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.539" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:15.535" endtime="20201030 10:58:15.540"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:15.493" endtime="20201030 10:58:15.541"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:15.487" endtime="20201030 10:58:15.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.484" endtime="20201030 10:58:15.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:15.552" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:15.550" endtime="20201030 10:58:15.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.546" endtime="20201030 10:58:15.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.482" endtime="20201030 10:58:15.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.480" endtime="20201030 10:58:15.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.555" endtime="20201030 10:58:15.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.476" endtime="20201030 10:58:15.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.471" endtime="20201030 10:58:15.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.439" endtime="20201030 10:58:15.563"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.591" endtime="20201030 10:58:15.608"></status>
</kw>
<msg timestamp="20201030 10:58:15.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.587" endtime="20201030 10:58:15.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.611" endtime="20201030 10:58:15.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.618" endtime="20201030 10:58:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.578" endtime="20201030 10:58:15.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.572" endtime="20201030 10:58:15.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.641" endtime="20201030 10:58:15.995"></status>
</kw>
<msg timestamp="20201030 10:58:16.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138319889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.138332375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:15.638" endtime="20201030 10:58:16.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138319889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.138332375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:16.006" endtime="20201030 10:58:16.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.025" endtime="20201030 10:58:16.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.631" endtime="20201030 10:58:16.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.626" endtime="20201030 10:58:16.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.043" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.388999999992537e-06}, {'diff': 3.347000000014644e-06}, {'diff': 3.374999999999906e-06}, {'diff': 3.402999999985168e-06}, {'diff': 2.8329999999798794e-06}, {'diff': 2.847000000...</msg>
<status status="PASS" starttime="20201030 10:58:16.034" endtime="20201030 10:58:16.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.052" level="INFO">${ACCURACY} = {'diff': [0, 3.388999999992537e-06, 3.347000000014644e-06, 3.374999999999906e-06, 3.402999999985168e-06, 2.8329999999798794e-06, 2.847000000000266e-06, 3.3890000000202924e-06, 3.40200000001345e-06, 2....</msg>
<status status="PASS" starttime="20201030 10:58:16.045" endtime="20201030 10:58:16.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.063" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.061" endtime="20201030 10:58:16.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.069" level="INFO">VALUE: [0, 3.388999999992537e-06, 3.347000000014644e-06, 3.374999999999906e-06, 3.402999999985168e-06, 2.8329999999798794e-06, 2.847000000000266e-06, 3.3890000000202924e-06, 3.40200000001345e-06, 2.847000000000266e-06, 3.902999999999546e-06, 3.402999999985168e-06, 2.833000000007635e-06, 3.4030000000129235e-06, 3.3469999999868882e-06, 3.374999999999906e-06, 2.819999999986722e-06, 2.847000000000266e-06, 3.4309999999981855e-06, 2.9029999999985456e-06, 3.3609999999795193e-06, 2.8479999999997396e-06, 3.4580000000117295e-06, 2.8329999999798794e-06, 2.8479999999997396e-06, 3.40200000001345e-06, 3.388999999992537e-06, 2.7770000000093553e-06, 3.916999999992177e-06, 3.4030000000129235e-06, 2.847000000000266e-06, 3.3469999999868882e-06, 2.8479999999997396e-06, 3.361000000007275e-06, 2.8479999999997396e-06, 2.7910000000019863e-06, 3.361000000007275e-06, 2.8890000000059146e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.929999999985334e-06, 3.3879999999930632e-06, 2.8890000000059146e-06, 3.388999999992537e-06, 2.8189999999872484e-06, 3.319000000001626e-06, 2.8060000000218466e-06, 2.8340000000071086e-06, 2.8340000000071086e-06, 3.388999999992537e-06]</msg>
<status status="PASS" starttime="20201030 10:58:16.066" endtime="20201030 10:58:16.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.054" endtime="20201030 10:58:16.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.083" endtime="20201030 10:58:16.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.079" endtime="20201030 10:58:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.074" endtime="20201030 10:58:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.567" endtime="20201030 10:58:16.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.566" endtime="20201030 10:58:16.108"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.132" endtime="20201030 10:58:16.151"></status>
</kw>
<msg timestamp="20201030 10:58:16.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.129" endtime="20201030 10:58:16.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.154" endtime="20201030 10:58:16.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.161" endtime="20201030 10:58:16.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.121" endtime="20201030 10:58:16.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.115" endtime="20201030 10:58:16.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.195" endtime="20201030 10:58:16.508"></status>
</kw>
<msg timestamp="20201030 10:58:16.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042846139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042850583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.182" endtime="20201030 10:58:16.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042846139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042850583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.512" endtime="20201030 10:58:16.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.521" endtime="20201030 10:58:16.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.174" endtime="20201030 10:58:16.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.170" endtime="20201030 10:58:16.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.529" level="INFO">${RESULT} = [{'diff': 4.443999999999282e-06}, {'diff': 3.902999999999546e-06}, {'diff': 4.5000000000045e-06}, {'diff': 4.403000000000046e-06}, {'diff': 3.902999999999546e-06}, {'diff': 3.875000000000406e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:16.525" endtime="20201030 10:58:16.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.534" level="INFO">${ACCURACY} = {'diff': [4.443999999999282e-06, 3.902999999999546e-06, 4.5000000000045e-06, 4.403000000000046e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.888999...</msg>
<status status="PASS" starttime="20201030 10:58:16.530" endtime="20201030 10:58:16.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.539" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.538" endtime="20201030 10:58:16.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.542" level="INFO">VALUE: [4.443999999999282e-06, 3.902999999999546e-06, 4.5000000000045e-06, 4.403000000000046e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.888999999999976e-06, 4.443999999999282e-06, 3.875000000000406e-06, 4.416999999999616e-06, 3.916000000006581e-06, 3.888999999999976e-06, 4.416999999999616e-06, 3.888999999999976e-06, 4.403000000000046e-06, 3.902999999999546e-06, 4.389000000000476e-06, 3.902999999999546e-06, 3.915999999999642e-06, 4.430999999999186e-06, 3.888999999999976e-06, 4.416000000000142e-06, 4.387999999994063e-06, 4.430999999999186e-06, 3.929999999999212e-06, 4.403000000000046e-06, 4.402000000000572e-06, 3.902000000000072e-06, 3.903000000006485e-06, 4.403000000000046e-06, 3.902999999999546e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.332999999995257e-06, 4.401999999993633e-06, 3.943999999998782e-06, 4.458000000005791e-06, 3.888000000000502e-06, 4.4449999999987555e-06, 3.847000000001266e-06, 4.443999999999282e-06, 4.403000000000046e-06, 3.916999999999116e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201030 10:58:16.541" endtime="20201030 10:58:16.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.535" endtime="20201030 10:58:16.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.548" endtime="20201030 10:58:16.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.546" endtime="20201030 10:58:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.544" endtime="20201030 10:58:16.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.111" endtime="20201030 10:58:16.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.109" endtime="20201030 10:58:16.572"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.595" endtime="20201030 10:58:16.613"></status>
</kw>
<msg timestamp="20201030 10:58:16.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.592" endtime="20201030 10:58:16.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.616" endtime="20201030 10:58:16.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.623" endtime="20201030 10:58:16.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.584" endtime="20201030 10:58:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.578" endtime="20201030 10:58:16.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.647" endtime="20201030 10:58:16.988"></status>
</kw>
<msg timestamp="20201030 10:58:16.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.644" endtime="20201030 10:58:16.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.998" endtime="20201030 10:58:17.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.017" endtime="20201030 10:58:17.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.637" endtime="20201030 10:58:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.632" endtime="20201030 10:58:17.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.034" level="INFO">${RESULT} = [{'diff': 4.9449999999992555e-06}, {'diff': 4.930000000000212e-06}, {'diff': 4.943999999999782e-06}, {'diff': 5.5139999999981315e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.4589999999993255e-06}...</msg>
<status status="PASS" starttime="20201030 10:58:17.026" endtime="20201030 10:58:17.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.046" level="INFO">${ACCURACY} = {'diff': [4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 5.5139999999981315e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 4.9589999999988255e-06, 5.5139999999981315e-06, 4...</msg>
<status status="PASS" starttime="20201030 10:58:17.037" endtime="20201030 10:58:17.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.057" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.055" endtime="20201030 10:58:17.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.063" level="INFO">VALUE: [4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 5.5139999999981315e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 4.9589999999988255e-06, 5.5139999999981315e-06, 4.9449999999992555e-06, 5.402000000001572e-06, 5.457999999999852e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.903000000000546e-06, 4.972000000005861e-06, 5.527999999997701e-06, 4.930999999999686e-06, 5.540999999997798e-06, 5.51400000000507e-06, 5.499999999998562e-06, 5.0139999999976315e-06, 5.54200000000421e-06, 4.888999999994037e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.971999999998922e-06, 4.917000000000116e-06, 5.457999999999852e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 5.027000000004667e-06, 4.930999999999686e-06, 4.957999999999352e-06, 5.499999999998562e-06, 5.499999999998562e-06, 4.959000000005764e-06, 4.957999999999352e-06, 5.4589999999993255e-06, 4.958000000006291e-06, 4.957999999999352e-06, 5.02800000000414e-06, 5.444000000000282e-06, 5.5139999999981315e-06, 4.957999999999352e-06, 5.499999999998562e-06, 5.01400000000457e-06, 5.027999999997201e-06, 5.5139999999981315e-06, 4.943999999999782e-06, 5.569000000003876e-06]</msg>
<status status="PASS" starttime="20201030 10:58:17.060" endtime="20201030 10:58:17.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.048" endtime="20201030 10:58:17.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.075" endtime="20201030 10:58:17.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.071" endtime="20201030 10:58:17.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.068" endtime="20201030 10:58:17.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.574" endtime="20201030 10:58:17.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.573" endtime="20201030 10:58:17.100"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.123" endtime="20201030 10:58:17.141"></status>
</kw>
<msg timestamp="20201030 10:58:17.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.120" endtime="20201030 10:58:17.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.145" endtime="20201030 10:58:17.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.152" endtime="20201030 10:58:17.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.113" endtime="20201030 10:58:17.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.107" endtime="20201030 10:58:17.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.177" endtime="20201030 10:58:17.521"></status>
</kw>
<msg timestamp="20201030 10:58:17.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.173" endtime="20201030 10:58:17.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.531" endtime="20201030 10:58:17.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.550" endtime="20201030 10:58:17.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.166" endtime="20201030 10:58:17.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.160" endtime="20201030 10:58:17.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.567" level="INFO">${RESULT} = [{'diff': 5.985999999999492e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.52800000000564e-06}, {'diff': 6.0000000000060005e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 5.999999999999062e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:17.558" endtime="20201030 10:58:17.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.577" level="INFO">${ACCURACY} = {'diff': [5.985999999999492e-06, 6.054999999997868e-06, 6.52800000000564e-06, 6.0000000000060005e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.0140000000055704e-06, 6.0140000000055704e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 10:58:17.569" endtime="20201030 10:58:17.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.588" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.585" endtime="20201030 10:58:17.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.593" level="INFO">VALUE: [5.985999999999492e-06, 6.054999999997868e-06, 6.52800000000564e-06, 6.0000000000060005e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.0140000000055704e-06, 6.0140000000055704e-06, 6.0139999999986316e-06, 6.499999999999562e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 5.486999999998465e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 6.485999999999992e-06, 6.0139999999986316e-06, 5.5139999999981315e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.5140000000060705e-06, 6.569999999997411e-06, 6.444000000001282e-06, 6.513999999999132e-06, 6.0279999999982015e-06, 6.555999999997841e-06, 6.625000000003156e-06, 6.513999999999132e-06, 5.985999999999492e-06, 6.55600000000478e-06, 6.57000000000435e-06, 6.0139999999986316e-06, 6.568999999997938e-06, 6.0139999999986316e-06, 6.0000000000060005e-06, 6.0139999999986316e-06, 5.431000000000186e-06, 5.986999999998965e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.0550000000048065e-06, 6.513999999999132e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.5140000000060705e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 10:58:17.590" endtime="20201030 10:58:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.579" endtime="20201030 10:58:17.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.605" endtime="20201030 10:58:17.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.601" endtime="20201030 10:58:17.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.598" endtime="20201030 10:58:17.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.102" endtime="20201030 10:58:17.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.101" endtime="20201030 10:58:17.630"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.654" endtime="20201030 10:58:17.672"></status>
</kw>
<msg timestamp="20201030 10:58:17.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.650" endtime="20201030 10:58:17.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.676" endtime="20201030 10:58:17.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.682" endtime="20201030 10:58:17.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.643" endtime="20201030 10:58:17.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.637" endtime="20201030 10:58:17.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.708" endtime="20201030 10:58:18.049"></status>
</kw>
<msg timestamp="20201030 10:58:18.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042794972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042802528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.704" endtime="20201030 10:58:18.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042794972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042802528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.059" endtime="20201030 10:58:18.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.078" endtime="20201030 10:58:18.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.697" endtime="20201030 10:58:18.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.692" endtime="20201030 10:58:18.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.095" level="INFO">${RESULT} = [{'diff': 7.555999999998841e-06}, {'diff': 7.514000000000132e-06}, {'diff': 7.054999999998868e-06}, {'diff': 7.0830000000049465e-06}, {'diff': 6.513999999999132e-06}, {'diff': 7.0419999999987715e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:18.087" endtime="20201030 10:58:18.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.105" level="INFO">${ACCURACY} = {'diff': [7.555999999998841e-06, 7.514000000000132e-06, 7.054999999998868e-06, 7.0830000000049465e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.6109999999976474e-06, 7.5...</msg>
<status status="PASS" starttime="20201030 10:58:18.098" endtime="20201030 10:58:18.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.116" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.114" endtime="20201030 10:58:18.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.122" level="INFO">VALUE: [7.555999999998841e-06, 7.514000000000132e-06, 7.054999999998868e-06, 7.0830000000049465e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.068999999998438e-06, 7.514000000000132e-06, 7.680000000002962e-06, 7.5969999999980775e-06, 7.583999999997981e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.611000000004586e-06, 7.0419999999987715e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.125000000003656e-06, 7.07000000000485e-06, 7.568999999998938e-06, 7.055999999998341e-06, 7.05600000000528e-06, 6.555000000005307e-06, 7.568999999998938e-06, 7.0419999999987715e-06, 7.055999999998341e-06, 7.068999999998438e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 7.0690000000053765e-06, 7.569999999998411e-06, 7.6109999999976474e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.59800000000449e-06, 7.5969999999980775e-06, 7.625000000004156e-06, 7.555000000006307e-06, 7.068999999998438e-06, 7.054999999998868e-06, 6.513999999999132e-06, 7.611000000004586e-06, 7.055000000005807e-06, 7.111000000004086e-06, 7.069999999997911e-06, 7.639000000003726e-06, 7.139000000003226e-06]</msg>
<status status="PASS" starttime="20201030 10:58:18.118" endtime="20201030 10:58:18.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.107" endtime="20201030 10:58:18.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.135" endtime="20201030 10:58:18.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.129" endtime="20201030 10:58:18.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.127" endtime="20201030 10:58:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.632" endtime="20201030 10:58:18.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.631" endtime="20201030 10:58:18.160"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.184" endtime="20201030 10:58:18.202"></status>
</kw>
<msg timestamp="20201030 10:58:18.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.181" endtime="20201030 10:58:18.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.206" endtime="20201030 10:58:18.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.212" endtime="20201030 10:58:18.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.173" endtime="20201030 10:58:18.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.167" endtime="20201030 10:58:18.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.238" endtime="20201030 10:58:18.579"></status>
</kw>
<msg timestamp="20201030 10:58:18.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042325764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042334444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.234" endtime="20201030 10:58:18.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042325764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042334444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.588" endtime="20201030 10:58:18.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.608" endtime="20201030 10:58:18.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.226" endtime="20201030 10:58:18.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.221" endtime="20201030 10:58:18.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.625" level="INFO">${RESULT} = [{'diff': 8.679999999997023e-06}, {'diff': 8.125000000004656e-06}, {'diff': 7.554999999999368e-06}, {'diff': 8.096999999998578e-06}, {'diff': 8.667000000003866e-06}, {'diff': 8.096999999998578e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:18.616" endtime="20201030 10:58:18.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.636" level="INFO">${ACCURACY} = {'diff': [8.679999999997023e-06, 8.125000000004656e-06, 7.554999999999368e-06, 8.096999999998578e-06, 8.667000000003866e-06, 8.096999999998578e-06, 7.5969999999980775e-06, 8.082999999999008e-06, 8.069...</msg>
<status status="PASS" starttime="20201030 10:58:18.627" endtime="20201030 10:58:18.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.647" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.645" endtime="20201030 10:58:18.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.653" level="INFO">VALUE: [8.679999999997023e-06, 8.125000000004656e-06, 7.554999999999368e-06, 8.096999999998578e-06, 8.667000000003866e-06, 8.096999999998578e-06, 7.5969999999980775e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.096999999998578e-06, 8.167000000003366e-06, 8.125000000004656e-06, 8.665999999997454e-06, 8.625000000005156e-06, 8.152999999996857e-06, 8.110999999998147e-06, 8.610999999998648e-06, 8.096999999998578e-06, 8.111000000005086e-06, 8.068999999999438e-06, 8.124999999997717e-06, 8.180000000003462e-06, 7.554999999999368e-06, 7.555999999998841e-06, 8.111000000005086e-06, 8.11200000000456e-06, 8.110999999998147e-06, 8.124999999997717e-06, 7.569999999998411e-06, 8.625000000005156e-06, 7.625000000004156e-06, 8.054999999999868e-06, 8.110999999998147e-06, 8.138000000004753e-06, 8.166000000003892e-06, 8.165999999996953e-06, 8.124999999997717e-06, 7.5969999999980775e-06, 8.665999999997454e-06, 8.110999999998147e-06, 7.555999999998841e-06, 8.610999999998648e-06, 8.639000000004726e-06, 8.111000000005086e-06, 8.110999999998147e-06, 8.110999999998147e-06, 7.555999999998841e-06, 8.110999999998147e-06, 8.124999999997717e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201030 10:58:18.649" endtime="20201030 10:58:18.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.638" endtime="20201030 10:58:18.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.664" endtime="20201030 10:58:18.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.660" endtime="20201030 10:58:18.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.658" endtime="20201030 10:58:18.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.162" endtime="20201030 10:58:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.161" endtime="20201030 10:58:18.690"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.714" endtime="20201030 10:58:18.732"></status>
</kw>
<msg timestamp="20201030 10:58:18.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.710" endtime="20201030 10:58:18.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.735" endtime="20201030 10:58:18.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.742" endtime="20201030 10:58:18.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.703" endtime="20201030 10:58:18.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.697" endtime="20201030 10:58:18.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.766" endtime="20201030 10:58:19.110"></status>
</kw>
<msg timestamp="20201030 10:58:19.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042674625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.762" endtime="20201030 10:58:19.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042674625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042684347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.119" endtime="20201030 10:58:19.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.138" endtime="20201030 10:58:19.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.755" endtime="20201030 10:58:19.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.750" endtime="20201030 10:58:19.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.156" level="INFO">${RESULT} = [{'diff': 9.721999999996733e-06}, {'diff': 9.111999999998621e-06}, {'diff': 9.166999999997427e-06}, {'diff': 8.653000000004296e-06}, {'diff': 9.735999999996303e-06}, {'diff': 9.096999999999578e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:19.147" endtime="20201030 10:58:19.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.167" level="INFO">${ACCURACY} = {'diff': [9.721999999996733e-06, 9.111999999998621e-06, 9.166999999997427e-06, 8.653000000004296e-06, 9.735999999996303e-06, 9.096999999999578e-06, 9.235999999995803e-06, 9.208000000003602e-06, 8.5829...</msg>
<status status="PASS" starttime="20201030 10:58:19.158" endtime="20201030 10:58:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.178" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.176" endtime="20201030 10:58:19.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.183" level="INFO">VALUE: [9.721999999996733e-06, 9.111999999998621e-06, 9.166999999997427e-06, 8.653000000004296e-06, 9.735999999996303e-06, 9.096999999999578e-06, 9.235999999995803e-06, 9.208000000003602e-06, 8.582999999999508e-06, 9.179999999997523e-06, 8.667000000003866e-06, 9.680999999997497e-06, 8.651999999997884e-06, 9.166000000004892e-06, 9.167000000004366e-06, 9.193999999997093e-06, 9.707999999997163e-06, 9.777999999995013e-06, 9.680000000004962e-06, 9.749999999995873e-06, 9.680999999997497e-06, 8.651999999997884e-06, 9.179999999997523e-06, 9.166000000004892e-06, 9.665999999998454e-06, 9.124999999998717e-06, 9.195000000003506e-06, 9.693999999997593e-06, 9.138999999998287e-06, 9.166000000004892e-06, 9.166999999997427e-06, 9.167000000004366e-06, 9.681000000004436e-06, 9.250000000002312e-06, 8.624999999998217e-06, 9.708000000004102e-06, 9.722000000003672e-06, 9.735999999996303e-06, 9.180999999996997e-06, 9.167000000004366e-06, 9.181000000003936e-06, 9.694999999997067e-06, 9.165999999997954e-06, 9.179999999997523e-06, 9.165999999997954e-06, 9.165999999997954e-06, 9.179999999997523e-06, 9.194000000004032e-06, 9.624999999999218e-06, 9.137999999998814e-06]</msg>
<status status="PASS" starttime="20201030 10:58:19.180" endtime="20201030 10:58:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.169" endtime="20201030 10:58:19.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.196" endtime="20201030 10:58:19.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.192" endtime="20201030 10:58:19.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.189" endtime="20201030 10:58:19.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.692" endtime="20201030 10:58:19.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.691" endtime="20201030 10:58:19.221"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.245" endtime="20201030 10:58:19.263"></status>
</kw>
<msg timestamp="20201030 10:58:19.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.242" endtime="20201030 10:58:19.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.267" endtime="20201030 10:58:19.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.274" endtime="20201030 10:58:19.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.234" endtime="20201030 10:58:19.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.228" endtime="20201030 10:58:19.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.298" endtime="20201030 10:58:19.642"></status>
</kw>
<msg timestamp="20201030 10:58:19.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042645708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042655361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.294" endtime="20201030 10:58:19.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042645708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042655361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.652" endtime="20201030 10:58:19.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.671" endtime="20201030 10:58:19.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.287" endtime="20201030 10:58:19.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.282" endtime="20201030 10:58:19.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.689" level="INFO">${RESULT} = [{'diff': 9.653000000005296e-06}, {'diff': 9.679999999998024e-06}, {'diff': 1.0735999999997303e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 1.0235999999996803e-05}, {'diff': 1.0764000000003382e-05...</msg>
<status status="PASS" starttime="20201030 10:58:19.680" endtime="20201030 10:58:19.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.698" level="INFO">${ACCURACY} = {'diff': [9.653000000005296e-06, 9.679999999998024e-06, 1.0735999999997303e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0764000000003382e-05, 1.0235999999996803e-05, 1.0222000000004172e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:19.691" endtime="20201030 10:58:19.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.709" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.707" endtime="20201030 10:58:19.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.715" level="INFO">VALUE: [9.653000000005296e-06, 9.679999999998024e-06, 1.0735999999997303e-05, 1.0207999999997663e-05, 1.0235999999996803e-05, 1.0764000000003382e-05, 1.0235999999996803e-05, 1.0222000000004172e-05, 1.0221999999997233e-05, 1.0237000000003216e-05, 9.666999999997927e-06, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0250000000003312e-05, 1.0237000000003216e-05, 1.0264000000002882e-05, 1.0236000000003742e-05, 1.0208000000004602e-05, 1.0791999999995583e-05, 1.0750000000003812e-05, 9.722000000003672e-06, 9.681000000004436e-06, 1.0166999999998427e-05, 1.0235999999996803e-05, 1.0223000000003646e-05, 1.0263999999995943e-05, 9.624999999999218e-06, 1.0708999999997637e-05, 1.0222999999996707e-05, 1.0264000000002882e-05, 1.0207999999997663e-05, 1.0222999999996707e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 9.735999999996303e-06, 1.0222000000004172e-05, 1.0249999999996373e-05, 1.0165999999998954e-05, 1.0736000000004242e-05, 9.681000000004436e-06, 1.0222000000004172e-05, 1.0221999999997233e-05, 9.667000000004866e-06, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0235999999996803e-05, 1.0181000000004936e-05, 1.0235999999996803e-05, 1.0209000000004076e-05]</msg>
<status status="PASS" starttime="20201030 10:58:19.711" endtime="20201030 10:58:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.700" endtime="20201030 10:58:19.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.727" endtime="20201030 10:58:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.723" endtime="20201030 10:58:19.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.720" endtime="20201030 10:58:19.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.223" endtime="20201030 10:58:19.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.222" endtime="20201030 10:58:19.753"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.776" endtime="20201030 10:58:19.795"></status>
</kw>
<msg timestamp="20201030 10:58:19.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.772" endtime="20201030 10:58:19.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.798" endtime="20201030 10:58:19.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.801" endtime="20201030 10:58:19.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.765" endtime="20201030 10:58:19.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.759" endtime="20201030 10:58:19.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.812" endtime="20201030 10:58:20.119"></status>
</kw>
<msg timestamp="20201030 10:58:20.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041729347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.810" endtime="20201030 10:58:20.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041729347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.129" endtime="20201030 10:58:20.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.148" endtime="20201030 10:58:20.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.807" endtime="20201030 10:58:20.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.804" endtime="20201030 10:58:20.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.165" level="INFO">${RESULT} = [{'diff': 1.0791000000003048e-05}, {'diff': 1.180499999999668e-05}, {'diff': 1.1277999999996513e-05}, {'diff': 1.1264000000003882e-05}, {'diff': 1.1291000000003548e-05}, {'diff': 1.127699999999704e-05...</msg>
<status status="PASS" starttime="20201030 10:58:20.156" endtime="20201030 10:58:20.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.175" level="INFO">${ACCURACY} = {'diff': [1.0791000000003048e-05, 1.180499999999668e-05, 1.1277999999996513e-05, 1.1264000000003882e-05, 1.1291000000003548e-05, 1.127699999999704e-05, 1.1235999999997803e-05, 1.1305999999995653e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:20.167" endtime="20201030 10:58:20.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.186" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.183" endtime="20201030 10:58:20.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.191" level="INFO">VALUE: [1.0791000000003048e-05, 1.180499999999668e-05, 1.1277999999996513e-05, 1.1264000000003882e-05, 1.1291000000003548e-05, 1.127699999999704e-05, 1.1235999999997803e-05, 1.1305999999995653e-05, 1.1834000000002232e-05, 1.1361000000001398e-05, 1.0722999999997207e-05, 1.1319999999995223e-05, 1.1277000000003978e-05, 1.126299999999747e-05, 1.1277999999996513e-05, 1.1889000000001038e-05, 1.1292000000003022e-05, 1.0721999999997733e-05, 1.1833000000002758e-05, 1.077699999999654e-05, 1.0750000000003812e-05, 1.0791999999995583e-05, 1.1263999999996943e-05, 1.1847000000002328e-05, 1.0777000000003478e-05, 1.1277999999996513e-05, 1.1777999999997013e-05, 1.1278000000003452e-05, 1.127699999999704e-05, 1.1291999999996083e-05, 1.0735999999997303e-05, 1.0735999999997303e-05, 1.0833000000001758e-05, 1.1833000000002758e-05, 1.1291000000003548e-05, 1.0735999999997303e-05, 1.1292000000003022e-05, 1.1236000000004742e-05, 1.1305000000003118e-05, 1.0818999999995249e-05, 1.0806000000002092e-05, 1.1277999999996513e-05, 1.1291000000003548e-05, 1.0735999999997303e-05, 1.127699999999704e-05, 1.1292000000003022e-05, 1.0735999999997303e-05, 1.127699999999704e-05, 1.0777999999996013e-05, 1.0777999999996013e-05]</msg>
<status status="PASS" starttime="20201030 10:58:20.188" endtime="20201030 10:58:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.176" endtime="20201030 10:58:20.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.205" endtime="20201030 10:58:20.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.199" endtime="20201030 10:58:20.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.197" endtime="20201030 10:58:20.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.755" endtime="20201030 10:58:20.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.754" endtime="20201030 10:58:20.230"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.254" endtime="20201030 10:58:20.272"></status>
</kw>
<msg timestamp="20201030 10:58:20.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.250" endtime="20201030 10:58:20.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.276" endtime="20201030 10:58:20.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.283" endtime="20201030 10:58:20.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.243" endtime="20201030 10:58:20.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.237" endtime="20201030 10:58:20.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.308" endtime="20201030 10:58:20.650"></status>
</kw>
<msg timestamp="20201030 10:58:20.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041556875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041569292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.304" endtime="20201030 10:58:20.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041556875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041569292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.659" endtime="20201030 10:58:20.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.678" endtime="20201030 10:58:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.297" endtime="20201030 10:58:20.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.292" endtime="20201030 10:58:20.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.696" level="INFO">${RESULT} = [{'diff': 1.2417000000000677e-05}, {'diff': 1.1832999999995819e-05}, {'diff': 1.2334000000002732e-05}, {'diff': 1.1791000000004048e-05}, {'diff': 1.1834000000002232e-05}, {'diff': 1.2332999999996319e-...</msg>
<status status="PASS" starttime="20201030 10:58:20.687" endtime="20201030 10:58:20.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.707" level="INFO">${ACCURACY} = {'diff': [1.2417000000000677e-05, 1.1832999999995819e-05, 1.2334000000002732e-05, 1.1791000000004048e-05, 1.1834000000002232e-05, 1.2332999999996319e-05, 1.179099999999711e-05, 1.2903000000001608e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:20.698" endtime="20201030 10:58:20.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.718" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.715" endtime="20201030 10:58:20.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.723" level="INFO">VALUE: [1.2417000000000677e-05, 1.1832999999995819e-05, 1.2334000000002732e-05, 1.1791000000004048e-05, 1.1834000000002232e-05, 1.2332999999996319e-05, 1.179099999999711e-05, 1.2903000000001608e-05, 1.2305000000004118e-05, 1.2874999999995529e-05, 1.229099999999761e-05, 1.2347000000002828e-05, 1.2346999999995889e-05, 1.2332999999996319e-05, 1.181899999999625e-05, 1.2833000000003758e-05, 1.2333999999995793e-05, 1.1778000000003952e-05, 1.1805999999996153e-05, 1.2333000000003258e-05, 1.1861000000001898e-05, 1.1791999999996583e-05, 1.1778000000003952e-05, 1.2347000000002828e-05, 1.2362000000001871e-05, 1.2346999999995889e-05, 1.1833000000002758e-05, 1.2332999999996319e-05, 1.2332999999996319e-05, 1.2277999999997513e-05, 1.2306000000003592e-05, 1.231899999999675e-05, 1.1820000000002662e-05, 1.2277999999997513e-05, 1.2360999999995459e-05, 1.2249999999998373e-05, 1.2361000000002398e-05, 1.1792000000003522e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.2346999999995889e-05, 1.1819999999995723e-05, 1.2862000000002372e-05, 1.2388999999994599e-05, 1.1833999999995293e-05, 1.2333000000003258e-05, 1.2875000000002468e-05, 1.2375000000001968e-05, 1.1832999999995819e-05, 1.2306000000003592e-05]</msg>
<status status="PASS" starttime="20201030 10:58:20.720" endtime="20201030 10:58:20.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.708" endtime="20201030 10:58:20.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.736" endtime="20201030 10:58:20.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.732" endtime="20201030 10:58:20.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.729" endtime="20201030 10:58:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.233" endtime="20201030 10:58:20.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.231" endtime="20201030 10:58:20.761"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.784" endtime="20201030 10:58:20.803"></status>
</kw>
<msg timestamp="20201030 10:58:20.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.781" endtime="20201030 10:58:20.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.806" endtime="20201030 10:58:20.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.813" endtime="20201030 10:58:20.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.773" endtime="20201030 10:58:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.768" endtime="20201030 10:58:20.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.836" endtime="20201030 10:58:21.178"></status>
</kw>
<msg timestamp="20201030 10:58:21.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042074431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.833" endtime="20201030 10:58:21.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042074431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.187" endtime="20201030 10:58:21.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.206" endtime="20201030 10:58:21.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.826" endtime="20201030 10:58:21.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.821" endtime="20201030 10:58:21.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.224" level="INFO">${RESULT} = [{'diff': 1.3401999999995695e-05}, {'diff': 1.3403000000002108e-05}, {'diff': 1.3375000000002968e-05}, {'diff': 1.3403000000002108e-05}, {'diff': 1.3403000000002108e-05}, {'diff': 1.2861000000002898e-...</msg>
<status status="PASS" starttime="20201030 10:58:21.215" endtime="20201030 10:58:21.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.239" level="INFO">${ACCURACY} = {'diff': [1.3401999999995695e-05, 1.3403000000002108e-05, 1.3375000000002968e-05, 1.3403000000002108e-05, 1.3403000000002108e-05, 1.2861000000002898e-05, 1.3389000000002538e-05, 1.3387999999996125e-05...</msg>
<status status="PASS" starttime="20201030 10:58:21.226" endtime="20201030 10:58:21.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.250" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.248" endtime="20201030 10:58:21.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.256" level="INFO">VALUE: [1.3401999999995695e-05, 1.3403000000002108e-05, 1.3375000000002968e-05, 1.3403000000002108e-05, 1.3403000000002108e-05, 1.2861000000002898e-05, 1.3389000000002538e-05, 1.3387999999996125e-05, 1.2833000000003758e-05, 1.3403000000002108e-05, 1.3417000000001678e-05, 1.333299999999732e-05, 1.2791999999997583e-05, 1.3403000000002108e-05, 1.331899999999775e-05, 1.2846999999996389e-05, 1.2889000000002038e-05, 1.2888999999995099e-05, 1.2889000000002038e-05, 1.3374999999996029e-05, 1.2846999999996389e-05, 1.2861000000002898e-05, 1.3402999999995169e-05, 1.3417000000001678e-05, 1.2888000000002564e-05, 1.3347000000003828e-05, 1.3388999999995599e-05, 1.3388999999995599e-05, 1.3403000000002108e-05, 1.333299999999732e-05, 1.2903000000001608e-05, 1.3903000000002608e-05, 1.2846999999996389e-05, 1.2889000000002038e-05, 1.3374999999996029e-05, 1.3901999999996195e-05, 1.3375000000002968e-05, 1.3486000000000054e-05, 1.3403000000002108e-05, 1.3402000000002634e-05, 1.3402999999995169e-05, 1.2846999999996389e-05, 1.3417000000001678e-05, 1.2889000000002038e-05, 1.3389000000002538e-05, 1.3403000000002108e-05, 1.279099999999811e-05, 1.2874999999995529e-05, 1.2888999999995099e-05, 1.283299999999682e-05]</msg>
<status status="PASS" starttime="20201030 10:58:21.252" endtime="20201030 10:58:21.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.241" endtime="20201030 10:58:21.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.274" endtime="20201030 10:58:21.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.270" endtime="20201030 10:58:21.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.267" endtime="20201030 10:58:21.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.763" endtime="20201030 10:58:21.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.762" endtime="20201030 10:58:21.300"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.324" endtime="20201030 10:58:21.342"></status>
</kw>
<msg timestamp="20201030 10:58:21.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.320" endtime="20201030 10:58:21.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.346" endtime="20201030 10:58:21.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.352" endtime="20201030 10:58:21.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.312" endtime="20201030 10:58:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.306" endtime="20201030 10:58:21.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.376" endtime="20201030 10:58:21.721"></status>
</kw>
<msg timestamp="20201030 10:58:21.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043120306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.373" endtime="20201030 10:58:21.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043120306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.731" endtime="20201030 10:58:21.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.750" endtime="20201030 10:58:21.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.365" endtime="20201030 10:58:21.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.361" endtime="20201030 10:58:21.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.767" level="INFO">${RESULT} = [{'diff': 1.4458000000001914e-05}, {'diff': 1.4430999999995309e-05}, {'diff': 1.4416000000003204e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.4430999999995309e-...</msg>
<status status="PASS" starttime="20201030 10:58:21.758" endtime="20201030 10:58:21.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.777" level="INFO">${ACCURACY} = {'diff': [1.4458000000001914e-05, 1.4430999999995309e-05, 1.4416000000003204e-05, 1.3944000000001844e-05, 1.4444000000002344e-05, 1.4430999999995309e-05, 1.3959000000000887e-05, 1.4444999999994879e-05...</msg>
<status status="PASS" starttime="20201030 10:58:21.769" endtime="20201030 10:58:21.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.788" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.786" endtime="20201030 10:58:21.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.793" level="INFO">VALUE: [1.4458000000001914e-05, 1.4430999999995309e-05, 1.4416000000003204e-05, 1.3944000000001844e-05, 1.4444000000002344e-05, 1.4430999999995309e-05, 1.3959000000000887e-05, 1.4444999999994879e-05, 1.3874999999996529e-05, 1.4471999999994545e-05, 1.4445000000001817e-05, 1.4443999999995405e-05, 1.3973000000000457e-05, 1.4000000000000123e-05, 1.4429999999995835e-05, 1.3903000000002608e-05, 1.3943999999994905e-05, 1.3916999999995239e-05, 1.4500000000000624e-05, 1.3986000000000554e-05, 1.3944000000001844e-05, 1.4459000000001387e-05, 1.4458000000001914e-05, 1.3931000000001748e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3957999999994475e-05, 1.4444000000002344e-05, 1.3915999999995765e-05, 1.4457999999994975e-05, 1.4458000000001914e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.3902000000003134e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3944000000001844e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4443999999995405e-05, 1.3861000000003898e-05, 1.3903000000002608e-05, 1.3958999999993948e-05, 1.4431000000002248e-05, 1.3944000000001844e-05, 1.4457999999994975e-05, 1.3945000000001317e-05]</msg>
<status status="PASS" starttime="20201030 10:58:21.790" endtime="20201030 10:58:21.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.779" endtime="20201030 10:58:21.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.806" endtime="20201030 10:58:21.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.802" endtime="20201030 10:58:21.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.799" endtime="20201030 10:58:21.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.302" endtime="20201030 10:58:21.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.300" endtime="20201030 10:58:21.831"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.854" endtime="20201030 10:58:21.875"></status>
</kw>
<msg timestamp="20201030 10:58:21.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.851" endtime="20201030 10:58:21.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.878" endtime="20201030 10:58:21.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.884" endtime="20201030 10:58:21.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.843" endtime="20201030 10:58:21.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.838" endtime="20201030 10:58:21.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.908" endtime="20201030 10:58:22.250"></status>
</kw>
<msg timestamp="20201030 10:58:22.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.905" endtime="20201030 10:58:22.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.260" endtime="20201030 10:58:22.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.279" endtime="20201030 10:58:22.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.897" endtime="20201030 10:58:22.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.893" endtime="20201030 10:58:22.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.296" level="INFO">${RESULT} = [{'diff': 1.5014000000000693e-05}, {'diff': 1.5514000000001194e-05}, {'diff': 1.5000000000001124e-05}, {'diff': 1.551300000000172e-05}, {'diff': 1.5042000000006772e-05}, {'diff': 1.5513999999994255e-0...</msg>
<status status="PASS" starttime="20201030 10:58:22.287" endtime="20201030 10:58:22.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.306" level="INFO">${ACCURACY} = {'diff': [1.5014000000000693e-05, 1.5514000000001194e-05, 1.5000000000001124e-05, 1.551300000000172e-05, 1.5042000000006772e-05, 1.5513999999994255e-05, 1.4959000000001887e-05, 1.5500000000001624e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:22.298" endtime="20201030 10:58:22.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.317" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.314" endtime="20201030 10:58:22.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.322" level="INFO">VALUE: [1.5014000000000693e-05, 1.5514000000001194e-05, 1.5000000000001124e-05, 1.551300000000172e-05, 1.5042000000006772e-05, 1.5513999999994255e-05, 1.4959000000001887e-05, 1.5500000000001624e-05, 1.5000000000001124e-05, 1.5514000000001194e-05, 1.4958000000002414e-05, 1.4958999999994949e-05, 1.552699999999435e-05, 1.5514000000001194e-05, 1.4972000000001984e-05, 1.4944999999995379e-05, 1.4958000000002414e-05, 1.4944000000002844e-05, 1.552700000000129e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.4944000000002844e-05, 1.5486000000002054e-05, 1.4903000000003608e-05, 1.508299999999907e-05, 1.4945000000002318e-05, 1.5514000000001194e-05, 1.5542000000000333e-05, 1.5513999999994255e-05, 1.4944999999995379e-05, 1.5000000000001124e-05, 1.5514000000001194e-05, 1.4944000000002844e-05, 1.5471999999995545e-05, 1.5014000000000693e-05, 1.551300000000172e-05, 1.5500000000001624e-05, 1.4971999999995045e-05, 1.5514000000001194e-05, 1.4986000000001554e-05, 1.5528000000000763e-05, 1.5083999999998543e-05, 1.4443999999995405e-05, 1.5000000000001124e-05, 1.5485999999995115e-05, 1.5513999999994255e-05, 1.4972999999994518e-05, 1.5514000000001194e-05, 1.4999999999994185e-05, 1.5513999999994255e-05]</msg>
<status status="PASS" starttime="20201030 10:58:22.319" endtime="20201030 10:58:22.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.307" endtime="20201030 10:58:22.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.336" endtime="20201030 10:58:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.330" endtime="20201030 10:58:22.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.328" endtime="20201030 10:58:22.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.833" endtime="20201030 10:58:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.832" endtime="20201030 10:58:22.362"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.387" endtime="20201030 10:58:22.405"></status>
</kw>
<msg timestamp="20201030 10:58:22.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.383" endtime="20201030 10:58:22.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.408" endtime="20201030 10:58:22.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.415" endtime="20201030 10:58:22.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.375" endtime="20201030 10:58:22.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.369" endtime="20201030 10:58:22.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.439" endtime="20201030 10:58:22.781"></status>
</kw>
<msg timestamp="20201030 10:58:22.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.435" endtime="20201030 10:58:22.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.790" endtime="20201030 10:58:22.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.809" endtime="20201030 10:58:22.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.428" endtime="20201030 10:58:22.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.423" endtime="20201030 10:58:22.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.826" level="INFO">${RESULT} = [{'diff': 1.6014000000001694e-05}, {'diff': 1.5985999999995615e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.5542000000000333e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.6056000000000403e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:22.817" endtime="20201030 10:58:22.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.837" level="INFO">${ACCURACY} = {'diff': [1.6014000000001694e-05, 1.5985999999995615e-05, 1.6556000000000903e-05, 1.5542000000000333e-05, 1.6569000000001e-05, 1.6056000000000403e-05, 1.601300000000222e-05, 1.6014000000001694e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:22.828" endtime="20201030 10:58:22.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.848" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.846" endtime="20201030 10:58:22.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.854" level="INFO">VALUE: [1.6014000000001694e-05, 1.5985999999995615e-05, 1.6556000000000903e-05, 1.5542000000000333e-05, 1.6569000000001e-05, 1.6056000000000403e-05, 1.601300000000222e-05, 1.6014000000001694e-05, 1.5485999999995115e-05, 1.655500000000143e-05, 1.6069999999999973e-05, 1.655500000000143e-05, 1.604099999999442e-05, 1.656899999999406e-05, 1.6013999999994755e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.6570000000000473e-05, 1.6499999999995685e-05, 1.602700000000179e-05, 1.6069999999999973e-05, 1.6083999999999543e-05, 1.6569000000001e-05, 1.6014000000001694e-05, 1.6000000000002124e-05, 1.6556000000000903e-05, 1.652700000000229e-05, 1.6028000000001263e-05, 1.6056000000000403e-05, 1.6000000000002124e-05, 1.6042000000000833e-05, 1.602700000000179e-05, 1.656899999999406e-05, 1.6042000000000833e-05, 1.6014000000001694e-05, 1.602699999999485e-05, 1.5972000000002984e-05, 1.604100000000136e-05, 1.5986000000002554e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.6569000000001e-05, 1.602700000000179e-05, 1.658300000000057e-05, 1.6569000000001e-05, 1.5513999999994255e-05, 1.60690000000005e-05, 1.6569000000001e-05, 1.6570000000000473e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:58:22.850" endtime="20201030 10:58:22.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.839" endtime="20201030 10:58:22.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.866" endtime="20201030 10:58:22.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.862" endtime="20201030 10:58:22.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.859" endtime="20201030 10:58:22.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.364" endtime="20201030 10:58:22.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.363" endtime="20201030 10:58:22.892"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.915" endtime="20201030 10:58:22.934"></status>
</kw>
<msg timestamp="20201030 10:58:22.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.911" endtime="20201030 10:58:22.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.937" endtime="20201030 10:58:22.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.944" endtime="20201030 10:58:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.904" endtime="20201030 10:58:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.898" endtime="20201030 10:58:22.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.967" endtime="20201030 10:58:23.306"></status>
</kw>
<msg timestamp="20201030 10:58:23.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.964" endtime="20201030 10:58:23.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.315" endtime="20201030 10:58:23.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.334" endtime="20201030 10:58:23.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.957" endtime="20201030 10:58:23.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.952" endtime="20201030 10:58:23.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.352" level="INFO">${RESULT} = [{'diff': 1.712499999999978e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.7528000000002764e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.6541999999994395e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:23.343" endtime="20201030 10:58:23.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.363" level="INFO">${ACCURACY} = {'diff': [1.712499999999978e-05, 1.709700000000064e-05, 1.6556000000000903e-05, 1.7528000000002764e-05, 1.709700000000064e-05, 1.6541999999994395e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.6...</msg>
<status status="PASS" starttime="20201030 10:58:23.354" endtime="20201030 10:58:23.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.374" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.372" endtime="20201030 10:58:23.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.380" level="INFO">VALUE: [1.712499999999978e-05, 1.709700000000064e-05, 1.6556000000000903e-05, 1.7528000000002764e-05, 1.709700000000064e-05, 1.6541999999994395e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.6570000000000473e-05, 1.758300000000157e-05, 1.662499999999928e-05, 1.708300000000107e-05, 1.715299999999892e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.712499999999978e-05, 1.6570000000000473e-05, 1.759700000000114e-05, 1.711100000000021e-05, 1.7028000000002264e-05, 1.765299999999942e-05, 1.70690000000015e-05, 1.7637999999993437e-05, 1.7570000000001473e-05, 1.7084000000000543e-05, 1.761100000000071e-05, 1.711100000000021e-05, 1.762500000000028e-05, 1.7111999999999683e-05, 1.7041999999994895e-05, 1.713899999999935e-05, 1.652699999999535e-05, 1.705500000000193e-05, 1.761100000000071e-05, 1.655500000000143e-05, 1.6556000000000903e-05, 1.762500000000028e-05, 1.7612000000000183e-05, 1.655500000000143e-05, 1.762500000000028e-05, 1.7151999999999445e-05, 1.7612000000000183e-05, 1.7070000000000973e-05, 1.6570000000000473e-05, 1.708300000000107e-05, 1.658300000000057e-05, 1.762500000000028e-05, 1.70690000000015e-05, 1.7055999999994464e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:58:23.376" endtime="20201030 10:58:23.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.365" endtime="20201030 10:58:23.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.393" endtime="20201030 10:58:23.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.389" endtime="20201030 10:58:23.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.386" endtime="20201030 10:58:23.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.894" endtime="20201030 10:58:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.892" endtime="20201030 10:58:23.419"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.442" endtime="20201030 10:58:23.460"></status>
</kw>
<msg timestamp="20201030 10:58:23.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.439" endtime="20201030 10:58:23.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.464" endtime="20201030 10:58:23.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.470" endtime="20201030 10:58:23.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.431" endtime="20201030 10:58:23.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.426" endtime="20201030 10:58:23.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.494" endtime="20201030 10:58:23.838"></status>
</kw>
<msg timestamp="20201030 10:58:23.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:23.490" endtime="20201030 10:58:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:23.848" endtime="20201030 10:58:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.867" endtime="20201030 10:58:23.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.483" endtime="20201030 10:58:23.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.478" endtime="20201030 10:58:23.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.884" level="INFO">${RESULT} = [{'diff': 1.811100000000121e-05}, {'diff': 1.868099999999956e-05}, {'diff': 1.755500000000243e-05}, {'diff': 1.813900000000035e-05}, {'diff': 1.865300000000042e-05}, {'diff': 1.7598000000000613e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:23.875" endtime="20201030 10:58:23.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.894" level="INFO">${ACCURACY} = {'diff': [1.811100000000121e-05, 1.868099999999956e-05, 1.755500000000243e-05, 1.813900000000035e-05, 1.865300000000042e-05, 1.7598000000000613e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.822...</msg>
<status status="PASS" starttime="20201030 10:58:23.887" endtime="20201030 10:58:23.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.905" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.903" endtime="20201030 10:58:23.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.910" level="INFO">VALUE: [1.811100000000121e-05, 1.868099999999956e-05, 1.755500000000243e-05, 1.813900000000035e-05, 1.865300000000042e-05, 1.7598000000000613e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.8221999999998295e-05, 1.812500000000078e-05, 1.868099999999956e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.866699999999999e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.808299999999513e-05, 1.868099999999956e-05, 1.8652000000000946e-05, 1.8152000000000446e-05, 1.7612000000000183e-05, 1.758300000000157e-05, 1.8666000000000516e-05, 1.865300000000042e-05, 1.812500000000078e-05, 1.8652000000000946e-05, 1.816699999999949e-05, 1.8652000000000946e-05, 1.866699999999999e-05, 1.8721999999998795e-05, 1.762500000000028e-05, 1.8680000000000085e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.816699999999949e-05, 1.8680000000000085e-05, 1.866699999999999e-05, 1.8195000000005568e-05, 1.813900000000035e-05, 1.761100000000071e-05, 1.873699999999784e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.8193999999999155e-05, 1.812500000000078e-05, 1.868099999999956e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201030 10:58:23.907" endtime="20201030 10:58:23.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.896" endtime="20201030 10:58:23.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.923" endtime="20201030 10:58:23.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.919" endtime="20201030 10:58:23.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.916" endtime="20201030 10:58:23.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.421" endtime="20201030 10:58:23.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.420" endtime="20201030 10:58:23.948"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.971" endtime="20201030 10:58:23.992"></status>
</kw>
<msg timestamp="20201030 10:58:23.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.968" endtime="20201030 10:58:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.996" endtime="20201030 10:58:24.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.002" endtime="20201030 10:58:24.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.961" endtime="20201030 10:58:24.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.955" endtime="20201030 10:58:24.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.026" endtime="20201030 10:58:24.369"></status>
</kw>
<msg timestamp="20201030 10:58:24.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.023" endtime="20201030 10:58:24.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.379" endtime="20201030 10:58:24.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.398" endtime="20201030 10:58:24.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.015" endtime="20201030 10:58:24.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.011" endtime="20201030 10:58:24.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.415" level="INFO">${RESULT} = [{'diff': 1.866699999999999e-05}, {'diff': 1.9180000000000585e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.9749999999998935e-05}, {'diff': 1.9221999999999295e-05}, {'diff': 1.868099999999956e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:24.407" endtime="20201030 10:58:24.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.425" level="INFO">${ACCURACY} = {'diff': [1.866699999999999e-05, 1.9180000000000585e-05, 1.866699999999999e-05, 1.9749999999998935e-05, 1.9221999999999295e-05, 1.868099999999956e-05, 1.9792000000004584e-05, 1.973699999999884e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:24.418" endtime="20201030 10:58:24.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.437" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.435" endtime="20201030 10:58:24.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.443" level="INFO">VALUE: [1.866699999999999e-05, 1.9180000000000585e-05, 1.866699999999999e-05, 1.9749999999998935e-05, 1.9221999999999295e-05, 1.868099999999956e-05, 1.9792000000004584e-05, 1.973699999999884e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.9735999999999365e-05, 1.9221999999999295e-05, 1.9749999999998935e-05, 1.9194000000000155e-05, 1.9735999999999365e-05, 1.9221999999999295e-05, 1.866699999999999e-05, 1.9194000000000155e-05, 1.866699999999999e-05, 1.97089999999997e-05, 1.868099999999956e-05, 1.9221999999999295e-05, 1.92089999999992e-05, 1.922299999999877e-05, 1.866699999999999e-05, 1.9235999999998865e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.9221999999999295e-05, 1.92089999999992e-05, 1.8693999999999655e-05, 1.9736000000006304e-05, 1.9180000000000585e-05, 1.972299999999927e-05, 1.913900000000135e-05, 1.866699999999999e-05, 1.9194000000000155e-05, 1.9221999999999295e-05, 1.916700000000049e-05, 1.9236000000005804e-05, 1.9777999999998075e-05, 1.8721999999998795e-05, 1.9708000000000225e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.9735999999999365e-05, 1.965300000000142e-05, 1.9194000000000155e-05, 1.9235999999998865e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201030 10:58:24.440" endtime="20201030 10:58:24.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.427" endtime="20201030 10:58:24.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.458" endtime="20201030 10:58:24.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.452" endtime="20201030 10:58:24.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.449" endtime="20201030 10:58:24.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.950" endtime="20201030 10:58:24.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.949" endtime="20201030 10:58:24.483"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.507" endtime="20201030 10:58:24.525"></status>
</kw>
<msg timestamp="20201030 10:58:24.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.503" endtime="20201030 10:58:24.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.528" endtime="20201030 10:58:24.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.534" endtime="20201030 10:58:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.496" endtime="20201030 10:58:24.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.490" endtime="20201030 10:58:24.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.558" endtime="20201030 10:58:24.889"></status>
</kw>
<msg timestamp="20201030 10:58:24.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.555" endtime="20201030 10:58:24.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.893" endtime="20201030 10:58:24.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.902" endtime="20201030 10:58:24.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.548" endtime="20201030 10:58:24.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.543" endtime="20201030 10:58:24.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.910" level="INFO">${RESULT} = [{'diff': 2.0277999999998575e-05}, {'diff': 1.972299999999927e-05}, {'diff': 1.966699999999405e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9749999999998935e-05}, {'diff': 1.973699999999884e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:24.906" endtime="20201030 10:58:24.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.915" level="INFO">${ACCURACY} = {'diff': [2.0277999999998575e-05, 1.972299999999927e-05, 1.966699999999405e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.973699999999884e-05, 2.030499999999824e-05, 2.0249999999999435e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:24.911" endtime="20201030 10:58:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.920" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.919" endtime="20201030 10:58:24.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.923" level="INFO">VALUE: [2.0277999999998575e-05, 1.972299999999927e-05, 1.966699999999405e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.973699999999884e-05, 2.030499999999824e-05, 2.0249999999999435e-05, 2.0277999999998575e-05, 1.968100000000056e-05, 2.080499999999874e-05, 2.087499999999659e-05, 2.0347999999996425e-05, 2.0778000000006014e-05, 2.0264000000005944e-05, 1.9749999999998935e-05, 2.023699999999934e-05, 2.0208000000000725e-05, 1.9735999999999365e-05, 2.0777999999999075e-05, 2.020899999999326e-05, 2.0249999999999435e-05, 2.0791999999998645e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.023699999999934e-05, 1.9735999999999365e-05, 2.02769999999991e-05, 1.9749999999998935e-05, 2.0791999999998645e-05, 2.0277999999998575e-05, 2.0235999999999865e-05, 1.9749999999998935e-05, 2.0249999999999435e-05, 1.9735999999999365e-05, 2.02769999999991e-05, 2.0278000000005514e-05, 2.0249999999999435e-05, 2.0777999999999075e-05, 2.0235999999999865e-05, 2.0263999999999005e-05, 2.0791999999998645e-05, 2.0235999999999865e-05, 2.029099999999867e-05, 2.030499999999824e-05, 2.0277999999998575e-05, 2.0235999999999865e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9721999999999795e-05]</msg>
<status status="PASS" starttime="20201030 10:58:24.921" endtime="20201030 10:58:24.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.916" endtime="20201030 10:58:24.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.929" endtime="20201030 10:58:24.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.927" endtime="20201030 10:58:24.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.926" endtime="20201030 10:58:24.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.485" endtime="20201030 10:58:24.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.484" endtime="20201030 10:58:24.950"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.963" endtime="20201030 10:58:24.982"></status>
</kw>
<msg timestamp="20201030 10:58:24.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.960" endtime="20201030 10:58:24.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.985" endtime="20201030 10:58:24.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.992" endtime="20201030 10:58:24.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.956" endtime="20201030 10:58:24.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.953" endtime="20201030 10:58:24.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.016" endtime="20201030 10:58:25.355"></status>
</kw>
<msg timestamp="20201030 10:58:25.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028386153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028410611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.012" endtime="20201030 10:58:25.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028386153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028410611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.365" endtime="20201030 10:58:25.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.384" endtime="20201030 10:58:25.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.005" endtime="20201030 10:58:25.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.000" endtime="20201030 10:58:25.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.401" level="INFO">${RESULT} = [{'diff': 2.4457999999998037e-05}, {'diff': 2.5055999999998996e-05}, {'diff': 2.458300000000163e-05}, {'diff': 2.462500000000034e-05}, {'diff': 2.4610999999997302e-05}, {'diff': 2.443100000000184e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:25.392" endtime="20201030 10:58:25.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.413" level="INFO">${ACCURACY} = {'diff': [2.4457999999998037e-05, 2.5055999999998996e-05, 2.458300000000163e-05, 2.462500000000034e-05, 2.4610999999997302e-05, 2.443100000000184e-05, 2.4777999999999606e-05, 2.44030000000027e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:58:25.403" endtime="20201030 10:58:25.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.424" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.421" endtime="20201030 10:58:25.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.429" level="INFO">VALUE: [2.4457999999998037e-05, 2.5055999999998996e-05, 2.458300000000163e-05, 2.462500000000034e-05, 2.4610999999997302e-05, 2.443100000000184e-05, 2.4777999999999606e-05, 2.44030000000027e-05, 2.463899999999991e-05, 2.4291999999998676e-05, 2.4500000000000216e-05, 2.5027999999999856e-05, 2.443099999999837e-05, 2.420900000000073e-05, 2.490299999999973e-05, 2.4500000000000216e-05, 2.42230000000003e-05, 2.461100000000077e-05, 2.5083999999998136e-05, 2.4764000000000036e-05, 2.4541999999998926e-05, 2.4833999999997886e-05, 2.4929999999999397e-05, 2.49169999999993e-05, 2.486100000000102e-05, 2.4486000000000646e-05, 2.454100000000292e-05, 2.465299999999948e-05, 2.4500000000000216e-05, 2.495900000000148e-05, 2.4165999999999077e-05, 2.4790999999999702e-05, 2.4736000000000896e-05, 2.4305999999998246e-05, 2.483300000000188e-05, 2.4764000000000036e-05, 2.4236000000000396e-05, 2.49169999999993e-05, 2.4472000000001076e-05, 2.4596999999997732e-05, 2.416699999999855e-05, 2.4556000000001965e-05, 2.4513999999999786e-05, 2.4263999999999536e-05, 2.4555999999998496e-05, 2.4736000000000896e-05, 2.4791999999999176e-05, 2.462500000000034e-05, 2.4305999999998246e-05, 2.470899999999776e-05]</msg>
<status status="PASS" starttime="20201030 10:58:25.426" endtime="20201030 10:58:25.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.414" endtime="20201030 10:58:25.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.442" endtime="20201030 10:58:25.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.438" endtime="20201030 10:58:25.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.435" endtime="20201030 10:58:25.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.951" endtime="20201030 10:58:25.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.950" endtime="20201030 10:58:25.474"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.499" endtime="20201030 10:58:25.519"></status>
</kw>
<msg timestamp="20201030 10:58:25.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.495" endtime="20201030 10:58:25.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.522" endtime="20201030 10:58:25.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.528" endtime="20201030 10:58:25.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.488" endtime="20201030 10:58:25.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.481" endtime="20201030 10:58:25.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.552" endtime="20201030 10:58:25.898"></status>
</kw>
<msg timestamp="20201030 10:58:25.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050263833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050290028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.549" endtime="20201030 10:58:25.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050263833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050290028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.908" endtime="20201030 10:58:25.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.927" endtime="20201030 10:58:25.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.542" endtime="20201030 10:58:25.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.537" endtime="20201030 10:58:25.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.944" level="INFO">${RESULT} = [{'diff': 2.619499999999969e-05}, {'diff': 2.5416000000000327e-05}, {'diff': 2.6013999999997817e-05}, {'diff': 2.5584000000002105e-05}, {'diff': 2.5306000000002715e-05}, {'diff': 2.538900000000066e-05...</msg>
<status status="PASS" starttime="20201030 10:58:25.935" endtime="20201030 10:58:25.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.954" level="INFO">${ACCURACY} = {'diff': [2.619499999999969e-05, 2.5416000000000327e-05, 2.6013999999997817e-05, 2.5584000000002105e-05, 2.5306000000002715e-05, 2.538900000000066e-05, 2.5749999999997997e-05, 2.6027999999997387e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:25.946" endtime="20201030 10:58:25.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.965" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.963" endtime="20201030 10:58:25.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.970" level="INFO">VALUE: [2.619499999999969e-05, 2.5416000000000327e-05, 2.6013999999997817e-05, 2.5584000000002105e-05, 2.5306000000002715e-05, 2.538900000000066e-05, 2.5749999999997997e-05, 2.6027999999997387e-05, 2.59170000000003e-05, 2.5292000000003145e-05, 2.544500000000588e-05, 2.569499999999919e-05, 2.5971999999999107e-05, 2.612500000000184e-05, 2.6098000000002175e-05, 2.563900000000091e-05, 2.545900000000545e-05, 2.544499999999894e-05, 2.547299999999808e-05, 2.54169999999998e-05, 2.5512999999997843e-05, 2.5820000000002785e-05, 2.5749999999997997e-05, 2.5360999999994582e-05, 2.5526999999997413e-05, 2.6096999999995762e-05, 2.562500000000134e-05, 2.5152000000000507e-05, 2.583300000000288e-05, 2.613900000000141e-05, 2.558300000000263e-05, 2.5749999999997997e-05, 2.5471999999998607e-05, 2.5193999999999217e-05, 2.5721999999998857e-05, 2.5764000000004506e-05, 2.583300000000288e-05, 2.59170000000003e-05, 2.5846999999995512e-05, 2.587500000000159e-05, 2.5208000000005726e-05, 2.565300000000048e-05, 2.5722000000005796e-05, 2.5291999999996206e-05, 2.515299999999998e-05, 2.5777999999997137e-05, 2.572300000000527e-05, 2.5541999999996456e-05, 2.5763999999997567e-05, 2.612500000000184e-05]</msg>
<status status="PASS" starttime="20201030 10:58:25.967" endtime="20201030 10:58:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.956" endtime="20201030 10:58:25.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.983" endtime="20201030 10:58:26.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.979" endtime="20201030 10:58:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.976" endtime="20201030 10:58:26.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.477" endtime="20201030 10:58:26.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.475" endtime="20201030 10:58:26.009"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.032" endtime="20201030 10:58:26.057"></status>
</kw>
<msg timestamp="20201030 10:58:26.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.028" endtime="20201030 10:58:26.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.060" endtime="20201030 10:58:26.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.067" endtime="20201030 10:58:26.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.021" endtime="20201030 10:58:26.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.015" endtime="20201030 10:58:26.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.091" endtime="20201030 10:58:26.432"></status>
</kw>
<msg timestamp="20201030 10:58:26.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047680375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.087" endtime="20201030 10:58:26.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047680375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047707444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.442" endtime="20201030 10:58:26.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.461" endtime="20201030 10:58:26.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.080" endtime="20201030 10:58:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.075" endtime="20201030 10:58:26.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.479" level="INFO">${RESULT} = [{'diff': 2.706900000000456e-05}, {'diff': 2.690300000000173e-05}, {'diff': 2.687500000000259e-05}, {'diff': 2.6526999999998413e-05}, {'diff': 2.708300000000413e-05}, {'diff': 2.658300000000363e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:26.470" endtime="20201030 10:58:26.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.488" level="INFO">${ACCURACY} = {'diff': [2.706900000000456e-05, 2.690300000000173e-05, 2.687500000000259e-05, 2.6526999999998413e-05, 2.708300000000413e-05, 2.658300000000363e-05, 2.6930000000001397e-05, 2.6874999999995652e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 10:58:26.481" endtime="20201030 10:58:26.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.500" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.497" endtime="20201030 10:58:26.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.506" level="INFO">VALUE: [2.706900000000456e-05, 2.690300000000173e-05, 2.687500000000259e-05, 2.6526999999998413e-05, 2.708300000000413e-05, 2.658300000000363e-05, 2.6930000000001397e-05, 2.6874999999995652e-05, 2.6526999999998413e-05, 2.7068999999997623e-05, 2.6763999999998567e-05, 2.6958000000000537e-05, 2.690300000000173e-05, 2.7027999999998387e-05, 2.6972000000000107e-05, 2.6485999999999177e-05, 2.6972000000000107e-05, 2.6472000000006546e-05, 2.6972000000000107e-05, 2.640300000000123e-05, 2.662500000000234e-05, 2.663900000000191e-05, 2.619499999999969e-05, 2.6860999999996082e-05, 2.6528000000004825e-05, 2.712500000000284e-05, 2.6402000000001757e-05, 2.647299999999908e-05, 2.67369999999989e-05, 2.643100000000037e-05, 2.711100000000327e-05, 2.6402999999994292e-05, 2.6958000000000537e-05, 2.6680000000001147e-05, 2.6235999999998927e-05, 2.6540999999997983e-05, 2.6180000000000647e-05, 2.656900000000406e-05, 2.7042000000004895e-05, 2.69170000000013e-05, 2.708300000000413e-05, 2.662500000000234e-05, 2.7124999999995902e-05, 2.7096999999996763e-05, 2.6444000000000467e-05, 2.6333999999995916e-05, 2.618100000000012e-05, 2.6750000000005936e-05, 2.634700000000295e-05, 2.644499999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.502" endtime="20201030 10:58:26.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.490" endtime="20201030 10:58:26.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.528" endtime="20201030 10:58:26.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.521" endtime="20201030 10:58:26.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.519" endtime="20201030 10:58:26.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.011" endtime="20201030 10:58:26.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.009" endtime="20201030 10:58:26.553"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.576" endtime="20201030 10:58:26.595"></status>
</kw>
<msg timestamp="20201030 10:58:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.573" endtime="20201030 10:58:26.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.599" endtime="20201030 10:58:26.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.605" endtime="20201030 10:58:26.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.565" endtime="20201030 10:58:26.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.560" endtime="20201030 10:58:26.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.629" endtime="20201030 10:58:26.970"></status>
</kw>
<msg timestamp="20201030 10:58:26.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041832472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041859708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.625" endtime="20201030 10:58:26.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041832472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041859708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.979" endtime="20201030 10:58:26.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.998" endtime="20201030 10:58:27.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.618" endtime="20201030 10:58:27.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.613" endtime="20201030 10:58:27.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.016" level="INFO">${RESULT} = [{'diff': 2.7235999999999927e-05}, {'diff': 2.772300000000033e-05}, {'diff': 2.7499999999999747e-05}, {'diff': 2.7526999999999413e-05}, {'diff': 2.7971999999994168e-05}, {'diff': 2.7776999999999663e-0...</msg>
<status status="PASS" starttime="20201030 10:58:27.007" endtime="20201030 10:58:27.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.027" level="INFO">${ACCURACY} = {'diff': [2.7235999999999927e-05, 2.772300000000033e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7971999999994168e-05, 2.7776999999999663e-05, 2.7736000000000427e-05, 2.8138999999996472e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:27.018" endtime="20201030 10:58:27.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.038" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.036" endtime="20201030 10:58:27.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.043" level="INFO">VALUE: [2.7235999999999927e-05, 2.772300000000033e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7971999999994168e-05, 2.7776999999999663e-05, 2.7736000000000427e-05, 2.8138999999996472e-05, 2.7458000000001037e-05, 2.7486000000000177e-05, 2.7832999999997943e-05, 2.7860999999997083e-05, 2.7638999999995972e-05, 2.762500000000334e-05, 2.7166999999994612e-05, 2.7568999999998123e-05, 2.763900000000291e-05, 2.7152999999995042e-05, 2.8069999999998096e-05, 2.80970000000047e-05, 2.7360999999996582e-05, 2.743100000000137e-05, 2.8097999999997236e-05, 2.740300000000223e-05, 2.7847999999996986e-05, 2.7972000000001107e-05, 2.743100000000137e-05, 2.7568999999998123e-05, 2.7749999999999997e-05, 2.738900000000266e-05, 2.7958000000001537e-05, 2.7304999999998303e-05, 2.734700000000395e-05, 2.7791999999998707e-05, 2.8068999999998623e-05, 2.812500000000384e-05, 2.790300000000273e-05, 2.7944000000001967e-05, 2.808300000000513e-05, 2.783300000000488e-05, 2.7402999999995292e-05, 2.7694000000001717e-05, 2.74170000000018e-05, 2.763900000000291e-05, 2.783300000000488e-05, 2.7541999999998457e-05, 2.7541999999998457e-05, 2.8096999999997763e-05, 2.7540999999998983e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.040" endtime="20201030 10:58:27.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.029" endtime="20201030 10:58:27.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.056" endtime="20201030 10:58:27.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.052" endtime="20201030 10:58:27.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.049" endtime="20201030 10:58:27.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.555" endtime="20201030 10:58:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.554" endtime="20201030 10:58:27.081"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.104" endtime="20201030 10:58:27.123"></status>
</kw>
<msg timestamp="20201030 10:58:27.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.101" endtime="20201030 10:58:27.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.127" endtime="20201030 10:58:27.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.133" endtime="20201030 10:58:27.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.094" endtime="20201030 10:58:27.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.088" endtime="20201030 10:58:27.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.157" endtime="20201030 10:58:27.500"></status>
</kw>
<msg timestamp="20201030 10:58:27.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041639792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.154" endtime="20201030 10:58:27.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041639792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.509" endtime="20201030 10:58:27.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.529" endtime="20201030 10:58:27.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.146" endtime="20201030 10:58:27.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.141" endtime="20201030 10:58:27.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.547" level="INFO">${RESULT} = [{'diff': 2.869500000000219e-05}, {'diff': 2.895900000000201e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.9194000000003217e-05}, {'diff': 2.86379999999975e-05}, {'diff': 2.8694000000002717e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:27.538" endtime="20201030 10:58:27.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.559" level="INFO">${ACCURACY} = {'diff': [2.869500000000219e-05, 2.895900000000201e-05, 2.8236000000000927e-05, 2.9194000000003217e-05, 2.86379999999975e-05, 2.8694000000002717e-05, 2.9222000000002357e-05, 2.8291000000006672e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:27.549" endtime="20201030 10:58:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.570" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.568" endtime="20201030 10:58:27.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.576" level="INFO">VALUE: [2.869500000000219e-05, 2.895900000000201e-05, 2.8236000000000927e-05, 2.9194000000003217e-05, 2.86379999999975e-05, 2.8694000000002717e-05, 2.9222000000002357e-05, 2.8291000000006672e-05, 2.815199999999657e-05, 2.912500000000484e-05, 2.8791000000000233e-05, 2.8402999999996292e-05, 2.9138999999997472e-05, 2.8222000000001357e-05, 2.8472000000001607e-05, 2.8874999999997653e-05, 2.915300000000398e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.897300000000158e-05, 2.8750000000000997e-05, 2.8568999999999123e-05, 2.8360999999997583e-05, 2.9152999999997042e-05, 2.9069999999999097e-05, 2.8264000000000067e-05, 2.9096999999998763e-05, 2.9124999999997903e-05, 2.8819999999998847e-05, 2.8721999999994918e-05, 2.870900000000176e-05, 2.8388999999996722e-05, 2.8388999999996722e-05, 2.891599999999689e-05, 2.8638999999996972e-05, 2.8527000000000413e-05, 2.8582999999998693e-05, 2.8540999999999983e-05, 2.865300000000348e-05, 2.8430000000002897e-05, 2.867999999999621e-05, 2.8291999999999207e-05, 2.9014000000000817e-05, 2.8208000000001787e-05, 2.8360999999997583e-05, 2.9000000000001247e-05, 2.89170000000033e-05, 2.8527999999999887e-05, 2.8874999999997653e-05, 2.9069999999999097e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.573" endtime="20201030 10:58:27.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.561" endtime="20201030 10:58:27.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.589" endtime="20201030 10:58:27.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.584" endtime="20201030 10:58:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.582" endtime="20201030 10:58:27.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.083" endtime="20201030 10:58:27.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.082" endtime="20201030 10:58:27.614"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.637" endtime="20201030 10:58:27.657"></status>
</kw>
<msg timestamp="20201030 10:58:27.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.634" endtime="20201030 10:58:27.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.660" endtime="20201030 10:58:27.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.667" endtime="20201030 10:58:27.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.626" endtime="20201030 10:58:27.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.620" endtime="20201030 10:58:27.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.690" endtime="20201030 10:58:28.033"></status>
</kw>
<msg timestamp="20201030 10:58:28.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.687" endtime="20201030 10:58:28.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.043" endtime="20201030 10:58:28.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.062" endtime="20201030 10:58:28.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.680" endtime="20201030 10:58:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.675" endtime="20201030 10:58:28.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.079" level="INFO">${RESULT} = [{'diff': 2.9791000000001233e-05}, {'diff': 2.9541000000000983e-05}, {'diff': 2.9541000000000983e-05}, {'diff': 2.9124999999997903e-05}, {'diff': 2.9902999999997792e-05}, {'diff': 3.0056000000000527e-...</msg>
<status status="PASS" starttime="20201030 10:58:28.070" endtime="20201030 10:58:28.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.089" level="INFO">${ACCURACY} = {'diff': [2.9791000000001233e-05, 2.9541000000000983e-05, 2.9541000000000983e-05, 2.9124999999997903e-05, 2.9902999999997792e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 2.9735999999995488e-05...</msg>
<status status="PASS" starttime="20201030 10:58:28.081" endtime="20201030 10:58:28.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.100" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.098" endtime="20201030 10:58:28.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.105" level="INFO">VALUE: [2.9791000000001233e-05, 2.9541000000000983e-05, 2.9541000000000983e-05, 2.9124999999997903e-05, 2.9902999999997792e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 2.9735999999995488e-05, 2.9472000000002607e-05, 2.9902999999997792e-05, 2.9749999999995058e-05, 2.922199999999542e-05, 2.9610999999998833e-05, 2.9485999999995238e-05, 2.9250000000001497e-05, 2.9500000000001747e-05, 2.9347999999998486e-05, 2.9305999999999777e-05, 2.9735999999995488e-05, 2.962500000000534e-05, 2.9514000000001317e-05, 2.945900000000251e-05, 2.992999999999746e-05, 2.944399999999653e-05, 2.9458000000003037e-05, 2.9208000000002787e-05, 2.969399999999678e-05, 2.9528000000000887e-05, 2.9832999999999943e-05, 2.9888999999998223e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, 2.9402999999997292e-05, 3.0070000000000097e-05, 3.0056000000000527e-05, 2.9819000000000373e-05, 2.9874999999998653e-05, 2.9806000000000277e-05, 3.019399999999728e-05, 2.943100000000337e-05, 2.9749999999995058e-05, 2.9096999999998763e-05, 2.9250000000001497e-05, 2.9610999999998833e-05, 2.972199999999592e-05, 2.9555000000000553e-05, 2.9694000000003717e-05, 2.9291000000000733e-05, 2.9764000000001567e-05, 2.9291000000000733e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.102" endtime="20201030 10:58:28.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.091" endtime="20201030 10:58:28.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.118" endtime="20201030 10:58:28.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.114" endtime="20201030 10:58:28.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.111" endtime="20201030 10:58:28.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.616" endtime="20201030 10:58:28.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.615" endtime="20201030 10:58:28.143"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.166" endtime="20201030 10:58:28.188"></status>
</kw>
<msg timestamp="20201030 10:58:28.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.163" endtime="20201030 10:58:28.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.191" endtime="20201030 10:58:28.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.197" endtime="20201030 10:58:28.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.156" endtime="20201030 10:58:28.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.150" endtime="20201030 10:58:28.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.209" endtime="20201030 10:58:28.515"></status>
</kw>
<msg timestamp="20201030 10:58:28.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043116028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043146292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.207" endtime="20201030 10:58:28.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043116028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043146292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.525" endtime="20201030 10:58:28.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.544" endtime="20201030 10:58:28.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.204" endtime="20201030 10:58:28.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.201" endtime="20201030 10:58:28.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.561" level="INFO">${RESULT} = [{'diff': 3.0264000000002067e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.0250000000002497e-05}, {'diff': 3.073599999999649e-05}, {'diff': 3.0750000000003e-05}, {'diff': 3.04170000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:28.552" endtime="20201030 10:58:28.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.571" level="INFO">${ACCURACY} = {'diff': [3.0264000000002067e-05, 3.115299999999904e-05, 3.0250000000002497e-05, 3.073599999999649e-05, 3.0750000000003e-05, 3.04170000000048e-05, 3.0360999999999583e-05, 3.0472999999996142e-05, 3.063...</msg>
<status status="PASS" starttime="20201030 10:58:28.563" endtime="20201030 10:58:28.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.583" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.580" endtime="20201030 10:58:28.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.589" level="INFO">VALUE: [3.0264000000002067e-05, 3.115299999999904e-05, 3.0250000000002497e-05, 3.073599999999649e-05, 3.0750000000003e-05, 3.04170000000048e-05, 3.0360999999999583e-05, 3.0472999999996142e-05, 3.063899999999897e-05, 3.074999999999606e-05, 3.097299999999664e-05, 3.054200000000146e-05, 3.1026999999995974e-05, 3.069399999999778e-05, 3.094399999999803e-05, 3.073600000000343e-05, 3.041599999999839e-05, 3.079100000000223e-05, 3.091599999999889e-05, 3.0374999999999153e-05, 3.055600000000103e-05, 3.099999999999631e-05, 3.052800000000189e-05, 3.0347000000000013e-05, 3.081999999999391e-05, 3.082000000000085e-05, 3.072200000000386e-05, 3.102800000000239e-05, 3.083300000000094e-05, 3.106999999999416e-05, 3.0306000000000777e-05, 3.0500000000002747e-05, 3.0388999999998723e-05, 3.084700000000051e-05, 3.04170000000048e-05, 3.108400000000067e-05, 3.06379999999995e-05, 3.0861999999999556e-05, 3.059700000000026e-05, 3.0374999999999153e-05, 3.108300000000119e-05, 3.106900000000162e-05, 3.0500000000002747e-05, 3.073599999999649e-05, 3.090299999999879e-05, 3.0416999999997862e-05, 3.069400000000472e-05, 3.093100000000487e-05, 3.090300000000573e-05, 3.109700000000076e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.585" endtime="20201030 10:58:28.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.573" endtime="20201030 10:58:28.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.604" endtime="20201030 10:58:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.598" endtime="20201030 10:58:28.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.595" endtime="20201030 10:58:28.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.146" endtime="20201030 10:58:28.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.144" endtime="20201030 10:58:28.629"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.652" endtime="20201030 10:58:28.671"></status>
</kw>
<msg timestamp="20201030 10:58:28.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.649" endtime="20201030 10:58:28.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.675" endtime="20201030 10:58:28.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.681" endtime="20201030 10:58:28.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.642" endtime="20201030 10:58:28.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.636" endtime="20201030 10:58:28.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.705" endtime="20201030 10:58:29.045"></status>
</kw>
<msg timestamp="20201030 10:58:29.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041861583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.702" endtime="20201030 10:58:29.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041861583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.054" endtime="20201030 10:58:29.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.073" endtime="20201030 10:58:29.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.694" endtime="20201030 10:58:29.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.689" endtime="20201030 10:58:29.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.091" level="INFO">${RESULT} = [{'diff': 3.186100000000108e-05}, {'diff': 3.2138000000001e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.126400000000307e-05}, {'diff': 3.187500000000065e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:29.082" endtime="20201030 10:58:29.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.101" level="INFO">${ACCURACY} = {'diff': [3.186100000000108e-05, 3.2138000000001e-05, 3.120799999999785e-05, 3.188900000000022e-05, 3.126400000000307e-05, 3.187500000000065e-05, 3.1790999999996294e-05, 3.202799999999645e-05, 3.16809...</msg>
<status status="PASS" starttime="20201030 10:58:29.093" endtime="20201030 10:58:29.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.112" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.110" endtime="20201030 10:58:29.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.118" level="INFO">VALUE: [3.186100000000108e-05, 3.2138000000001e-05, 3.120799999999785e-05, 3.188900000000022e-05, 3.126400000000307e-05, 3.187500000000065e-05, 3.1790999999996294e-05, 3.202799999999645e-05, 3.168099999999868e-05, 3.149999999999681e-05, 3.127800000000264e-05, 3.159700000000126e-05, 3.130600000000178e-05, 3.215300000000004e-05, 3.147199999999767e-05, 3.204200000000296e-05, 3.20700000000021e-05, 3.20700000000021e-05, 3.159700000000126e-05, 3.16250000000004e-05, 3.17370000000039e-05, 3.118099999999818e-05, 3.173600000000443e-05, 3.169500000000519e-05, 3.19579999999986e-05, 3.187500000000065e-05, 3.206999999999516e-05, 3.170799999999835e-05, 3.158300000000169e-05, 3.120799999999785e-05, 3.115199999999957e-05, 3.2068999999995684e-05, 3.147199999999767e-05, 3.122199999999742e-05, 3.12500000000035e-05, 3.119399999999828e-05, 3.141699999999886e-05, 3.213900000000047e-05, 3.149999999999681e-05, 3.174999999999706e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.213900000000047e-05, 3.156900000000212e-05, 3.126400000000307e-05, 3.193099999999893e-05, 3.17370000000039e-05, 3.195899999999807e-05, 3.1304999999995364e-05, 3.215300000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.115" endtime="20201030 10:58:29.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.103" endtime="20201030 10:58:29.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.131" endtime="20201030 10:58:29.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.126" endtime="20201030 10:58:29.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.124" endtime="20201030 10:58:29.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.631" endtime="20201030 10:58:29.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.630" endtime="20201030 10:58:29.156"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.179" endtime="20201030 10:58:29.198"></status>
</kw>
<msg timestamp="20201030 10:58:29.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.175" endtime="20201030 10:58:29.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.201" endtime="20201030 10:58:29.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.208" endtime="20201030 10:58:29.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.168" endtime="20201030 10:58:29.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.162" endtime="20201030 10:58:29.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.231" endtime="20201030 10:58:29.573"></status>
</kw>
<msg timestamp="20201030 10:58:29.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041517528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041549847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.228" endtime="20201030 10:58:29.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041517528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041549847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.583" endtime="20201030 10:58:29.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.602" endtime="20201030 10:58:29.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.221" endtime="20201030 10:58:29.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.216" endtime="20201030 10:58:29.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.620" level="INFO">${RESULT} = [{'diff': 3.231900000000287e-05}, {'diff': 3.224999999999756e-05}, {'diff': 3.284700000000251e-05}, {'diff': 3.26250000000014e-05}, {'diff': 3.251400000000432e-05}, {'diff': 3.245900000000551e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:29.611" endtime="20201030 10:58:29.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.632" level="INFO">${ACCURACY} = {'diff': [3.231900000000287e-05, 3.224999999999756e-05, 3.284700000000251e-05, 3.26250000000014e-05, 3.251400000000432e-05, 3.245900000000551e-05, 3.247199999999867e-05, 3.308400000000267e-05, 3.23060...</msg>
<status status="PASS" starttime="20201030 10:58:29.622" endtime="20201030 10:58:29.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.643" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.641" endtime="20201030 10:58:29.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.649" level="INFO">VALUE: [3.231900000000287e-05, 3.224999999999756e-05, 3.284700000000251e-05, 3.26250000000014e-05, 3.251400000000432e-05, 3.245900000000551e-05, 3.247199999999867e-05, 3.308400000000267e-05, 3.230600000000278e-05, 3.269499999999925e-05, 3.290300000000079e-05, 3.224999999999756e-05, 3.223599999999799e-05, 3.293100000000687e-05, 3.252800000000389e-05, 3.255600000000303e-05, 3.309800000000224e-05, 3.261100000000183e-05, 3.224999999999756e-05, 3.227800000000364e-05, 3.250000000000475e-05, 3.293000000000046e-05, 3.274999999999806e-05, 3.26250000000014e-05, 3.242999999999996e-05, 3.220799999999885e-05, 3.22500000000045e-05, 3.274999999999806e-05, 3.2304999999996364e-05, 3.304200000000396e-05, 3.256999999999566e-05, 3.2874999999994714e-05, 3.244399999999953e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.224999999999756e-05, 3.2750000000005e-05, 3.272199999999892e-05, 3.276400000000457e-05, 3.297199999999917e-05, 3.2444999999999e-05, 3.241599999999345e-05, 3.230599999999584e-05, 3.288900000000122e-05, 3.282000000000285e-05, 3.268000000000021e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.2790999999997295e-05, 3.217999999999971e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.646" endtime="20201030 10:58:29.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.634" endtime="20201030 10:58:29.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.662" endtime="20201030 10:58:29.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.657" endtime="20201030 10:58:29.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.655" endtime="20201030 10:58:29.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.158" endtime="20201030 10:58:29.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.157" endtime="20201030 10:58:29.687"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.710" endtime="20201030 10:58:29.730"></status>
</kw>
<msg timestamp="20201030 10:58:29.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.707" endtime="20201030 10:58:29.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.733" endtime="20201030 10:58:29.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.740" endtime="20201030 10:58:29.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.699" endtime="20201030 10:58:29.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.693" endtime="20201030 10:58:29.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.764" endtime="20201030 10:58:30.107"></status>
</kw>
<msg timestamp="20201030 10:58:30.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041710542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.760" endtime="20201030 10:58:30.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041710542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.117" endtime="20201030 10:58:30.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.136" endtime="20201030 10:58:30.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.753" endtime="20201030 10:58:30.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.748" endtime="20201030 10:58:30.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.153" level="INFO">${RESULT} = [{'diff': 3.413900000000247e-05}, {'diff': 3.3750000000006e-05}, {'diff': 3.384700000000351e-05}, {'diff': 3.317999999999377e-05}, {'diff': 3.384700000000351e-05}, {'diff': 3.406900000000462e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:30.144" endtime="20201030 10:58:30.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.163" level="INFO">${ACCURACY} = {'diff': [3.413900000000247e-05, 3.3750000000006e-05, 3.384700000000351e-05, 3.317999999999377e-05, 3.384700000000351e-05, 3.406900000000462e-05, 3.36380000000025e-05, 3.39580000000006e-05, 3.34860000...</msg>
<status status="PASS" starttime="20201030 10:58:30.155" endtime="20201030 10:58:30.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.174" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.172" endtime="20201030 10:58:30.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.179" level="INFO">VALUE: [3.413900000000247e-05, 3.3750000000006e-05, 3.384700000000351e-05, 3.317999999999377e-05, 3.384700000000351e-05, 3.406900000000462e-05, 3.36380000000025e-05, 3.39580000000006e-05, 3.348600000000618e-05, 3.326399999999813e-05, 3.322199999999942e-05, 3.399999999999931e-05, 3.4054999999998115e-05, 3.3346999999996074e-05, 3.4054999999998115e-05, 3.370899999999982e-05, 3.347199999999967e-05, 3.330599999999684e-05, 3.326399999999813e-05, 3.341700000000086e-05, 3.322199999999942e-05, 3.408399999999673e-05, 3.374999999999906e-05, 3.398599999999974e-05, 3.363900000000197e-05, 3.355600000000403e-05, 3.380600000000428e-05, 3.341700000000086e-05, 3.391700000000136e-05, 3.3290999999997795e-05, 3.36250000000024e-05, 3.409700000000376e-05, 3.3318999999996934e-05, 3.3568999999997184e-05, 3.388900000000222e-05, 3.4054999999998115e-05, 3.320799999999985e-05, 3.324999999999856e-05, 3.330600000000378e-05, 3.376399999999863e-05, 3.394400000000103e-05, 3.384700000000351e-05, 3.343100000000043e-05, 3.388900000000222e-05, 3.397200000000017e-05, 3.369500000000025e-05, 3.35700000000036e-05, 3.405599999999759e-05, 3.338800000000225e-05, 3.4096999999996824e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.176" endtime="20201030 10:58:30.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.165" endtime="20201030 10:58:30.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.192" endtime="20201030 10:58:30.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.188" endtime="20201030 10:58:30.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.185" endtime="20201030 10:58:30.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.689" endtime="20201030 10:58:30.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.688" endtime="20201030 10:58:30.217"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.240" endtime="20201030 10:58:30.261"></status>
</kw>
<msg timestamp="20201030 10:58:30.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.237" endtime="20201030 10:58:30.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.265" endtime="20201030 10:58:30.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.271" endtime="20201030 10:58:30.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.230" endtime="20201030 10:58:30.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.224" endtime="20201030 10:58:30.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.295" endtime="20201030 10:58:30.638"></status>
</kw>
<msg timestamp="20201030 10:58:30.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043146097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043181167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.292" endtime="20201030 10:58:30.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043146097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043181167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.648" endtime="20201030 10:58:30.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.668" endtime="20201030 10:58:30.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.284" endtime="20201030 10:58:30.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.280" endtime="20201030 10:58:30.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.685" level="INFO">${RESULT} = [{'diff': 3.506999999999816e-05}, {'diff': 3.5055000000006054e-05}, {'diff': 3.472300000000039e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.508399999999773e-05}, {'diff': 3.4832999999998004e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:30.676" endtime="20201030 10:58:30.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.695" level="INFO">${ACCURACY} = {'diff': [3.506999999999816e-05, 3.5055000000006054e-05, 3.472300000000039e-05, 3.475000000000006e-05, 3.508399999999773e-05, 3.4832999999998004e-05, 3.4790999999999295e-05, 3.502799999999945e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 10:58:30.687" endtime="20201030 10:58:30.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.706" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.703" endtime="20201030 10:58:30.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.711" level="INFO">VALUE: [3.506999999999816e-05, 3.5055000000006054e-05, 3.472300000000039e-05, 3.475000000000006e-05, 3.508399999999773e-05, 3.4832999999998004e-05, 3.4790999999999295e-05, 3.502799999999945e-05, 3.5068999999998685e-05, 3.484700000000451e-05, 3.459700000000426e-05, 3.504199999999902e-05, 3.423599999999999e-05, 3.4596999999997324e-05, 3.419400000000128e-05, 3.480600000000528e-05, 3.501399999999988e-05, 3.469500000000125e-05, 3.426399999999913e-05, 3.51250000000039e-05, 3.4360999999996644e-05, 3.493100000000193e-05, 3.501399999999988e-05, 3.444400000000153e-05, 3.481999999999791e-05, 3.427800000000564e-05, 3.508300000000519e-05, 3.501399999999988e-05, 3.4290999999998795e-05, 3.4318999999997934e-05, 3.423599999999999e-05, 3.4776999999999725e-05, 3.500000000000031e-05, 3.419400000000128e-05, 3.5068999999998685e-05, 3.501399999999988e-05, 3.487500000000365e-05, 3.4846999999997574e-05, 3.470800000000135e-05, 3.422200000000042e-05, 3.473600000000049e-05, 3.443100000000143e-05, 3.465300000000254e-05, 3.480599999999834e-05, 3.420800000000085e-05, 3.440300000000229e-05, 3.472300000000039e-05, 3.475000000000006e-05, 3.449999999999981e-05, 3.484800000000399e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.708" endtime="20201030 10:58:30.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.696" endtime="20201030 10:58:30.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.725" endtime="20201030 10:58:30.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.719" endtime="20201030 10:58:30.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.717" endtime="20201030 10:58:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.219" endtime="20201030 10:58:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.218" endtime="20201030 10:58:30.751"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.774" endtime="20201030 10:58:30.793"></status>
</kw>
<msg timestamp="20201030 10:58:30.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.770" endtime="20201030 10:58:30.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.797" endtime="20201030 10:58:30.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.803" endtime="20201030 10:58:30.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.763" endtime="20201030 10:58:30.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.757" endtime="20201030 10:58:30.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.827" endtime="20201030 10:58:31.169"></status>
</kw>
<msg timestamp="20201030 10:58:31.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042038389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.823" endtime="20201030 10:58:31.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042038389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.178" endtime="20201030 10:58:31.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.197" endtime="20201030 10:58:31.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.816" endtime="20201030 10:58:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.811" endtime="20201030 10:58:31.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.215" level="INFO">${RESULT} = [{'diff': 3.59580000000026e-05}, {'diff': 3.6082999999999255e-05}, {'diff': 3.563900000000397e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.5722999999994454e-05}, {'diff': 3.547199999999473e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:31.206" endtime="20201030 10:58:31.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.230" level="INFO">${ACCURACY} = {'diff': [3.59580000000026e-05, 3.6082999999999255e-05, 3.563900000000397e-05, 3.551400000000038e-05, 3.5722999999994454e-05, 3.547199999999473e-05, 3.576400000000063e-05, 3.599999999999437e-05, 3.551...</msg>
<status status="PASS" starttime="20201030 10:58:31.217" endtime="20201030 10:58:31.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.241" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.239" endtime="20201030 10:58:31.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.247" level="INFO">VALUE: [3.59580000000026e-05, 3.6082999999999255e-05, 3.563900000000397e-05, 3.551400000000038e-05, 3.5722999999994454e-05, 3.547199999999473e-05, 3.576400000000063e-05, 3.599999999999437e-05, 3.551400000000038e-05, 3.606999999999916e-05, 3.529199999999927e-05, 3.538900000000372e-05, 3.602800000000045e-05, 3.5180999999995244e-05, 3.573600000000149e-05, 3.52779999999997e-05, 3.5582999999998755e-05, 3.5624999999997464e-05, 3.570800000000235e-05, 3.568000000000321e-05, 3.595799999999566e-05, 3.569500000000225e-05, 3.59580000000026e-05, 3.573600000000149e-05, 3.5402999999996354e-05, 3.5346999999998074e-05, 3.513900000000347e-05, 3.5888999999997284e-05, 3.6082999999999255e-05, 3.573600000000149e-05, 3.6124999999997964e-05, 3.533399999999798e-05, 3.530599999999884e-05, 3.6068999999999685e-05, 3.519500000000175e-05, 3.5874999999997714e-05, 3.60700000000061e-05, 3.5458999999994634e-05, 3.558399999999823e-05, 3.5360999999997644e-05, 3.5762999999994216e-05, 3.594399999999609e-05, 3.590300000000379e-05, 3.5290999999999795e-05, 3.597200000000217e-05, 3.554199999999952e-05, 3.5610999999997894e-05, 3.595900000000207e-05, 3.591700000000336e-05, 3.520800000000185e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.244" endtime="20201030 10:58:31.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.232" endtime="20201030 10:58:31.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.259" endtime="20201030 10:58:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.255" endtime="20201030 10:58:31.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.252" endtime="20201030 10:58:31.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.753" endtime="20201030 10:58:31.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.752" endtime="20201030 10:58:31.284"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.308" endtime="20201030 10:58:31.328"></status>
</kw>
<msg timestamp="20201030 10:58:31.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.304" endtime="20201030 10:58:31.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.331" endtime="20201030 10:58:31.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.338" endtime="20201030 10:58:31.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.297" endtime="20201030 10:58:31.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.291" endtime="20201030 10:58:31.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.363" endtime="20201030 10:58:31.697"></status>
</kw>
<msg timestamp="20201030 10:58:31.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0415605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:31.360" endtime="20201030 10:58:31.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0415605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:31.701" endtime="20201030 10:58:31.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.710" endtime="20201030 10:58:31.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.353" endtime="20201030 10:58:31.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.348" endtime="20201030 10:58:31.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.718" level="INFO">${RESULT} = [{'diff': 3.629200000000027e-05}, {'diff': 3.7083000000000255e-05}, {'diff': 3.679200000000077e-05}, {'diff': 3.6430999999996494e-05}, {'diff': 3.673600000000249e-05}, {'diff': 3.6458999999995634e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:31.714" endtime="20201030 10:58:31.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.723" level="INFO">${ACCURACY} = {'diff': [3.629200000000027e-05, 3.7083000000000255e-05, 3.679200000000077e-05, 3.6430999999996494e-05, 3.673600000000249e-05, 3.6458999999995634e-05, 3.684799999999905e-05, 3.7069000000000685e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:31.719" endtime="20201030 10:58:31.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.729" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.727" endtime="20201030 10:58:31.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.731" level="INFO">VALUE: [3.629200000000027e-05, 3.7083000000000255e-05, 3.679200000000077e-05, 3.6430999999996494e-05, 3.673600000000249e-05, 3.6458999999995634e-05, 3.684799999999905e-05, 3.7069000000000685e-05, 3.6652999999997604e-05, 3.70979999999993e-05, 3.623700000000146e-05, 3.69580000000036e-05, 3.613799999999806e-05, 3.626400000000113e-05, 3.6291000000000795e-05, 3.670799999999641e-05, 3.644399999999659e-05, 3.668100000000368e-05, 3.6805000000000865e-05, 3.622200000000242e-05, 3.629200000000027e-05, 3.702800000000145e-05, 3.699999999999537e-05, 3.7166999999997674e-05, 3.705600000000059e-05, 3.6874999999998714e-05, 3.652800000000095e-05, 3.695900000000307e-05, 3.6916999999997424e-05, 3.683399999999948e-05, 3.6305000000000365e-05, 3.626399999999419e-05, 3.6874999999998714e-05, 3.715199999999863e-05, 3.702800000000145e-05, 3.61659999999972e-05, 3.644399999999659e-05, 3.704200000000102e-05, 3.617999999999677e-05, 3.6624999999998464e-05, 3.688900000000522e-05, 3.650000000000181e-05, 3.691700000000436e-05, 3.7152999999998104e-05, 3.681999999999991e-05, 3.6388999999997784e-05, 3.70979999999993e-05, 3.6402999999997354e-05, 3.6374999999998214e-05, 3.672300000000239e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.730" endtime="20201030 10:58:31.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.724" endtime="20201030 10:58:31.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.747" endtime="20201030 10:58:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.742" endtime="20201030 10:58:31.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.740" endtime="20201030 10:58:31.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.287" endtime="20201030 10:58:31.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.285" endtime="20201030 10:58:31.772"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.795" endtime="20201030 10:58:31.815"></status>
</kw>
<msg timestamp="20201030 10:58:31.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.792" endtime="20201030 10:58:31.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.819" endtime="20201030 10:58:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.825" endtime="20201030 10:58:31.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.784" endtime="20201030 10:58:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.778" endtime="20201030 10:58:31.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.849" endtime="20201030 10:58:32.194"></status>
</kw>
<msg timestamp="20201030 10:58:32.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.846" endtime="20201030 10:58:32.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.204" endtime="20201030 10:58:32.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.223" endtime="20201030 10:58:32.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.838" endtime="20201030 10:58:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.833" endtime="20201030 10:58:32.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.240" level="INFO">${RESULT} = [{'diff': 3.807000000000116e-05}, {'diff': 3.7166999999997674e-05}, {'diff': 3.8040999999995606e-05}, {'diff': 3.7291000000001795e-05}, {'diff': 3.725000000000256e-05}, {'diff': 3.788900000000622e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:32.231" endtime="20201030 10:58:32.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.250" level="INFO">${ACCURACY} = {'diff': [3.807000000000116e-05, 3.7166999999997674e-05, 3.8040999999995606e-05, 3.7291000000001795e-05, 3.725000000000256e-05, 3.788900000000622e-05, 3.7276999999995286e-05, 3.7888999999999284e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:58:32.242" endtime="20201030 10:58:32.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.261" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.258" endtime="20201030 10:58:32.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.266" level="INFO">VALUE: [3.807000000000116e-05, 3.7166999999997674e-05, 3.8040999999995606e-05, 3.7291000000001795e-05, 3.725000000000256e-05, 3.788900000000622e-05, 3.7276999999995286e-05, 3.7888999999999284e-05, 3.7541000000002045e-05, 3.8069000000001685e-05, 3.720799999999691e-05, 3.726399999999519e-05, 3.751399999999544e-05, 3.795799999999766e-05, 3.7360999999999644e-05, 3.804199999999508e-05, 3.7680999999997744e-05, 3.804199999999508e-05, 3.7624999999999464e-05, 3.752800000000195e-05, 3.7472999999996204e-05, 3.8124999999999964e-05, 3.725000000000256e-05, 3.752800000000195e-05, 3.718100000000418e-05, 3.722200000000342e-05, 3.7624999999999464e-05, 3.8138999999999534e-05, 3.7555000000001615e-05, 3.798600000000374e-05, 3.7819000000001435e-05, 3.775000000000306e-05, 3.7638999999999034e-05, 3.7347000000000075e-05, 3.750000000000281e-05, 3.805600000000159e-05, 3.781999999999397e-05, 3.720799999999691e-05, 3.79859999999968e-05, 3.769500000000425e-05, 3.805600000000159e-05, 3.747199999999673e-05, 3.751400000000238e-05, 3.775000000000306e-05, 3.7458999999996634e-05, 3.722300000000289e-05, 3.793000000000546e-05, 3.8068999999994746e-05, 3.804200000000202e-05, 3.775000000000306e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.263" endtime="20201030 10:58:32.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.251" endtime="20201030 10:58:32.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.279" endtime="20201030 10:58:32.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.274" endtime="20201030 10:58:32.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.272" endtime="20201030 10:58:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.774" endtime="20201030 10:58:32.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.773" endtime="20201030 10:58:32.304"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.327" endtime="20201030 10:58:32.349"></status>
</kw>
<msg timestamp="20201030 10:58:32.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.324" endtime="20201030 10:58:32.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.352" endtime="20201030 10:58:32.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.358" endtime="20201030 10:58:32.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.316" endtime="20201030 10:58:32.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.310" endtime="20201030 10:58:32.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.382" endtime="20201030 10:58:32.724"></status>
</kw>
<msg timestamp="20201030 10:58:32.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043141514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.379" endtime="20201030 10:58:32.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043141514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.734" endtime="20201030 10:58:32.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.753" endtime="20201030 10:58:32.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.371" endtime="20201030 10:58:32.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.367" endtime="20201030 10:58:32.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.771" level="INFO">${RESULT} = [{'diff': 3.830600000000184e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.826400000000313e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.852800000000295e-05}, {'diff': 3.8375000000000214e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:32.762" endtime="20201030 10:58:32.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.780" level="INFO">${ACCURACY} = {'diff': [3.830600000000184e-05, 3.8652999999999604e-05, 3.826400000000313e-05, 3.8875000000000715e-05, 3.852800000000295e-05, 3.8375000000000214e-05, 3.824999999999662e-05, 3.843100000000543e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 10:58:32.773" endtime="20201030 10:58:32.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.791" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.789" endtime="20201030 10:58:32.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.797" level="INFO">VALUE: [3.830600000000184e-05, 3.8652999999999604e-05, 3.826400000000313e-05, 3.8875000000000715e-05, 3.852800000000295e-05, 3.8375000000000214e-05, 3.824999999999662e-05, 3.843100000000543e-05, 3.870799999999841e-05, 3.901399999999694e-05, 3.8639000000000034e-05, 3.8416999999998924e-05, 3.822300000000389e-05, 3.876399999999669e-05, 3.9097000000001825e-05, 3.9041000000003545e-05, 3.9040999999996606e-05, 3.842999999999902e-05, 3.9097000000001825e-05, 3.840199999999988e-05, 3.873600000000449e-05, 3.822199999999748e-05, 3.8611000000000895e-05, 3.9138999999993596e-05, 3.8388999999999784e-05, 3.8639000000000034e-05, 3.8819000000002435e-05, 3.895900000000507e-05, 3.899999999999737e-05, 3.897200000000517e-05, 3.879199999999583e-05, 3.9125000000000965e-05, 3.9055000000003115e-05, 3.876400000000363e-05, 3.8889000000000284e-05, 3.852800000000295e-05, 3.849999999999687e-05, 3.8652999999999604e-05, 3.890200000000038e-05, 3.851399999999644e-05, 3.824999999999662e-05, 3.8625000000000465e-05, 3.8290999999995856e-05, 3.841599999999945e-05, 3.8430999999998494e-05, 3.823600000000399e-05, 3.827799999999576e-05, 3.9083000000002255e-05, 3.854200000000252e-05, 3.8416999999998924e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.793" endtime="20201030 10:58:32.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.782" endtime="20201030 10:58:32.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.811" endtime="20201030 10:58:32.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.805" endtime="20201030 10:58:32.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.802" endtime="20201030 10:58:32.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.306" endtime="20201030 10:58:32.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.305" endtime="20201030 10:58:32.836"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.859" endtime="20201030 10:58:32.880"></status>
</kw>
<msg timestamp="20201030 10:58:32.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.856" endtime="20201030 10:58:32.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.884" endtime="20201030 10:58:32.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.890" endtime="20201030 10:58:32.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.848" endtime="20201030 10:58:32.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.842" endtime="20201030 10:58:32.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.914" endtime="20201030 10:58:33.256"></status>
</kw>
<msg timestamp="20201030 10:58:33.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041566514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041605931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.911" endtime="20201030 10:58:33.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041566514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041605931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.265" endtime="20201030 10:58:33.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.284" endtime="20201030 10:58:33.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.903" endtime="20201030 10:58:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.899" endtime="20201030 10:58:33.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.302" level="INFO">${RESULT} = [{'diff': 3.9416999999999924e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.951400000000438e-05}, {'diff': 4.005599999999665e-05}, {'diff': 3.9416999999999924e-05...</msg>
<status status="PASS" starttime="20201030 10:58:33.293" endtime="20201030 10:58:33.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.313" level="INFO">${ACCURACY} = {'diff': [3.9416999999999924e-05, 3.9597000000002325e-05, 3.9639000000001035e-05, 3.951400000000438e-05, 4.005599999999665e-05, 3.9416999999999924e-05, 3.9639000000001035e-05, 4.0125000000001965e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:33.304" endtime="20201030 10:58:33.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.324" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.322" endtime="20201030 10:58:33.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.330" level="INFO">VALUE: [3.9416999999999924e-05, 3.9597000000002325e-05, 3.9639000000001035e-05, 3.951400000000438e-05, 4.005599999999665e-05, 3.9416999999999924e-05, 3.9639000000001035e-05, 4.0125000000001965e-05, 3.945799999999916e-05, 3.9416999999999924e-05, 3.9639000000001035e-05, 3.975000000000506e-05, 3.9318999999995996e-05, 3.9346999999995136e-05, 4.0110999999995456e-05, 3.9360999999994706e-05, 3.9625000000001465e-05, 3.9653000000000604e-05, 3.9430999999999494e-05, 3.973599999999855e-05, 3.970799999999941e-05, 3.9694999999999314e-05, 3.9958999999999134e-05, 3.9194999999998814e-05, 3.96660000000007e-05, 4.000000000000531e-05, 3.9917000000000424e-05, 3.929200000000327e-05, 3.988800000000181e-05, 3.9638999999994096e-05, 3.947199999999873e-05, 3.9554999999996676e-05, 3.9444999999999064e-05, 3.9861000000002145e-05, 3.945799999999916e-05, 3.974999999999812e-05, 4.0069000000003685e-05, 3.955600000000309e-05, 3.9375000000001215e-05, 3.979200000000377e-05, 3.9153000000000104e-05, 3.9889000000001285e-05, 3.974999999999812e-05, 4.0111000000002395e-05, 3.995799999999966e-05, 3.9861000000002145e-05, 3.94859999999983e-05, 3.9416999999999924e-05, 3.983400000000248e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.327" endtime="20201030 10:58:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.315" endtime="20201030 10:58:33.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.344" endtime="20201030 10:58:33.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.339" endtime="20201030 10:58:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.336" endtime="20201030 10:58:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.838" endtime="20201030 10:58:33.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.837" endtime="20201030 10:58:33.369"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.392" endtime="20201030 10:58:33.413"></status>
</kw>
<msg timestamp="20201030 10:58:33.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.389" endtime="20201030 10:58:33.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.417" endtime="20201030 10:58:33.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.424" endtime="20201030 10:58:33.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.381" endtime="20201030 10:58:33.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.376" endtime="20201030 10:58:33.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.450" endtime="20201030 10:58:33.812"></status>
</kw>
<msg timestamp="20201030 10:58:33.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041169764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.446" endtime="20201030 10:58:33.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041169764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.822" endtime="20201030 10:58:33.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.841" endtime="20201030 10:58:33.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.438" endtime="20201030 10:58:33.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.433" endtime="20201030 10:58:33.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.858" level="INFO">${RESULT} = [{'diff': 4.0638999999995096e-05}, {'diff': 4.0861000000003145e-05}, {'diff': 4.0611000000002895e-05}, {'diff': 4.0875000000002715e-05}, {'diff': 4.074999999999912e-05}, {'diff': 4.097200000000023e-05...</msg>
<status status="PASS" starttime="20201030 10:58:33.849" endtime="20201030 10:58:33.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.869" level="INFO">${ACCURACY} = {'diff': [4.0638999999995096e-05, 4.0861000000003145e-05, 4.0611000000002895e-05, 4.0875000000002715e-05, 4.074999999999912e-05, 4.097200000000023e-05, 4.111200000000287e-05, 4.1012999999999467e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:58:33.860" endtime="20201030 10:58:33.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.880" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.878" endtime="20201030 10:58:33.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.886" level="INFO">VALUE: [4.0638999999995096e-05, 4.0861000000003145e-05, 4.0611000000002895e-05, 4.0875000000002715e-05, 4.074999999999912e-05, 4.097200000000023e-05, 4.111200000000287e-05, 4.1012999999999467e-05, 4.099999999999937e-05, 4.058399999999629e-05, 4.0153000000001104e-05, 4.0861000000003145e-05, 4.080600000000434e-05, 4.047199999999973e-05, 4.022199999999948e-05, 4.0403000000001354e-05, 4.097200000000023e-05, 4.024999999999862e-05, 4.077799999999826e-05, 4.054200000000452e-05, 4.054200000000452e-05, 4.0611000000002895e-05, 4.1139000000002535e-05, 4.0596999999996386e-05, 4.0875000000002715e-05, 4.04859999999993e-05, 4.070800000000041e-05, 4.097200000000023e-05, 4.026399999999819e-05, 4.0639000000002035e-05, 4.0889000000002285e-05, 4.108399999999679e-05, 4.0554999999997676e-05, 4.0290999999997856e-05, 4.0540999999998106e-05, 4.1083000000004255e-05, 4.072199999999998e-05, 4.099999999999937e-05, 4.070800000000041e-05, 4.074999999999912e-05, 4.0860999999996206e-05, 4.054199999999758e-05, 4.0360999999995706e-05, 4.047199999999973e-05, 4.0125000000001965e-05, 4.051399999999844e-05, 4.048600000000624e-05, 4.0458999999999634e-05, 4.083400000000348e-05, 4.1026999999999036e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.883" endtime="20201030 10:58:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.871" endtime="20201030 10:58:33.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.899" endtime="20201030 10:58:33.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.894" endtime="20201030 10:58:33.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.892" endtime="20201030 10:58:33.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.371" endtime="20201030 10:58:33.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.370" endtime="20201030 10:58:33.924"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.947" endtime="20201030 10:58:33.967"></status>
</kw>
<msg timestamp="20201030 10:58:33.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.944" endtime="20201030 10:58:33.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.971" endtime="20201030 10:58:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.977" endtime="20201030 10:58:33.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.936" endtime="20201030 10:58:33.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.930" endtime="20201030 10:58:33.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.001" endtime="20201030 10:58:34.344"></status>
</kw>
<msg timestamp="20201030 10:58:34.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041959375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042000792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.997" endtime="20201030 10:58:34.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041959375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042000792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.354" endtime="20201030 10:58:34.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.373" endtime="20201030 10:58:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.990" endtime="20201030 10:58:34.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.985" endtime="20201030 10:58:34.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.390" level="INFO">${RESULT} = [{'diff': 4.1417000000001924e-05}, {'diff': 4.1318999999997996e-05}, {'diff': 4.1625000000003465e-05}, {'diff': 4.1473000000000204e-05}, {'diff': 4.1375000000003215e-05}, {'diff': 4.169400000000184e-0...</msg>
<status status="PASS" starttime="20201030 10:58:34.381" endtime="20201030 10:58:34.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.400" level="INFO">${ACCURACY} = {'diff': [4.1417000000001924e-05, 4.1318999999997996e-05, 4.1625000000003465e-05, 4.1473000000000204e-05, 4.1375000000003215e-05, 4.169400000000184e-05, 4.1804999999998926e-05, 4.1624999999996526e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:34.392" endtime="20201030 10:58:34.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.411" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.409" endtime="20201030 10:58:34.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.416" level="INFO">VALUE: [4.1417000000001924e-05, 4.1318999999997996e-05, 4.1625000000003465e-05, 4.1473000000000204e-05, 4.1375000000003215e-05, 4.169400000000184e-05, 4.1804999999998926e-05, 4.1624999999996526e-05, 4.1860999999997206e-05, 4.1360999999996706e-05, 4.154199999999858e-05, 4.1832999999998066e-05, 4.173600000000055e-05, 4.175000000000012e-05, 4.1459000000000634e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.14860000000003e-05, 4.158400000000423e-05, 4.149999999999987e-05, 4.145800000000116e-05, 4.123600000000005e-05, 4.1304999999998426e-05, 4.173600000000055e-05, 4.14860000000003e-05, 4.1304999999998426e-05, 4.2124999999997026e-05, 4.1804999999998926e-05, 4.170800000000141e-05, 4.1625000000003465e-05, 4.1903000000002855e-05, 4.1709000000000884e-05, 4.12780000000057e-05, 4.200000000000037e-05, 4.126399999999919e-05, 4.1374999999996276e-05, 4.173600000000055e-05, 4.1959000000001134e-05, 4.2152999999996166e-05, 4.2152999999996166e-05, 4.14860000000003e-05, 4.1208999999993445e-05, 4.2054999999999176e-05, 4.1694999999994375e-05, 4.1167000000001674e-05, 4.1360999999996706e-05, 4.2069000000005685e-05, 4.2125000000003965e-05, 4.197200000000123e-05, 4.193000000000252e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.413" endtime="20201030 10:58:34.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.402" endtime="20201030 10:58:34.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.429" endtime="20201030 10:58:34.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.425" endtime="20201030 10:58:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.422" endtime="20201030 10:58:34.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.926" endtime="20201030 10:58:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.925" endtime="20201030 10:58:34.454"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.477" endtime="20201030 10:58:34.499"></status>
</kw>
<msg timestamp="20201030 10:58:34.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.474" endtime="20201030 10:58:34.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.502" endtime="20201030 10:58:34.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.509" endtime="20201030 10:58:34.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.467" endtime="20201030 10:58:34.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.461" endtime="20201030 10:58:34.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.533" endtime="20201030 10:58:34.875"></status>
</kw>
<msg timestamp="20201030 10:58:34.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043435292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.529" endtime="20201030 10:58:34.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043435292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.884" endtime="20201030 10:58:34.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.903" endtime="20201030 10:58:34.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.522" endtime="20201030 10:58:34.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.517" endtime="20201030 10:58:34.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.921" level="INFO">${RESULT} = [{'diff': 4.301400000000094e-05}, {'diff': 4.256999999999872e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.251400000000044e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.226300000000072e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:34.912" endtime="20201030 10:58:34.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.930" level="INFO">${ACCURACY} = {'diff': [4.301400000000094e-05, 4.256999999999872e-05, 4.225000000000062e-05, 4.251400000000044e-05, 4.28059999999994e-05, 4.226300000000072e-05, 4.240199999999694e-05, 4.2389000000003785e-05, 4.3110...</msg>
<status status="PASS" starttime="20201030 10:58:34.923" endtime="20201030 10:58:34.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.941" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.939" endtime="20201030 10:58:34.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.947" level="INFO">VALUE: [4.301400000000094e-05, 4.256999999999872e-05, 4.225000000000062e-05, 4.251400000000044e-05, 4.28059999999994e-05, 4.226300000000072e-05, 4.240199999999694e-05, 4.2389000000003785e-05, 4.3110999999998456e-05, 4.245800000000216e-05, 4.245799999999522e-05, 4.250000000000087e-05, 4.2889000000004285e-05, 4.251400000000044e-05, 4.2625000000004465e-05, 4.231999999999847e-05, 4.251400000000044e-05, 4.2639000000004035e-05, 4.230600000000584e-05, 4.254199999999958e-05, 4.276400000000069e-05, 4.252800000000001e-05, 4.279199999999983e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.2403000000003355e-05, 4.2804999999999926e-05, 4.2277000000000287e-05, 4.3096999999998886e-05, 4.2902999999996916e-05, 4.2639000000004035e-05, 4.276400000000069e-05, 4.216599999999626e-05, 4.250000000000087e-05, 4.3096999999998886e-05, 4.28059999999994e-05, 4.250000000000087e-05, 4.23059999999989e-05, 4.276400000000069e-05, 4.3125000000004965e-05, 4.2945000000002564e-05, 4.28059999999994e-05, 4.225000000000062e-05, 4.308399999999879e-05, 4.250000000000087e-05, 4.249999999999393e-05, 4.2610999999997956e-05, 4.273599999999461e-05, 4.2596999999998386e-05, 4.2625000000004465e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.943" endtime="20201030 10:58:34.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.932" endtime="20201030 10:58:34.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.961" endtime="20201030 10:58:34.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.955" endtime="20201030 10:58:34.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.952" endtime="20201030 10:58:34.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.456" endtime="20201030 10:58:34.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.455" endtime="20201030 10:58:34.986"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.009" endtime="20201030 10:58:35.030"></status>
</kw>
<msg timestamp="20201030 10:58:35.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.006" endtime="20201030 10:58:35.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.034" endtime="20201030 10:58:35.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.040" endtime="20201030 10:58:35.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.999" endtime="20201030 10:58:35.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.993" endtime="20201030 10:58:35.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.064" endtime="20201030 10:58:35.405"></status>
</kw>
<msg timestamp="20201030 10:58:35.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042216194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042259903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.060" endtime="20201030 10:58:35.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042216194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042259903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.414" endtime="20201030 10:58:35.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.433" endtime="20201030 10:58:35.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.053" endtime="20201030 10:58:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.048" endtime="20201030 10:58:35.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.451" level="INFO">${RESULT} = [{'diff': 4.3709000000002884e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.35269999999946e-05}, {'diff': 4.379199999999389e-05}, {'diff': 4.343000000000402e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:35.442" endtime="20201030 10:58:35.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.461" level="INFO">${ACCURACY} = {'diff': [4.3709000000002884e-05, 4.355600000000015e-05, 4.3624999999998526e-05, 4.35269999999946e-05, 4.379199999999389e-05, 4.343000000000402e-05, 4.3374999999998276e-05, 4.392999999999758e-05, 4.38...</msg>
<status status="PASS" starttime="20201030 10:58:35.453" endtime="20201030 10:58:35.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.472" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.470" endtime="20201030 10:58:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.478" level="INFO">VALUE: [4.3709000000002884e-05, 4.355600000000015e-05, 4.3624999999998526e-05, 4.35269999999946e-05, 4.379199999999389e-05, 4.343000000000402e-05, 4.3374999999998276e-05, 4.392999999999758e-05, 4.3846999999999636e-05, 4.3624999999998526e-05, 4.3889000000005285e-05, 4.375000000000212e-05, 4.3902999999997916e-05, 4.34860000000023e-05, 4.3444999999996126e-05, 4.401400000000194e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.404200000000108e-05, 4.397200000000323e-05, 4.3846999999999636e-05, 4.4110999999999456e-05, 4.329200000000033e-05, 4.3360999999998706e-05, 4.398599999999586e-05, 4.3624999999998526e-05, 4.4096999999999886e-05, 4.4110999999999456e-05, 4.3610999999998956e-05, 4.3374999999998276e-05, 4.3846999999999636e-05, 4.395800000000366e-05, 4.347200000000273e-05, 4.3666999999997236e-05, 4.3374999999998276e-05, 4.3916999999997486e-05, 4.376400000000169e-05, 4.3722999999995515e-05, 4.324999999999468e-05, 4.325000000000162e-05, 4.3167000000003675e-05, 4.3374999999998276e-05, 4.3639000000005035e-05, 4.3597000000006325e-05, 4.367999999999733e-05, 4.354099999999417e-05, 4.398599999999586e-05, 4.3389000000004785e-05, 4.319400000000334e-05, 4.3625000000005465e-05]</msg>
<status status="PASS" starttime="20201030 10:58:35.475" endtime="20201030 10:58:35.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.463" endtime="20201030 10:58:35.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.491" endtime="20201030 10:58:35.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.486" endtime="20201030 10:58:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.484" endtime="20201030 10:58:35.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.988" endtime="20201030 10:58:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.987" endtime="20201030 10:58:35.516"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.539" endtime="20201030 10:58:35.559"></status>
</kw>
<msg timestamp="20201030 10:58:35.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.536" endtime="20201030 10:58:35.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.562" endtime="20201030 10:58:35.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.568" endtime="20201030 10:58:35.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.528" endtime="20201030 10:58:35.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.522" endtime="20201030 10:58:35.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.592" endtime="20201030 10:58:35.935"></status>
</kw>
<msg timestamp="20201030 10:58:35.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041711153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.589" endtime="20201030 10:58:35.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041711153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.945" endtime="20201030 10:58:35.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.964" endtime="20201030 10:58:35.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.581" endtime="20201030 10:58:35.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.577" endtime="20201030 10:58:35.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.981" level="INFO">${RESULT} = [{'diff': 4.4916999999998486e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4902999999998916e-05}, {'diff': 4.4209000000003384e-05}, {'diff': 4.473600000000355e-0...</msg>
<status status="PASS" starttime="20201030 10:58:35.972" endtime="20201030 10:58:35.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.992" level="INFO">${ACCURACY} = {'diff': [4.4916999999998486e-05, 4.4680999999997806e-05, 4.4597000000000386e-05, 4.4902999999998916e-05, 4.4209000000003384e-05, 4.473600000000355e-05, 4.455600000000115e-05, 4.467999999999833e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:58:35.983" endtime="20201030 10:58:35.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.004" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.001" endtime="20201030 10:58:36.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.009" level="INFO">VALUE: [4.4916999999998486e-05, 4.4680999999997806e-05, 4.4597000000000386e-05, 4.4902999999998916e-05, 4.4209000000003384e-05, 4.473600000000355e-05, 4.455600000000115e-05, 4.467999999999833e-05, 4.504099999999567e-05, 4.429199999999439e-05, 4.4402999999998416e-05, 4.4874999999999776e-05, 4.450000000000287e-05, 4.480500000000193e-05, 4.495799999999772e-05, 4.479100000000236e-05, 4.4597000000000386e-05, 4.4431000000004495e-05, 4.497200000000423e-05, 4.497199999999729e-05, 4.4694999999997376e-05, 4.4445000000004065e-05, 4.445800000000416e-05, 4.4360999999999706e-05, 4.504200000000208e-05, 4.425000000000262e-05, 4.4223000000002954e-05, 4.4638999999999096e-05, 4.4374999999999276e-05, 4.4430999999997556e-05, 4.502800000000251e-05, 4.467999999999833e-05, 4.4888999999999346e-05, 4.479100000000236e-05, 4.508299999999438e-05, 4.5097000000000886e-05, 4.41939999999974e-05, 4.502800000000251e-05, 4.472199999999704e-05, 4.4708999999996946e-05, 4.4638999999999096e-05, 4.4209000000003384e-05, 4.4431000000004495e-05, 4.451400000000244e-05, 4.5125000000000026e-05, 4.4709000000003885e-05, 4.469400000000484e-05, 4.432000000000047e-05, 4.5069000000001747e-05, 4.4388999999998846e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.006" endtime="20201030 10:58:36.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.994" endtime="20201030 10:58:36.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.022" endtime="20201030 10:58:36.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.018" endtime="20201030 10:58:36.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.015" endtime="20201030 10:58:36.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.518" endtime="20201030 10:58:36.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.517" endtime="20201030 10:58:36.047"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.070" endtime="20201030 10:58:36.090"></status>
</kw>
<msg timestamp="20201030 10:58:36.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.067" endtime="20201030 10:58:36.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.093" endtime="20201030 10:58:36.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.100" endtime="20201030 10:58:36.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.060" endtime="20201030 10:58:36.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.054" endtime="20201030 10:58:36.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.123" endtime="20201030 10:58:36.457"></status>
</kw>
<msg timestamp="20201030 10:58:36.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.120" endtime="20201030 10:58:36.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.461" endtime="20201030 10:58:36.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.470" endtime="20201030 10:58:36.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.113" endtime="20201030 10:58:36.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.108" endtime="20201030 10:58:36.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.478" level="INFO">${RESULT} = [{'diff': 4.595799999999872e-05}, {'diff': 4.6013999999997e-05}, {'diff': 4.6097000000001886e-05}, {'diff': 4.552700000000354e-05}, {'diff': 4.554100000000311e-05}, {'diff': 4.530499999999549e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:36.474" endtime="20201030 10:58:36.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.482" level="INFO">${ACCURACY} = {'diff': [4.595799999999872e-05, 4.6013999999997e-05, 4.6097000000001886e-05, 4.552700000000354e-05, 4.554100000000311e-05, 4.530499999999549e-05, 4.58190000000025e-05, 4.5680999999998806e-05, 4.55970...</msg>
<status status="PASS" starttime="20201030 10:58:36.479" endtime="20201030 10:58:36.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.487" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.486" endtime="20201030 10:58:36.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.490" level="INFO">VALUE: [4.595799999999872e-05, 4.6013999999997e-05, 4.6097000000001886e-05, 4.552700000000354e-05, 4.554100000000311e-05, 4.530499999999549e-05, 4.58190000000025e-05, 4.5680999999998806e-05, 4.5597000000001386e-05, 4.6083000000002317e-05, 4.6125000000001026e-05, 4.5430999999998556e-05, 4.575000000000412e-05, 4.5208999999997446e-05, 4.5639000000000096e-05, 4.576399999999675e-05, 4.5444999999998126e-05, 4.559800000000086e-05, 4.5416999999998986e-05, 4.605500000000318e-05, 4.567999999999933e-05, 4.520799999999797e-05, 4.541599999999951e-05, 4.58190000000025e-05, 4.5889000000000346e-05, 4.6111000000001456e-05, 4.551400000000344e-05, 4.5430999999998556e-05, 4.58060000000024e-05, 4.612499999999409e-05, 4.523600000000405e-05, 4.523599999999711e-05, 4.524999999999668e-05, 4.529200000000233e-05, 4.555600000000215e-05, 4.524999999999668e-05, 4.5361000000000706e-05, 4.5680999999998806e-05, 4.569400000000584e-05, 4.551300000000397e-05, 4.551400000000344e-05, 4.5833000000002067e-05, 4.552800000000301e-05, 4.5889000000000346e-05, 4.5652999999999666e-05, 4.611200000000093e-05, 4.5639000000000096e-05, 4.608299999999538e-05, 4.544399999999865e-05, 4.5583000000001817e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.489" endtime="20201030 10:58:36.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.483" endtime="20201030 10:58:36.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.496" endtime="20201030 10:58:36.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.494" endtime="20201030 10:58:36.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.493" endtime="20201030 10:58:36.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.049" endtime="20201030 10:58:36.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.048" endtime="20201030 10:58:36.518"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.529" endtime="20201030 10:58:36.546"></status>
</kw>
<msg timestamp="20201030 10:58:36.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.527" endtime="20201030 10:58:36.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.548" endtime="20201030 10:58:36.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.551" endtime="20201030 10:58:36.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.523" endtime="20201030 10:58:36.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.521" endtime="20201030 10:58:36.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.562" endtime="20201030 10:58:36.860"></status>
</kw>
<msg timestamp="20201030 10:58:36.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025935375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025981583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.561" endtime="20201030 10:58:36.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025935375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025981583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.869" endtime="20201030 10:58:36.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.888" endtime="20201030 10:58:36.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.557" endtime="20201030 10:58:36.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.555" endtime="20201030 10:58:36.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.906" level="INFO">${RESULT} = [{'diff': 4.620799999999897e-05}, {'diff': 4.651299999999803e-05}, {'diff': 4.649999999999793e-05}, {'diff': 4.673600000000208e-05}, {'diff': 4.6917000000000486e-05}, {'diff': 4.6653000000000666e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:36.897" endtime="20201030 10:58:36.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.915" level="INFO">${ACCURACY} = {'diff': [4.620799999999897e-05, 4.651299999999803e-05, 4.649999999999793e-05, 4.673600000000208e-05, 4.6917000000000486e-05, 4.6653000000000666e-05, 4.691599999999754e-05, 4.636099999999824e-05, 4.62...</msg>
<status status="PASS" starttime="20201030 10:58:36.908" endtime="20201030 10:58:36.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.926" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.924" endtime="20201030 10:58:36.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.932" level="INFO">VALUE: [4.620799999999897e-05, 4.651299999999803e-05, 4.649999999999793e-05, 4.673600000000208e-05, 4.6917000000000486e-05, 4.6653000000000666e-05, 4.691599999999754e-05, 4.636099999999824e-05, 4.625000000000115e-05, 4.684699999999917e-05, 4.702800000000104e-05, 4.65000000000014e-05, 4.674999999999818e-05, 4.68329999999996e-05, 4.672199999999904e-05, 4.6972999999998766e-05, 4.652799999999707e-05, 4.658399999999882e-05, 4.6153000000000166e-05, 4.652800000000054e-05, 4.6875000000001776e-05, 4.623599999999811e-05, 4.643000000000008e-05, 4.694400000000015e-05, 4.6403000000000416e-05, 4.679100000000089e-05, 4.652800000000054e-05, 4.6944999999999626e-05, 4.708400000000279e-05, 4.6667000000000236e-05, 4.641600000000051e-05, 4.709699999999942e-05, 4.629199999999986e-05, 4.676400000000122e-05, 4.6208999999998446e-05, 4.673599999999861e-05, 4.6473000000001735e-05, 4.6889000000001346e-05, 4.659699999999892e-05, 4.670799999999947e-05, 4.676300000000175e-05, 4.625000000000115e-05, 4.705500000000071e-05, 4.6903000000000916e-05, 4.623600000000158e-05, 4.616600000000026e-05, 4.6403000000000416e-05, 4.71529999999977e-05, 4.704199999999714e-05, 4.6680999999999806e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.929" endtime="20201030 10:58:36.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.917" endtime="20201030 10:58:36.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.952" endtime="20201030 10:58:36.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.946" endtime="20201030 10:58:36.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.944" endtime="20201030 10:58:36.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.519" endtime="20201030 10:58:36.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.518" endtime="20201030 10:58:36.977"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.001" endtime="20201030 10:58:37.022"></status>
</kw>
<msg timestamp="20201030 10:58:37.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.997" endtime="20201030 10:58:37.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.025" endtime="20201030 10:58:37.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.032" endtime="20201030 10:58:37.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.990" endtime="20201030 10:58:37.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.984" endtime="20201030 10:58:37.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.055" endtime="20201030 10:58:37.395"></status>
</kw>
<msg timestamp="20201030 10:58:37.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.052" endtime="20201030 10:58:37.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.405" endtime="20201030 10:58:37.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.424" endtime="20201030 10:58:37.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.045" endtime="20201030 10:58:37.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.040" endtime="20201030 10:58:37.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.442" level="INFO">${RESULT} = [{'diff': 4.736099999999577e-05}, {'diff': 4.754200000000458e-05}, {'diff': 4.804199999999814e-05}, {'diff': 4.731999999999653e-05}, {'diff': 4.801400000000594e-05}, {'diff': 4.7681000000000806e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:37.433" endtime="20201030 10:58:37.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.452" level="INFO">${ACCURACY} = {'diff': [4.736099999999577e-05, 4.754200000000458e-05, 4.804199999999814e-05, 4.731999999999653e-05, 4.801400000000594e-05, 4.7681000000000806e-05, 4.78060000000044e-05, 4.724999999999868e-05, 4.7820...</msg>
<status status="PASS" starttime="20201030 10:58:37.444" endtime="20201030 10:58:37.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.463" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.461" endtime="20201030 10:58:37.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.469" level="INFO">VALUE: [4.736099999999577e-05, 4.754200000000458e-05, 4.804199999999814e-05, 4.731999999999653e-05, 4.801400000000594e-05, 4.7681000000000806e-05, 4.78060000000044e-05, 4.724999999999868e-05, 4.782000000000397e-05, 4.730499999999749e-05, 4.7208999999999446e-05, 4.754199999999764e-05, 4.743000000000108e-05, 4.7875000000002776e-05, 4.740299999999448e-05, 4.724999999999868e-05, 4.71940000000004e-05, 4.7625000000002526e-05, 4.7361000000002706e-05, 4.7945000000000626e-05, 4.7181000000000306e-05, 4.7431000000000556e-05, 4.776399999999875e-05, 4.805499999999824e-05, 4.808299999999738e-05, 4.743000000000108e-05, 4.748599999999936e-05, 4.7986999999999336e-05, 4.799999999999943e-05, 4.777799999999832e-05, 4.808400000000379e-05, 4.7179999999993893e-05, 4.7458999999999696e-05, 4.8125000000003026e-05, 4.788899999999541e-05, 4.7917000000001486e-05, 4.758300000000382e-05, 4.776399999999875e-05, 4.7097000000002887e-05, 4.754200000000458e-05, 4.808300000000432e-05, 4.7681000000000806e-05, 4.804199999999814e-05, 4.7625000000002526e-05, 4.783400000000354e-05, 4.729099999999792e-05, 4.727800000000476e-05, 4.78339999999966e-05, 4.770800000000047e-05, 4.7487000000005775e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.466" endtime="20201030 10:58:37.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.454" endtime="20201030 10:58:37.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.482" endtime="20201030 10:58:37.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.477" endtime="20201030 10:58:37.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.475" endtime="20201030 10:58:37.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.980" endtime="20201030 10:58:37.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.978" endtime="20201030 10:58:37.507"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.530" endtime="20201030 10:58:37.550"></status>
</kw>
<msg timestamp="20201030 10:58:37.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.527" endtime="20201030 10:58:37.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.554" endtime="20201030 10:58:37.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.560" endtime="20201030 10:58:37.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.519" endtime="20201030 10:58:37.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.513" endtime="20201030 10:58:37.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.584" endtime="20201030 10:58:37.925"></status>
</kw>
<msg timestamp="20201030 10:58:37.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.581" endtime="20201030 10:58:37.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.934" endtime="20201030 10:58:37.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.953" endtime="20201030 10:58:37.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.573" endtime="20201030 10:58:37.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.569" endtime="20201030 10:58:37.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.971" level="INFO">${RESULT} = [{'diff': 4.829099999999892e-05}, {'diff': 4.8429999999995144e-05}, {'diff': 4.8361000000003707e-05}, {'diff': 4.883299999999813e-05}, {'diff': 4.906999999999828e-05}, {'diff': 4.908299999999838e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:37.962" endtime="20201030 10:58:37.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.982" level="INFO">${ACCURACY} = {'diff': [4.829099999999892e-05, 4.8429999999995144e-05, 4.8361000000003707e-05, 4.883299999999813e-05, 4.906999999999828e-05, 4.908299999999838e-05, 4.905599999999871e-05, 4.900000000000043e-05, 4.82...</msg>
<status status="PASS" starttime="20201030 10:58:37.973" endtime="20201030 10:58:37.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.993" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.991" endtime="20201030 10:58:37.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.999" level="INFO">VALUE: [4.829099999999892e-05, 4.8429999999995144e-05, 4.8361000000003707e-05, 4.883299999999813e-05, 4.906999999999828e-05, 4.908299999999838e-05, 4.905599999999871e-05, 4.900000000000043e-05, 4.8209000000000446e-05, 4.849999999999993e-05, 4.906899999999881e-05, 4.9207999999995033e-05, 4.877799999999932e-05, 4.858399999999735e-05, 4.886100000000421e-05, 4.849999999999993e-05, 4.9014e-05, 4.856899999999831e-05, 4.843000000000208e-05, 4.833299999999763e-05, 4.856999999999778e-05, 4.855599999999821e-05, 4.911099999999752e-05, 4.824999999999968e-05, 4.826399999999925e-05, 4.88469999999977e-05, 4.911099999999752e-05, 4.8945000000001626e-05, 4.9125000000004027e-05, 4.8931000000002056e-05, 4.8223000000000016e-05, 4.851300000000003e-05, 4.8417000000001986e-05, 4.866600000000276e-05, 4.870800000000147e-05, 4.85139999999995e-05, 4.845800000000122e-05, 4.858300000000482e-05, 4.891600000000301e-05, 4.8707999999994533e-05, 4.876399999999975e-05, 4.906999999999828e-05, 4.863899999999616e-05, 4.836099999999677e-05, 4.822200000000054e-05, 4.875000000000018e-05, 4.906999999999828e-05, 4.873600000000061e-05, 4.880599999999846e-05, 4.8973000000000766e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.996" endtime="20201030 10:58:38.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.984" endtime="20201030 10:58:38.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.012" endtime="20201030 10:58:38.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.007" endtime="20201030 10:58:38.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.005" endtime="20201030 10:58:38.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.509" endtime="20201030 10:58:38.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.508" endtime="20201030 10:58:38.037"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.060" endtime="20201030 10:58:38.080"></status>
</kw>
<msg timestamp="20201030 10:58:38.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.057" endtime="20201030 10:58:38.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.084" endtime="20201030 10:58:38.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.090" endtime="20201030 10:58:38.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.049" endtime="20201030 10:58:38.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.043" endtime="20201030 10:58:38.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.114" endtime="20201030 10:58:38.457"></status>
</kw>
<msg timestamp="20201030 10:58:38.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041586889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.111" endtime="20201030 10:58:38.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041586889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.466" endtime="20201030 10:58:38.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.485" endtime="20201030 10:58:38.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.103" endtime="20201030 10:58:38.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.098" endtime="20201030 10:58:38.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.503" level="INFO">${RESULT} = [{'diff': 4.9695000000002376e-05}, {'diff': 4.936199999999724e-05}, {'diff': 4.948600000000136e-05}, {'diff': 5.007000000000622e-05}, {'diff': 4.997299999999483e-05}, {'diff': 4.9679999999996394e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:38.494" endtime="20201030 10:58:38.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.512" level="INFO">${ACCURACY} = {'diff': [4.9695000000002376e-05, 4.936199999999724e-05, 4.948600000000136e-05, 5.007000000000622e-05, 4.997299999999483e-05, 4.9679999999996394e-05, 4.9737000000001086e-05, 5.008399999999885e-05, 4.9...</msg>
<status status="PASS" starttime="20201030 10:58:38.505" endtime="20201030 10:58:38.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.523" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.521" endtime="20201030 10:58:38.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.529" level="INFO">VALUE: [4.9695000000002376e-05, 4.936199999999724e-05, 4.948600000000136e-05, 5.007000000000622e-05, 4.997299999999483e-05, 4.9679999999996394e-05, 4.9737000000001086e-05, 5.008399999999885e-05, 4.9471999999994853e-05, 4.991600000000401e-05, 5.009699999999895e-05, 4.9403000000003416e-05, 4.958399999999835e-05, 4.9889000000004347e-05, 5.008299999999938e-05, 4.949999999999399e-05, 4.9389000000003846e-05, 4.980599999999946e-05, 4.988899999999741e-05, 5.011099999999852e-05, 4.936100000000471e-05, 4.9709000000001946e-05, 4.968000000000333e-05, 4.9667000000003236e-05, 4.9639000000004097e-05, 4.990299999999698e-05, 5.0014000000001e-05, 5.000000000000143e-05, 4.950000000000093e-05, 4.958299999999888e-05, 4.9639000000004097e-05, 4.940299999999648e-05, 4.930499999999949e-05, 5.0014000000001e-05, 4.9889000000004347e-05, 4.947200000000179e-05, 4.9695000000002376e-05, 5.000000000000143e-05, 4.9707999999995534e-05, 4.931999999999853e-05, 4.9181000000002306e-05, 4.9639000000004097e-05, 4.977800000000032e-05, 4.976400000000075e-05, 4.9151999999996754e-05, 5.013899999999766e-05, 4.9415999999996574e-05, 4.940299999999648e-05, 4.929199999999939e-05, 4.9653000000003666e-05]</msg>
<status status="PASS" starttime="20201030 10:58:38.526" endtime="20201030 10:58:38.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.514" endtime="20201030 10:58:38.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.542" endtime="20201030 10:58:38.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.537" endtime="20201030 10:58:38.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.535" endtime="20201030 10:58:38.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.039" endtime="20201030 10:58:38.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.038" endtime="20201030 10:58:38.567"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.590" endtime="20201030 10:58:38.613"></status>
</kw>
<msg timestamp="20201030 10:58:38.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.587" endtime="20201030 10:58:38.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.616" endtime="20201030 10:58:38.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.623" endtime="20201030 10:58:38.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.579" endtime="20201030 10:58:38.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.573" endtime="20201030 10:58:38.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.647" endtime="20201030 10:58:38.990"></status>
</kw>
<msg timestamp="20201030 10:58:38.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.643" endtime="20201030 10:58:38.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.999" endtime="20201030 10:58:39.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.018" endtime="20201030 10:58:39.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.636" endtime="20201030 10:58:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.631" endtime="20201030 10:58:39.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.036" level="INFO">${RESULT} = [{'diff': 5.080600000000046e-05}, {'diff': 5.072200000000304e-05}, {'diff': 5.080499999999405e-05}, {'diff': 5.031900000000006e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.119499999999694e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:39.027" endtime="20201030 10:58:39.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.045" level="INFO">${ACCURACY} = {'diff': [5.080600000000046e-05, 5.072200000000304e-05, 5.080499999999405e-05, 5.031900000000006e-05, 5.036099999999877e-05, 5.119499999999694e-05, 5.0235999999995173e-05, 5.065299999999773e-05, 5.070...</msg>
<status status="PASS" starttime="20201030 10:58:39.038" endtime="20201030 10:58:39.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.057" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.054" endtime="20201030 10:58:39.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.062" level="INFO">VALUE: [5.080600000000046e-05, 5.072200000000304e-05, 5.080499999999405e-05, 5.031900000000006e-05, 5.036099999999877e-05, 5.119499999999694e-05, 5.0235999999995173e-05, 5.065299999999773e-05, 5.070800000000347e-05, 5.075000000000218e-05, 5.062499999999859e-05, 5.062499999999859e-05, 5.038899999999791e-05, 5.074999999999524e-05, 5.062499999999859e-05, 5.087499999999884e-05, 5.074999999999524e-05, 5.112499999999909e-05, 5.091699999999755e-05, 5.025000000000168e-05, 5.0985999999995923e-05, 5.093000000000458e-05, 5.0221999999995603e-05, 5.048600000000236e-05, 5.106900000000081e-05, 5.020800000000297e-05, 5.109799999999942e-05, 5.074999999999524e-05, 5.0445000000003126e-05, 5.069499999999644e-05, 5.020899999999551e-05, 5.113899999999866e-05, 5.076400000000175e-05, 5.020899999999551e-05, 5.0415999999997574e-05, 5.05140000000015e-05, 5.022200000000254e-05, 5.038899999999791e-05, 5.063899999999816e-05, 5.076400000000175e-05, 5.037499999999834e-05, 5.083300000000013e-05, 5.036099999999877e-05, 5.062500000000553e-05, 5.052800000000107e-05, 5.1014000000002e-05, 5.041699999999705e-05, 5.045800000000322e-05, 5.01669999999968e-05, 5.105600000000071e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.059" endtime="20201030 10:58:39.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.047" endtime="20201030 10:58:39.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.076" endtime="20201030 10:58:39.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.070" endtime="20201030 10:58:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.068" endtime="20201030 10:58:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.569" endtime="20201030 10:58:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.568" endtime="20201030 10:58:39.102"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.125" endtime="20201030 10:58:39.145"></status>
</kw>
<msg timestamp="20201030 10:58:39.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.121" endtime="20201030 10:58:39.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.149" endtime="20201030 10:58:39.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.155" endtime="20201030 10:58:39.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.114" endtime="20201030 10:58:39.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.108" endtime="20201030 10:58:39.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.179" endtime="20201030 10:58:39.521"></status>
</kw>
<msg timestamp="20201030 10:58:39.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042137278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042188458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.176" endtime="20201030 10:58:39.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042137278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042188458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.530" endtime="20201030 10:58:39.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.549" endtime="20201030 10:58:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.168" endtime="20201030 10:58:39.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.163" endtime="20201030 10:58:39.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.567" level="INFO">${RESULT} = [{'diff': 5.1179999999997894e-05}, {'diff': 5.179099999999548e-05}, {'diff': 5.120800000000397e-05}, {'diff': 5.194400000000515e-05}, {'diff': 5.1735999999996674e-05}, {'diff': 5.202799999999563e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:39.558" endtime="20201030 10:58:39.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.578" level="INFO">${ACCURACY} = {'diff': [5.1179999999997894e-05, 5.179099999999548e-05, 5.120800000000397e-05, 5.194400000000515e-05, 5.1735999999996674e-05, 5.202799999999563e-05, 5.172200000000404e-05, 5.129199999999445e-05, 5.17...</msg>
<status status="PASS" starttime="20201030 10:58:39.569" endtime="20201030 10:58:39.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.589" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.587" endtime="20201030 10:58:39.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.595" level="INFO">VALUE: [5.1179999999997894e-05, 5.179099999999548e-05, 5.120800000000397e-05, 5.194400000000515e-05, 5.1735999999996674e-05, 5.202799999999563e-05, 5.172200000000404e-05, 5.129199999999445e-05, 5.177799999999538e-05, 5.213899999999966e-05, 5.182000000000103e-05, 5.197299999999683e-05, 5.155500000000174e-05, 5.123699999999565e-05, 5.1249999999995743e-05, 5.215299999999923e-05, 5.120800000000397e-05, 5.191600000000601e-05, 5.206900000000181e-05, 5.1165999999998324e-05, 5.1403000000005417e-05, 5.1957999999997784e-05, 5.129200000000139e-05, 5.200000000000343e-05, 5.129200000000139e-05, 5.20549999999953e-05, 5.148600000000336e-05, 5.125000000000268e-05, 5.1209000000003446e-05, 5.130500000000149e-05, 5.204099999999573e-05, 5.16669999999983e-05, 5.1499999999995993e-05, 5.188899999999941e-05, 5.20270000000031e-05, 5.1693999999997964e-05, 5.137499999999934e-05, 5.129200000000139e-05, 5.136099999999977e-05, 5.125000000000268e-05, 5.176400000000275e-05, 5.168099999999787e-05, 5.1987000000003336e-05, 5.158400000000035e-05, 5.137499999999934e-05, 5.195899999999726e-05, 5.188899999999941e-05, 5.1415999999998574e-05, 5.131900000000106e-05, 5.187499999999984e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.591" endtime="20201030 10:58:39.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.580" endtime="20201030 10:58:39.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.607" endtime="20201030 10:58:39.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.603" endtime="20201030 10:58:39.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.600" endtime="20201030 10:58:39.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.104" endtime="20201030 10:58:39.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.103" endtime="20201030 10:58:39.633"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.656" endtime="20201030 10:58:39.677"></status>
</kw>
<msg timestamp="20201030 10:58:39.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.652" endtime="20201030 10:58:39.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.680" endtime="20201030 10:58:39.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.686" endtime="20201030 10:58:39.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.645" endtime="20201030 10:58:39.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.639" endtime="20201030 10:58:39.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.710" endtime="20201030 10:58:40.048"></status>
</kw>
<msg timestamp="20201030 10:58:40.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04174375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:39.707" endtime="20201030 10:58:40.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04174375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:40.052" endtime="20201030 10:58:40.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.060" endtime="20201030 10:58:40.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.699" endtime="20201030 10:58:40.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.694" endtime="20201030 10:58:40.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.069" level="INFO">${RESULT} = [{'diff': 5.276400000000375e-05}, {'diff': 5.309700000000195e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.218099999999837e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.293099999999912e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:40.064" endtime="20201030 10:58:40.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.074" level="INFO">${ACCURACY} = {'diff': [5.276400000000375e-05, 5.309700000000195e-05, 5.269499999999844e-05, 5.218099999999837e-05, 5.262500000000059e-05, 5.293099999999912e-05, 5.2749999999997244e-05, 5.304100000000367e-05, 5.263...</msg>
<status status="PASS" starttime="20201030 10:58:40.070" endtime="20201030 10:58:40.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.079" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.078" endtime="20201030 10:58:40.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.082" level="INFO">VALUE: [5.276400000000375e-05, 5.309700000000195e-05, 5.269499999999844e-05, 5.218099999999837e-05, 5.262500000000059e-05, 5.293099999999912e-05, 5.2749999999997244e-05, 5.304100000000367e-05, 5.263900000000016e-05, 5.2388000000000434e-05, 5.26669999999993e-05, 5.225000000000368e-05, 5.2943999999999214e-05, 5.229200000000239e-05, 5.2457999999998284e-05, 5.2221999999997604e-05, 5.283299999999519e-05, 5.244400000000565e-05, 5.273600000000461e-05, 5.3014000000004e-05, 5.2721999999998104e-05, 5.243099999999862e-05, 5.254200000000264e-05, 5.286099999999433e-05, 5.255599999999527e-05, 5.240299999999948e-05, 5.3138000000001184e-05, 5.2943999999999214e-05, 5.2749999999997244e-05, 5.2179999999998894e-05, 5.259700000000145e-05, 5.265299999999973e-05, 5.2263999999996313e-05, 5.21669999999988e-05, 5.291699999999955e-05, 5.275000000000418e-05, 5.283299999999519e-05, 5.2471999999997854e-05, 5.275000000000418e-05, 5.256900000000231e-05, 5.287500000000084e-05, 5.28340000000016e-05, 5.308399999999491e-05, 5.2221999999997604e-05, 5.2249999999996743e-05, 5.28470000000017e-05, 5.279100000000342e-05, 5.280499999999605e-05, 5.227799999999588e-05, 5.2681000000005807e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.080" endtime="20201030 10:58:40.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.075" endtime="20201030 10:58:40.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.088" endtime="20201030 10:58:40.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.086" endtime="20201030 10:58:40.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.085" endtime="20201030 10:58:40.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.635" endtime="20201030 10:58:40.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.634" endtime="20201030 10:58:40.109"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.120" endtime="20201030 10:58:40.136"></status>
</kw>
<msg timestamp="20201030 10:58:40.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.118" endtime="20201030 10:58:40.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.138" endtime="20201030 10:58:40.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.142" endtime="20201030 10:58:40.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.115" endtime="20201030 10:58:40.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.112" endtime="20201030 10:58:40.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.166" endtime="20201030 10:58:40.510"></status>
</kw>
<msg timestamp="20201030 10:58:40.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.163" endtime="20201030 10:58:40.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.520" endtime="20201030 10:58:40.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.539" endtime="20201030 10:58:40.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.156" endtime="20201030 10:58:40.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.151" endtime="20201030 10:58:40.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.556" level="INFO">${RESULT} = [{'diff': 5.380500000000052e-05}, {'diff': 5.415300000000123e-05}, {'diff': 5.408399999999938e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.411099999999905e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:40.547" endtime="20201030 10:58:40.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.566" level="INFO">${ACCURACY} = {'diff': [5.380500000000052e-05, 5.415300000000123e-05, 5.408399999999938e-05, 5.38609999999988e-05, 5.40280000000011e-05, 5.411099999999905e-05, 5.31669999999998e-05, 5.3902000000001504e-05, 5.393100...</msg>
<status status="PASS" starttime="20201030 10:58:40.558" endtime="20201030 10:58:40.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.577" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.574" endtime="20201030 10:58:40.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.582" level="INFO">VALUE: [5.380500000000052e-05, 5.415300000000123e-05, 5.408399999999938e-05, 5.38609999999988e-05, 5.40280000000011e-05, 5.411099999999905e-05, 5.31669999999998e-05, 5.3902000000001504e-05, 5.393100000000012e-05, 5.341700000000005e-05, 5.40410000000012e-05, 5.361100000000202e-05, 5.33470000000022e-05, 5.329199999999992e-05, 5.3235999999998174e-05, 5.379100000000095e-05, 5.409699999999948e-05, 5.390299999999751e-05, 5.359699999999898e-05, 5.413900000000166e-05, 5.344499999999919e-05, 5.359700000000245e-05, 5.38340000000026e-05, 5.3235999999998174e-05, 5.376400000000128e-05, 5.3416000000000574e-05, 5.40410000000012e-05, 5.3402000000001004e-05, 5.3457999999999284e-05, 5.383300000000313e-05, 5.362499999999812e-05, 5.311099999999805e-05, 5.390300000000098e-05, 5.330500000000002e-05, 5.354200000000017e-05, 5.408299999999991e-05, 5.388900000000141e-05, 5.391700000000055e-05, 5.336100000000177e-05, 5.351400000000103e-05, 5.4027999999997633e-05, 5.409799999999895e-05, 5.3680000000000394e-05, 5.372300000000205e-05, 5.327800000000035e-05, 5.33609999999983e-05, 5.351299999999809e-05, 5.32080000000025e-05, 5.3971999999999354e-05, 5.383299999999966e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.579" endtime="20201030 10:58:40.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.567" endtime="20201030 10:58:40.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.595" endtime="20201030 10:58:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.590" endtime="20201030 10:58:40.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.588" endtime="20201030 10:58:40.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.110" endtime="20201030 10:58:40.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.109" endtime="20201030 10:58:40.620"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.643" endtime="20201030 10:58:40.665"></status>
</kw>
<msg timestamp="20201030 10:58:40.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.640" endtime="20201030 10:58:40.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.669" endtime="20201030 10:58:40.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.675" endtime="20201030 10:58:40.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.633" endtime="20201030 10:58:40.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.627" endtime="20201030 10:58:40.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.699" endtime="20201030 10:58:41.039"></status>
</kw>
<msg timestamp="20201030 10:58:41.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043524042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043579, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:40.695" endtime="20201030 10:58:41.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043524042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043579, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:41.049" endtime="20201030 10:58:41.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.068" endtime="20201030 10:58:41.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.688" endtime="20201030 10:58:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.683" endtime="20201030 10:58:41.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.085" level="INFO">${RESULT} = [{'diff': 5.4958000000000784e-05}, {'diff': 5.4402000000002004e-05}, {'diff': 5.513900000000266e-05}, {'diff': 5.4444000000000714e-05}, {'diff': 5.4930000000001644e-05}, {'diff': 5.506900000000481e-05...</msg>
<status status="PASS" starttime="20201030 10:58:41.076" endtime="20201030 10:58:41.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.095" level="INFO">${ACCURACY} = {'diff': [5.4958000000000784e-05, 5.4402000000002004e-05, 5.513900000000266e-05, 5.4444000000000714e-05, 5.4930000000001644e-05, 5.506900000000481e-05, 5.5013999999999064e-05, 5.4499999999998994e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:41.087" endtime="20201030 10:58:41.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.106" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.104" endtime="20201030 10:58:41.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.111" level="INFO">VALUE: [5.4958000000000784e-05, 5.4402000000002004e-05, 5.513900000000266e-05, 5.4444000000000714e-05, 5.4930000000001644e-05, 5.506900000000481e-05, 5.5013999999999064e-05, 5.4499999999998994e-05, 5.507000000000428e-05, 5.4249999999998744e-05, 5.468100000000087e-05, 5.455599999999727e-05, 5.507000000000428e-05, 5.431899999999712e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.461100000000302e-05, 5.479100000000542e-05, 5.487500000000284e-05, 5.480599999999752e-05, 5.461099999999608e-05, 5.513900000000266e-05, 5.509700000000395e-05, 5.5027999999998634e-05, 5.465300000000173e-05, 5.4958000000000784e-05, 5.436100000000277e-05, 5.468100000000087e-05, 5.509700000000395e-05, 5.48470000000037e-05, 5.513900000000266e-05, 5.420899999999951e-05, 5.440300000000148e-05, 5.420899999999951e-05, 5.511099999999658e-05, 5.5041999999998203e-05, 5.463900000000216e-05, 5.4527999999998134e-05, 5.506899999999787e-05, 5.4458000000000284e-05, 5.463899999999522e-05, 5.483299999999719e-05, 5.506999999999734e-05, 5.465300000000173e-05, 5.4499999999998994e-05, 5.4708000000000534e-05, 5.509699999999701e-05, 5.458399999999641e-05, 5.4527999999998134e-05, 5.479200000000489e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.108" endtime="20201030 10:58:41.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.097" endtime="20201030 10:58:41.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.130" endtime="20201030 10:58:41.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.120" endtime="20201030 10:58:41.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.117" endtime="20201030 10:58:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.622" endtime="20201030 10:58:41.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.621" endtime="20201030 10:58:41.155"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.178" endtime="20201030 10:58:41.199"></status>
</kw>
<msg timestamp="20201030 10:58:41.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.175" endtime="20201030 10:58:41.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.202" endtime="20201030 10:58:41.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.209" endtime="20201030 10:58:41.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.167" endtime="20201030 10:58:41.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.162" endtime="20201030 10:58:41.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.233" endtime="20201030 10:58:41.575"></status>
</kw>
<msg timestamp="20201030 10:58:41.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041525236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.229" endtime="20201030 10:58:41.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041469903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041525236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.584" endtime="20201030 10:58:41.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.603" endtime="20201030 10:58:41.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.222" endtime="20201030 10:58:41.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.217" endtime="20201030 10:58:41.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.621" level="INFO">${RESULT} = [{'diff': 5.533299999999769e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.5457999999994345e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.606899999999887e-05...</msg>
<status status="PASS" starttime="20201030 10:58:41.612" endtime="20201030 10:58:41.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.632" level="INFO">${ACCURACY} = {'diff': [5.533299999999769e-05, 5.5791999999998954e-05, 5.5457999999994345e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.606899999999887e-05, 5.522300000000008e-05, 5.586099999999733e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:41.623" endtime="20201030 10:58:41.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.643" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.640" endtime="20201030 10:58:41.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.648" level="INFO">VALUE: [5.533299999999769e-05, 5.5791999999998954e-05, 5.5457999999994345e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.606899999999887e-05, 5.522300000000008e-05, 5.586099999999733e-05, 5.579200000000589e-05, 5.541699999999511e-05, 5.597300000000083e-05, 5.544500000000119e-05, 5.590300000000298e-05, 5.551300000000009e-05, 5.587500000000384e-05, 5.5971999999994415e-05, 5.5165999999995385e-05, 5.609699999999801e-05, 5.593100000000212e-05, 5.5429999999995205e-05, 5.5429999999995205e-05, 5.612500000000409e-05, 5.5541999999998704e-05, 5.529200000000539e-05, 5.5750000000000244e-05, 5.5291999999998453e-05, 5.5957999999994845e-05, 5.5929999999995705e-05, 5.6027999999999634e-05, 5.5750000000000244e-05, 5.5929999999995705e-05, 5.5943999999995275e-05, 5.605500000000624e-05, 5.5972000000001354e-05, 5.5236000000000174e-05, 5.531900000000506e-05, 5.584699999999776e-05, 5.5513999999999564e-05, 5.559700000000445e-05, 5.570900000000101e-05, 5.5722000000001104e-05, 5.5513999999999564e-05, 5.5236000000000174e-05, 5.536100000000377e-05, 5.58619999999968e-05, 5.5680000000002394e-05, 5.5486000000000424e-05, 5.558299999999794e-05, 5.5958000000001784e-05, 5.562499999999665e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.645" endtime="20201030 10:58:41.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.633" endtime="20201030 10:58:41.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.661" endtime="20201030 10:58:41.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.657" endtime="20201030 10:58:41.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.654" endtime="20201030 10:58:41.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.157" endtime="20201030 10:58:41.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.156" endtime="20201030 10:58:41.686"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.709" endtime="20201030 10:58:41.730"></status>
</kw>
<msg timestamp="20201030 10:58:41.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.706" endtime="20201030 10:58:41.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.733" endtime="20201030 10:58:41.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.740" endtime="20201030 10:58:41.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.699" endtime="20201030 10:58:41.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.693" endtime="20201030 10:58:41.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.763" endtime="20201030 10:58:42.105"></status>
</kw>
<msg timestamp="20201030 10:58:42.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.760" endtime="20201030 10:58:42.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.115" endtime="20201030 10:58:42.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.134" endtime="20201030 10:58:42.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.753" endtime="20201030 10:58:42.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.748" endtime="20201030 10:58:42.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.151" level="INFO">${RESULT} = [{'diff': 5.6486000000001424e-05}, {'diff': 5.6443999999995775e-05}, {'diff': 5.6972000000002354e-05}, {'diff': 5.644500000000219e-05}, {'diff': 5.641700000000305e-05}, {'diff': 5.7083999999998913e-05...</msg>
<status status="PASS" starttime="20201030 10:58:42.142" endtime="20201030 10:58:42.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.163" level="INFO">${ACCURACY} = {'diff': [5.6486000000001424e-05, 5.6443999999995775e-05, 5.6972000000002354e-05, 5.644500000000219e-05, 5.641700000000305e-05, 5.7083999999998913e-05, 5.659799999999798e-05, 5.6805999999999524e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:58:42.153" endtime="20201030 10:58:42.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.174" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.171" endtime="20201030 10:58:42.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.179" level="INFO">VALUE: [5.6486000000001424e-05, 5.6443999999995775e-05, 5.6972000000002354e-05, 5.644500000000219e-05, 5.641700000000305e-05, 5.7083999999998913e-05, 5.659799999999798e-05, 5.6805999999999524e-05, 5.706899999999987e-05, 5.662499999999765e-05, 5.658299999999894e-05, 5.715300000000423e-05, 5.688900000000441e-05, 5.688899999999747e-05, 5.6264000000000314e-05, 5.6930000000003644e-05, 5.6179999999995955e-05, 5.7055999999999774e-05, 5.6264000000000314e-05, 5.665300000000373e-05, 5.663900000000416e-05, 5.6236000000001174e-05, 5.6736000000001674e-05, 5.6264000000000314e-05, 5.620900000000151e-05, 5.6651999999997316e-05, 5.658400000000535e-05, 5.686099999999833e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.684699999999876e-05, 5.709699999999901e-05, 5.613899999999672e-05, 5.662499999999765e-05, 5.663899999999722e-05, 5.7179999999996955e-05, 5.6736000000001674e-05, 5.6819999999999093e-05, 5.638900000000391e-05, 5.7028000000000634e-05, 5.633299999999869e-05, 5.683299999999919e-05, 5.6778000000000384e-05, 5.709699999999901e-05, 5.708299999999944e-05, 5.706899999999987e-05, 5.627700000000041e-05, 5.706899999999987e-05, 5.6929999999996705e-05, 5.6721999999995165e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.176" endtime="20201030 10:58:42.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.164" endtime="20201030 10:58:42.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.192" endtime="20201030 10:58:42.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.188" endtime="20201030 10:58:42.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.185" endtime="20201030 10:58:42.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.688" endtime="20201030 10:58:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.687" endtime="20201030 10:58:42.217"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.240" endtime="20201030 10:58:42.261"></status>
</kw>
<msg timestamp="20201030 10:58:42.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.237" endtime="20201030 10:58:42.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.264" endtime="20201030 10:58:42.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.271" endtime="20201030 10:58:42.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.230" endtime="20201030 10:58:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.224" endtime="20201030 10:58:42.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.295" endtime="20201030 10:58:42.639"></status>
</kw>
<msg timestamp="20201030 10:58:42.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04197175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:42.291" endtime="20201030 10:58:42.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04197175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:42.649" endtime="20201030 10:58:42.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.668" endtime="20201030 10:58:42.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.284" endtime="20201030 10:58:42.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.279" endtime="20201030 10:58:42.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.685" level="INFO">${RESULT} = [{'diff': 5.731900000000012e-05}, {'diff': 5.7972000000003354e-05}, {'diff': 5.7749999999995305e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.745900000000276e-05}, {'diff': 5.7401999999998066e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:42.676" endtime="20201030 10:58:42.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.694" level="INFO">${ACCURACY} = {'diff': [5.731900000000012e-05, 5.7972000000003354e-05, 5.7749999999995305e-05, 5.786099999999933e-05, 5.745900000000276e-05, 5.7401999999998066e-05, 5.811199999999905e-05, 5.7986000000002924e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:42.687" endtime="20201030 10:58:42.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.706" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.703" endtime="20201030 10:58:42.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.711" level="INFO">VALUE: [5.731900000000012e-05, 5.7972000000003354e-05, 5.7749999999995305e-05, 5.786099999999933e-05, 5.745900000000276e-05, 5.7401999999998066e-05, 5.811199999999905e-05, 5.7986000000002924e-05, 5.730500000000055e-05, 5.762499999999865e-05, 5.806900000000087e-05, 5.8056000000000774e-05, 5.780500000000105e-05, 5.763899999999822e-05, 5.740299999999754e-05, 5.759699999999951e-05, 5.743100000000362e-05, 5.8056000000000774e-05, 5.7278000000000884e-05, 5.7333999999999163e-05, 5.7778000000001384e-05, 5.78749999999989e-05, 5.747300000000233e-05, 5.736099999999883e-05, 5.730500000000055e-05, 5.762499999999865e-05, 5.7514000000001564e-05, 5.7429999999997206e-05, 5.7443999999996775e-05, 5.808300000000044e-05, 5.805499999999436e-05, 5.768099999999693e-05, 5.734799999999873e-05, 5.7485999999995485e-05, 5.790299999999804e-05, 5.736099999999883e-05, 5.7820000000000094e-05, 5.784699999999976e-05, 5.793100000000412e-05, 5.7542000000000704e-05, 5.7222000000002604e-05, 5.7471999999995915e-05, 5.809700000000001e-05, 5.7486000000002424e-05, 5.7500000000001994e-05, 5.784699999999976e-05, 5.733299999999969e-05, 5.7806000000000524e-05, 5.76949999999965e-05, 5.8070000000000344e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.708" endtime="20201030 10:58:42.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.696" endtime="20201030 10:58:42.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.724" endtime="20201030 10:58:42.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.719" endtime="20201030 10:58:42.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.717" endtime="20201030 10:58:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.219" endtime="20201030 10:58:42.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.218" endtime="20201030 10:58:42.749"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.772" endtime="20201030 10:58:42.795"></status>
</kw>
<msg timestamp="20201030 10:58:42.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.769" endtime="20201030 10:58:42.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.798" endtime="20201030 10:58:42.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.804" endtime="20201030 10:58:42.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.761" endtime="20201030 10:58:42.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.756" endtime="20201030 10:58:42.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.828" endtime="20201030 10:58:43.171"></status>
</kw>
<msg timestamp="20201030 10:58:43.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04328275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043341111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:42.825" endtime="20201030 10:58:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04328275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043341111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:43.180" endtime="20201030 10:58:43.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.200" endtime="20201030 10:58:43.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.818" endtime="20201030 10:58:43.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.813" endtime="20201030 10:58:43.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.217" level="INFO">${RESULT} = [{'diff': 5.836099999999983e-05}, {'diff': 5.9028000000002634e-05}, {'diff': 5.8763999999995875e-05}, {'diff': 5.843100000000462e-05}, {'diff': 5.8680000000005395e-05}, {'diff': 5.840299999999854e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:43.208" endtime="20201030 10:58:43.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.227" level="INFO">${ACCURACY} = {'diff': [5.836099999999983e-05, 5.9028000000002634e-05, 5.8763999999995875e-05, 5.843100000000462e-05, 5.8680000000005395e-05, 5.840299999999854e-05, 5.8570000000000844e-05, 5.811099999999958e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:43.219" endtime="20201030 10:58:43.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.238" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.235" endtime="20201030 10:58:43.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.243" level="INFO">VALUE: [5.836099999999983e-05, 5.9028000000002634e-05, 5.8763999999995875e-05, 5.843100000000462e-05, 5.8680000000005395e-05, 5.840299999999854e-05, 5.8570000000000844e-05, 5.811099999999958e-05, 5.880500000000205e-05, 5.8764000000002814e-05, 5.863899999999922e-05, 5.836099999999983e-05, 5.8401999999999066e-05, 5.8429999999998206e-05, 5.9042000000002204e-05, 5.8721999999997165e-05, 5.8499999999996055e-05, 5.840300000000548e-05, 5.8736000000003674e-05, 5.8778000000002384e-05, 5.9084000000000914e-05, 5.822299999999614e-05, 5.8570000000000844e-05, 5.841699999999811e-05, 5.8250000000002744e-05, 5.8291999999994515e-05, 5.8500000000002994e-05, 5.8582999999994e-05, 5.8957999999997845e-05, 5.833300000000069e-05, 5.88749999999999e-05, 5.8250000000002744e-05, 5.866699999999836e-05, 5.8471999999996915e-05, 5.911100000000058e-05, 5.906899999999493e-05, 5.8820000000001094e-05, 5.8263999999995375e-05, 5.8806000000001524e-05, 5.861100000000008e-05, 5.9084000000000914e-05, 5.8556000000001274e-05, 5.912500000000015e-05, 5.826300000000284e-05, 5.906900000000187e-05, 5.8415999999998636e-05, 5.8792000000001954e-05, 5.8971999999997415e-05, 5.858300000000094e-05, 5.8527999999995195e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.240" endtime="20201030 10:58:43.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.229" endtime="20201030 10:58:43.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.257" endtime="20201030 10:58:43.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.252" endtime="20201030 10:58:43.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.249" endtime="20201030 10:58:43.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.751" endtime="20201030 10:58:43.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.750" endtime="20201030 10:58:43.283"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.306" endtime="20201030 10:58:43.327"></status>
</kw>
<msg timestamp="20201030 10:58:43.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.302" endtime="20201030 10:58:43.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.330" endtime="20201030 10:58:43.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.337" endtime="20201030 10:58:43.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.295" endtime="20201030 10:58:43.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.289" endtime="20201030 10:58:43.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.361" endtime="20201030 10:58:43.666"></status>
</kw>
<msg timestamp="20201030 10:58:43.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041776333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.357" endtime="20201030 10:58:43.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041776333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.676" endtime="20201030 10:58:43.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.695" endtime="20201030 10:58:43.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.350" endtime="20201030 10:58:43.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.345" endtime="20201030 10:58:43.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.712" level="INFO">${RESULT} = [{'diff': 5.9528000000003134e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.9763999999996875e-05}, {'diff': 5.9778000000003384e-05}, {'diff': 6.00829999999955e-05}, {'diff': 5.984699999999482e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:43.703" endtime="20201030 10:58:43.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.723" level="INFO">${ACCURACY} = {'diff': [5.9528000000003134e-05, 5.9457999999998346e-05, 5.9763999999996875e-05, 5.9778000000003384e-05, 6.00829999999955e-05, 5.984699999999482e-05, 5.9457999999998346e-05, 5.9264000000003314e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:58:43.714" endtime="20201030 10:58:43.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.734" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.732" endtime="20201030 10:58:43.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.740" level="INFO">VALUE: [5.9528000000003134e-05, 5.9457999999998346e-05, 5.9763999999996875e-05, 5.9778000000003384e-05, 6.00829999999955e-05, 5.984699999999482e-05, 5.9457999999998346e-05, 5.9264000000003314e-05, 5.9735999999997735e-05, 5.9194999999998e-05, 5.9500000000003994e-05, 5.9500000000003994e-05, 5.96949999999985e-05, 5.965299999999979e-05, 5.981899999999568e-05, 5.9943999999999276e-05, 6.004099999999679e-05, 5.984699999999482e-05, 5.959700000000151e-05, 5.9750000000004244e-05, 5.963900000000022e-05, 5.9249999999996805e-05, 5.9306000000002024e-05, 5.9292000000002454e-05, 6.0028000000003634e-05, 5.944499999999825e-05, 5.991699999999961e-05, 5.918099999999843e-05, 5.9236000000004174e-05, 6.002699999999722e-05, 5.963900000000022e-05, 5.963900000000022e-05, 6.011099999999464e-05, 6.011099999999464e-05, 6.006899999999593e-05, 5.986100000000133e-05, 5.981899999999568e-05, 5.9471999999997915e-05, 5.940299999999954e-05, 5.9792000000002954e-05, 6.009700000000201e-05, 5.9763999999996875e-05, 5.9528000000003134e-05, 5.995899999999832e-05, 5.9735999999997735e-05, 6.0027999999996695e-05, 5.9916000000000136e-05, 5.9499999999997055e-05, 5.988900000000047e-05, 5.9972000000005354e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.736" endtime="20201030 10:58:43.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.725" endtime="20201030 10:58:43.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.752" endtime="20201030 10:58:43.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.748" endtime="20201030 10:58:43.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.745" endtime="20201030 10:58:43.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.285" endtime="20201030 10:58:43.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.284" endtime="20201030 10:58:43.777"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.800" endtime="20201030 10:58:43.821"></status>
</kw>
<msg timestamp="20201030 10:58:43.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.797" endtime="20201030 10:58:43.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.825" endtime="20201030 10:58:43.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.831" endtime="20201030 10:58:43.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.790" endtime="20201030 10:58:43.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.784" endtime="20201030 10:58:43.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.855" endtime="20201030 10:58:44.197"></status>
</kw>
<msg timestamp="20201030 10:58:44.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041685389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:43.852" endtime="20201030 10:58:44.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041685389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:44.207" endtime="20201030 10:58:44.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.226" endtime="20201030 10:58:44.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.844" endtime="20201030 10:58:44.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.840" endtime="20201030 10:58:44.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.243" level="INFO">${RESULT} = [{'diff': 6.038900000000097e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.0735999999998735e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.0249999999997805e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:44.234" endtime="20201030 10:58:44.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.255" level="INFO">${ACCURACY} = {'diff': [6.038900000000097e-05, 6.041700000000011e-05, 6.0735999999998735e-05, 6.062500000000165e-05, 6.08750000000019e-05, 6.0249999999997805e-05, 6.094499999999975e-05, 6.0707999999999596e-05, 6.11...</msg>
<status status="PASS" starttime="20201030 10:58:44.245" endtime="20201030 10:58:44.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.266" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.263" endtime="20201030 10:58:44.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.271" level="INFO">VALUE: [6.038900000000097e-05, 6.041700000000011e-05, 6.0735999999998735e-05, 6.062500000000165e-05, 6.08750000000019e-05, 6.0249999999997805e-05, 6.094499999999975e-05, 6.0707999999999596e-05, 6.115300000000129e-05, 6.112500000000215e-05, 6.080499999999711e-05, 6.10829999999965e-05, 6.086100000000233e-05, 6.0763999999997875e-05, 6.080499999999711e-05, 6.043099999999968e-05, 6.065300000000079e-05, 6.0443999999999776e-05, 6.0527999999997195e-05, 6.0985999999998985e-05, 6.0250000000004744e-05, 6.044499999999925e-05, 6.0458000000006284e-05, 6.104099999999779e-05, 6.105499999999736e-05, 6.0736000000005674e-05, 6.10550000000043e-05, 6.079099999999754e-05, 6.063900000000122e-05, 6.083300000000319e-05, 6.105600000000377e-05, 6.044499999999925e-05, 6.077699999999797e-05, 6.0541999999996765e-05, 6.068099999999993e-05, 6.0499999999998055e-05, 6.10699999999964e-05, 6.0792000000003954e-05, 6.03750000000014e-05, 6.0235999999998235e-05, 6.10550000000043e-05, 6.0944000000000276e-05, 6.112499999999521e-05, 6.104199999999727e-05, 6.066700000000036e-05, 6.040300000000054e-05, 6.0292000000003454e-05, 6.0457999999999346e-05, 6.0541999999996765e-05, 6.087499999999496e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.268" endtime="20201030 10:58:44.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.257" endtime="20201030 10:58:44.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.284" endtime="20201030 10:58:44.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.280" endtime="20201030 10:58:44.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.277" endtime="20201030 10:58:44.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.780" endtime="20201030 10:58:44.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.778" endtime="20201030 10:58:44.309"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.332" endtime="20201030 10:58:44.353"></status>
</kw>
<msg timestamp="20201030 10:58:44.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.329" endtime="20201030 10:58:44.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.356" endtime="20201030 10:58:44.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.362" endtime="20201030 10:58:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.322" endtime="20201030 10:58:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.316" endtime="20201030 10:58:44.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.386" endtime="20201030 10:58:44.730"></status>
</kw>
<msg timestamp="20201030 10:58:44.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041737583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:44.383" endtime="20201030 10:58:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041737583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:44.739" endtime="20201030 10:58:44.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.758" endtime="20201030 10:58:44.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.376" endtime="20201030 10:58:44.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.371" endtime="20201030 10:58:44.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.775" level="INFO">${RESULT} = [{'diff': 6.208300000000444e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.159700000000351e-05}, {'diff': 6.116599999999445e-05}, {'diff': 6.19159999999952e-05}, {'diff': 6.176399999999888e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:44.767" endtime="20201030 10:58:44.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.785" level="INFO">${ACCURACY} = {'diff': [6.208300000000444e-05, 6.12499999999988e-05, 6.159700000000351e-05, 6.116599999999445e-05, 6.19159999999952e-05, 6.176399999999888e-05, 6.180600000000452e-05, 6.17499999999993e-05, 6.2056000...</msg>
<status status="PASS" starttime="20201030 10:58:44.778" endtime="20201030 10:58:44.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.796" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.794" endtime="20201030 10:58:44.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.801" level="INFO">VALUE: [6.208300000000444e-05, 6.12499999999988e-05, 6.159700000000351e-05, 6.116599999999445e-05, 6.19159999999952e-05, 6.176399999999888e-05, 6.180600000000452e-05, 6.17499999999993e-05, 6.205600000000477e-05, 6.186100000000333e-05, 6.130599999999709e-05, 6.209700000000401e-05, 6.131999999999665e-05, 6.122299999999914e-05, 6.155599999999734e-05, 6.194500000000075e-05, 6.20829999999975e-05, 6.136100000000283e-05, 6.143100000000068e-05, 6.161099999999614e-05, 6.166600000000189e-05, 6.127800000000488e-05, 6.207000000000434e-05, 6.180599999999759e-05, 6.170900000000007e-05, 6.177799999999845e-05, 6.209800000000348e-05, 6.202699999999922e-05, 6.151399999999863e-05, 6.180600000000452e-05, 6.116700000000086e-05, 6.202800000000563e-05, 6.198599999999999e-05, 6.136100000000283e-05, 6.212499999999621e-05, 6.195799999999391e-05, 6.183299999999725e-05, 6.147199999999992e-05, 6.201399999999913e-05, 6.13750000000024e-05, 6.213899999999578e-05, 6.193100000000118e-05, 6.17499999999993e-05, 6.206899999999793e-05, 6.118100000000043e-05, 6.212500000000315e-05, 6.147199999999992e-05, 6.162499999999571e-05, 6.191600000000214e-05, 6.12220000000066e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.798" endtime="20201030 10:58:44.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.787" endtime="20201030 10:58:44.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.814" endtime="20201030 10:58:44.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.810" endtime="20201030 10:58:44.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.807" endtime="20201030 10:58:44.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.311" endtime="20201030 10:58:44.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.310" endtime="20201030 10:58:44.839"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.862" endtime="20201030 10:58:44.885"></status>
</kw>
<msg timestamp="20201030 10:58:44.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.859" endtime="20201030 10:58:44.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.889" endtime="20201030 10:58:44.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.895" endtime="20201030 10:58:44.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.852" endtime="20201030 10:58:44.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.846" endtime="20201030 10:58:44.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.919" endtime="20201030 10:58:45.261"></status>
</kw>
<msg timestamp="20201030 10:58:45.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043720528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.916" endtime="20201030 10:58:45.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043720528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.271" endtime="20201030 10:58:45.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.290" endtime="20201030 10:58:45.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.908" endtime="20201030 10:58:45.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.903" endtime="20201030 10:58:45.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.307" level="INFO">${RESULT} = [{'diff': 6.234700000000426e-05}, {'diff': 6.280499999999911e-05}, {'diff': 6.293099999999524e-05}, {'diff': 6.261100000000408e-05}, {'diff': 6.236099999999689e-05}, {'diff': 6.238900000000297e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:45.298" endtime="20201030 10:58:45.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.317" level="INFO">${ACCURACY} = {'diff': [6.234700000000426e-05, 6.280499999999911e-05, 6.293099999999524e-05, 6.261100000000408e-05, 6.236099999999689e-05, 6.238900000000297e-05, 6.27500000000003e-05, 6.256900000000537e-05, 6.28469...</msg>
<status status="PASS" starttime="20201030 10:58:45.309" endtime="20201030 10:58:45.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.328" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.325" endtime="20201030 10:58:45.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.333" level="INFO">VALUE: [6.234700000000426e-05, 6.280499999999911e-05, 6.293099999999524e-05, 6.261100000000408e-05, 6.236099999999689e-05, 6.238900000000297e-05, 6.27500000000003e-05, 6.256900000000537e-05, 6.284699999999782e-05, 6.269399999999509e-05, 6.280499999999911e-05, 6.283299999999825e-05, 6.27500000000003e-05, 6.2195000000001e-05, 6.308400000000491e-05, 6.23200000000046e-05, 6.295899999999438e-05, 6.258399999999747e-05, 6.255599999999834e-05, 6.272200000000117e-05, 6.283299999999825e-05, 6.268000000000246e-05, 6.306899999999893e-05, 6.231899999999818e-05, 6.237499999999646e-05, 6.258300000000494e-05, 6.217999999999502e-05, 6.280600000000552e-05, 6.316699999999592e-05, 6.240300000000254e-05, 6.270900000000107e-05, 6.241699999999517e-05, 6.28479999999973e-05, 6.27500000000003e-05, 6.281899999999868e-05, 6.231899999999818e-05, 6.273600000000074e-05, 6.272200000000117e-05, 6.250000000000006e-05, 6.216699999999492e-05, 6.254199999999877e-05, 6.241700000000211e-05, 6.233400000000416e-05, 6.280499999999911e-05, 6.23620000000033e-05, 6.256899999999843e-05, 6.304199999999927e-05, 6.27500000000003e-05, 6.226399999999938e-05, 6.263900000000322e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.330" endtime="20201030 10:58:45.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.319" endtime="20201030 10:58:45.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.347" endtime="20201030 10:58:45.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.341" endtime="20201030 10:58:45.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.339" endtime="20201030 10:58:45.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.841" endtime="20201030 10:58:45.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.840" endtime="20201030 10:58:45.372"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.396" endtime="20201030 10:58:45.417"></status>
</kw>
<msg timestamp="20201030 10:58:45.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.392" endtime="20201030 10:58:45.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.420" endtime="20201030 10:58:45.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.427" endtime="20201030 10:58:45.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.385" endtime="20201030 10:58:45.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.379" endtime="20201030 10:58:45.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.450" endtime="20201030 10:58:45.793"></status>
</kw>
<msg timestamp="20201030 10:58:45.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041746722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.447" endtime="20201030 10:58:45.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041746722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.802" endtime="20201030 10:58:45.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.821" endtime="20201030 10:58:45.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.440" endtime="20201030 10:58:45.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.435" endtime="20201030 10:58:45.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.839" level="INFO">${RESULT} = [{'diff': 6.411099999999864e-05}, {'diff': 6.376399999999394e-05}, {'diff': 6.363899999999728e-05}, {'diff': 6.32500000000008e-05}, {'diff': 6.372200000000217e-05}, {'diff': 6.383399999999873e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:45.830" endtime="20201030 10:58:45.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.849" level="INFO">${ACCURACY} = {'diff': [6.411099999999864e-05, 6.376399999999394e-05, 6.363899999999728e-05, 6.32500000000008e-05, 6.372200000000217e-05, 6.383399999999873e-05, 6.377800000000045e-05, 6.345900000000182e-05, 6.34309...</msg>
<status status="PASS" starttime="20201030 10:58:45.841" endtime="20201030 10:58:45.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.860" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.858" endtime="20201030 10:58:45.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.866" level="INFO">VALUE: [6.411099999999864e-05, 6.376399999999394e-05, 6.363899999999728e-05, 6.32500000000008e-05, 6.372200000000217e-05, 6.383399999999873e-05, 6.377800000000045e-05, 6.345900000000182e-05, 6.343099999999574e-05, 6.377800000000045e-05, 6.372200000000217e-05, 6.363799999999781e-05, 6.369399999999609e-05, 6.359699999999857e-05, 6.379100000000054e-05, 6.347200000000192e-05, 6.345800000000235e-05, 6.373600000000174e-05, 6.341699999999617e-05, 6.348600000000149e-05, 6.359700000000551e-05, 6.40699999999994e-05, 6.404200000000027e-05, 6.33200000000056e-05, 6.383399999999873e-05, 6.376400000000088e-05, 6.334699999999832e-05, 6.329199999999952e-05, 6.326400000000038e-05, 6.401400000000113e-05, 6.363900000000422e-05, 6.344399999999584e-05, 6.329199999999952e-05, 6.38750000000049e-05, 6.40829999999995e-05, 6.322200000000167e-05, 6.379200000000002e-05, 6.40829999999995e-05, 6.350000000000106e-05, 6.38200000000061e-05, 6.318100000000243e-05, 6.334699999999832e-05, 6.345800000000235e-05, 6.37500000000013e-05, 6.401400000000113e-05, 6.404200000000027e-05, 6.402799999999376e-05, 6.348600000000149e-05, 6.384699999999882e-05, 6.387499999999796e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.863" endtime="20201030 10:58:45.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.851" endtime="20201030 10:58:45.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.879" endtime="20201030 10:58:45.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.874" endtime="20201030 10:58:45.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.872" endtime="20201030 10:58:45.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.375" endtime="20201030 10:58:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.373" endtime="20201030 10:58:45.904"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.927" endtime="20201030 10:58:45.949"></status>
</kw>
<msg timestamp="20201030 10:58:45.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.924" endtime="20201030 10:58:45.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.953" endtime="20201030 10:58:45.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.959" endtime="20201030 10:58:45.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.916" endtime="20201030 10:58:45.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.910" endtime="20201030 10:58:45.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.983" endtime="20201030 10:58:46.324"></status>
</kw>
<msg timestamp="20201030 10:58:46.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042066819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.979" endtime="20201030 10:58:46.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042002167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042066819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.334" endtime="20201030 10:58:46.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.353" endtime="20201030 10:58:46.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.972" endtime="20201030 10:58:46.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.967" endtime="20201030 10:58:46.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.370" level="INFO">${RESULT} = [{'diff': 6.465199999999838e-05}, {'diff': 6.451299999999521e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.431900000000018e-05}, {'diff': 6.448600000000249e-05}, {'diff': 6.48750000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:46.361" endtime="20201030 10:58:46.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.385" level="INFO">${ACCURACY} = {'diff': [6.465199999999838e-05, 6.451299999999521e-05, 6.512499999999921e-05, 6.431900000000018e-05, 6.448600000000249e-05, 6.48750000000059e-05, 6.47779999999945e-05, 6.483300000000025e-05, 6.509700...</msg>
<status status="PASS" starttime="20201030 10:58:46.372" endtime="20201030 10:58:46.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.397" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.394" endtime="20201030 10:58:46.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.402" level="INFO">VALUE: [6.465199999999838e-05, 6.451299999999521e-05, 6.512499999999921e-05, 6.431900000000018e-05, 6.448600000000249e-05, 6.48750000000059e-05, 6.47779999999945e-05, 6.483300000000025e-05, 6.509700000000007e-05, 6.441699999999717e-05, 6.479200000000102e-05, 6.426400000000138e-05, 6.512499999999921e-05, 6.476400000000188e-05, 6.441699999999717e-05, 6.420899999999563e-05, 6.488799999999906e-05, 6.49300000000047e-05, 6.455600000000034e-05, 6.437499999999846e-05, 6.451400000000163e-05, 6.476400000000188e-05, 6.495799999999691e-05, 6.472200000000317e-05, 6.508399999999998e-05, 6.429200000000052e-05, 6.448600000000249e-05, 6.512499999999921e-05, 6.479199999999408e-05, 6.430600000000009e-05, 6.513800000000625e-05, 6.494400000000428e-05, 6.479100000000154e-05, 6.481900000000068e-05, 6.429100000000104e-05, 6.436099999999889e-05, 6.429200000000052e-05, 6.444500000000325e-05, 6.444400000000378e-05, 6.511099999999964e-05, 6.465300000000479e-05, 6.509700000000007e-05, 6.477800000000145e-05, 6.47359999999958e-05, 6.504200000000127e-05, 6.470799999999666e-05, 6.477800000000145e-05, 6.47359999999958e-05, 6.433299999999975e-05, 6.484699999999982e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.399" endtime="20201030 10:58:46.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.387" endtime="20201030 10:58:46.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.415" endtime="20201030 10:58:46.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.410" endtime="20201030 10:58:46.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.408" endtime="20201030 10:58:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.906" endtime="20201030 10:58:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.905" endtime="20201030 10:58:46.440"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.463" endtime="20201030 10:58:46.484"></status>
</kw>
<msg timestamp="20201030 10:58:46.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.459" endtime="20201030 10:58:46.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.488" endtime="20201030 10:58:46.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.494" endtime="20201030 10:58:46.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.452" endtime="20201030 10:58:46.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.446" endtime="20201030 10:58:46.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.518" endtime="20201030 10:58:46.852"></status>
</kw>
<msg timestamp="20201030 10:58:46.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041679222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.514" endtime="20201030 10:58:46.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041679222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.856" endtime="20201030 10:58:46.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.865" endtime="20201030 10:58:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.507" endtime="20201030 10:58:46.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.502" endtime="20201030 10:58:46.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.873" level="INFO">${RESULT} = [{'diff': 6.615299999999935e-05}, {'diff': 6.606900000000193e-05}, {'diff': 6.54300000000052e-05}, {'diff': 6.563899999999928e-05}, {'diff': 6.572200000000417e-05}, {'diff': 6.541699999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:46.869" endtime="20201030 10:58:46.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.877" level="INFO">${ACCURACY} = {'diff': [6.615299999999935e-05, 6.606900000000193e-05, 6.54300000000052e-05, 6.563899999999928e-05, 6.572200000000417e-05, 6.541699999999817e-05, 6.529200000000152e-05, 6.53479999999998e-05, 6.573599...</msg>
<status status="PASS" starttime="20201030 10:58:46.874" endtime="20201030 10:58:46.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.882" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.881" endtime="20201030 10:58:46.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.885" level="INFO">VALUE: [6.615299999999935e-05, 6.606900000000193e-05, 6.54300000000052e-05, 6.563899999999928e-05, 6.572200000000417e-05, 6.541699999999817e-05, 6.529200000000152e-05, 6.53479999999998e-05, 6.57359999999968e-05, 6.529200000000152e-05, 6.551300000000315e-05, 6.574999999999637e-05, 6.595799999999791e-05, 6.551399999999569e-05, 6.545800000000435e-05, 6.576400000000288e-05, 6.527800000000195e-05, 6.54029999999986e-05, 6.534700000000032e-05, 6.541699999999817e-05, 6.529200000000152e-05, 6.600000000000356e-05, 6.584700000000082e-05, 6.57779999999955e-05, 6.522300000000314e-05, 6.57500000000033e-05, 6.548600000000349e-05, 6.517999999999802e-05, 6.537499999999946e-05, 6.554200000000177e-05, 6.555500000000186e-05, 6.541699999999817e-05, 6.527800000000195e-05, 6.540199999999913e-05, 6.548599999999655e-05, 6.602799999999576e-05, 6.569499999999756e-05, 6.581900000000168e-05, 6.608400000000098e-05, 6.579200000000202e-05, 6.540200000000607e-05, 6.548599999999655e-05, 6.517999999999802e-05, 6.606900000000193e-05, 6.565299999999885e-05, 6.580499999999517e-05, 6.579200000000202e-05, 6.541699999999817e-05, 6.568000000000546e-05, 6.550000000000306e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.883" endtime="20201030 10:58:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.878" endtime="20201030 10:58:46.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.891" endtime="20201030 10:58:46.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.889" endtime="20201030 10:58:46.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.888" endtime="20201030 10:58:46.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.442" endtime="20201030 10:58:46.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.441" endtime="20201030 10:58:46.912"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.925" endtime="20201030 10:58:46.947"></status>
</kw>
<msg timestamp="20201030 10:58:46.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.921" endtime="20201030 10:58:46.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.951" endtime="20201030 10:58:46.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.957" endtime="20201030 10:58:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.918" endtime="20201030 10:58:46.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.915" endtime="20201030 10:58:46.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.981" endtime="20201030 10:58:47.323"></status>
</kw>
<msg timestamp="20201030 10:58:47.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029258778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0293255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:46.978" endtime="20201030 10:58:47.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029258778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0293255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:47.333" endtime="20201030 10:58:47.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.351" endtime="20201030 10:58:47.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.970" endtime="20201030 10:58:47.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.965" endtime="20201030 10:58:47.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.369" level="INFO">${RESULT} = [{'diff': 6.67220000000017e-05}, {'diff': 6.630599999999862e-05}, {'diff': 6.716699999999992e-05}, {'diff': 6.702800000000023e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.662500000000071e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:47.360" endtime="20201030 10:58:47.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.378" level="INFO">${ACCURACY} = {'diff': [6.67220000000017e-05, 6.630599999999862e-05, 6.716699999999992e-05, 6.702800000000023e-05, 6.663900000000028e-05, 6.662500000000071e-05, 6.713900000000078e-05, 6.647200000000145e-05, 6.65549...</msg>
<status status="PASS" starttime="20201030 10:58:47.371" endtime="20201030 10:58:47.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.390" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.387" endtime="20201030 10:58:47.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.395" level="INFO">VALUE: [6.67220000000017e-05, 6.630599999999862e-05, 6.716699999999992e-05, 6.702800000000023e-05, 6.663900000000028e-05, 6.662500000000071e-05, 6.713900000000078e-05, 6.647200000000145e-05, 6.655499999999939e-05, 6.686100000000139e-05, 6.638900000000003e-05, 6.667999999999952e-05, 6.680499999999964e-05, 6.631999999999819e-05, 6.663900000000028e-05, 6.644399999999884e-05, 6.618099999999849e-05, 6.683399999999826e-05, 6.630499999999914e-05, 6.6583999999998e-05, 6.651400000000016e-05, 6.713799999999784e-05, 6.652700000000025e-05, 6.638900000000003e-05, 6.680499999999617e-05, 6.618000000000596e-05, 6.626400000000338e-05, 6.674999999999737e-05, 6.674999999999737e-05, 6.691699999999967e-05, 6.630600000000209e-05, 6.616699999999892e-05, 6.648699999999702e-05, 6.67500000000043e-05, 6.658400000000148e-05, 6.655499999999592e-05, 6.677800000000345e-05, 6.686100000000139e-05, 6.629100000000304e-05, 6.712500000000121e-05, 6.677800000000345e-05, 6.644399999999884e-05, 6.683300000000225e-05, 6.669499999999856e-05, 6.705600000000284e-05, 6.67630000000044e-05, 6.630600000000209e-05, 6.693099999999924e-05, 6.6195000000005e-05, 6.62630000000039e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.392" endtime="20201030 10:58:47.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.380" endtime="20201030 10:58:47.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.415" endtime="20201030 10:58:47.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.409" endtime="20201030 10:58:47.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.406" endtime="20201030 10:58:47.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.913" endtime="20201030 10:58:47.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.912" endtime="20201030 10:58:47.440"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.463" endtime="20201030 10:58:47.484"></status>
</kw>
<msg timestamp="20201030 10:58:47.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.460" endtime="20201030 10:58:47.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.488" endtime="20201030 10:58:47.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.494" endtime="20201030 10:58:47.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.452" endtime="20201030 10:58:47.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.447" endtime="20201030 10:58:47.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.518" endtime="20201030 10:58:47.858"></status>
</kw>
<msg timestamp="20201030 10:58:47.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041816292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.515" endtime="20201030 10:58:47.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041816292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.867" endtime="20201030 10:58:47.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.886" endtime="20201030 10:58:47.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.507" endtime="20201030 10:58:47.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.502" endtime="20201030 10:58:47.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.903" level="INFO">${RESULT} = [{'diff': 6.759700000000257e-05}, {'diff': 6.783300000000325e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.768099999999999e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.809700000000307e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:47.895" endtime="20201030 10:58:47.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.914" level="INFO">${ACCURACY} = {'diff': [6.759700000000257e-05, 6.783300000000325e-05, 6.715300000000035e-05, 6.768099999999999e-05, 6.799999999999862e-05, 6.809700000000307e-05, 6.716699999999992e-05, 6.756999999999597e-05, 6.7139...</msg>
<status status="PASS" starttime="20201030 10:58:47.906" endtime="20201030 10:58:47.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.925" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.923" endtime="20201030 10:58:47.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.931" level="INFO">VALUE: [6.759700000000257e-05, 6.783300000000325e-05, 6.715300000000035e-05, 6.768099999999999e-05, 6.799999999999862e-05, 6.809700000000307e-05, 6.716699999999992e-05, 6.756999999999597e-05, 6.713900000000078e-05, 6.805500000000436e-05, 6.774999999999837e-05, 6.769400000000009e-05, 6.763900000000128e-05, 6.786100000000239e-05, 6.795799999999991e-05, 6.738900000000103e-05, 6.731899999999624e-05, 6.779200000000402e-05, 6.797199999999948e-05, 6.811100000000264e-05, 6.744499999999931e-05, 6.784799999999536e-05, 6.736100000000189e-05, 6.797199999999948e-05, 6.762500000000171e-05, 6.72500000000048e-05, 6.798599999999905e-05, 6.762500000000171e-05, 6.766599999999401e-05, 6.805600000000384e-05, 6.748599999999855e-05, 6.773600000000574e-05, 6.780600000000359e-05, 6.741700000000017e-05, 6.75280000000042e-05, 6.797300000000589e-05, 6.786100000000239e-05, 6.793000000000077e-05, 6.755499999999692e-05, 6.748600000000549e-05, 6.783300000000325e-05, 6.762500000000171e-05, 6.713900000000078e-05, 6.80830000000035e-05, 6.813899999999484e-05, 6.773600000000574e-05, 6.793000000000077e-05, 6.787500000000196e-05, 6.734799999999486e-05, 6.73480000000018e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.928" endtime="20201030 10:58:47.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.916" endtime="20201030 10:58:47.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.943" endtime="20201030 10:58:47.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.939" endtime="20201030 10:58:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.937" endtime="20201030 10:58:47.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.442" endtime="20201030 10:58:47.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.441" endtime="20201030 10:58:47.969"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.992" endtime="20201030 10:58:48.014"></status>
</kw>
<msg timestamp="20201030 10:58:48.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.988" endtime="20201030 10:58:48.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.017" endtime="20201030 10:58:48.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.023" endtime="20201030 10:58:48.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.981" endtime="20201030 10:58:48.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.975" endtime="20201030 10:58:48.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.047" endtime="20201030 10:58:48.387"></status>
</kw>
<msg timestamp="20201030 10:58:48.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041709347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.044" endtime="20201030 10:58:48.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041709347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.397" endtime="20201030 10:58:48.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.415" endtime="20201030 10:58:48.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.037" endtime="20201030 10:58:48.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.032" endtime="20201030 10:58:48.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.433" level="INFO">${RESULT} = [{'diff': 6.913900000000278e-05}, {'diff': 6.893000000000177e-05}, {'diff': 6.883299999999731e-05}, {'diff': 6.884700000000382e-05}, {'diff': 6.874999999999937e-05}, {'diff': 6.829199999999758e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:48.424" endtime="20201030 10:58:48.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.444" level="INFO">${ACCURACY} = {'diff': [6.913900000000278e-05, 6.893000000000177e-05, 6.883299999999731e-05, 6.884700000000382e-05, 6.874999999999937e-05, 6.829199999999758e-05, 6.819500000000006e-05, 6.894500000000081e-05, 6.8945...</msg>
<status status="PASS" starttime="20201030 10:58:48.435" endtime="20201030 10:58:48.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.455" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.453" endtime="20201030 10:58:48.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.461" level="INFO">VALUE: [6.913900000000278e-05, 6.893000000000177e-05, 6.883299999999731e-05, 6.884700000000382e-05, 6.874999999999937e-05, 6.829199999999758e-05, 6.819500000000006e-05, 6.894500000000081e-05, 6.894500000000081e-05, 6.84160000000017e-05, 6.861100000000314e-05, 6.900000000000656e-05, 6.851399999999869e-05, 6.915299999999541e-05, 6.845800000000041e-05, 6.859699999999663e-05, 6.884699999999688e-05, 6.827799999999801e-05, 6.874999999999937e-05, 6.89030000000021e-05, 6.897200000000048e-05, 6.830500000000461e-05, 6.851399999999869e-05, 6.890199999999569e-05, 6.91109999999967e-05, 6.856999999999697e-05, 6.908299999999756e-05, 6.870800000000066e-05, 6.870799999999372e-05, 6.874999999999937e-05, 6.865300000000185e-05, 6.833299999999681e-05, 6.826399999999844e-05, 6.851399999999869e-05, 6.895900000000038e-05, 6.847299999999945e-05, 6.836100000000289e-05, 6.831899999999724e-05, 6.818000000000102e-05, 6.893000000000177e-05, 6.847199999999998e-05, 6.888899999999559e-05, 6.84030000000016e-05, 6.913899999999584e-05, 6.912499999999627e-05, 6.852799999999826e-05, 6.876399999999894e-05, 6.849999999999912e-05, 6.869399999999415e-05, 6.866600000000195e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.458" endtime="20201030 10:58:48.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.446" endtime="20201030 10:58:48.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.473" endtime="20201030 10:58:48.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.469" endtime="20201030 10:58:48.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.467" endtime="20201030 10:58:48.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.971" endtime="20201030 10:58:48.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.970" endtime="20201030 10:58:48.499"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.522" endtime="20201030 10:58:48.543"></status>
</kw>
<msg timestamp="20201030 10:58:48.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.519" endtime="20201030 10:58:48.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.546" endtime="20201030 10:58:48.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.552" endtime="20201030 10:58:48.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.511" endtime="20201030 10:58:48.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.505" endtime="20201030 10:58:48.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.576" endtime="20201030 10:58:48.919"></status>
</kw>
<msg timestamp="20201030 10:58:48.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:48.573" endtime="20201030 10:58:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:48.929" endtime="20201030 10:58:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.948" endtime="20201030 10:58:48.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.566" endtime="20201030 10:58:48.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.561" endtime="20201030 10:58:48.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.965" level="INFO">${RESULT} = [{'diff': 6.948600000000055e-05}, {'diff': 6.944400000000184e-05}, {'diff': 6.975000000000037e-05}, {'diff': 6.968100000000199e-05}, {'diff': 6.984700000000482e-05}, {'diff': 6.986099999999745e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:48.956" endtime="20201030 10:58:48.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.974" level="INFO">${ACCURACY} = {'diff': [6.948600000000055e-05, 6.944400000000184e-05, 6.975000000000037e-05, 6.968100000000199e-05, 6.984700000000482e-05, 6.986099999999745e-05, 7.013899999999684e-05, 6.976399999999994e-05, 6.9375...</msg>
<status status="PASS" starttime="20201030 10:58:48.967" endtime="20201030 10:58:48.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.986" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.983" endtime="20201030 10:58:48.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.991" level="INFO">VALUE: [6.948600000000055e-05, 6.944400000000184e-05, 6.975000000000037e-05, 6.968100000000199e-05, 6.984700000000482e-05, 6.986099999999745e-05, 7.013899999999684e-05, 6.976399999999994e-05, 6.937500000000346e-05, 7.006899999999899e-05, 6.922200000000073e-05, 6.986099999999745e-05, 6.908299999999756e-05, 6.97360000000008e-05, 6.941699999999523e-05, 6.945799999999447e-05, 6.972200000000123e-05, 6.963899999999634e-05, 6.997199999999454e-05, 6.954199999999883e-05, 7.008299999999856e-05, 6.936100000000389e-05, 6.951399999999969e-05, 6.981999999999822e-05, 6.944400000000184e-05, 6.919399999999465e-05, 6.929200000000552e-05, 7.006900000000593e-05, 6.993100000000224e-05, 7.015299999999641e-05, 6.918100000000149e-05, 6.955499999999892e-05, 7.00979999999976e-05, 6.945900000000088e-05, 7.012499999999727e-05, 6.951300000000021e-05, 6.927699999999953e-05, 6.926399999999944e-05, 6.977799999999951e-05, 6.951399999999969e-05, 6.926399999999944e-05, 6.937500000000346e-05, 6.969399999999515e-05, 6.965300000000285e-05, 6.991700000000267e-05, 6.936099999999695e-05, 6.969500000000156e-05, 7.01109999999977e-05, 6.918100000000149e-05, 6.99160000000032e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.988" endtime="20201030 10:58:48.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.976" endtime="20201030 10:58:48.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.004" endtime="20201030 10:58:49.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.999" endtime="20201030 10:58:49.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.997" endtime="20201030 10:58:49.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.501" endtime="20201030 10:58:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.500" endtime="20201030 10:58:49.029"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.052" endtime="20201030 10:58:49.075"></status>
</kw>
<msg timestamp="20201030 10:58:49.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.049" endtime="20201030 10:58:49.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.079" endtime="20201030 10:58:49.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.085" endtime="20201030 10:58:49.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.041" endtime="20201030 10:58:49.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.036" endtime="20201030 10:58:49.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.109" endtime="20201030 10:58:49.451"></status>
</kw>
<msg timestamp="20201030 10:58:49.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.106" endtime="20201030 10:58:49.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.460" endtime="20201030 10:58:49.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.479" endtime="20201030 10:58:49.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.098" endtime="20201030 10:58:49.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.093" endtime="20201030 10:58:49.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.497" level="INFO">${RESULT} = [{'diff': 7.100000000000162e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.048600000000155e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.018100000000249e-05}, {'diff': 7.061199999999768e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:49.488" endtime="20201030 10:58:49.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.506" level="INFO">${ACCURACY} = {'diff': [7.100000000000162e-05, 7.05689999999995e-05, 7.048600000000155e-05, 7.058399999999854e-05, 7.018100000000249e-05, 7.061199999999768e-05, 7.102700000000128e-05, 7.059800000000505e-05, 7.08199...</msg>
<status status="PASS" starttime="20201030 10:58:49.499" endtime="20201030 10:58:49.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.517" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.515" endtime="20201030 10:58:49.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.523" level="INFO">VALUE: [7.100000000000162e-05, 7.05689999999995e-05, 7.048600000000155e-05, 7.058399999999854e-05, 7.018100000000249e-05, 7.061199999999768e-05, 7.102700000000128e-05, 7.059800000000505e-05, 7.081999999999922e-05, 7.026400000000044e-05, 7.062499999999777e-05, 7.065299999999691e-05, 7.049999999999418e-05, 7.077800000000051e-05, 7.022200000000173e-05, 7.045800000000241e-05, 7.054199999999983e-05, 7.041700000000317e-05, 7.092999999999683e-05, 7.092999999999683e-05, 7.095800000000291e-05, 7.065200000000438e-05, 7.102799999999382e-05, 7.031899999999924e-05, 7.1069e-05, 7.040299999999666e-05, 7.059699999999863e-05, 7.091699999999673e-05, 7.041699999999623e-05, 7.083299999999931e-05, 7.106999999999947e-05, 7.030599999999915e-05, 7.029199999999958e-05, 7.065300000000385e-05, 7.113899999999784e-05, 7.047200000000198e-05, 7.06109999999982e-05, 7.080500000000017e-05, 7.083299999999931e-05, 7.102799999999382e-05, 7.097200000000248e-05, 7.077800000000051e-05, 7.025000000000087e-05, 7.076400000000094e-05, 7.063899999999734e-05, 7.052800000000026e-05, 7.108299999999956e-05, 7.065300000000385e-05, 7.108399999999904e-05, 7.041599999999676e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.519" endtime="20201030 10:58:49.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.508" endtime="20201030 10:58:49.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.537" endtime="20201030 10:58:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.531" endtime="20201030 10:58:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.528" endtime="20201030 10:58:49.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.031" endtime="20201030 10:58:49.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.030" endtime="20201030 10:58:49.562"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.585" endtime="20201030 10:58:49.606"></status>
</kw>
<msg timestamp="20201030 10:58:49.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.582" endtime="20201030 10:58:49.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.610" endtime="20201030 10:58:49.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.616" endtime="20201030 10:58:49.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.575" endtime="20201030 10:58:49.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.569" endtime="20201030 10:58:49.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.640" endtime="20201030 10:58:49.981"></status>
</kw>
<msg timestamp="20201030 10:58:49.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041893778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.637" endtime="20201030 10:58:49.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041893778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.991" endtime="20201030 10:58:50.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.010" endtime="20201030 10:58:50.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.629" endtime="20201030 10:58:50.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.624" endtime="20201030 10:58:50.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.027" level="INFO">${RESULT} = [{'diff': 7.163899999999834e-05}, {'diff': 7.126400000000144e-05}, {'diff': 7.127700000000153e-05}, {'diff': 7.172299999999576e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.17910000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:50.018" endtime="20201030 10:58:50.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.038" level="INFO">${ACCURACY} = {'diff': [7.163899999999834e-05, 7.126400000000144e-05, 7.127700000000153e-05, 7.172299999999576e-05, 7.209700000000013e-05, 7.17910000000016e-05, 7.183399999999979e-05, 7.14309999999968e-05, 7.133299...</msg>
<status status="PASS" starttime="20201030 10:58:50.029" endtime="20201030 10:58:50.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.049" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.047" endtime="20201030 10:58:50.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.054" level="INFO">VALUE: [7.163899999999834e-05, 7.126400000000144e-05, 7.127700000000153e-05, 7.172299999999576e-05, 7.209700000000013e-05, 7.17910000000016e-05, 7.183399999999979e-05, 7.14309999999968e-05, 7.133299999999981e-05, 7.144400000000384e-05, 7.119399999999665e-05, 7.184699999999988e-05, 7.162499999999877e-05, 7.186099999999945e-05, 7.197200000000348e-05, 7.151400000000169e-05, 7.126400000000144e-05, 7.204099999999491e-05, 7.129200000000058e-05, 7.109800000000555e-05, 7.183300000000031e-05, 7.17360000000028e-05, 7.175000000000237e-05, 7.137499999999852e-05, 7.209700000000013e-05, 7.184699999999988e-05, 7.177800000000151e-05, 7.158300000000006e-05, 7.209700000000013e-05, 7.173700000000227e-05, 7.130500000000067e-05, 7.183399999999979e-05, 7.205500000000142e-05, 7.201399999999525e-05, 7.154100000000135e-05, 7.122200000000273e-05, 7.147199999999604e-05, 7.12639999999945e-05, 7.21109999999997e-05, 7.119500000000306e-05, 7.179200000000108e-05, 7.1763999999995e-05, 7.163900000000528e-05, 7.15560000000004e-05, 7.122199999999579e-05, 7.19309999999973e-05, 7.188899999999859e-05, 7.204100000000185e-05, 7.126400000000144e-05, 7.219499999999712e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.051" endtime="20201030 10:58:50.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.040" endtime="20201030 10:58:50.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.067" endtime="20201030 10:58:50.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.063" endtime="20201030 10:58:50.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.060" endtime="20201030 10:58:50.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.564" endtime="20201030 10:58:50.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.563" endtime="20201030 10:58:50.092"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.116" endtime="20201030 10:58:50.138"></status>
</kw>
<msg timestamp="20201030 10:58:50.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.112" endtime="20201030 10:58:50.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.141" endtime="20201030 10:58:50.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.148" endtime="20201030 10:58:50.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.105" endtime="20201030 10:58:50.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.099" endtime="20201030 10:58:50.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.165" endtime="20201030 10:58:50.470"></status>
</kw>
<msg timestamp="20201030 10:58:50.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.164" endtime="20201030 10:58:50.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042195597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.479" endtime="20201030 10:58:50.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.498" endtime="20201030 10:58:50.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.160" endtime="20201030 10:58:50.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.156" endtime="20201030 10:58:50.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.515" level="INFO">${RESULT} = [{'diff': 7.236099999999995e-05}, {'diff': 7.244499999999737e-05}, {'diff': 7.273599999999686e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.219500000000406e-05}, {'diff': 7.283400000000079e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:50.507" endtime="20201030 10:58:50.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.527" level="INFO">${ACCURACY} = {'diff': [7.236099999999995e-05, 7.244499999999737e-05, 7.273599999999686e-05, 7.236099999999995e-05, 7.219500000000406e-05, 7.283400000000079e-05, 7.236099999999995e-05, 7.24439999999979e-05, 7.25689...</msg>
<status status="PASS" starttime="20201030 10:58:50.517" endtime="20201030 10:58:50.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.538" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.535" endtime="20201030 10:58:50.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.543" level="INFO">VALUE: [7.236099999999995e-05, 7.244499999999737e-05, 7.273599999999686e-05, 7.236099999999995e-05, 7.219500000000406e-05, 7.283400000000079e-05, 7.236099999999995e-05, 7.24439999999979e-05, 7.256899999999455e-05, 7.279200000000208e-05, 7.248599999999661e-05, 7.237499999999952e-05, 7.216699999999798e-05, 7.226400000000244e-05, 7.272200000000423e-05, 7.24309999999978e-05, 7.276400000000294e-05, 7.22639999999955e-05, 7.29309999999983e-05, 7.301399999999625e-05, 7.243100000000474e-05, 7.268000000000552e-05, 7.279200000000208e-05, 7.291599999999926e-05, 7.247200000000398e-05, 7.263899999999934e-05, 7.308300000000156e-05, 7.241699999999823e-05, 7.274999999999643e-05, 7.274999999999643e-05, 7.229200000000158e-05, 7.230599999999421e-05, 7.274999999999643e-05, 7.230600000000115e-05, 7.259700000000063e-05, 7.243000000000527e-05, 7.216599999999851e-05, 7.241699999999823e-05, 7.29309999999983e-05, 7.258300000000106e-05, 7.309700000000113e-05, 7.30969999999942e-05, 7.279200000000208e-05, 7.2763999999996e-05, 7.284800000000036e-05, 7.313800000000037e-05, 7.295900000000438e-05, 7.230499999999473e-05, 7.280500000000217e-05, 7.295799999999797e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.540" endtime="20201030 10:58:50.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.528" endtime="20201030 10:58:50.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.556" endtime="20201030 10:58:50.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.552" endtime="20201030 10:58:50.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.549" endtime="20201030 10:58:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.094" endtime="20201030 10:58:50.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.093" endtime="20201030 10:58:50.581"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.604" endtime="20201030 10:58:50.626"></status>
</kw>
<msg timestamp="20201030 10:58:50.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.601" endtime="20201030 10:58:50.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.629" endtime="20201030 10:58:50.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.636" endtime="20201030 10:58:50.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.594" endtime="20201030 10:58:50.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.588" endtime="20201030 10:58:50.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.660" endtime="20201030 10:58:51.004"></status>
</kw>
<msg timestamp="20201030 10:58:51.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0415795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041653292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:50.656" endtime="20201030 10:58:51.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0415795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041653292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:51.014" endtime="20201030 10:58:51.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.033" endtime="20201030 10:58:51.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.649" endtime="20201030 10:58:51.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.644" endtime="20201030 10:58:51.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.050" level="INFO">${RESULT} = [{'diff': 7.379200000000308e-05}, {'diff': 7.331999999999478e-05}, {'diff': 7.391699999999973e-05}, {'diff': 7.390200000000069e-05}, {'diff': 7.372200000000523e-05}, {'diff': 7.344499999999837e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:51.041" endtime="20201030 10:58:51.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.059" level="INFO">${ACCURACY} = {'diff': [7.379200000000308e-05, 7.331999999999478e-05, 7.391699999999973e-05, 7.390200000000069e-05, 7.372200000000523e-05, 7.344499999999837e-05, 7.388899999999365e-05, 7.402699999999734e-05, 7.3514...</msg>
<status status="PASS" starttime="20201030 10:58:51.052" endtime="20201030 10:58:51.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.070" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.068" endtime="20201030 10:58:51.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.076" level="INFO">VALUE: [7.379200000000308e-05, 7.331999999999478e-05, 7.391699999999973e-05, 7.390200000000069e-05, 7.372200000000523e-05, 7.344499999999837e-05, 7.388899999999365e-05, 7.402699999999734e-05, 7.351400000000369e-05, 7.338900000000009e-05, 7.330500000000267e-05, 7.36389999999934e-05, 7.327799999999607e-05, 7.354200000000283e-05, 7.390300000000016e-05, 7.330600000000215e-05, 7.387500000000102e-05, 7.326400000000344e-05, 7.341699999999923e-05, 7.408299999999562e-05, 7.402799999999682e-05, 7.399999999999768e-05, 7.34439999999989e-05, 7.326400000000344e-05, 7.373599999999786e-05, 7.380500000000317e-05, 7.377800000000351e-05, 7.366699999999948e-05, 7.408299999999562e-05, 7.320799999999822e-05, 7.351400000000369e-05, 7.387500000000102e-05, 7.391699999999973e-05, 7.336100000000095e-05, 7.32910000000031e-05, 7.345799999999847e-05, 7.330600000000215e-05, 7.336100000000095e-05, 7.362499999999383e-05, 7.416699999999998e-05, 7.349999999999718e-05, 7.347199999999804e-05, 7.347199999999804e-05, 7.373599999999786e-05, 7.319499999999812e-05, 7.416600000000051e-05, 7.330600000000215e-05, 7.386100000000145e-05, 7.345800000000541e-05, 7.408300000000256e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.073" endtime="20201030 10:58:51.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.061" endtime="20201030 10:58:51.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.089" endtime="20201030 10:58:51.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.084" endtime="20201030 10:58:51.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.082" endtime="20201030 10:58:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.583" endtime="20201030 10:58:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.582" endtime="20201030 10:58:51.114"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.137" endtime="20201030 10:58:51.164"></status>
</kw>
<msg timestamp="20201030 10:58:51.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.134" endtime="20201030 10:58:51.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.168" endtime="20201030 10:58:51.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.175" endtime="20201030 10:58:51.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.126" endtime="20201030 10:58:51.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.120" endtime="20201030 10:58:51.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.198" endtime="20201030 10:58:51.543"></status>
</kw>
<msg timestamp="20201030 10:58:51.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047509292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04758425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:51.195" endtime="20201030 10:58:51.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047509292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04758425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:51.552" endtime="20201030 10:58:51.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.571" endtime="20201030 10:58:51.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.188" endtime="20201030 10:58:51.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.183" endtime="20201030 10:58:51.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.589" level="INFO">${RESULT} = [{'diff': 7.495799999999997e-05}, {'diff': 7.476400000000494e-05}, {'diff': 7.433400000000229e-05}, {'diff': 7.459700000000263e-05}, {'diff': 7.507000000000347e-05}, {'diff': 7.444499999999937e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:51.580" endtime="20201030 10:58:51.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.598" level="INFO">${ACCURACY} = {'diff': [7.495799999999997e-05, 7.476400000000494e-05, 7.433400000000229e-05, 7.459700000000263e-05, 7.507000000000347e-05, 7.444499999999937e-05, 7.495899999999944e-05, 7.495899999999944e-05, 7.5069...</msg>
<status status="PASS" starttime="20201030 10:58:51.591" endtime="20201030 10:58:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.609" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.607" endtime="20201030 10:58:51.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.615" level="INFO">VALUE: [7.495799999999997e-05, 7.476400000000494e-05, 7.433400000000229e-05, 7.459700000000263e-05, 7.507000000000347e-05, 7.444499999999937e-05, 7.495899999999944e-05, 7.495899999999944e-05, 7.5069000000004e-05, 7.441600000000076e-05, 7.46110000000022e-05, 7.462500000000177e-05, 7.430599999999621e-05, 7.491700000000073e-05, 7.429200000000358e-05, 7.427800000000401e-05, 7.498599999999911e-05, 7.505599999999696e-05, 7.477799999999757e-05, 7.452800000000426e-05, 7.46110000000022e-05, 7.45969999999957e-05, 7.476299999999853e-05, 7.447199999999904e-05, 7.424999999999793e-05, 7.515300000000141e-05, 7.480499999999723e-05, 7.512499999999533e-05, 7.473599999999886e-05, 7.49310000000003e-05, 7.450000000000512e-05, 7.470899999999919e-05, 7.488900000000159e-05, 7.416699999999998e-05, 7.437500000000152e-05, 7.463900000000134e-05, 7.502699999999835e-05, 7.452699999999784e-05, 7.5069000000004e-05, 7.462500000000177e-05, 7.474999999999843e-05, 7.49440000000004e-05, 7.468100000000005e-05, 7.463900000000134e-05, 7.473599999999886e-05, 7.481999999999628e-05, 7.504099999999791e-05, 7.425000000000487e-05, 7.46110000000022e-05, 7.490299999999422e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.612" endtime="20201030 10:58:51.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.600" endtime="20201030 10:58:51.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.634" endtime="20201030 10:58:51.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.626" endtime="20201030 10:58:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.622" endtime="20201030 10:58:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.116" endtime="20201030 10:58:51.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.115" endtime="20201030 10:58:51.659"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.682" endtime="20201030 10:58:51.704"></status>
</kw>
<msg timestamp="20201030 10:58:51.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.679" endtime="20201030 10:58:51.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.708" endtime="20201030 10:58:51.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.714" endtime="20201030 10:58:51.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.672" endtime="20201030 10:58:51.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.666" endtime="20201030 10:58:51.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.740" endtime="20201030 10:58:52.081"></status>
</kw>
<msg timestamp="20201030 10:58:52.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041954625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.736" endtime="20201030 10:58:52.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041954625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.091" endtime="20201030 10:58:52.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.110" endtime="20201030 10:58:52.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.728" endtime="20201030 10:58:52.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.723" endtime="20201030 10:58:52.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.128" level="INFO">${RESULT} = [{'diff': 7.60560000000049e-05}, {'diff': 7.530599999999721e-05}, {'diff': 7.56110000000032e-05}, {'diff': 7.586199999999599e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.53890000000021e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 10:58:52.118" endtime="20201030 10:58:52.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.139" level="INFO">${ACCURACY} = {'diff': [7.60560000000049e-05, 7.530599999999721e-05, 7.56110000000032e-05, 7.586199999999599e-05, 7.59440000000014e-05, 7.53890000000021e-05, 7.523599999999936e-05, 7.529099999999816e-05, 7.60829999...</msg>
<status status="PASS" starttime="20201030 10:58:52.130" endtime="20201030 10:58:52.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.150" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.147" endtime="20201030 10:58:52.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.155" level="INFO">VALUE: [7.60560000000049e-05, 7.530599999999721e-05, 7.56110000000032e-05, 7.586199999999599e-05, 7.59440000000014e-05, 7.53890000000021e-05, 7.523599999999936e-05, 7.529099999999816e-05, 7.608299999999762e-05, 7.53890000000021e-05, 7.543000000000133e-05, 7.516699999999404e-05, 7.590299999999522e-05, 7.583299999999737e-05, 7.545899999999994e-05, 7.522199999999979e-05, 7.529199999999764e-05, 7.590299999999522e-05, 7.597300000000001e-05, 7.576299999999953e-05, 7.562499999999583e-05, 7.569400000000115e-05, 7.615299999999547e-05, 7.533299999999687e-05, 7.598600000000011e-05, 7.61389999999959e-05, 7.54310000000008e-05, 7.605599999999796e-05, 7.579199999999814e-05, 7.59310000000013e-05, 7.601299999999978e-05, 7.570800000000072e-05, 7.55969999999967e-05, 7.579099999999866e-05, 7.518000000000108e-05, 7.59440000000014e-05, 7.537500000000252e-05, 7.529199999999764e-05, 7.598600000000011e-05, 7.566700000000148e-05, 7.554199999999789e-05, 7.587500000000302e-05, 7.524999999999893e-05, 7.608300000000456e-05, 7.547200000000004e-05, 7.591600000000226e-05, 7.519400000000065e-05, 7.524999999999893e-05, 7.563900000000234e-05, 7.530600000000415e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.152" endtime="20201030 10:58:52.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.140" endtime="20201030 10:58:52.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.168" endtime="20201030 10:58:52.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.163" endtime="20201030 10:58:52.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.161" endtime="20201030 10:58:52.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.661" endtime="20201030 10:58:52.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.660" endtime="20201030 10:58:52.193"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.216" endtime="20201030 10:58:52.238"></status>
</kw>
<msg timestamp="20201030 10:58:52.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.213" endtime="20201030 10:58:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.241" endtime="20201030 10:58:52.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.248" endtime="20201030 10:58:52.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.205" endtime="20201030 10:58:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.200" endtime="20201030 10:58:52.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.272" endtime="20201030 10:58:52.613"></status>
</kw>
<msg timestamp="20201030 10:58:52.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041904111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.268" endtime="20201030 10:58:52.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041904111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.623" endtime="20201030 10:58:52.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.642" endtime="20201030 10:58:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.261" endtime="20201030 10:58:52.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.256" endtime="20201030 10:58:52.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.659" level="INFO">${RESULT} = [{'diff': 7.690299999999622e-05}, {'diff': 7.634700000000438e-05}, {'diff': 7.64310000000018e-05}, {'diff': 7.662500000000377e-05}, {'diff': 7.670899999999425e-05}, {'diff': 7.627799999999907e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:52.650" endtime="20201030 10:58:52.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.671" level="INFO">${ACCURACY} = {'diff': [7.690299999999622e-05, 7.634700000000438e-05, 7.64310000000018e-05, 7.662500000000377e-05, 7.670899999999425e-05, 7.627799999999907e-05, 7.709799999999767e-05, 7.624999999999993e-05, 7.70689...</msg>
<status status="PASS" starttime="20201030 10:58:52.661" endtime="20201030 10:58:52.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.682" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.679" endtime="20201030 10:58:52.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.687" level="INFO">VALUE: [7.690299999999622e-05, 7.634700000000438e-05, 7.64310000000018e-05, 7.662500000000377e-05, 7.670899999999425e-05, 7.627799999999907e-05, 7.709799999999767e-05, 7.624999999999993e-05, 7.706899999999905e-05, 7.650000000000018e-05, 7.648600000000061e-05, 7.641700000000223e-05, 7.634699999999744e-05, 7.65969999999977e-05, 7.620900000000069e-05, 7.662500000000377e-05, 7.663799999999693e-05, 7.623600000000036e-05, 7.650000000000018e-05, 7.702700000000035e-05, 7.662500000000377e-05, 7.624999999999993e-05, 7.619399999999471e-05, 7.675000000000043e-05, 7.69310000000023e-05, 7.704199999999939e-05, 7.711099999999776e-05, 7.663900000000334e-05, 7.656999999999803e-05, 7.688899999999665e-05, 7.694500000000187e-05, 7.712500000000427e-05, 7.654199999999889e-05, 7.644500000000137e-05, 7.695800000000197e-05, 7.640199999999625e-05, 7.641700000000223e-05, 7.616600000000251e-05, 7.702799999999982e-05, 7.665300000000291e-05, 7.629199999999864e-05, 7.673599999999392e-05, 7.620900000000069e-05, 7.695900000000144e-05, 7.622199999999385e-05, 7.706999999999853e-05, 7.622200000000079e-05, 7.665299999999597e-05, 7.683299999999837e-05, 7.620800000000122e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.684" endtime="20201030 10:58:52.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.672" endtime="20201030 10:58:52.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.706" endtime="20201030 10:58:52.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.701" endtime="20201030 10:58:52.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.699" endtime="20201030 10:58:52.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.195" endtime="20201030 10:58:52.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.194" endtime="20201030 10:58:52.731"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.754" endtime="20201030 10:58:52.776"></status>
</kw>
<msg timestamp="20201030 10:58:52.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.751" endtime="20201030 10:58:52.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.779" endtime="20201030 10:58:52.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.785" endtime="20201030 10:58:52.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.743" endtime="20201030 10:58:52.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.737" endtime="20201030 10:58:52.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.809" endtime="20201030 10:58:53.153"></status>
</kw>
<msg timestamp="20201030 10:58:53.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041663583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.806" endtime="20201030 10:58:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041663583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.163" endtime="20201030 10:58:53.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.182" endtime="20201030 10:58:53.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.798" endtime="20201030 10:58:53.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.794" endtime="20201030 10:58:53.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.199" level="INFO">${RESULT} = [{'diff': 7.729199999999964e-05}, {'diff': 7.806999999999953e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.772200000000229e-05}, {'diff': 7.747300000000151e-05}, {'diff': 7.775000000000143e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:53.190" endtime="20201030 10:58:53.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.209" level="INFO">${ACCURACY} = {'diff': [7.729199999999964e-05, 7.806999999999953e-05, 7.725000000000093e-05, 7.772200000000229e-05, 7.747300000000151e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.811099999999876e-05, 7.73750...</msg>
<status status="PASS" starttime="20201030 10:58:53.201" endtime="20201030 10:58:53.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.220" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.217" endtime="20201030 10:58:53.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.225" level="INFO">VALUE: [7.729199999999964e-05, 7.806999999999953e-05, 7.725000000000093e-05, 7.772200000000229e-05, 7.747300000000151e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.811099999999876e-05, 7.737500000000452e-05, 7.729199999999964e-05, 7.758299999999912e-05, 7.802800000000082e-05, 7.716699999999604e-05, 7.761099999999826e-05, 7.76389999999974e-05, 7.806900000000006e-05, 7.748599999999467e-05, 7.729100000000017e-05, 7.722299999999432e-05, 7.801400000000125e-05, 7.805500000000049e-05, 7.747200000000204e-05, 7.78890000000046e-05, 7.719399999999571e-05, 7.752800000000032e-05, 7.773600000000186e-05, 7.766599999999707e-05, 7.725000000000093e-05, 7.797300000000201e-05, 7.780599999999971e-05, 7.795900000000244e-05, 7.809700000000613e-05, 7.720800000000222e-05, 7.769399999999621e-05, 7.784699999999894e-05, 7.7764000000001e-05, 7.726399999999356e-05, 7.783299999999937e-05, 7.758299999999912e-05, 7.74169999999963e-05, 7.748600000000161e-05, 7.74310000000028e-05, 7.791600000000426e-05, 7.773600000000186e-05, 7.791599999999732e-05, 7.797200000000254e-05, 7.76389999999974e-05, 7.811099999999876e-05, 7.777800000000057e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.222" endtime="20201030 10:58:53.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.210" endtime="20201030 10:58:53.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.238" endtime="20201030 10:58:53.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.233" endtime="20201030 10:58:53.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.231" endtime="20201030 10:58:53.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.733" endtime="20201030 10:58:53.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.732" endtime="20201030 10:58:53.263"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.286" endtime="20201030 10:58:53.311"></status>
</kw>
<msg timestamp="20201030 10:58:53.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.283" endtime="20201030 10:58:53.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.315" endtime="20201030 10:58:53.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.321" endtime="20201030 10:58:53.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.276" endtime="20201030 10:58:53.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.270" endtime="20201030 10:58:53.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.346" endtime="20201030 10:58:53.705"></status>
</kw>
<msg timestamp="20201030 10:58:53.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044477028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044555375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.343" endtime="20201030 10:58:53.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044477028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044555375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.714" endtime="20201030 10:58:53.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.734" endtime="20201030 10:58:53.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.334" endtime="20201030 10:58:53.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.329" endtime="20201030 10:58:53.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.751" level="INFO">${RESULT} = [{'diff': 7.834699999999944e-05}, {'diff': 7.851400000000175e-05}, {'diff': 7.880600000000071e-05}, {'diff': 7.816699999999704e-05}, {'diff': 7.847200000000304e-05}, {'diff': 7.859799999999917e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:53.742" endtime="20201030 10:58:53.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.760" level="INFO">${ACCURACY} = {'diff': [7.834699999999944e-05, 7.851400000000175e-05, 7.880600000000071e-05, 7.816699999999704e-05, 7.847200000000304e-05, 7.859799999999917e-05, 7.837499999999858e-05, 7.884699999999994e-05, 7.8319...</msg>
<status status="PASS" starttime="20201030 10:58:53.753" endtime="20201030 10:58:53.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.772" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.770" endtime="20201030 10:58:53.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.778" level="INFO">VALUE: [7.834699999999944e-05, 7.851400000000175e-05, 7.880600000000071e-05, 7.816699999999704e-05, 7.847200000000304e-05, 7.859799999999917e-05, 7.837499999999858e-05, 7.884699999999994e-05, 7.83190000000003e-05, 7.851400000000175e-05, 7.824999999999499e-05, 7.858300000000012e-05, 7.826399999999456e-05, 7.851399999999481e-05, 7.840300000000466e-05, 7.829200000000064e-05, 7.888899999999865e-05, 7.870799999999678e-05, 7.858300000000012e-05, 7.833299999999987e-05, 7.872199999999635e-05, 7.84440000000039e-05, 7.90970000000002e-05, 7.872199999999635e-05, 7.906900000000106e-05, 7.827800000000107e-05, 7.822200000000279e-05, 7.883399999999985e-05, 7.844500000000337e-05, 7.883399999999985e-05, 7.88890000000056e-05, 7.90970000000002e-05, 7.820800000000322e-05, 7.913900000000584e-05, 7.877800000000157e-05, 7.890299999999822e-05, 7.906900000000106e-05, 7.870900000000319e-05, 7.831999999999978e-05, 7.916699999999804e-05, 7.857000000000003e-05, 7.884799999999942e-05, 7.893099999999736e-05, 7.875000000000243e-05, 7.893000000000483e-05, 7.830500000000074e-05, 7.848599999999567e-05, 7.90970000000002e-05, 7.822199999999585e-05, 7.845800000000347e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.775" endtime="20201030 10:58:53.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.762" endtime="20201030 10:58:53.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.793" endtime="20201030 10:58:53.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.787" endtime="20201030 10:58:53.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.784" endtime="20201030 10:58:53.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.265" endtime="20201030 10:58:53.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.264" endtime="20201030 10:58:53.818"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.841" endtime="20201030 10:58:53.863"></status>
</kw>
<msg timestamp="20201030 10:58:53.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.838" endtime="20201030 10:58:53.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.866" endtime="20201030 10:58:53.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.873" endtime="20201030 10:58:53.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.831" endtime="20201030 10:58:53.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.825" endtime="20201030 10:58:53.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.897" endtime="20201030 10:58:54.239"></status>
</kw>
<msg timestamp="20201030 10:58:54.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041607653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.893" endtime="20201030 10:58:54.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041607653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.249" endtime="20201030 10:58:54.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.268" endtime="20201030 10:58:54.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.886" endtime="20201030 10:58:54.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.881" endtime="20201030 10:58:54.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.285" level="INFO">${RESULT} = [{'diff': 7.979200000000214e-05}, {'diff': 7.984799999999348e-05}, {'diff': 7.969400000000515e-05}, {'diff': 8.012500000000033e-05}, {'diff': 7.984700000000094e-05}, {'diff': 7.934700000000044e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:54.276" endtime="20201030 10:58:54.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.296" level="INFO">${ACCURACY} = {'diff': [7.979200000000214e-05, 7.984799999999348e-05, 7.969400000000515e-05, 8.012500000000033e-05, 7.984700000000094e-05, 7.934700000000044e-05, 8.001400000000325e-05, 7.974999999999649e-05, 8.0042...</msg>
<status status="PASS" starttime="20201030 10:58:54.287" endtime="20201030 10:58:54.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.307" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.305" endtime="20201030 10:58:54.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.312" level="INFO">VALUE: [7.979200000000214e-05, 7.984799999999348e-05, 7.969400000000515e-05, 8.012500000000033e-05, 7.984700000000094e-05, 7.934700000000044e-05, 8.001400000000325e-05, 7.974999999999649e-05, 8.004200000000239e-05, 7.969400000000515e-05, 7.927799999999513e-05, 7.940299999999872e-05, 8.00840000000011e-05, 7.936100000000001e-05, 7.968099999999811e-05, 7.916700000000498e-05, 8.01249999999934e-05, 7.933400000000035e-05, 7.995799999999803e-05, 7.925000000000293e-05, 7.99169999999988e-05, 8.008300000000163e-05, 7.918099999999761e-05, 7.975000000000343e-05, 7.962499999999983e-05, 7.947299999999657e-05, 7.999999999999674e-05, 7.94310000000048e-05, 7.968000000000558e-05, 7.991599999999932e-05, 7.951400000000275e-05, 7.96389999999994e-05, 8.016699999999904e-05, 7.986100000000051e-05, 7.932000000000078e-05, 7.920799999999728e-05, 7.94169999999983e-05, 7.942999999999839e-05, 7.92369999999959e-05, 7.940299999999872e-05, 7.973599999999692e-05, 7.948599999999667e-05, 7.920799999999728e-05, 7.995799999999803e-05, 7.966699999999854e-05, 7.980599999999477e-05, 7.954200000000189e-05, 7.990299999999922e-05, 7.984700000000094e-05, 7.954099999999548e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.309" endtime="20201030 10:58:54.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.298" endtime="20201030 10:58:54.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.325" endtime="20201030 10:58:54.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.321" endtime="20201030 10:58:54.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.318" endtime="20201030 10:58:54.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.820" endtime="20201030 10:58:54.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.819" endtime="20201030 10:58:54.351"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.374" endtime="20201030 10:58:54.395"></status>
</kw>
<msg timestamp="20201030 10:58:54.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.370" endtime="20201030 10:58:54.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.399" endtime="20201030 10:58:54.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.405" endtime="20201030 10:58:54.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.363" endtime="20201030 10:58:54.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.357" endtime="20201030 10:58:54.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.430" endtime="20201030 10:58:54.772"></status>
</kw>
<msg timestamp="20201030 10:58:54.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041657056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04173775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:54.426" endtime="20201030 10:58:54.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041657056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04173775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:54.782" endtime="20201030 10:58:54.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.801" endtime="20201030 10:58:54.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.418" endtime="20201030 10:58:54.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.413" endtime="20201030 10:58:54.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.818" level="INFO">${RESULT} = [{'diff': 8.069399999999921e-05}, {'diff': 8.11390000000009e-05}, {'diff': 8.104200000000339e-05}, {'diff': 8.040299999999972e-05}, {'diff': 8.04169999999993e-05}, {'diff': 8.070899999999825e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:54.809" endtime="20201030 10:58:54.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.829" level="INFO">${ACCURACY} = {'diff': [8.069399999999921e-05, 8.11390000000009e-05, 8.104200000000339e-05, 8.040299999999972e-05, 8.04169999999993e-05, 8.070899999999825e-05, 8.043099999999886e-05, 8.108299999999569e-05, 8.031899...</msg>
<status status="PASS" starttime="20201030 10:58:54.820" endtime="20201030 10:58:54.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.841" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.838" endtime="20201030 10:58:54.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.846" level="INFO">VALUE: [8.069399999999921e-05, 8.11390000000009e-05, 8.104200000000339e-05, 8.040299999999972e-05, 8.04169999999993e-05, 8.070899999999825e-05, 8.043099999999886e-05, 8.108299999999569e-05, 8.031899999999537e-05, 8.09719999999986e-05, 8.07919999999962e-05, 8.040299999999972e-05, 8.074999999999749e-05, 8.037500000000058e-05, 8.093099999999936e-05, 8.088900000000065e-05, 8.062500000000083e-05, 8.102800000000382e-05, 8.041599999999982e-05, 8.062500000000083e-05, 8.109699999999526e-05, 8.065299999999997e-05, 8.092999999999989e-05, 8.076399999999706e-05, 8.074999999999749e-05, 8.024999999999699e-05, 8.018099999999861e-05, 8.093099999999936e-05, 8.026399999999656e-05, 8.115300000000047e-05, 8.080599999999577e-05, 8.040200000000025e-05, 8.040200000000025e-05, 8.10970000000022e-05, 8.054100000000342e-05, 8.076399999999706e-05, 8.108300000000263e-05, 8.077799999999663e-05, 8.025000000000393e-05, 8.090300000000022e-05, 8.022199999999785e-05, 8.030600000000221e-05, 8.037500000000058e-05, 8.069399999999921e-05, 8.054099999999648e-05, 8.075000000000443e-05, 8.094399999999946e-05, 8.075000000000443e-05, 8.040299999999972e-05, 8.062500000000083e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.843" endtime="20201030 10:58:54.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.831" endtime="20201030 10:58:54.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.859" endtime="20201030 10:58:54.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.854" endtime="20201030 10:58:54.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.852" endtime="20201030 10:58:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.353" endtime="20201030 10:58:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.351" endtime="20201030 10:58:54.884"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.907" endtime="20201030 10:58:54.930"></status>
</kw>
<msg timestamp="20201030 10:58:54.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.904" endtime="20201030 10:58:54.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.933" endtime="20201030 10:58:54.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.939" endtime="20201030 10:58:54.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.896" endtime="20201030 10:58:54.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.890" endtime="20201030 10:58:54.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.963" endtime="20201030 10:58:55.307"></status>
</kw>
<msg timestamp="20201030 10:58:55.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042156417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042237667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.960" endtime="20201030 10:58:55.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042156417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042237667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.317" endtime="20201030 10:58:55.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.336" endtime="20201030 10:58:55.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.953" endtime="20201030 10:58:55.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.948" endtime="20201030 10:58:55.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.353" level="INFO">${RESULT} = [{'diff': 8.124999999999799e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.127800000000407e-05}, {'diff': 8.13469999999955e-05}, {'diff': 8.136100000000202e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:55.344" endtime="20201030 10:58:55.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.363" level="INFO">${ACCURACY} = {'diff': [8.124999999999799e-05, 8.138900000000115e-05, 8.123599999999842e-05, 8.127800000000407e-05, 8.13469999999955e-05, 8.136100000000202e-05, 8.123600000000536e-05, 8.169400000000021e-05, 8.13190...</msg>
<status status="PASS" starttime="20201030 10:58:55.355" endtime="20201030 10:58:55.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.374" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:55.371" endtime="20201030 10:58:55.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.379" level="INFO">VALUE: [8.124999999999799e-05, 8.138900000000115e-05, 8.123599999999842e-05, 8.127800000000407e-05, 8.13469999999955e-05, 8.136100000000202e-05, 8.123600000000536e-05, 8.169400000000021e-05, 8.13190000000033e-05, 8.14719999999991e-05, 8.154199999999695e-05, 8.20840000000031e-05, 8.129099999999723e-05, 8.16669999999936e-05, 8.120799999999928e-05, 8.154099999999748e-05, 8.211099999999583e-05, 8.166600000000107e-05, 8.156900000000356e-05, 8.133300000000288e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.157000000000303e-05, 8.205599999999702e-05, 8.118099999999961e-05, 8.19719999999996e-05, 8.122299999999832e-05, 8.169400000000021e-05, 8.190199999999481e-05, 8.16520000000015e-05, 8.174999999999849e-05, 8.118000000000014e-05, 8.145799999999953e-05, 8.123599999999842e-05, 8.144499999999943e-05, 8.194400000000046e-05, 8.20840000000031e-05, 8.188800000000218e-05, 8.177800000000457e-05, 8.175000000000543e-05, 8.183400000000285e-05, 8.208300000000363e-05, 8.165300000000097e-05, 8.158299999999619e-05, 8.150000000000518e-05, 8.143099999999986e-05, 8.176399999999806e-05, 8.149999999999824e-05, 8.168100000000011e-05, 8.201399999999831e-05]</msg>
<status status="PASS" starttime="20201030 10:58:55.376" endtime="20201030 10:58:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.364" endtime="20201030 10:58:55.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:55.392" endtime="20201030 10:58:55.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.388" endtime="20201030 10:58:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.385" endtime="20201030 10:58:55.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.886" endtime="20201030 10:58:55.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.885" endtime="20201030 10:58:55.417"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.440" endtime="20201030 10:58:55.464"></status>
</kw>
<msg timestamp="20201030 10:58:55.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.437" endtime="20201030 10:58:55.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.468" endtime="20201030 10:58:55.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.475" endtime="20201030 10:58:55.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.429" endtime="20201030 10:58:55.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.423" endtime="20201030 10:58:55.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.500" endtime="20201030 10:58:55.843"></status>
</kw>
<msg timestamp="20201030 10:58:55.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043447389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043529833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.497" endtime="20201030 10:58:55.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043447389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043529833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.853" endtime="20201030 10:58:55.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.872" endtime="20201030 10:58:55.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.489" endtime="20201030 10:58:55.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.484" endtime="20201030 10:58:55.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.889" level="INFO">${RESULT} = [{'diff': 8.244399999999402e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.241599999999488e-05}, {'diff': 8.236100000000302e-05}, {'diff': 8.311100000000377e-05}, {'diff': 8.256899999999762e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:55.880" endtime="20201030 10:58:55.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.899" level="INFO">${ACCURACY} = {'diff': [8.244399999999402e-05, 8.249999999999924e-05, 8.241599999999488e-05, 8.236100000000302e-05, 8.311100000000377e-05, 8.256899999999762e-05, 8.234799999999598e-05, 8.281999999999734e-05, 8.2888...</msg>
<status status="PASS" starttime="20201030 10:58:55.891" endtime="20201030 10:58:55.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.910" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:55.907" endtime="20201030 10:58:55.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.915" level="INFO">VALUE: [8.244399999999402e-05, 8.249999999999924e-05, 8.241599999999488e-05, 8.236100000000302e-05, 8.311100000000377e-05, 8.256899999999762e-05, 8.234799999999598e-05, 8.281999999999734e-05, 8.288899999999572e-05, 8.248599999999967e-05, 8.308299999999769e-05, 8.28049999999983e-05, 8.272200000000035e-05, 8.279099999999873e-05, 8.309699999999726e-05, 8.293100000000136e-05, 8.306899999999812e-05, 8.308399999999716e-05, 8.29170000000018e-05, 8.226399999999856e-05, 8.308299999999769e-05, 8.306899999999812e-05, 8.302699999999941e-05, 8.294399999999452e-05, 8.258299999999719e-05, 8.255499999999805e-05, 8.294400000000146e-05, 8.237499999999565e-05, 8.311099999999683e-05, 8.23469999999965e-05, 8.302799999999888e-05, 8.226399999999856e-05, 8.276399999999906e-05, 8.21669999999941e-05, 8.262500000000284e-05, 8.218000000000114e-05, 8.287499999999615e-05, 8.273599999999992e-05, 8.242999999999445e-05, 8.287499999999615e-05, 8.270900000000025e-05, 8.261100000000327e-05, 8.223599999999942e-05, 8.313899999999597e-05, 8.232000000000378e-05, 8.236099999999608e-05, 8.274999999999949e-05, 8.276299999999959e-05, 8.274999999999949e-05, 8.306900000000506e-05]</msg>
<status status="PASS" starttime="20201030 10:58:55.912" endtime="20201030 10:58:55.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.901" endtime="20201030 10:58:55.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:55.929" endtime="20201030 10:58:55.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.924" endtime="20201030 10:58:55.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.921" endtime="20201030 10:58:55.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.419" endtime="20201030 10:58:55.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.418" endtime="20201030 10:58:55.955"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.978" endtime="20201030 10:58:56.000"></status>
</kw>
<msg timestamp="20201030 10:58:56.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.974" endtime="20201030 10:58:56.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.003" endtime="20201030 10:58:56.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.010" endtime="20201030 10:58:56.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.967" endtime="20201030 10:58:56.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.961" endtime="20201030 10:58:56.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.033" endtime="20201030 10:58:56.375"></status>
</kw>
<msg timestamp="20201030 10:58:56.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.030" endtime="20201030 10:58:56.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.384" endtime="20201030 10:58:56.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.403" endtime="20201030 10:58:56.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.023" endtime="20201030 10:58:56.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.018" endtime="20201030 10:58:56.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.421" level="INFO">${RESULT} = [{'diff': 8.377700000000016e-05}, {'diff': 8.404199999999945e-05}, {'diff': 8.320800000000128e-05}, {'diff': 8.362500000000384e-05}, {'diff': 8.35970000000047e-05}, {'diff': 8.356899999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:56.412" endtime="20201030 10:58:56.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.436" level="INFO">${ACCURACY} = {'diff': [8.377700000000016e-05, 8.404199999999945e-05, 8.320800000000128e-05, 8.362500000000384e-05, 8.35970000000047e-05, 8.356899999999862e-05, 8.373599999999398e-05, 8.354199999999895e-05, 8.38199...</msg>
<status status="PASS" starttime="20201030 10:58:56.423" endtime="20201030 10:58:56.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.447" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.444" endtime="20201030 10:58:56.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.452" level="INFO">VALUE: [8.377700000000016e-05, 8.404199999999945e-05, 8.320800000000128e-05, 8.362500000000384e-05, 8.35970000000047e-05, 8.356899999999862e-05, 8.373599999999398e-05, 8.354199999999895e-05, 8.381999999999834e-05, 8.370800000000178e-05, 8.320800000000128e-05, 8.405499999999955e-05, 8.345800000000153e-05, 8.35970000000047e-05, 8.330600000000521e-05, 8.374999999999355e-05, 8.34720000000011e-05, 8.411099999999783e-05, 8.365300000000297e-05, 8.341599999999588e-05, 8.405599999999902e-05, 8.344500000000143e-05, 8.363899999999647e-05, 8.386099999999758e-05, 8.341600000000282e-05, 8.32919999999987e-05, 8.413899999999697e-05, 8.363899999999647e-05, 8.326399999999956e-05, 8.355599999999852e-05, 8.363899999999647e-05, 8.373600000000092e-05, 8.372300000000082e-05, 8.316700000000204e-05, 8.337499999999665e-05, 8.336100000000402e-05, 8.326399999999956e-05, 8.326399999999956e-05, 8.398599999999423e-05, 8.365299999999604e-05, 8.355599999999852e-05, 8.315300000000247e-05, 8.347300000000057e-05, 8.316700000000204e-05, 8.343000000000239e-05, 8.369400000000221e-05, 8.408299999999869e-05, 8.406899999999912e-05, 8.365300000000297e-05, 8.398600000000117e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.449" endtime="20201030 10:58:56.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.438" endtime="20201030 10:58:56.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.465" endtime="20201030 10:58:56.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.460" endtime="20201030 10:58:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.458" endtime="20201030 10:58:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.957" endtime="20201030 10:58:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.956" endtime="20201030 10:58:56.490"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.515" endtime="20201030 10:58:56.537"></status>
</kw>
<msg timestamp="20201030 10:58:56.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.511" endtime="20201030 10:58:56.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.541" endtime="20201030 10:58:56.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.547" endtime="20201030 10:58:56.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.503" endtime="20201030 10:58:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.497" endtime="20201030 10:58:56.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.571" endtime="20201030 10:58:56.890"></status>
</kw>
<msg timestamp="20201030 10:58:56.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043567792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.568" endtime="20201030 10:58:56.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043567792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.899" endtime="20201030 10:58:56.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.918" endtime="20201030 10:58:56.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.560" endtime="20201030 10:58:56.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.556" endtime="20201030 10:58:56.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.936" level="INFO">${RESULT} = [{'diff': 8.491599999999738e-05}, {'diff': 8.498599999999523e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.469500000000268e-05}, {'diff': 8.42919999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:56.927" endtime="20201030 10:58:56.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.947" level="INFO">${ACCURACY} = {'diff': [8.491599999999738e-05, 8.498599999999523e-05, 8.433299999999894e-05, 8.425000000000099e-05, 8.469500000000268e-05, 8.42919999999997e-05, 8.486100000000552e-05, 8.508299999999969e-05, 8.51109...</msg>
<status status="PASS" starttime="20201030 10:58:56.938" endtime="20201030 10:58:56.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.958" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.956" endtime="20201030 10:58:56.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.963" level="INFO">VALUE: [8.491599999999738e-05, 8.498599999999523e-05, 8.433299999999894e-05, 8.425000000000099e-05, 8.469500000000268e-05, 8.42919999999997e-05, 8.486100000000552e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.423600000000142e-05, 8.431999999999884e-05, 8.468000000000364e-05, 8.505500000000055e-05, 8.48050000000003e-05, 8.459699999999876e-05, 8.44999999999943e-05, 8.469500000000268e-05, 8.418000000000314e-05, 8.450000000000124e-05, 8.440299999999679e-05, 8.500000000000174e-05, 8.476400000000106e-05, 8.497299999999514e-05, 8.450000000000124e-05, 8.419399999999577e-05, 8.437500000000459e-05, 8.49720000000026e-05, 8.4944999999996e-05, 8.437499999999765e-05, 8.488900000000466e-05, 8.497300000000207e-05, 8.44170000000033e-05, 8.458399999999866e-05, 8.495899999999557e-05, 8.451400000000081e-05, 8.49170000000038e-05, 8.490300000000423e-05, 8.438900000000416e-05, 8.458299999999919e-05, 8.48050000000003e-05, 8.487500000000509e-05, 8.427800000000013e-05, 8.494399999999652e-05, 8.445799999999559e-05, 8.426400000000056e-05, 8.458299999999919e-05, 8.436099999999808e-05, 8.509799999999873e-05, 8.508299999999969e-05, 8.488899999999772e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.960" endtime="20201030 10:58:56.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.949" endtime="20201030 10:58:56.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.976" endtime="20201030 10:58:56.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.972" endtime="20201030 10:58:57.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.969" endtime="20201030 10:58:57.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.492" endtime="20201030 10:58:57.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.491" endtime="20201030 10:58:57.001"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.025" endtime="20201030 10:58:57.047"></status>
</kw>
<msg timestamp="20201030 10:58:57.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.021" endtime="20201030 10:58:57.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.050" endtime="20201030 10:58:57.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.057" endtime="20201030 10:58:57.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.014" endtime="20201030 10:58:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.008" endtime="20201030 10:58:57.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.080" endtime="20201030 10:58:57.423"></status>
</kw>
<msg timestamp="20201030 10:58:57.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041803097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.077" endtime="20201030 10:58:57.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041803097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041888931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.433" endtime="20201030 10:58:57.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.452" endtime="20201030 10:58:57.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.070" endtime="20201030 10:58:57.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.065" endtime="20201030 10:58:57.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.469" level="INFO">${RESULT} = [{'diff': 8.583399999999991e-05}, {'diff': 8.558300000000019e-05}, {'diff': 8.551399999999487e-05}, {'diff': 8.597199999999666e-05}, {'diff': 8.608300000000069e-05}, {'diff': 8.5847e-05}, {'diff': 8.5...</msg>
<status status="PASS" starttime="20201030 10:58:57.460" endtime="20201030 10:58:57.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.478" level="INFO">${ACCURACY} = {'diff': [8.583399999999991e-05, 8.558300000000019e-05, 8.551399999999487e-05, 8.597199999999666e-05, 8.608300000000069e-05, 8.5847e-05, 8.543100000000386e-05, 8.576399999999512e-05, 8.526400000000156...</msg>
<status status="PASS" starttime="20201030 10:58:57.471" endtime="20201030 10:58:57.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.490" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.487" endtime="20201030 10:58:57.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.495" level="INFO">VALUE: [8.583399999999991e-05, 8.558300000000019e-05, 8.551399999999487e-05, 8.597199999999666e-05, 8.608300000000069e-05, 8.5847e-05, 8.543100000000386e-05, 8.576399999999512e-05, 8.526400000000156e-05, 8.561099999999933e-05, 8.551400000000181e-05, 8.608300000000069e-05, 8.565299999999804e-05, 8.56249999999989e-05, 8.56249999999989e-05, 8.558300000000019e-05, 8.563899999999847e-05, 8.583300000000044e-05, 8.575000000000249e-05, 8.536099999999908e-05, 8.518099999999668e-05, 8.518100000000361e-05, 8.53469999999995e-05, 8.572300000000282e-05, 8.577800000000163e-05, 8.598600000000317e-05, 8.523600000000242e-05, 8.531900000000037e-05, 8.541699999999736e-05, 8.570800000000378e-05, 8.576400000000206e-05, 8.607000000000059e-05, 8.536100000000602e-05, 8.526400000000156e-05, 8.552699999999497e-05, 8.574999999999555e-05, 8.609700000000026e-05, 8.544399999999702e-05, 8.609700000000026e-05, 8.53469999999995e-05, 8.607000000000059e-05, 8.583300000000044e-05, 8.618099999999768e-05, 8.593100000000437e-05, 8.576400000000206e-05, 8.575000000000249e-05, 8.554200000000095e-05, 8.608299999999375e-05, 8.58329999999935e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.492" endtime="20201030 10:58:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.480" endtime="20201030 10:58:57.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.508" endtime="20201030 10:58:57.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.503" endtime="20201030 10:58:57.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.501" endtime="20201030 10:58:57.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.004" endtime="20201030 10:58:57.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.002" endtime="20201030 10:58:57.533"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.558" endtime="20201030 10:58:57.583"></status>
</kw>
<msg timestamp="20201030 10:58:57.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.554" endtime="20201030 10:58:57.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.586" endtime="20201030 10:58:57.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.592" endtime="20201030 10:58:57.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.547" endtime="20201030 10:58:57.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.540" endtime="20201030 10:58:57.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.616" endtime="20201030 10:58:57.960"></status>
</kw>
<msg timestamp="20201030 10:58:57.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045983444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046070597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.613" endtime="20201030 10:58:57.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045983444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046070597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.969" endtime="20201030 10:58:57.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.988" endtime="20201030 10:58:57.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.606" endtime="20201030 10:58:57.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.601" endtime="20201030 10:58:57.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.005" level="INFO">${RESULT} = [{'diff': 8.715299999999954e-05}, {'diff': 8.645799999999759e-05}, {'diff': 8.670899999999732e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.631900000000137e-05}, {'diff': 8.619499999999725e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:57.996" endtime="20201030 10:58:58.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.015" level="INFO">${ACCURACY} = {'diff': [8.715299999999954e-05, 8.645799999999759e-05, 8.670899999999732e-05, 8.636100000000008e-05, 8.631900000000137e-05, 8.619499999999725e-05, 8.67920000000022e-05, 8.647299999999664e-05, 8.71659...</msg>
<status status="PASS" starttime="20201030 10:58:58.008" endtime="20201030 10:58:58.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.026" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.024" endtime="20201030 10:58:58.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.031" level="INFO">VALUE: [8.715299999999954e-05, 8.645799999999759e-05, 8.670899999999732e-05, 8.636100000000008e-05, 8.631900000000137e-05, 8.619499999999725e-05, 8.67920000000022e-05, 8.647299999999664e-05, 8.716599999999963e-05, 8.669399999999827e-05, 8.62920000000017e-05, 8.633300000000094e-05, 8.638899999999922e-05, 8.680499999999536e-05, 8.632000000000084e-05, 8.694399999999852e-05, 8.659700000000076e-05, 8.6847000000001e-05, 8.684800000000048e-05, 8.630600000000127e-05, 8.708399999999422e-05, 8.669400000000521e-05, 8.642999999999845e-05, 8.687500000000015e-05, 8.693099999999843e-05, 8.66669999999986e-05, 8.623599999999648e-05, 8.698599999999723e-05, 8.674999999999655e-05, 8.651400000000281e-05, 8.675000000000349e-05, 8.690199999999981e-05, 8.64720000000041e-05, 8.697199999999766e-05, 8.629100000000223e-05, 8.615299999999854e-05, 8.691699999999886e-05, 8.620800000000428e-05, 8.6847000000001e-05, 8.679199999999526e-05, 8.687500000000015e-05, 8.64449999999975e-05, 8.666599999999913e-05, 8.643000000000539e-05, 8.679099999999579e-05, 8.674999999999655e-05, 8.722299999999739e-05, 8.677799999999569e-05, 8.713899999999997e-05, 8.698599999999723e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.028" endtime="20201030 10:58:58.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.017" endtime="20201030 10:58:58.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.053" endtime="20201030 10:58:58.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.047" endtime="20201030 10:58:58.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.045" endtime="20201030 10:58:58.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.536" endtime="20201030 10:58:58.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.534" endtime="20201030 10:58:58.078"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.102" endtime="20201030 10:58:58.123"></status>
</kw>
<msg timestamp="20201030 10:58:58.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.098" endtime="20201030 10:58:58.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.127" endtime="20201030 10:58:58.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.133" endtime="20201030 10:58:58.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.091" endtime="20201030 10:58:58.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.085" endtime="20201030 10:58:58.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.157" endtime="20201030 10:58:58.497"></status>
</kw>
<msg timestamp="20201030 10:58:58.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041484208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.153" endtime="20201030 10:58:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041484208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.506" endtime="20201030 10:58:58.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.525" endtime="20201030 10:58:58.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.146" endtime="20201030 10:58:58.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.141" endtime="20201030 10:58:58.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.543" level="INFO">${RESULT} = [{'diff': 8.761100000000133e-05}, {'diff': 8.772200000000535e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.730499999999586e-05}, {'diff': 8.770799999999884e-05}, {'diff': 8.806899999999618e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:58.534" endtime="20201030 10:58:58.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.554" level="INFO">${ACCURACY} = {'diff': [8.761100000000133e-05, 8.772200000000535e-05, 8.791699999999986e-05, 8.730499999999586e-05, 8.770799999999884e-05, 8.806899999999618e-05, 8.719499999999825e-05, 8.807000000000259e-05, 8.7402...</msg>
<status status="PASS" starttime="20201030 10:58:58.545" endtime="20201030 10:58:58.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.565" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.562" endtime="20201030 10:58:58.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.571" level="INFO">VALUE: [8.761100000000133e-05, 8.772200000000535e-05, 8.791699999999986e-05, 8.730499999999586e-05, 8.770799999999884e-05, 8.806899999999618e-05, 8.719499999999825e-05, 8.807000000000259e-05, 8.740299999999979e-05, 8.770799999999884e-05, 8.784799999999454e-05, 8.738900000000022e-05, 8.783300000000244e-05, 8.78050000000033e-05, 8.777799999999669e-05, 8.769399999999927e-05, 8.773699999999746e-05, 8.805600000000302e-05, 8.81250000000014e-05, 8.741699999999936e-05, 8.797199999999866e-05, 8.808400000000216e-05, 8.757000000000209e-05, 8.729100000000323e-05, 8.813900000000097e-05, 8.761100000000133e-05, 8.807000000000259e-05, 8.71669999999991e-05, 8.731900000000237e-05, 8.72920000000027e-05, 8.724999999999705e-05, 8.779100000000373e-05, 8.744400000000596e-05, 8.77920000000032e-05, 8.720799999999834e-05, 8.747199999999816e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.783300000000244e-05, 8.741699999999936e-05, 8.791699999999986e-05, 8.740299999999979e-05, 8.770799999999884e-05, 8.768099999999918e-05, 8.745799999999859e-05, 8.786100000000158e-05, 8.81250000000014e-05, 8.770800000000578e-05, 8.73199999999949e-05, 8.726400000000356e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.568" endtime="20201030 10:58:58.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.556" endtime="20201030 10:58:58.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.584" endtime="20201030 10:58:58.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.580" endtime="20201030 10:58:58.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.577" endtime="20201030 10:58:58.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.081" endtime="20201030 10:58:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.079" endtime="20201030 10:58:58.610"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.633" endtime="20201030 10:58:58.656"></status>
</kw>
<msg timestamp="20201030 10:58:58.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.630" endtime="20201030 10:58:58.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.659" endtime="20201030 10:58:58.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.666" endtime="20201030 10:58:58.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.622" endtime="20201030 10:58:58.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.617" endtime="20201030 10:58:58.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.689" endtime="20201030 10:58:59.042"></status>
</kw>
<msg timestamp="20201030 10:58:59.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042696917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.686" endtime="20201030 10:58:59.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042696917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.052" endtime="20201030 10:58:59.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.071" endtime="20201030 10:58:59.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.679" endtime="20201030 10:58:59.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.674" endtime="20201030 10:58:59.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.088" level="INFO">${RESULT} = [{'diff': 8.840300000000079e-05}, {'diff': 8.873599999999898e-05}, {'diff': 8.872200000000635e-05}, {'diff': 8.844400000000002e-05}, {'diff': 8.858299999999625e-05}, {'diff': 8.877800000000463e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:59.080" endtime="20201030 10:58:59.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.100" level="INFO">${ACCURACY} = {'diff': [8.840300000000079e-05, 8.873599999999898e-05, 8.872200000000635e-05, 8.844400000000002e-05, 8.858299999999625e-05, 8.877800000000463e-05, 8.870799999999984e-05, 8.87920000000042e-05, 8.85420...</msg>
<status status="PASS" starttime="20201030 10:58:59.090" endtime="20201030 10:58:59.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.111" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.109" endtime="20201030 10:58:59.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.116" level="INFO">VALUE: [8.840300000000079e-05, 8.873599999999898e-05, 8.872200000000635e-05, 8.844400000000002e-05, 8.858299999999625e-05, 8.877800000000463e-05, 8.870799999999984e-05, 8.87920000000042e-05, 8.854200000000395e-05, 8.845799999999959e-05, 8.829199999999676e-05, 8.876399999999812e-05, 8.906899999999718e-05, 8.852699999999797e-05, 8.89999999999988e-05, 8.819399999999977e-05, 8.912499999999546e-05, 8.904200000000445e-05, 8.855599999999658e-05, 8.888899999999478e-05, 8.908399999999622e-05, 8.886099999999564e-05, 8.884800000000248e-05, 8.863899999999453e-05, 8.836100000000208e-05, 8.897199999999966e-05, 8.841700000000036e-05, 8.884700000000301e-05, 8.845799999999959e-05, 8.902799999999794e-05, 8.911100000000283e-05, 8.904200000000445e-05, 8.826400000000456e-05, 8.908300000000369e-05, 8.884800000000248e-05, 8.82920000000037e-05, 8.891600000000138e-05, 8.905499999999761e-05, 8.830499999999686e-05, 8.822200000000585e-05, 8.915200000000206e-05, 8.909699999999632e-05, 8.902799999999794e-05, 8.841700000000036e-05, 8.818099999999968e-05, 8.861100000000233e-05, 8.843099999999993e-05, 8.891599999999444e-05, 8.906900000000412e-05, 8.861100000000233e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.113" endtime="20201030 10:58:59.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.102" endtime="20201030 10:58:59.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.129" endtime="20201030 10:58:59.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.125" endtime="20201030 10:58:59.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.122" endtime="20201030 10:58:59.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.612" endtime="20201030 10:58:59.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.611" endtime="20201030 10:58:59.154"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.178" endtime="20201030 10:58:59.200"></status>
</kw>
<msg timestamp="20201030 10:58:59.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.174" endtime="20201030 10:58:59.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.204" endtime="20201030 10:58:59.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.210" endtime="20201030 10:58:59.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.167" endtime="20201030 10:58:59.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.161" endtime="20201030 10:58:59.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.234" endtime="20201030 10:58:59.577"></status>
</kw>
<msg timestamp="20201030 10:58:59.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041833597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.230" endtime="20201030 10:58:59.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041833597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.586" endtime="20201030 10:58:59.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.606" endtime="20201030 10:58:59.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.223" endtime="20201030 10:58:59.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.218" endtime="20201030 10:58:59.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.624" level="INFO">${RESULT} = [{'diff': 8.938900000000222e-05}, {'diff': 8.988899999999578e-05}, {'diff': 9.004200000000545e-05}, {'diff': 8.92920000000047e-05}, {'diff': 8.945900000000007e-05}, {'diff': 8.991700000000186e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:59.615" endtime="20201030 10:58:59.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.634" level="INFO">${ACCURACY} = {'diff': [8.938900000000222e-05, 8.988899999999578e-05, 9.004200000000545e-05, 8.92920000000047e-05, 8.945900000000007e-05, 8.991700000000186e-05, 8.924999999999905e-05, 8.924999999999905e-05, 8.93189...</msg>
<status status="PASS" starttime="20201030 10:58:59.627" endtime="20201030 10:58:59.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.646" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.643" endtime="20201030 10:58:59.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.651" level="INFO">VALUE: [8.938900000000222e-05, 8.988899999999578e-05, 9.004200000000545e-05, 8.92920000000047e-05, 8.945900000000007e-05, 8.991700000000186e-05, 8.924999999999905e-05, 8.924999999999905e-05, 8.931899999999743e-05, 8.954100000000548e-05, 8.938899999999528e-05, 8.951399999999887e-05, 8.938899999999528e-05, 8.944400000000102e-05, 8.96529999999951e-05, 8.945800000000059e-05, 8.987499999999621e-05, 8.979199999999826e-05, 8.926399999999862e-05, 8.961100000000333e-05, 8.96250000000029e-05, 8.94999999999993e-05, 8.951399999999887e-05, 8.938899999999528e-05, 8.972200000000041e-05, 8.963900000000247e-05, 8.937499999999571e-05, 8.963899999999553e-05, 9.009699999999732e-05, 8.98329999999975e-05, 8.9945000000001e-05, 8.962499999999596e-05, 8.93050000000048e-05, 8.973599999999998e-05, 8.96250000000029e-05, 8.997200000000066e-05, 9.005599999999808e-05, 8.998600000000023e-05, 9.008400000000416e-05, 8.973599999999998e-05, 8.991700000000186e-05, 8.923599999999948e-05, 9.001399999999937e-05, 8.980499999999836e-05, 8.936099999999614e-05, 9.006999999999765e-05, 8.916600000000163e-05, 8.927799999999819e-05, 9.012499999999646e-05, 8.955599999999758e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.648" endtime="20201030 10:58:59.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.637" endtime="20201030 10:58:59.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.664" endtime="20201030 10:58:59.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.660" endtime="20201030 10:58:59.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.657" endtime="20201030 10:58:59.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.157" endtime="20201030 10:58:59.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.155" endtime="20201030 10:58:59.689"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.713" endtime="20201030 10:58:59.737"></status>
</kw>
<msg timestamp="20201030 10:58:59.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.709" endtime="20201030 10:58:59.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.740" endtime="20201030 10:58:59.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.747" endtime="20201030 10:58:59.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.702" endtime="20201030 10:58:59.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.696" endtime="20201030 10:58:59.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.771" endtime="20201030 10:59:00.084"></status>
</kw>
<msg timestamp="20201030 10:59:00.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043874153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043965194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.767" endtime="20201030 10:59:00.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043874153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043965194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.088" endtime="20201030 10:59:00.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.097" endtime="20201030 10:59:00.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.760" endtime="20201030 10:59:00.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.755" endtime="20201030 10:59:00.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.105" level="INFO">${RESULT} = [{'diff': 9.104100000000004e-05}, {'diff': 9.037499999999671e-05}, {'diff': 9.091600000000338e-05}, {'diff': 9.111100000000483e-05}, {'diff': 9.031900000000537e-05}, {'diff': 9.041700000000236e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:00.101" endtime="20201030 10:59:00.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.109" level="INFO">${ACCURACY} = {'diff': [9.104100000000004e-05, 9.037499999999671e-05, 9.091600000000338e-05, 9.111100000000483e-05, 9.031900000000537e-05, 9.041700000000236e-05, 9.044400000000202e-05, 9.080599999999883e-05, 9.0763...</msg>
<status status="PASS" starttime="20201030 10:59:00.106" endtime="20201030 10:59:00.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.114" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.113" endtime="20201030 10:59:00.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.117" level="INFO">VALUE: [9.104100000000004e-05, 9.037499999999671e-05, 9.091600000000338e-05, 9.111100000000483e-05, 9.031900000000537e-05, 9.041700000000236e-05, 9.044400000000202e-05, 9.080599999999883e-05, 9.076300000000065e-05, 9.026399999999962e-05, 9.093100000000243e-05, 9.026399999999962e-05, 9.034700000000451e-05, 9.077700000000022e-05, 9.063900000000347e-05, 9.072200000000141e-05, 9.037499999999671e-05, 9.108399999999822e-05, 9.086100000000458e-05, 9.088899999999678e-05, 9.080600000000577e-05, 9.036099999999714e-05, 9.093000000000295e-05, 9.095799999999515e-05, 9.025000000000005e-05, 9.048600000000073e-05, 9.042999999999551e-05, 9.01800000000022e-05, 9.055599999999858e-05, 9.084699999999807e-05, 9.104199999999951e-05, 9.048600000000073e-05, 9.075000000000055e-05, 9.111099999999789e-05, 9.069400000000227e-05, 9.026399999999962e-05, 9.106899999999918e-05, 9.032000000000484e-05, 9.061099999999739e-05, 9.059799999999729e-05, 9.034699999999757e-05, 9.109700000000526e-05, 9.088900000000372e-05, 9.091600000000338e-05, 9.026399999999962e-05, 9.022300000000039e-05, 9.045800000000159e-05, 9.065300000000304e-05, 9.047200000000116e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.116" endtime="20201030 10:59:00.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.110" endtime="20201030 10:59:00.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.124" endtime="20201030 10:59:00.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.121" endtime="20201030 10:59:00.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.120" endtime="20201030 10:59:00.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.691" endtime="20201030 10:59:00.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.690" endtime="20201030 10:59:00.145"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.156" endtime="20201030 10:59:00.175"></status>
</kw>
<msg timestamp="20201030 10:59:00.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.154" endtime="20201030 10:59:00.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.177" endtime="20201030 10:59:00.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.181" endtime="20201030 10:59:00.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.151" endtime="20201030 10:59:00.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.148" endtime="20201030 10:59:00.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.205" endtime="20201030 10:59:00.547"></status>
</kw>
<msg timestamp="20201030 10:59:00.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.202" endtime="20201030 10:59:00.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.557" endtime="20201030 10:59:00.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.575" endtime="20201030 10:59:00.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.194" endtime="20201030 10:59:00.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.190" endtime="20201030 10:59:00.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.593" level="INFO">${RESULT} = [{'diff': 9.19719999999992e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.143099999999946e-05}, {'diff': 9.138900000000075e-05}, {'diff': 9.119499999999878e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:00.584" endtime="20201030 10:59:00.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.604" level="INFO">${ACCURACY} = {'diff': [9.19719999999992e-05, 9.179200000000026e-05, 9.140300000000032e-05, 9.143099999999946e-05, 9.138900000000075e-05, 9.119499999999878e-05, 9.138899999999728e-05, 9.118099999999921e-05, 9.17769...</msg>
<status status="PASS" starttime="20201030 10:59:00.595" endtime="20201030 10:59:00.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.615" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.612" endtime="20201030 10:59:00.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.620" level="INFO">VALUE: [9.19719999999992e-05, 9.179200000000026e-05, 9.140300000000032e-05, 9.143099999999946e-05, 9.138900000000075e-05, 9.119499999999878e-05, 9.138899999999728e-05, 9.118099999999921e-05, 9.177699999999775e-05, 9.204100000000104e-05, 9.187500000000168e-05, 9.191600000000091e-05, 9.1639000000001e-05, 9.15000000000013e-05, 9.188900000000125e-05, 9.18329999999995e-05, 9.137500000000118e-05, 9.184699999999907e-05, 9.1332999999999e-05, 9.18329999999995e-05, 9.126299999999768e-05, 9.202800000000094e-05, 9.193099999999996e-05, 9.168000000000023e-05, 9.183300000000297e-05, 9.141699999999989e-05, 9.205600000000008e-05, 9.148599999999826e-05, 9.149999999999783e-05, 9.201400000000137e-05, 9.142999999999998e-05, 9.116699999999964e-05, 9.130499999999986e-05, 9.129199999999976e-05, 9.209699999999932e-05, 9.191700000000039e-05, 9.1639000000001e-05, 9.14719999999987e-05, 9.151400000000087e-05, 9.119499999999878e-05, 9.141699999999989e-05, 9.141699999999989e-05, 9.186100000000211e-05, 9.197200000000266e-05, 9.174999999999808e-05, 9.130499999999986e-05, 9.162500000000143e-05, 9.136099999999814e-05, 9.126400000000062e-05, 9.170900000000232e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.617" endtime="20201030 10:59:00.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.605" endtime="20201030 10:59:00.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.633" endtime="20201030 10:59:00.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.628" endtime="20201030 10:59:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.626" endtime="20201030 10:59:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.146" endtime="20201030 10:59:00.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.146" endtime="20201030 10:59:00.659"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.683" endtime="20201030 10:59:00.706"></status>
</kw>
<msg timestamp="20201030 10:59:00.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.680" endtime="20201030 10:59:00.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.709" endtime="20201030 10:59:00.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.716" endtime="20201030 10:59:00.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.672" endtime="20201030 10:59:00.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.666" endtime="20201030 10:59:00.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.739" endtime="20201030 10:59:01.081"></status>
</kw>
<msg timestamp="20201030 10:59:01.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043506194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.736" endtime="20201030 10:59:01.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043506194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.090" endtime="20201030 10:59:01.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.109" endtime="20201030 10:59:01.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.729" endtime="20201030 10:59:01.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.724" endtime="20201030 10:59:01.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.127" level="INFO">${RESULT} = [{'diff': 9.31659999999987e-05}, {'diff': 9.286100000000658e-05}, {'diff': 9.259700000000676e-05}, {'diff': 9.298600000000323e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.280600000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:01.118" endtime="20201030 10:59:01.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.138" level="INFO">${ACCURACY} = {'diff': [9.31659999999987e-05, 9.286100000000658e-05, 9.259700000000676e-05, 9.298600000000323e-05, 9.251400000000187e-05, 9.280600000000083e-05, 9.281900000000093e-05, 9.238899999999828e-05, 9.24590...</msg>
<status status="PASS" starttime="20201030 10:59:01.129" endtime="20201030 10:59:01.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.149" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.147" endtime="20201030 10:59:01.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.154" level="INFO">VALUE: [9.31659999999987e-05, 9.286100000000658e-05, 9.259700000000676e-05, 9.298600000000323e-05, 9.251400000000187e-05, 9.280600000000083e-05, 9.281900000000093e-05, 9.238899999999828e-05, 9.245900000000307e-05, 9.283399999999997e-05, 9.28200000000004e-05, 9.222200000000291e-05, 9.28330000000005e-05, 9.274999999999561e-05, 9.263899999999853e-05, 9.229099999999435e-05, 9.288899999999878e-05, 9.263899999999853e-05, 9.241700000000436e-05, 9.297199999999672e-05, 9.295899999999663e-05, 9.234699999999957e-05, 9.291599999999844e-05, 9.242999999999751e-05, 9.273599999999604e-05, 9.294499999999706e-05, 9.311099999999989e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.222200000000291e-05, 9.218099999999674e-05, 9.275000000000255e-05, 9.28330000000005e-05, 9.229200000000076e-05, 9.241700000000436e-05, 9.305500000000161e-05, 9.291700000000486e-05, 9.281900000000093e-05, 9.238899999999828e-05, 9.227800000000119e-05, 9.225000000000205e-05, 9.261099999999939e-05, 9.284799999999954e-05, 9.270800000000384e-05, 9.237499999999871e-05, 9.26250000000059e-05, 9.28330000000005e-05, 9.247200000000316e-05, 9.227800000000119e-05, 9.255600000000058e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.151" endtime="20201030 10:59:01.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.140" endtime="20201030 10:59:01.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.167" endtime="20201030 10:59:01.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.163" endtime="20201030 10:59:01.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.160" endtime="20201030 10:59:01.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.661" endtime="20201030 10:59:01.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.660" endtime="20201030 10:59:01.192"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.216" endtime="20201030 10:59:01.238"></status>
</kw>
<msg timestamp="20201030 10:59:01.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.212" endtime="20201030 10:59:01.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.241" endtime="20201030 10:59:01.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.248" endtime="20201030 10:59:01.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.205" endtime="20201030 10:59:01.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.199" endtime="20201030 10:59:01.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.272" endtime="20201030 10:59:01.618"></status>
</kw>
<msg timestamp="20201030 10:59:01.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.268" endtime="20201030 10:59:01.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.628" endtime="20201030 10:59:01.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.647" endtime="20201030 10:59:01.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.261" endtime="20201030 10:59:01.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.256" endtime="20201030 10:59:01.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.664" level="INFO">${RESULT} = [{'diff': 9.380600000000183e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.38330000000015e-05}, {'diff': 9.411100000000089e-05}, {'diff': 9.329100000000229e-05}, {'diff': 9.409700000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:01.656" endtime="20201030 10:59:01.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.674" level="INFO">${ACCURACY} = {'diff': [9.380600000000183e-05, 9.377800000000269e-05, 9.38330000000015e-05, 9.411100000000089e-05, 9.329100000000229e-05, 9.409700000000132e-05, 9.372199999999747e-05, 9.343099999999799e-05, 9.38470...</msg>
<status status="PASS" starttime="20201030 10:59:01.666" endtime="20201030 10:59:01.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.686" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.683" endtime="20201030 10:59:01.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.692" level="INFO">VALUE: [9.380600000000183e-05, 9.377800000000269e-05, 9.38330000000015e-05, 9.411100000000089e-05, 9.329100000000229e-05, 9.409700000000132e-05, 9.372199999999747e-05, 9.343099999999799e-05, 9.384700000000107e-05, 9.374999999999661e-05, 9.329099999999535e-05, 9.38200000000014e-05, 9.391599999999944e-05, 9.391599999999944e-05, 9.413900000000003e-05, 9.362499999999996e-05, 9.325000000000305e-05, 9.345800000000459e-05, 9.341699999999842e-05, 9.35000000000033e-05, 9.345799999999765e-05, 9.395800000000509e-05, 9.326399999999568e-05, 9.330500000000186e-05, 9.317999999999826e-05, 9.35000000000033e-05, 9.380500000000236e-05, 9.386100000000064e-05, 9.357000000000115e-05, 9.413900000000003e-05, 9.319499999999731e-05, 9.374999999999661e-05, 9.327700000000272e-05, 9.344399999999808e-05, 9.387500000000021e-05, 9.408300000000175e-05, 9.380500000000236e-05, 9.406899999999524e-05, 9.372199999999747e-05, 9.354199999999507e-05, 9.359700000000082e-05, 9.397300000000414e-05, 9.393099999999849e-05, 9.39729999999972e-05, 9.397199999999772e-05, 9.336100000000014e-05, 9.356900000000168e-05, 9.393099999999849e-05, 9.354199999999507e-05, 9.338899999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.688" endtime="20201030 10:59:01.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.676" endtime="20201030 10:59:01.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.706" endtime="20201030 10:59:01.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.701" endtime="20201030 10:59:01.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.698" endtime="20201030 10:59:01.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.194" endtime="20201030 10:59:01.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.193" endtime="20201030 10:59:01.731"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.754" endtime="20201030 10:59:01.778"></status>
</kw>
<msg timestamp="20201030 10:59:01.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.751" endtime="20201030 10:59:01.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.782" endtime="20201030 10:59:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.788" endtime="20201030 10:59:01.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.743" endtime="20201030 10:59:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.738" endtime="20201030 10:59:01.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.812" endtime="20201030 10:59:02.165"></status>
</kw>
<msg timestamp="20201030 10:59:02.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043309333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043403972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.809" endtime="20201030 10:59:02.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043309333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043403972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.174" endtime="20201030 10:59:02.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.193" endtime="20201030 10:59:02.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.801" endtime="20201030 10:59:02.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.797" endtime="20201030 10:59:02.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.211" level="INFO">${RESULT} = [{'diff': 9.463900000000053e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.506900000000318e-05}, {'diff': 9.463899999999359e-05}, {'diff': 9.459700000000182e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:02.202" endtime="20201030 10:59:02.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.220" level="INFO">${ACCURACY} = {'diff': [9.463900000000053e-05, 9.488900000000078e-05, 9.438900000000028e-05, 9.506900000000318e-05, 9.463899999999359e-05, 9.459700000000182e-05, 9.459700000000182e-05, 9.490300000000035e-05, 9.4597...</msg>
<status status="PASS" starttime="20201030 10:59:02.213" endtime="20201030 10:59:02.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.231" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.229" endtime="20201030 10:59:02.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.236" level="INFO">VALUE: [9.463900000000053e-05, 9.488900000000078e-05, 9.438900000000028e-05, 9.506900000000318e-05, 9.463899999999359e-05, 9.459700000000182e-05, 9.459700000000182e-05, 9.490300000000035e-05, 9.459700000000182e-05, 9.438900000000028e-05, 9.462500000000096e-05, 9.445899999999813e-05, 9.48330000000025e-05, 9.513900000000103e-05, 9.504200000000351e-05, 9.452800000000344e-05, 9.509800000000179e-05, 9.486100000000164e-05, 9.425000000000405e-05, 9.473599999999804e-05, 9.420899999999788e-05, 9.456900000000268e-05, 9.436100000000114e-05, 9.494399999999958e-05, 9.424999999999711e-05, 9.47079999999989e-05, 9.459700000000182e-05, 9.457000000000215e-05, 9.477799999999675e-05, 9.459700000000182e-05, 9.504100000000404e-05, 9.462500000000096e-05, 9.43609999999942e-05, 9.467999999999976e-05, 9.50000000000048e-05, 9.493099999999949e-05, 9.483299999999556e-05, 9.456999999999521e-05, 9.509700000000232e-05, 9.483299999999556e-05, 9.508400000000222e-05, 9.469499999999881e-05, 9.483400000000197e-05, 9.419399999999883e-05, 9.495799999999915e-05, 9.434700000000157e-05, 9.441699999999942e-05, 9.441699999999942e-05, 9.47079999999989e-05, 9.447199999999822e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.233" endtime="20201030 10:59:02.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.222" endtime="20201030 10:59:02.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.251" endtime="20201030 10:59:02.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.245" endtime="20201030 10:59:02.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.242" endtime="20201030 10:59:02.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.733" endtime="20201030 10:59:02.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.732" endtime="20201030 10:59:02.276"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.299" endtime="20201030 10:59:02.321"></status>
</kw>
<msg timestamp="20201030 10:59:02.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.295" endtime="20201030 10:59:02.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.325" endtime="20201030 10:59:02.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.331" endtime="20201030 10:59:02.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.288" endtime="20201030 10:59:02.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.282" endtime="20201030 10:59:02.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.355" endtime="20201030 10:59:02.697"></status>
</kw>
<msg timestamp="20201030 10:59:02.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.352" endtime="20201030 10:59:02.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.706" endtime="20201030 10:59:02.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.726" endtime="20201030 10:59:02.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.344" endtime="20201030 10:59:02.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.339" endtime="20201030 10:59:02.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.744" level="INFO">${RESULT} = [{'diff': 9.529099999999735e-05}, {'diff': 9.548699999999827e-05}, {'diff': 9.609699999999638e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.543000000000051e-05}, {'diff': 9.568100000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:02.735" endtime="20201030 10:59:02.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.755" level="INFO">${ACCURACY} = {'diff': [9.529099999999735e-05, 9.548699999999827e-05, 9.609699999999638e-05, 9.572199999999947e-05, 9.543000000000051e-05, 9.568100000000024e-05, 9.601399999999843e-05, 9.586100000000264e-05, 9.5277...</msg>
<status status="PASS" starttime="20201030 10:59:02.747" endtime="20201030 10:59:02.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.766" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.764" endtime="20201030 10:59:02.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.772" level="INFO">VALUE: [9.529099999999735e-05, 9.548699999999827e-05, 9.609699999999638e-05, 9.572199999999947e-05, 9.543000000000051e-05, 9.568100000000024e-05, 9.601399999999843e-05, 9.586100000000264e-05, 9.527799999999725e-05, 9.591699999999398e-05, 9.59729999999992e-05, 9.609700000000332e-05, 9.555500000000411e-05, 9.561100000000239e-05, 9.530499999999692e-05, 9.562500000000196e-05, 9.530500000000386e-05, 9.609700000000332e-05, 9.576400000000512e-05, 9.545799999999965e-05, 9.594500000000006e-05, 9.590200000000187e-05, 9.593000000000101e-05, 9.558300000000325e-05, 9.519399999999983e-05, 9.580499999999742e-05, 9.551399999999793e-05, 9.524999999999811e-05, 9.604199999999757e-05, 9.522199999999897e-05, 9.593100000000049e-05, 9.605499999999767e-05, 9.53059999999964e-05, 9.527799999999725e-05, 9.57079999999999e-05, 9.58330000000035e-05, 9.583299999999656e-05, 9.584700000000307e-05, 9.541700000000042e-05, 9.593100000000049e-05, 9.53059999999964e-05, 9.563900000000153e-05, 9.584800000000254e-05, 9.537499999999477e-05, 9.580500000000436e-05, 9.593000000000101e-05, 9.60000000000058e-05, 9.588900000000178e-05, 9.576399999999818e-05, 9.581899999999699e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.769" endtime="20201030 10:59:02.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.757" endtime="20201030 10:59:02.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.785" endtime="20201030 10:59:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.780" endtime="20201030 10:59:02.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.778" endtime="20201030 10:59:02.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.278" endtime="20201030 10:59:02.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.277" endtime="20201030 10:59:02.810"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.833" endtime="20201030 10:59:02.856"></status>
</kw>
<msg timestamp="20201030 10:59:02.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.830" endtime="20201030 10:59:02.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.859" endtime="20201030 10:59:02.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.866" endtime="20201030 10:59:02.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.822" endtime="20201030 10:59:02.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.816" endtime="20201030 10:59:02.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.889" endtime="20201030 10:59:03.230"></status>
</kw>
<msg timestamp="20201030 10:59:03.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04213025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:02.886" endtime="20201030 10:59:03.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04213025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:03.240" endtime="20201030 10:59:03.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.259" endtime="20201030 10:59:03.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.879" endtime="20201030 10:59:03.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.874" endtime="20201030 10:59:03.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.276" level="INFO">${RESULT} = [{'diff': 9.629199999999782e-05}, {'diff': 9.630499999999792e-05}, {'diff': 9.626399999999868e-05}, {'diff': 9.66530000000021e-05}, {'diff': 9.704199999999857e-05}, {'diff': 9.684699999999713e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:03.267" endtime="20201030 10:59:03.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.288" level="INFO">${ACCURACY} = {'diff': [9.629199999999782e-05, 9.630499999999792e-05, 9.626399999999868e-05, 9.66530000000021e-05, 9.704199999999857e-05, 9.684699999999713e-05, 9.68609999999967e-05, 9.712500000000346e-05, 9.674999...</msg>
<status status="PASS" starttime="20201030 10:59:03.278" endtime="20201030 10:59:03.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.299" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.296" endtime="20201030 10:59:03.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.304" level="INFO">VALUE: [9.629199999999782e-05, 9.630499999999792e-05, 9.626399999999868e-05, 9.66530000000021e-05, 9.704199999999857e-05, 9.684699999999713e-05, 9.68609999999967e-05, 9.712500000000346e-05, 9.674999999999961e-05, 9.658299999999731e-05, 9.643100000000099e-05, 9.659700000000382e-05, 9.627799999999825e-05, 9.636100000000314e-05, 9.629199999999782e-05, 9.690300000000235e-05, 9.709699999999738e-05, 9.643100000000099e-05, 9.712499999999652e-05, 9.640300000000185e-05, 9.66530000000021e-05, 9.629200000000476e-05, 9.663900000000253e-05, 9.706899999999824e-05, 9.66530000000021e-05, 9.7027999999999e-05, 9.643099999999405e-05, 9.64859999999998e-05, 9.690300000000235e-05, 9.637499999999577e-05, 9.697200000000072e-05, 9.693000000000201e-05, 9.644399999999415e-05, 9.63200000000039e-05, 9.67080000000009e-05, 9.613900000000203e-05, 9.63479999999961e-05, 9.7027999999999e-05, 9.659799999999635e-05, 9.645800000000065e-05, 9.645800000000065e-05, 9.684699999999713e-05, 9.684699999999713e-05, 9.654199999999807e-05, 9.623599999999954e-05, 9.627800000000519e-05, 9.652800000000544e-05, 9.645900000000013e-05, 9.708400000000422e-05, 9.659800000000329e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.301" endtime="20201030 10:59:03.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.289" endtime="20201030 10:59:03.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.323" endtime="20201030 10:59:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.319" endtime="20201030 10:59:03.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.316" endtime="20201030 10:59:03.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.812" endtime="20201030 10:59:03.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.811" endtime="20201030 10:59:03.349"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.372" endtime="20201030 10:59:03.394"></status>
</kw>
<msg timestamp="20201030 10:59:03.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.368" endtime="20201030 10:59:03.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.398" endtime="20201030 10:59:03.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.404" endtime="20201030 10:59:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.361" endtime="20201030 10:59:03.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.355" endtime="20201030 10:59:03.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.422" endtime="20201030 10:59:03.708"></status>
</kw>
<msg timestamp="20201030 10:59:03.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.421" endtime="20201030 10:59:03.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.713" endtime="20201030 10:59:03.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.722" endtime="20201030 10:59:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.417" endtime="20201030 10:59:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.412" endtime="20201030 10:59:03.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.739" level="INFO">${RESULT} = [{'diff': 9.809699999999838e-05}, {'diff': 9.808300000000575e-05}, {'diff': 9.79159999999965e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.741700000000242e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:03.730" endtime="20201030 10:59:03.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.749" level="INFO">${ACCURACY} = {'diff': [9.809699999999838e-05, 9.808300000000575e-05, 9.79159999999965e-05, 9.784699999999813e-05, 9.750000000000036e-05, 9.741700000000242e-05, 9.772199999999454e-05, 9.779200000000626e-05, 9.80839...</msg>
<status status="PASS" starttime="20201030 10:59:03.741" endtime="20201030 10:59:03.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.761" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.758" endtime="20201030 10:59:03.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.767" level="INFO">VALUE: [9.809699999999838e-05, 9.808300000000575e-05, 9.79159999999965e-05, 9.784699999999813e-05, 9.750000000000036e-05, 9.741700000000242e-05, 9.772199999999454e-05, 9.779200000000626e-05, 9.808399999999828e-05, 9.777799999999975e-05, 9.763899999999659e-05, 9.730600000000533e-05, 9.791700000000292e-05, 9.734699999999763e-05, 9.723600000000054e-05, 9.759700000000482e-05, 9.729199999999882e-05, 9.793100000000249e-05, 9.805500000000661e-05, 9.756999999999821e-05, 9.790300000000335e-05, 9.773700000000052e-05, 9.763899999999659e-05, 9.763900000000353e-05, 9.813799999999762e-05, 9.777799999999975e-05, 9.723600000000054e-05, 9.726399999999968e-05, 9.811099999999795e-05, 9.743100000000199e-05, 9.775000000000061e-05, 9.78479999999976e-05, 9.744400000000208e-05, 9.768000000000276e-05, 9.72080000000014e-05, 9.788900000000378e-05, 9.784699999999813e-05, 9.787499999999727e-05, 9.783299999999856e-05, 9.756999999999821e-05, 9.729199999999882e-05, 9.78059999999989e-05, 9.780600000000583e-05, 9.741600000000294e-05, 9.791699999999598e-05, 9.775000000000061e-05, 9.734700000000457e-05, 9.731899999999849e-05, 9.809699999999838e-05, 9.772299999999401e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.763" endtime="20201030 10:59:03.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.751" endtime="20201030 10:59:03.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.781" endtime="20201030 10:59:03.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.776" endtime="20201030 10:59:03.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.773" endtime="20201030 10:59:03.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.351" endtime="20201030 10:59:03.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.350" endtime="20201030 10:59:03.806"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.829" endtime="20201030 10:59:03.853"></status>
</kw>
<msg timestamp="20201030 10:59:03.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.826" endtime="20201030 10:59:03.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.857" endtime="20201030 10:59:03.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.863" endtime="20201030 10:59:03.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.818" endtime="20201030 10:59:03.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.812" endtime="20201030 10:59:03.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.887" endtime="20201030 10:59:04.227"></status>
</kw>
<msg timestamp="20201030 10:59:04.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043442431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.883" endtime="20201030 10:59:04.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043442431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.237" endtime="20201030 10:59:04.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.256" endtime="20201030 10:59:04.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.876" endtime="20201030 10:59:04.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.871" endtime="20201030 10:59:04.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.274" level="INFO">${RESULT} = [{'diff': 9.915299999999766e-05}, {'diff': 9.849999999999443e-05}, {'diff': 9.891699999999698e-05}, {'diff': 9.818100000000274e-05}, {'diff': 9.887499999999827e-05}, {'diff': 9.830499999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:04.265" endtime="20201030 10:59:04.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.283" level="INFO">${ACCURACY} = {'diff': [9.915299999999766e-05, 9.849999999999443e-05, 9.891699999999698e-05, 9.818100000000274e-05, 9.887499999999827e-05, 9.830499999999992e-05, 9.877800000000075e-05, 9.82080000000024e-05, 9.88329...</msg>
<status status="PASS" starttime="20201030 10:59:04.276" endtime="20201030 10:59:04.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.294" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.292" endtime="20201030 10:59:04.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.300" level="INFO">VALUE: [9.915299999999766e-05, 9.849999999999443e-05, 9.891699999999698e-05, 9.818100000000274e-05, 9.887499999999827e-05, 9.830499999999992e-05, 9.877800000000075e-05, 9.82080000000024e-05, 9.883299999999956e-05, 9.908399999999928e-05, 9.905600000000014e-05, 9.890300000000435e-05, 9.83059999999994e-05, 9.830499999999992e-05, 9.822300000000145e-05, 9.883299999999956e-05, 9.89860000000023e-05, 9.894400000000358e-05, 9.840300000000385e-05, 9.874999999999468e-05, 9.890299999999741e-05, 9.841700000000342e-05, 9.898599999999536e-05, 9.894400000000358e-05, 9.837499999999777e-05, 9.827800000000025e-05, 9.825000000000111e-05, 9.876400000000118e-05, 9.877800000000075e-05, 9.826400000000068e-05, 9.870900000000238e-05, 9.83059999999994e-05, 9.841700000000342e-05, 9.829100000000035e-05, 9.85280000000005e-05, 9.913799999999862e-05, 9.89159999999975e-05, 9.85280000000005e-05, 9.859699999999888e-05, 9.851400000000093e-05, 9.843099999999605e-05, 9.85280000000005e-05, 9.875000000000161e-05, 9.906999999999971e-05, 9.874999999999468e-05, 9.862499999999802e-05, 9.880600000000683e-05, 9.84860000000018e-05, 9.862500000000496e-05, 9.87080000000029e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.296" endtime="20201030 10:59:04.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.285" endtime="20201030 10:59:04.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.314" endtime="20201030 10:59:04.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.308" endtime="20201030 10:59:04.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.305" endtime="20201030 10:59:04.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.808" endtime="20201030 10:59:04.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.807" endtime="20201030 10:59:04.339"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.362" endtime="20201030 10:59:04.385"></status>
</kw>
<msg timestamp="20201030 10:59:04.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.359" endtime="20201030 10:59:04.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.388" endtime="20201030 10:59:04.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.395" endtime="20201030 10:59:04.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.351" endtime="20201030 10:59:04.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.346" endtime="20201030 10:59:04.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.418" endtime="20201030 10:59:04.761"></status>
</kw>
<msg timestamp="20201030 10:59:04.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.415" endtime="20201030 10:59:04.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.771" endtime="20201030 10:59:04.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.790" endtime="20201030 10:59:04.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.408" endtime="20201030 10:59:04.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.403" endtime="20201030 10:59:04.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.809" level="INFO">${RESULT} = [{'diff': 9.934699999999963e-05}, {'diff': 9.948599999999586e-05}, {'diff': 9.976400000000218e-05}, {'diff': 9.957000000000021e-05}, {'diff': 9.941699999999748e-05}, {'diff': 9.938899999999834e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:04.799" endtime="20201030 10:59:04.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.820" level="INFO">${ACCURACY} = {'diff': [9.934699999999963e-05, 9.948599999999586e-05, 9.976400000000218e-05, 9.957000000000021e-05, 9.941699999999748e-05, 9.938899999999834e-05, 9.951400000000193e-05, 9.95559999999937e-05, 9.99299...</msg>
<status status="PASS" starttime="20201030 10:59:04.811" endtime="20201030 10:59:04.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.831" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.829" endtime="20201030 10:59:04.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.837" level="INFO">VALUE: [9.934699999999963e-05, 9.948599999999586e-05, 9.976400000000218e-05, 9.957000000000021e-05, 9.941699999999748e-05, 9.938899999999834e-05, 9.951400000000193e-05, 9.95559999999937e-05, 9.992999999999808e-05, 9.937500000000571e-05, 9.977800000000175e-05, 9.956900000000074e-05, 0.00010002700000000253, 9.927699999999484e-05, 9.925000000000211e-05, 9.970799999999697e-05, 9.958300000000031e-05, 9.979100000000185e-05, 9.959699999999988e-05, 9.957000000000021e-05, 9.965299999999816e-05, 9.981899999999405e-05, 9.976400000000218e-05, 9.963900000000553e-05, 0.00010005500000000167, 9.969500000000381e-05, 9.919400000000383e-05, 9.998700000000277e-05, 9.997199999999679e-05, 9.954200000000107e-05, 9.940299999999791e-05, 0.00010007000000000071, 9.94860000000028e-05, 9.976400000000218e-05, 9.976400000000218e-05, 9.980500000000142e-05, 9.98609999999997e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.923600000000254e-05, 9.990299999999841e-05, 9.945899999999619e-05, 9.956900000000074e-05, 9.959799999999935e-05, 9.975000000000261e-05, 9.962499999999902e-05, 9.969400000000433e-05, 9.987499999999927e-05, 0.00010019499999999737, 9.940300000000485e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.833" endtime="20201030 10:59:04.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.822" endtime="20201030 10:59:04.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.849" endtime="20201030 10:59:04.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.845" endtime="20201030 10:59:04.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.842" endtime="20201030 10:59:04.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.341" endtime="20201030 10:59:04.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.340" endtime="20201030 10:59:04.874"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.898" endtime="20201030 10:59:04.921"></status>
</kw>
<msg timestamp="20201030 10:59:04.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.894" endtime="20201030 10:59:04.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.925" endtime="20201030 10:59:04.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.931" endtime="20201030 10:59:04.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.887" endtime="20201030 10:59:04.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.881" endtime="20201030 10:59:04.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.955" endtime="20201030 10:59:05.298"></status>
</kw>
<msg timestamp="20201030 10:59:05.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042133542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.951" endtime="20201030 10:59:05.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042133542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.307" endtime="20201030 10:59:05.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.326" endtime="20201030 10:59:05.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.944" endtime="20201030 10:59:05.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.939" endtime="20201030 10:59:05.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.343" level="INFO">${RESULT} = [{'diff': 0.00010095900000000463}, {'diff': 0.00010034699999999369}, {'diff': 0.00010106900000000224}, {'diff': 0.00010070899999999744}, {'diff': 0.00010045900000000413}, {'diff': 0.000100902999999999...</msg>
<status status="PASS" starttime="20201030 10:59:05.334" endtime="20201030 10:59:05.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.354" level="INFO">${ACCURACY} = {'diff': [0.00010095900000000463, 0.00010034699999999369, 0.00010106900000000224, 0.00010070899999999744, 0.00010045900000000413, 0.00010090299999999941, 0.00010026399999999575, 0.00010042999999999858...</msg>
<status status="PASS" starttime="20201030 10:59:05.345" endtime="20201030 10:59:05.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.365" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.363" endtime="20201030 10:59:05.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.370" level="INFO">VALUE: [0.00010095900000000463, 0.00010034699999999369, 0.00010106900000000224, 0.00010070899999999744, 0.00010045900000000413, 0.00010090299999999941, 0.00010026399999999575, 0.00010042999999999858, 0.00010029100000000235, 0.00010106900000000224, 0.00010045799999999772, 0.00010095799999999822, 0.00010107000000000171, 0.00010107000000000171, 0.00010032000000000096, 0.0001003610000000002, 0.00010099999999999693, 0.00010043100000000499, 0.00010111099999999401, 0.00010030500000000192, 0.00010097199999999779, 0.00010030500000000192, 0.00010075000000000361, 0.00010012499999999952, 0.00010094399999999865, 0.0001004730000000037, 0.00010042999999999858, 0.00010106900000000224, 0.00010074999999999668, 0.00010058300000000131, 0.0001009159999999995, 0.00010091699999999898, 0.00010087500000000027, 0.00010090299999999941, 0.00010087500000000027, 0.00010041699999999848, 0.00010036199999999967, 0.00010080499999999548, 0.00010084700000000113, 0.0001003610000000002, 0.00010081900000000199, 0.00010104199999999564, 0.00010026399999999575, 0.0001005280000000025, 0.00010115299999999966, 0.0001007359999999971, 0.00010049999999999643, 0.00010087500000000027, 0.00010034700000000063, 0.00010030500000000192]</msg>
<status status="PASS" starttime="20201030 10:59:05.367" endtime="20201030 10:59:05.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.356" endtime="20201030 10:59:05.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.383" endtime="20201030 10:59:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.379" endtime="20201030 10:59:05.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.376" endtime="20201030 10:59:05.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.877" endtime="20201030 10:59:05.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.875" endtime="20201030 10:59:05.408"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.431" endtime="20201030 10:59:05.454"></status>
</kw>
<msg timestamp="20201030 10:59:05.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.428" endtime="20201030 10:59:05.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.458" endtime="20201030 10:59:05.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.464" endtime="20201030 10:59:05.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.421" endtime="20201030 10:59:05.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.415" endtime="20201030 10:59:05.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.488" endtime="20201030 10:59:05.833"></status>
</kw>
<msg timestamp="20201030 10:59:05.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041594958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041696347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.484" endtime="20201030 10:59:05.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041594958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041696347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.843" endtime="20201030 10:59:05.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.862" endtime="20201030 10:59:05.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.477" endtime="20201030 10:59:05.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.472" endtime="20201030 10:59:05.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.879" level="INFO">${RESULT} = [{'diff': 0.00010138900000000034}, {'diff': 0.00010177799999999682}, {'diff': 0.00010188900000000084}, {'diff': 0.00010187500000000127}, {'diff': 0.00010140299999999991}, {'diff': 0.000101764000000004...</msg>
<status status="PASS" starttime="20201030 10:59:05.870" endtime="20201030 10:59:05.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.888" level="INFO">${ACCURACY} = {'diff': [0.00010138900000000034, 0.00010177799999999682, 0.00010188900000000084, 0.00010187500000000127, 0.00010140299999999991, 0.00010176400000000418, 0.00010163900000000059, 0.0001015559999999957,...</msg>
<status status="PASS" starttime="20201030 10:59:05.881" endtime="20201030 10:59:05.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.899" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.897" endtime="20201030 10:59:05.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.905" level="INFO">VALUE: [0.00010138900000000034, 0.00010177799999999682, 0.00010188900000000084, 0.00010187500000000127, 0.00010140299999999991, 0.00010176400000000418, 0.00010163900000000059, 0.0001015559999999957, 0.00010126400000000368, 0.00010172199999999854, 0.00010152699999999709, 0.00010208300000000281, 0.00010127799999999632, 0.00010204200000000357, 0.00010169499999999887, 0.00010166699999999973, 0.00010140299999999991, 0.00010169499999999887, 0.00010163900000000059, 0.00010175000000000461, 0.00010131900000000249, 0.00010143099999999905, 0.0001012359999999976, 0.00010183300000000256, 0.00010208299999999587, 0.00010140299999999991, 0.00010127800000000325, 0.00010137500000000077, 0.00010111200000000042, 0.00010215200000000119, 0.00010176399999999725, 0.00010179100000000385, 0.00010145799999999872, 0.00010125000000000411, 0.00010140299999999991, 0.00010147199999999829, 0.0001017359999999981, 0.00010140299999999991, 0.00010145899999999819, 0.00010142999999999958, 0.00010195799999999922, 0.00010148599999999786, 0.00010179200000000332, 0.00010197199999999879, 0.0001013060000000024, 0.00010147199999999829, 0.00010215200000000119, 0.00010126400000000368, 0.00010195900000000563, 0.00010188800000000137]</msg>
<status status="PASS" starttime="20201030 10:59:05.902" endtime="20201030 10:59:05.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.890" endtime="20201030 10:59:05.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.918" endtime="20201030 10:59:05.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.913" endtime="20201030 10:59:05.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.911" endtime="20201030 10:59:05.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.410" endtime="20201030 10:59:05.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.409" endtime="20201030 10:59:05.943"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.966" endtime="20201030 10:59:05.990"></status>
</kw>
<msg timestamp="20201030 10:59:05.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.963" endtime="20201030 10:59:05.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.994" endtime="20201030 10:59:05.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.000" endtime="20201030 10:59:06.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.955" endtime="20201030 10:59:06.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.949" endtime="20201030 10:59:06.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.024" endtime="20201030 10:59:06.366"></status>
</kw>
<msg timestamp="20201030 10:59:06.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.021" endtime="20201030 10:59:06.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.375" endtime="20201030 10:59:06.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.394" endtime="20201030 10:59:06.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.013" endtime="20201030 10:59:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.009" endtime="20201030 10:59:06.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.411" level="INFO">${RESULT} = [{'diff': 0.00010294500000000012}, {'diff': 0.00010274999999999868}, {'diff': 0.00010312499999999558}, {'diff': 0.00010258300000000331}, {'diff': 0.00010227799999999732}, {'diff': 0.000102375000000001...</msg>
<status status="PASS" starttime="20201030 10:59:06.402" endtime="20201030 10:59:06.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.420" level="INFO">${ACCURACY} = {'diff': [0.00010294500000000012, 0.00010274999999999868, 0.00010312499999999558, 0.00010258300000000331, 0.00010227799999999732, 0.00010237500000000177, 0.00010224999999999818, 0.00010295800000000022...</msg>
<status status="PASS" starttime="20201030 10:59:06.413" endtime="20201030 10:59:06.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.431" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.429" endtime="20201030 10:59:06.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.437" level="INFO">VALUE: [0.00010294500000000012, 0.00010274999999999868, 0.00010312499999999558, 0.00010258300000000331, 0.00010227799999999732, 0.00010237500000000177, 0.00010224999999999818, 0.00010295800000000022, 0.00010293100000000055, 0.00010301400000000543, 0.00010311099999999601, 0.00010247199999999929, 0.00010244499999999962, 0.00010295800000000022, 0.00010249999999999843, 0.0001024860000000058, 0.00010270799999999997, 0.00010295800000000022, 0.000102513999999998, 0.00010243100000000005, 0.00010274999999999868, 0.0001028060000000039, 0.0001030410000000051, 0.00010297199999999979, 0.0001021939999999999, 0.00010242999999999364, 0.00010320899999999994, 0.00010229199999999689, 0.00010229199999999689, 0.00010234699999999569, 0.00010219499999999937, 0.000102513999999998, 0.00010254199999999714, 0.00010258299999999637, 0.00010272199999999954, 0.0001028610000000027, 0.00010216700000000023, 0.00010284699999999619, 0.0001030139999999985, 0.00010279200000000432, 0.00010229200000000382, 0.00010279200000000432, 0.00010279199999999739, 0.00010222199999999904, 0.00010281899999999705, 0.00010226399999999775, 0.00010270799999999997, 0.00010281899999999705, 0.00010309699999999644, 0.0001024860000000058]</msg>
<status status="PASS" starttime="20201030 10:59:06.434" endtime="20201030 10:59:06.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.422" endtime="20201030 10:59:06.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.455" endtime="20201030 10:59:06.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.445" endtime="20201030 10:59:06.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.443" endtime="20201030 10:59:06.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.945" endtime="20201030 10:59:06.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.944" endtime="20201030 10:59:06.481"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.504" endtime="20201030 10:59:06.528"></status>
</kw>
<msg timestamp="20201030 10:59:06.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.500" endtime="20201030 10:59:06.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.532" endtime="20201030 10:59:06.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.538" endtime="20201030 10:59:06.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.493" endtime="20201030 10:59:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.487" endtime="20201030 10:59:06.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.561" endtime="20201030 10:59:06.903"></status>
</kw>
<msg timestamp="20201030 10:59:06.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04183525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:06.558" endtime="20201030 10:59:06.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04183525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:06.912" endtime="20201030 10:59:06.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.931" endtime="20201030 10:59:06.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.551" endtime="20201030 10:59:06.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.546" endtime="20201030 10:59:06.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.948" level="INFO">${RESULT} = [{'diff': 0.00010359699999999694}, {'diff': 0.00010333400000000353}, {'diff': 0.00010390299999999547}, {'diff': 0.00010341699999999454}, {'diff': 0.00010411099999999701}, {'diff': 0.000103264000000005...</msg>
<status status="PASS" starttime="20201030 10:59:06.939" endtime="20201030 10:59:06.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.959" level="INFO">${ACCURACY} = {'diff': [0.00010359699999999694, 0.00010333400000000353, 0.00010390299999999547, 0.00010341699999999454, 0.00010411099999999701, 0.00010326400000000568, 0.00010376399999999925, 0.00010411099999999701...</msg>
<status status="PASS" starttime="20201030 10:59:06.950" endtime="20201030 10:59:06.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.964" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.963" endtime="20201030 10:59:06.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.967" level="INFO">VALUE: [0.00010359699999999694, 0.00010333400000000353, 0.00010390299999999547, 0.00010341699999999454, 0.00010411099999999701, 0.00010326400000000568, 0.00010376399999999925, 0.00010411099999999701, 0.00010411099999999701, 0.00010404199999999864, 0.000103416000000002, 0.00010384699999999719, 0.00010366700000000173, 0.00010340300000000191, 0.00010384700000000413, 0.00010391599999999557, 0.00010404099999999916, 0.00010362500000000302, 0.00010377700000000628, 0.00010327699999999884, 0.00010322200000000004, 0.00010349999999999943, 0.00010408400000000428, 0.00010347200000000029, 0.00010352799999999857, 0.00010322299999999951, 0.00010376399999999925, 0.00010355499999999823, 0.00010392999999999514, 0.00010413899999999615, 0.00010330499999999798, 0.0001037360000000001, 0.00010343100000000105, 0.00010365300000000216, 0.00010412499999999658, 0.00010398699999999983, 0.00010359799999999642, 0.00010409699999999744, 0.00010372200000000054, 0.0001040689999999983, 0.00010374999999999968, 0.00010343000000000158, 0.0001036810000000013, 0.00010391700000000198, 0.00010365299999999522, 0.0001031810000000008, 0.0001033610000000032, 0.00010330500000000492, 0.00010352700000000603, 0.00010326399999999875]</msg>
<status status="PASS" starttime="20201030 10:59:06.966" endtime="20201030 10:59:06.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.960" endtime="20201030 10:59:06.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.973" endtime="20201030 10:59:06.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.971" endtime="20201030 10:59:06.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.970" endtime="20201030 10:59:06.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.483" endtime="20201030 10:59:06.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.481" endtime="20201030 10:59:06.994"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.005" endtime="20201030 10:59:07.025"></status>
</kw>
<msg timestamp="20201030 10:59:07.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.003" endtime="20201030 10:59:07.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.027" endtime="20201030 10:59:07.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.030" endtime="20201030 10:59:07.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.000" endtime="20201030 10:59:07.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.997" endtime="20201030 10:59:07.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.041" endtime="20201030 10:59:07.358"></status>
</kw>
<msg timestamp="20201030 10:59:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02468425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:07.039" endtime="20201030 10:59:07.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02468425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:07.367" endtime="20201030 10:59:07.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.385" endtime="20201030 10:59:07.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.036" endtime="20201030 10:59:07.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.034" endtime="20201030 10:59:07.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.403" level="INFO">${RESULT} = [{'diff': 0.00010497199999999832}, {'diff': 0.00010445799999999825}, {'diff': 0.0001045559999999987}, {'diff': 0.00010508299999999887}, {'diff': 0.00010443100000000205}, {'diff': 0.0001042639999999997...</msg>
<status status="PASS" starttime="20201030 10:59:07.394" endtime="20201030 10:59:07.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.414" level="INFO">${ACCURACY} = {'diff': [0.00010497199999999832, 0.00010445799999999825, 0.0001045559999999987, 0.00010508299999999887, 0.00010443100000000205, 0.00010426399999999975, 0.00010506999999999878, 0.0001047079999999985, ...</msg>
<status status="PASS" starttime="20201030 10:59:07.405" endtime="20201030 10:59:07.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.425" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.422" endtime="20201030 10:59:07.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.430" level="INFO">VALUE: [0.00010497199999999832, 0.00010445799999999825, 0.0001045559999999987, 0.00010508299999999887, 0.00010443100000000205, 0.00010426399999999975, 0.00010506999999999878, 0.0001047079999999985, 0.00010445799999999825, 0.00010427799999999932, 0.00010463900000000012, 0.00010457000000000174, 0.00010427799999999932, 0.0001046949999999984, 0.00010458400000000131, 0.00010430599999999846, 0.00010445900000000119, 0.00010445800000000172, 0.00010423599999999714, 0.00010455499999999923, 0.00010498599999999789, 0.00010509700000000191, 0.00010490299999999994, 0.00010433299999999812, 0.00010418099999999833, 0.00010430600000000192, 0.0001042360000000006, 0.00010488900000000037, 0.00010512500000000105, 0.00010447200000000129, 0.00010488900000000037, 0.00010476400000000025, 0.00010450000000000043, 0.00010511100000000148, 0.00010463900000000012, 0.00010487499999999733, 0.00010463800000000065, 0.00010454099999999966, 0.00010509699999999844, 0.00010473700000000058, 0.00010430599999999846, 0.00010440299999999944, 0.00010445800000000172, 0.00010441599999999954, 0.00010481900000000252, 0.00010444500000000162, 0.00010426400000000322, 0.00010452799999999957, 0.00010512500000000105, 0.00010477799999999982]</msg>
<status status="PASS" starttime="20201030 10:59:07.427" endtime="20201030 10:59:07.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.416" endtime="20201030 10:59:07.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.443" endtime="20201030 10:59:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.438" endtime="20201030 10:59:07.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.436" endtime="20201030 10:59:07.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.995" endtime="20201030 10:59:07.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.994" endtime="20201030 10:59:07.468"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.491" endtime="20201030 10:59:07.514"></status>
</kw>
<msg timestamp="20201030 10:59:07.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.488" endtime="20201030 10:59:07.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.517" endtime="20201030 10:59:07.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.524" endtime="20201030 10:59:07.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.480" endtime="20201030 10:59:07.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.474" endtime="20201030 10:59:07.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.548" endtime="20201030 10:59:07.888"></status>
</kw>
<msg timestamp="20201030 10:59:07.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041597278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.544" endtime="20201030 10:59:07.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041597278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.897" endtime="20201030 10:59:07.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.917" endtime="20201030 10:59:07.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.537" endtime="20201030 10:59:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.532" endtime="20201030 10:59:07.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.935" level="INFO">${RESULT} = [{'diff': 0.00010583299999999962}, {'diff': 0.00010587499999999833}, {'diff': 0.0001058889999999979}, {'diff': 0.00010563899999999765}, {'diff': 0.00010548699999999439}, {'diff': 0.0001054170000000034...</msg>
<status status="PASS" starttime="20201030 10:59:07.926" endtime="20201030 10:59:07.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.944" level="INFO">${ACCURACY} = {'diff': [0.00010583299999999962, 0.00010587499999999833, 0.0001058889999999979, 0.00010563899999999765, 0.00010548699999999439, 0.00010541700000000348, 0.0001054019999999975, 0.00010606999999999978, ...</msg>
<status status="PASS" starttime="20201030 10:59:07.937" endtime="20201030 10:59:07.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.955" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.953" endtime="20201030 10:59:07.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.961" level="INFO">VALUE: [0.00010583299999999962, 0.00010587499999999833, 0.0001058889999999979, 0.00010563899999999765, 0.00010548699999999439, 0.00010541700000000348, 0.0001054019999999975, 0.00010606999999999978, 0.00010559699999999894, 0.00010563899999999765, 0.00010611099999999901, 0.0001057219999999956, 0.00010512499999999758, 0.00010548600000000186, 0.00010547200000000229, 0.00010602699999999465, 0.00010559699999999894, 0.00010536099999999826, 0.0001053339999999986, 0.00010534699999999869, 0.00010591599999999757, 0.00010604200000000064, 0.00010561099999999851, 0.00010581999999999953, 0.00010543099999999611, 0.00010597300000000226, 0.00010594399999999671, 0.00010548600000000186, 0.00010580500000000048, 0.00010541699999999654, 0.00010547199999999535, 0.00010618099999999686, 0.00010554200000000014, 0.00010536099999999826, 0.00010595900000000269, 0.00010524999999999424, 0.00010611200000000542, 0.00010513900000000409, 0.00010530499999999998, 0.00010575000000000168, 0.00010543000000000358, 0.00010572300000000201, 0.00010613899999999815, 0.0001055559999999997, 0.00010591700000000398, 0.00010576399999999431, 0.00010545900000000219, 0.00010576399999999431, 0.00010572200000000254, 0.00010572200000000254]</msg>
<status status="PASS" starttime="20201030 10:59:07.958" endtime="20201030 10:59:07.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.946" endtime="20201030 10:59:07.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.973" endtime="20201030 10:59:07.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.969" endtime="20201030 10:59:07.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.966" endtime="20201030 10:59:07.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.470" endtime="20201030 10:59:07.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.469" endtime="20201030 10:59:07.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.564" endtime="20201030 10:59:07.998"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:15.432" endtime="20201030 10:59:08.001" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.019" endtime="20201030 10:59:08.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.016" endtime="20201030 10:59:08.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.077" endtime="20201030 10:59:08.099"></status>
</kw>
<msg timestamp="20201030 10:59:08.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.074" endtime="20201030 10:59:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.102" endtime="20201030 10:59:08.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:08.109" endtime="20201030 10:59:08.114"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:08.067" endtime="20201030 10:59:08.117"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:08.060" endtime="20201030 10:59:08.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.058" endtime="20201030 10:59:08.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:08.127" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:08.126" endtime="20201030 10:59:08.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.121" endtime="20201030 10:59:08.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.054" endtime="20201030 10:59:08.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.053" endtime="20201030 10:59:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.131" endtime="20201030 10:59:08.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.049" endtime="20201030 10:59:08.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.044" endtime="20201030 10:59:08.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.013" endtime="20201030 10:59:08.138"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.163" endtime="20201030 10:59:08.181"></status>
</kw>
<msg timestamp="20201030 10:59:08.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.160" endtime="20201030 10:59:08.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.185" endtime="20201030 10:59:08.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.192" endtime="20201030 10:59:08.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.153" endtime="20201030 10:59:08.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.147" endtime="20201030 10:59:08.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.215" endtime="20201030 10:59:08.569"></status>
</kw>
<msg timestamp="20201030 10:59:08.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137595681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13760175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:08.212" endtime="20201030 10:59:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137595681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13760175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:08.578" endtime="20201030 10:59:08.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.597" endtime="20201030 10:59:08.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.205" endtime="20201030 10:59:08.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.200" endtime="20201030 10:59:08.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:08.614" level="INFO">${RESULT} = [{'diff': 6.0689999999974376e-06}, {'diff': 6.041999999983894e-06}, {'diff': 6.05600000000428e-06}, {'diff': 5.555999999989902e-06}, {'diff': 6.583000000004446e-06}, {'diff': 5.52800000000464e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:08.605" endtime="20201030 10:59:08.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:08.623" level="INFO">${ACCURACY} = {'diff': [6.0689999999974376e-06, 6.041999999983894e-06, 6.05600000000428e-06, 5.555999999989902e-06, 6.583000000004446e-06, 5.52800000000464e-06, 6.0139999999986316e-06, 6.111000000003086e-06, 5.5280...</msg>
<status status="PASS" starttime="20201030 10:59:08.616" endtime="20201030 10:59:08.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.635" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:59:08.632" endtime="20201030 10:59:08.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.640" level="INFO">VALUE: [6.0689999999974376e-06, 6.041999999983894e-06, 6.05600000000428e-06, 5.555999999989902e-06, 6.583000000004446e-06, 5.52800000000464e-06, 6.0139999999986316e-06, 6.111000000003086e-06, 5.52800000000464e-06, 6.0689999999974376e-06, 5.52800000000464e-06, 5.541000000025553e-06, 6.125000000023473e-06, 5.570000000010289e-06, 5.541999999997271e-06, 5.555999999989902e-06, 5.555999999989902e-06, 6.098000000009929e-06, 6.097000000010455e-06, 5.45800000001373e-06, 5.569999999982533e-06, 6.0969999999827e-06, 6.0000000000060005e-06, 5.541999999997271e-06, 6.56899999998406e-06, 6.0139999999986316e-06, 6.05600000000428e-06, 6.05600000000428e-06, 5.541999999997271e-06, 5.541999999997271e-06, 5.500000000019378e-06, 6.6519999999958834e-06, 6.0410000000121755e-06, 6.583000000004446e-06, 5.555999999989902e-06, 6.097000000010455e-06, 6.042000000011649e-06, 6.0550000000048065e-06, 5.556000000017658e-06, 5.540999999997798e-06, 5.597000000023833e-06, 6.083000000017824e-06, 6.04099999998442e-06, 6.098000000009929e-06, 6.0969999999827e-06, 6.0969999999827e-06, 6.166000000001892e-06, 6.097999999982173e-06, 5.625000000009095e-06, 5.52800000000464e-06]</msg>
<status status="PASS" starttime="20201030 10:59:08.637" endtime="20201030 10:59:08.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.625" endtime="20201030 10:59:08.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.652" endtime="20201030 10:59:08.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.647" endtime="20201030 10:59:08.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.645" endtime="20201030 10:59:08.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.143" endtime="20201030 10:59:08.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.141" endtime="20201030 10:59:08.677"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.707" endtime="20201030 10:59:08.727"></status>
</kw>
<msg timestamp="20201030 10:59:08.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.696" endtime="20201030 10:59:08.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.730" endtime="20201030 10:59:08.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.737" endtime="20201030 10:59:08.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.689" endtime="20201030 10:59:08.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.683" endtime="20201030 10:59:08.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.762" endtime="20201030 10:59:09.121"></status>
</kw>
<msg timestamp="20201030 10:59:09.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050002472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050009125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.759" endtime="20201030 10:59:09.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050002472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050009125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.131" endtime="20201030 10:59:09.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.149" endtime="20201030 10:59:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.751" endtime="20201030 10:59:09.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.746" endtime="20201030 10:59:09.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.167" level="INFO">${RESULT} = [{'diff': 6.653000000002296e-06}, {'diff': 7.153000000002796e-06}, {'diff': 6.583999999996981e-06}, {'diff': 7.111000000004086e-06}, {'diff': 7.111000000004086e-06}, {'diff': 7.167000000002366e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:09.158" endtime="20201030 10:59:09.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.176" level="INFO">${ACCURACY} = {'diff': [6.653000000002296e-06, 7.153000000002796e-06, 6.583999999996981e-06, 7.111000000004086e-06, 7.111000000004086e-06, 7.167000000002366e-06, 6.625000000003156e-06, 7.152000000003322e-06, 6.5969...</msg>
<status status="PASS" starttime="20201030 10:59:09.169" endtime="20201030 10:59:09.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.187" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.185" endtime="20201030 10:59:09.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.193" level="INFO">VALUE: [6.653000000002296e-06, 7.153000000002796e-06, 6.583999999996981e-06, 7.111000000004086e-06, 7.111000000004086e-06, 7.167000000002366e-06, 6.625000000003156e-06, 7.152000000003322e-06, 6.5969999999970774e-06, 7.097000000004516e-06, 6.597000000004016e-06, 7.110999999997147e-06, 6.59800000000349e-06, 7.125000000003656e-06, 6.58400000000392e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.610999999996647e-06, 7.1519999999963835e-06, 7.138999999996287e-06, 6.597000000004016e-06, 7.068999999998438e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 7.138999999996287e-06, 7.166999999995427e-06, 6.625000000003156e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.138999999996287e-06, 7.152000000003322e-06, 7.153000000002796e-06, 6.526999999999228e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.0690000000053765e-06, 7.09800000000399e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 7.097000000004516e-06, 7.153000000002796e-06, 6.5969999999970774e-06, 7.138999999996287e-06, 7.195000000001506e-06, 7.110999999997147e-06, 7.139000000003226e-06, 6.5969999999970774e-06, 7.153000000002796e-06, 7.153000000002796e-06, 6.568999999997938e-06]</msg>
<status status="PASS" starttime="20201030 10:59:09.190" endtime="20201030 10:59:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.178" endtime="20201030 10:59:09.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.206" endtime="20201030 10:59:09.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.200" endtime="20201030 10:59:09.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.198" endtime="20201030 10:59:09.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.679" endtime="20201030 10:59:09.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.677" endtime="20201030 10:59:09.232"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.256" endtime="20201030 10:59:09.274"></status>
</kw>
<msg timestamp="20201030 10:59:09.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.253" endtime="20201030 10:59:09.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.277" endtime="20201030 10:59:09.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.284" endtime="20201030 10:59:09.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.245" endtime="20201030 10:59:09.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.239" endtime="20201030 10:59:09.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.308" endtime="20201030 10:59:09.654"></status>
</kw>
<msg timestamp="20201030 10:59:09.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042917361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.304" endtime="20201030 10:59:09.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042917361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.664" endtime="20201030 10:59:09.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.683" endtime="20201030 10:59:09.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.297" endtime="20201030 10:59:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.292" endtime="20201030 10:59:09.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.700" level="INFO">${RESULT} = [{'diff': 8.208000000002602e-06}, {'diff': 8.181000000002936e-06}, {'diff': 7.695000000002006e-06}, {'diff': 7.736000000001242e-06}, {'diff': 7.653000000003296e-06}, {'diff': 7.666000000003392e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:09.691" endtime="20201030 10:59:09.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.711" level="INFO">${ACCURACY} = {'diff': [8.208000000002602e-06, 8.181000000002936e-06, 7.695000000002006e-06, 7.736000000001242e-06, 7.653000000003296e-06, 7.666000000003392e-06, 7.652000000003822e-06, 8.207999999995663e-06, 7.6519...</msg>
<status status="PASS" starttime="20201030 10:59:09.702" endtime="20201030 10:59:09.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.722" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.720" endtime="20201030 10:59:09.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.728" level="INFO">VALUE: [8.208000000002602e-06, 8.181000000002936e-06, 7.695000000002006e-06, 7.736000000001242e-06, 7.653000000003296e-06, 7.666000000003392e-06, 7.652000000003822e-06, 8.207999999995663e-06, 7.651999999996884e-06, 7.652999999996357e-06, 7.652999999996357e-06, 7.652999999996357e-06, 8.221999999995233e-06, 7.652000000003822e-06, 7.653000000003296e-06, 7.665999999996453e-06, 7.653000000003296e-06, 7.665999999996453e-06, 8.194000000003032e-06, 8.222000000002172e-06, 7.639000000003726e-06, 8.180000000003462e-06, 8.193999999996093e-06, 8.165999999996953e-06, 8.153000000003796e-06, 8.180000000003462e-06, 7.652999999996357e-06, 8.221999999995233e-06, 8.179999999996523e-06, 7.667000000002866e-06, 7.652000000003822e-06, 8.152999999996857e-06, 7.694000000002532e-06, 8.208000000002602e-06, 8.194000000003032e-06, 7.611000000004586e-06, 8.180999999995997e-06, 8.166999999996427e-06, 8.223000000001646e-06, 7.665999999996453e-06, 8.166999999996427e-06, 7.665999999996453e-06, 7.5969999999980775e-06, 8.152999999996857e-06, 8.208000000002602e-06, 7.665999999996453e-06, 7.638999999996787e-06, 8.165999999996953e-06, 8.195000000002506e-06, 7.653000000003296e-06]</msg>
<status status="PASS" starttime="20201030 10:59:09.725" endtime="20201030 10:59:09.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.713" endtime="20201030 10:59:09.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.740" endtime="20201030 10:59:09.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.736" endtime="20201030 10:59:09.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.733" endtime="20201030 10:59:09.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.234" endtime="20201030 10:59:09.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.233" endtime="20201030 10:59:09.766"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.789" endtime="20201030 10:59:09.806"></status>
</kw>
<msg timestamp="20201030 10:59:09.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.786" endtime="20201030 10:59:09.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.810" endtime="20201030 10:59:09.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.816" endtime="20201030 10:59:09.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.778" endtime="20201030 10:59:09.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.772" endtime="20201030 10:59:09.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.840" endtime="20201030 10:59:10.183"></status>
</kw>
<msg timestamp="20201030 10:59:10.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042384528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.837" endtime="20201030 10:59:10.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042384528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.192" endtime="20201030 10:59:10.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.211" endtime="20201030 10:59:10.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.829" endtime="20201030 10:59:10.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.824" endtime="20201030 10:59:10.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.229" level="INFO">${RESULT} = [{'diff': 8.708999999995637e-06}, {'diff': 9.194999999996567e-06}, {'diff': 9.221999999996233e-06}, {'diff': 9.292000000001022e-06}, {'diff': 8.181000000002936e-06}, {'diff': 8.222000000002172e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:10.220" endtime="20201030 10:59:10.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.240" level="INFO">${ACCURACY} = {'diff': [8.708999999995637e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.292000000001022e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.681000000003436e-06, 9.222000000003172e-06, 9.2640...</msg>
<status status="PASS" starttime="20201030 10:59:10.231" endtime="20201030 10:59:10.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.251" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.249" endtime="20201030 10:59:10.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.257" level="INFO">VALUE: [8.708999999995637e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.292000000001022e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.681000000003436e-06, 9.222000000003172e-06, 9.264000000001882e-06, 9.305000000001118e-06, 9.165999999997954e-06, 8.723000000002146e-06, 8.764000000001382e-06, 8.722000000002672e-06, 9.263999999994943e-06, 8.708999999995637e-06, 9.221999999996233e-06, 9.263999999994943e-06, 9.222000000003172e-06, 8.722999999995207e-06, 9.250000000002312e-06, 8.723000000002146e-06, 9.291000000001548e-06, 9.208999999996137e-06, 8.722000000002672e-06, 8.722999999995207e-06, 8.721999999995733e-06, 8.181000000002936e-06, 8.721999999995733e-06, 8.639000000004726e-06, 9.208999999996137e-06, 9.278000000001452e-06, 9.278000000001452e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.666999999996927e-06, 8.736000000002242e-06, 8.735999999995303e-06, 9.236000000002742e-06, 9.179999999997523e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.708000000003102e-06, 8.250000000001312e-06, 9.277999999994513e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.167000000003366e-06, 8.708000000003102e-06, 8.721999999995733e-06]</msg>
<status status="PASS" starttime="20201030 10:59:10.254" endtime="20201030 10:59:10.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.242" endtime="20201030 10:59:10.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.270" endtime="20201030 10:59:10.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.265" endtime="20201030 10:59:10.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.262" endtime="20201030 10:59:10.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.768" endtime="20201030 10:59:10.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.767" endtime="20201030 10:59:10.295"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.318" endtime="20201030 10:59:10.336"></status>
</kw>
<msg timestamp="20201030 10:59:10.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.314" endtime="20201030 10:59:10.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.340" endtime="20201030 10:59:10.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.346" endtime="20201030 10:59:10.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.307" endtime="20201030 10:59:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.301" endtime="20201030 10:59:10.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.370" endtime="20201030 10:59:10.712"></status>
</kw>
<msg timestamp="20201030 10:59:10.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041662125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.366" endtime="20201030 10:59:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041662125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.722" endtime="20201030 10:59:10.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.741" endtime="20201030 10:59:10.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.359" endtime="20201030 10:59:10.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.354" endtime="20201030 10:59:10.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.759" level="INFO">${RESULT} = [{'diff': 1.0236000000003742e-05}, {'diff': 1.0305000000002118e-05}, {'diff': 9.778000000001952e-06}, {'diff': 9.764000000002382e-06}, {'diff': 1.0320000000001162e-05}, {'diff': 9.749999999995873e-06}...</msg>
<status status="PASS" starttime="20201030 10:59:10.750" endtime="20201030 10:59:10.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.769" level="INFO">${ACCURACY} = {'diff': [1.0236000000003742e-05, 1.0305000000002118e-05, 9.778000000001952e-06, 9.764000000002382e-06, 1.0320000000001162e-05, 9.749999999995873e-06, 9.834000000000231e-06, 9.777999999995013e-06, 1.0...</msg>
<status status="PASS" starttime="20201030 10:59:10.761" endtime="20201030 10:59:10.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.780" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.777" endtime="20201030 10:59:10.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.785" level="INFO">VALUE: [1.0236000000003742e-05, 1.0305000000002118e-05, 9.778000000001952e-06, 9.764000000002382e-06, 1.0320000000001162e-05, 9.749999999995873e-06, 9.834000000000231e-06, 9.777999999995013e-06, 1.029099999999561e-05, 9.778000000001952e-06, 9.778000000001952e-06, 9.778000000001952e-06, 9.763999999995443e-06, 9.777999999995013e-06, 9.264000000001882e-06, 9.778000000001952e-06, 9.792000000001522e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.805999999994153e-06, 9.723000000003146e-06, 9.777000000002478e-06, 9.860999999999898e-06, 9.76299999999597e-06, 9.695000000004006e-06, 9.764000000002382e-06, 1.0249999999996373e-05, 1.0305999999994653e-05, 9.764000000002382e-06, 9.735999999996303e-06, 9.181000000003936e-06, 9.223000000002646e-06, 9.778000000001952e-06, 1.0292000000002022e-05, 1.0333000000001258e-05, 1.0249999999996373e-05, 1.0292000000002022e-05, 9.763999999995443e-06, 9.777999999995013e-06, 9.777999999995013e-06, 9.750000000002812e-06, 9.805000000001618e-06, 9.778000000001952e-06, 9.778000000001952e-06, 9.792000000001522e-06, 1.0277999999995513e-05, 1.0278000000002452e-05, 9.208000000003602e-06, 1.0278000000002452e-05, 9.764000000002382e-06]</msg>
<status status="PASS" starttime="20201030 10:59:10.782" endtime="20201030 10:59:10.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.770" endtime="20201030 10:59:10.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.798" endtime="20201030 10:59:10.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.794" endtime="20201030 10:59:10.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.791" endtime="20201030 10:59:10.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.297" endtime="20201030 10:59:10.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.296" endtime="20201030 10:59:10.823"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.846" endtime="20201030 10:59:10.866"></status>
</kw>
<msg timestamp="20201030 10:59:10.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.843" endtime="20201030 10:59:10.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.869" endtime="20201030 10:59:10.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.875" endtime="20201030 10:59:10.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.836" endtime="20201030 10:59:10.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.830" endtime="20201030 10:59:10.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.899" endtime="20201030 10:59:11.216"></status>
</kw>
<msg timestamp="20201030 10:59:11.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043414028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.896" endtime="20201030 10:59:11.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043414028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.225" endtime="20201030 10:59:11.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.244" endtime="20201030 10:59:11.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.889" endtime="20201030 10:59:11.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.884" endtime="20201030 10:59:11.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.261" level="INFO">${RESULT} = [{'diff': 1.0764000000003382e-05}, {'diff': 1.0819000000002188e-05}, {'diff': 1.0319000000001688e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1332999999995319e-05}, {'diff': 1.1375000000000968e-...</msg>
<status status="PASS" starttime="20201030 10:59:11.253" endtime="20201030 10:59:11.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.271" level="INFO">${ACCURACY} = {'diff': [1.0764000000003382e-05, 1.0819000000002188e-05, 1.0319000000001688e-05, 1.1403000000000107e-05, 1.1332999999995319e-05, 1.1375000000000968e-05, 1.0319000000001688e-05, 1.1389000000000538e-05...</msg>
<status status="PASS" starttime="20201030 10:59:11.263" endtime="20201030 10:59:11.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.282" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.280" endtime="20201030 10:59:11.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.288" level="INFO">VALUE: [1.0764000000003382e-05, 1.0819000000002188e-05, 1.0319000000001688e-05, 1.1403000000000107e-05, 1.1332999999995319e-05, 1.1375000000000968e-05, 1.0319000000001688e-05, 1.1389000000000538e-05, 1.0832999999994819e-05, 1.0833000000001758e-05, 1.129099999999661e-05, 1.0319000000001688e-05, 1.0833000000001758e-05, 1.0805999999995153e-05, 1.1402000000000634e-05, 1.1333000000002258e-05, 1.0847000000001328e-05, 1.0847000000001328e-05, 1.0832999999994819e-05, 1.1334000000001732e-05, 1.0833000000001758e-05, 1.1278000000003452e-05, 1.0847000000001328e-05, 1.1374999999994029e-05, 1.0819000000002188e-05, 1.0819000000002188e-05, 1.0861000000000898e-05, 1.1361000000001398e-05, 1.1389000000000538e-05, 1.0861000000000898e-05, 1.0263999999995943e-05, 1.1333000000002258e-05, 1.0833000000001758e-05, 1.0834000000001232e-05, 1.080499999999568e-05, 1.0778000000002952e-05, 1.0832999999994819e-05, 1.0819000000002188e-05, 1.0320000000001162e-05, 1.0819999999994723e-05, 1.0833000000001758e-05, 1.0861000000000898e-05, 1.0916999999999177e-05, 1.0902999999999607e-05, 1.1375000000000968e-05, 1.1348000000001301e-05, 1.0305999999994653e-05, 1.0847000000001328e-05, 1.0306000000001592e-05, 1.0834000000001232e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.284" endtime="20201030 10:59:11.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.273" endtime="20201030 10:59:11.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.306" endtime="20201030 10:59:11.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.296" endtime="20201030 10:59:11.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.293" endtime="20201030 10:59:11.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.825" endtime="20201030 10:59:11.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.824" endtime="20201030 10:59:11.331"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.355" endtime="20201030 10:59:11.372"></status>
</kw>
<msg timestamp="20201030 10:59:11.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.351" endtime="20201030 10:59:11.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.376" endtime="20201030 10:59:11.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.382" endtime="20201030 10:59:11.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.344" endtime="20201030 10:59:11.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.338" endtime="20201030 10:59:11.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.406" endtime="20201030 10:59:11.761"></status>
</kw>
<msg timestamp="20201030 10:59:11.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041724833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041737264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.403" endtime="20201030 10:59:11.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041724833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041737264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.771" endtime="20201030 10:59:11.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.790" endtime="20201030 10:59:11.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.395" endtime="20201030 10:59:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.390" endtime="20201030 10:59:11.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.808" level="INFO">${RESULT} = [{'diff': 1.2431000000000247e-05}, {'diff': 1.1332999999995319e-05}, {'diff': 1.1875000000001468e-05}, {'diff': 1.2374999999995029e-05}, {'diff': 1.1348000000001301e-05}, {'diff': 1.1917000000000177e-...</msg>
<status status="PASS" starttime="20201030 10:59:11.799" endtime="20201030 10:59:11.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.819" level="INFO">${ACCURACY} = {'diff': [1.2431000000000247e-05, 1.1332999999995319e-05, 1.1875000000001468e-05, 1.2374999999995029e-05, 1.1348000000001301e-05, 1.1917000000000177e-05, 1.181899999999625e-05, 1.1888999999994099e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:11.810" endtime="20201030 10:59:11.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.830" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.828" endtime="20201030 10:59:11.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.836" level="INFO">VALUE: [1.2431000000000247e-05, 1.1332999999995319e-05, 1.1875000000001468e-05, 1.2374999999995029e-05, 1.1348000000001301e-05, 1.1917000000000177e-05, 1.181899999999625e-05, 1.1888999999994099e-05, 1.1875000000001468e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.1874999999994529e-05, 1.1389000000000538e-05, 1.1874999999994529e-05, 1.1375000000000968e-05, 1.1375000000000968e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.2429999999993835e-05, 1.1875000000001468e-05, 1.180499999999668e-05, 1.1833000000002758e-05, 1.1347999999994363e-05, 1.2431000000000247e-05, 1.1875000000001468e-05, 1.1361000000001398e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.1944999999999317e-05, 1.1389000000000538e-05, 1.2430000000000774e-05, 1.1903000000000608e-05, 1.1361000000001398e-05, 1.1833000000002758e-05, 1.1874999999994529e-05, 1.2389000000001538e-05, 1.1875000000001468e-05, 1.1888000000001564e-05, 1.1875000000001468e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1334000000001732e-05, 1.1861000000001898e-05, 1.2389000000001538e-05, 1.1306000000002592e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1861000000001898e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.832" endtime="20201030 10:59:11.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.821" endtime="20201030 10:59:11.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.848" endtime="20201030 10:59:11.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.844" endtime="20201030 10:59:11.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.841" endtime="20201030 10:59:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.333" endtime="20201030 10:59:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.332" endtime="20201030 10:59:11.874"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.897" endtime="20201030 10:59:11.915"></status>
</kw>
<msg timestamp="20201030 10:59:11.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.893" endtime="20201030 10:59:11.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.919" endtime="20201030 10:59:11.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.925" endtime="20201030 10:59:11.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.886" endtime="20201030 10:59:11.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.880" endtime="20201030 10:59:11.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.949" endtime="20201030 10:59:12.302"></status>
</kw>
<msg timestamp="20201030 10:59:12.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042008653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.945" endtime="20201030 10:59:12.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042008653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.312" endtime="20201030 10:59:12.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.331" endtime="20201030 10:59:12.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.938" endtime="20201030 10:59:12.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.933" endtime="20201030 10:59:12.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.349" level="INFO">${RESULT} = [{'diff': 1.3459000000000387e-05}, {'diff': 1.2958000000000414e-05}, {'diff': 1.2916000000001704e-05}, {'diff': 1.3472000000000484e-05}, {'diff': 1.2889000000002038e-05}, {'diff': 1.3459000000000387e-...</msg>
<status status="PASS" starttime="20201030 10:59:12.340" endtime="20201030 10:59:12.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.360" level="INFO">${ACCURACY} = {'diff': [1.3459000000000387e-05, 1.2958000000000414e-05, 1.2916000000001704e-05, 1.3472000000000484e-05, 1.2889000000002038e-05, 1.3459000000000387e-05, 1.2945000000000317e-05, 1.2417000000000677e-05...</msg>
<status status="PASS" starttime="20201030 10:59:12.351" endtime="20201030 10:59:12.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.371" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.369" endtime="20201030 10:59:12.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.377" level="INFO">VALUE: [1.3459000000000387e-05, 1.2958000000000414e-05, 1.2916000000001704e-05, 1.3472000000000484e-05, 1.2889000000002038e-05, 1.3459000000000387e-05, 1.2945000000000317e-05, 1.2417000000000677e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2930000000001274e-05, 1.2444999999999817e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2944000000000844e-05, 1.2430000000000774e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2930000000001274e-05, 1.2929999999994335e-05, 1.2431000000000247e-05, 1.2416999999993739e-05, 1.2943999999993905e-05, 1.3444000000001344e-05, 1.2958999999999887e-05, 1.2931000000000747e-05, 1.2389000000001538e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2944000000000844e-05, 1.3458000000000914e-05, 1.2917000000001178e-05, 1.2917000000001178e-05, 1.2389000000001538e-05, 1.2388999999994599e-05, 1.2917000000001178e-05, 1.2902000000002134e-05, 1.2931000000000747e-05, 1.2888000000002564e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2431000000000247e-05, 1.2931000000000747e-05, 1.2917000000001178e-05, 1.2416000000001204e-05, 1.2917000000001178e-05, 1.2389000000001538e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.373" endtime="20201030 10:59:12.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.362" endtime="20201030 10:59:12.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.389" endtime="20201030 10:59:12.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.385" endtime="20201030 10:59:12.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.382" endtime="20201030 10:59:12.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.876" endtime="20201030 10:59:12.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.874" endtime="20201030 10:59:12.415"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.438" endtime="20201030 10:59:12.456"></status>
</kw>
<msg timestamp="20201030 10:59:12.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.434" endtime="20201030 10:59:12.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.459" endtime="20201030 10:59:12.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.466" endtime="20201030 10:59:12.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.427" endtime="20201030 10:59:12.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.421" endtime="20201030 10:59:12.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.489" endtime="20201030 10:59:12.845"></status>
</kw>
<msg timestamp="20201030 10:59:12.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041862889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.486" endtime="20201030 10:59:12.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041862889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.855" endtime="20201030 10:59:12.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.874" endtime="20201030 10:59:12.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.479" endtime="20201030 10:59:12.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.474" endtime="20201030 10:59:12.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.891" level="INFO">${RESULT} = [{'diff': 1.3930000000002274e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.3486000000000054e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3999999999993185e-...</msg>
<status status="PASS" starttime="20201030 10:59:12.882" endtime="20201030 10:59:12.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.901" level="INFO">${ACCURACY} = {'diff': [1.3930000000002274e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3486000000000054e-05, 1.4000000000000123e-05, 1.3999999999993185e-05, 1.4500000000000624e-05, 1.4541999999999333e-05...</msg>
<status status="PASS" starttime="20201030 10:59:12.893" endtime="20201030 10:59:12.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.912" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.910" endtime="20201030 10:59:12.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.918" level="INFO">VALUE: [1.3930000000002274e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3486000000000054e-05, 1.4000000000000123e-05, 1.3999999999993185e-05, 1.4500000000000624e-05, 1.4541999999999333e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.4041999999998833e-05, 1.3486000000000054e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3541999999998333e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3971999999994045e-05, 1.4514000000000193e-05, 1.3458000000000914e-05, 1.3499999999999623e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.4514000000000193e-05, 1.3986000000000554e-05, 1.3445000000000817e-05, 1.3986000000000554e-05, 1.3430000000001774e-05, 1.4041999999998833e-05, 1.3430000000001774e-05, 1.4459000000001387e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.4013999999999693e-05, 1.4555999999998903e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3486000000000054e-05, 1.3959000000000887e-05, 1.3444000000001344e-05, 1.4000000000000123e-05, 1.3486000000000054e-05, 1.4000000000000123e-05, 1.3486000000000054e-05, 1.4013999999999693e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3445000000000817e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.914" endtime="20201030 10:59:12.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.903" endtime="20201030 10:59:12.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.930" endtime="20201030 10:59:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.926" endtime="20201030 10:59:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.923" endtime="20201030 10:59:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.417" endtime="20201030 10:59:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.416" endtime="20201030 10:59:12.956"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.979" endtime="20201030 10:59:12.997"></status>
</kw>
<msg timestamp="20201030 10:59:12.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.975" endtime="20201030 10:59:12.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.000" endtime="20201030 10:59:13.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.007" endtime="20201030 10:59:13.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.968" endtime="20201030 10:59:13.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.962" endtime="20201030 10:59:13.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.032" endtime="20201030 10:59:13.392"></status>
</kw>
<msg timestamp="20201030 10:59:13.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042017875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042032931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.029" endtime="20201030 10:59:13.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042017875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042032931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.402" endtime="20201030 10:59:13.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.421" endtime="20201030 10:59:13.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.021" endtime="20201030 10:59:13.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.017" endtime="20201030 10:59:13.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.439" level="INFO">${RESULT} = [{'diff': 1.5055999999999403e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.504100000000036e-05}, {'diff': 1.454099999999986e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.454099999999986e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:13.430" endtime="20201030 10:59:13.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:13.449" level="INFO">${ACCURACY} = {'diff': [1.5055999999999403e-05, 1.455499999999943e-05, 1.504100000000036e-05, 1.454099999999986e-05, 1.5041999999999833e-05, 1.454099999999986e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:59:13.441" endtime="20201030 10:59:13.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.460" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:59:13.457" endtime="20201030 10:59:13.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.465" level="INFO">VALUE: [1.5055999999999403e-05, 1.455499999999943e-05, 1.504100000000036e-05, 1.454099999999986e-05, 1.5041999999999833e-05, 1.454099999999986e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.5069999999998973e-05, 1.454099999999986e-05, 1.5027999999993324e-05, 1.509699999999864e-05, 1.5055999999999403e-05, 1.4541999999999333e-05, 1.5055999999999403e-05, 1.4500000000000624e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.4541999999999333e-05, 1.5069000000006438e-05, 1.5111000000005148e-05, 1.455499999999943e-05, 1.4514000000000193e-05, 1.4541999999999333e-05, 1.502700000000079e-05, 1.5083000000006008e-05, 1.5000000000001124e-05, 1.454099999999986e-05, 1.505499999999993e-05, 1.454099999999986e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.50689999999995e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.455499999999943e-05, 1.5041999999999833e-05, 1.4514000000000193e-05, 1.5069999999998973e-05, 1.4555999999998903e-05, 1.4985999999994615e-05, 1.505499999999993e-05, 1.5124999999997779e-05, 1.4486000000001054e-05, 1.5069000000006438e-05, 1.4541999999999333e-05, 1.4500000000000624e-05, 1.5055999999999403e-05]</msg>
<status status="PASS" starttime="20201030 10:59:13.462" endtime="20201030 10:59:13.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.450" endtime="20201030 10:59:13.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:13.479" endtime="20201030 10:59:13.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.473" endtime="20201030 10:59:13.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.471" endtime="20201030 10:59:13.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.958" endtime="20201030 10:59:13.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.957" endtime="20201030 10:59:13.505"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.528" endtime="20201030 10:59:13.549"></status>
</kw>
<msg timestamp="20201030 10:59:13.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.525" endtime="20201030 10:59:13.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.554" endtime="20201030 10:59:13.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.563" endtime="20201030 10:59:13.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.517" endtime="20201030 10:59:13.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.511" endtime="20201030 10:59:13.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.587" endtime="20201030 10:59:13.946"></status>
</kw>
<msg timestamp="20201030 10:59:13.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042208847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.583" endtime="20201030 10:59:13.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042208847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.955" endtime="20201030 10:59:13.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.974" endtime="20201030 10:59:13.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.576" endtime="20201030 10:59:13.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.571" endtime="20201030 10:59:13.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.992" level="INFO">${RESULT} = [{'diff': 1.609699999999964e-05}, {'diff': 1.609699999999964e-05}, {'diff': 1.6125000000005718e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.561099999999871e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:13.983" endtime="20201030 10:59:13.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.003" level="INFO">${ACCURACY} = {'diff': [1.609699999999964e-05, 1.609699999999964e-05, 1.6125000000005718e-05, 1.555500000000043e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.559699999999914e-05, 1.6042000000000833e-05, 1.56...</msg>
<status status="PASS" starttime="20201030 10:59:13.994" endtime="20201030 10:59:14.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.014" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.012" endtime="20201030 10:59:14.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.019" level="INFO">VALUE: [1.609699999999964e-05, 1.609699999999964e-05, 1.6125000000005718e-05, 1.555500000000043e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.559699999999914e-05, 1.6042000000000833e-05, 1.561099999999871e-05, 1.6153000000004858e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5527999999993825e-05, 1.609699999999964e-05, 1.5555999999999903e-05, 1.611099999999921e-05, 1.6111000000006148e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.6111999999998683e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.609699999999964e-05, 1.5555999999999903e-05, 1.554100000000086e-05, 1.5555999999999903e-05, 1.5584000000005982e-05, 1.6125000000005718e-05, 1.565299999999742e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.5569999999999473e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.5542000000000333e-05, 1.618099999999706e-05, 1.608300000000007e-05, 1.5555999999999903e-05, 1.554100000000086e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.559699999999914e-05, 1.6097999999999113e-05, 1.555500000000043e-05, 1.5583999999999043e-05, 1.611099999999921e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.016" endtime="20201030 10:59:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.005" endtime="20201030 10:59:14.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.039" endtime="20201030 10:59:14.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.034" endtime="20201030 10:59:14.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.031" endtime="20201030 10:59:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.507" endtime="20201030 10:59:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.506" endtime="20201030 10:59:14.064"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.086" endtime="20201030 10:59:14.106"></status>
</kw>
<msg timestamp="20201030 10:59:14.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.083" endtime="20201030 10:59:14.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.109" endtime="20201030 10:59:14.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.117" endtime="20201030 10:59:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.076" endtime="20201030 10:59:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.070" endtime="20201030 10:59:14.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.141" endtime="20201030 10:59:14.477"></status>
</kw>
<msg timestamp="20201030 10:59:14.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041308181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.138" endtime="20201030 10:59:14.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041308181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.481" endtime="20201030 10:59:14.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.490" endtime="20201030 10:59:14.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.130" endtime="20201030 10:59:14.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.125" endtime="20201030 10:59:14.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.498" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.659700000000014e-05}, {'diff': 1.6653000000005358e-05}, {'diff': 1.6611999999999183e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.661099999999971e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:14.494" endtime="20201030 10:59:14.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.503" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.659700000000014e-05, 1.6653000000005358e-05, 1.6611999999999183e-05, 1.716699999999849e-05, 1.661099999999971e-05, 1.7181000000004998e-05, 1.661099999999971e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 10:59:14.499" endtime="20201030 10:59:14.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.509" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.507" endtime="20201030 10:59:14.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.511" level="INFO">VALUE: [1.713899999999935e-05, 1.659700000000014e-05, 1.6653000000005358e-05, 1.6611999999999183e-05, 1.716699999999849e-05, 1.661099999999971e-05, 1.7181000000004998e-05, 1.661099999999971e-05, 1.716699999999849e-05, 1.718099999999806e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.661099999999971e-05, 1.7167000000005428e-05, 1.7139000000006288e-05, 1.662499999999928e-05, 1.6637999999999376e-05, 1.661099999999971e-05, 1.7167000000005428e-05, 1.661099999999971e-05, 1.7179999999998585e-05, 1.658300000000057e-05, 1.6665999999998515e-05, 1.6637999999999376e-05, 1.7165999999999015e-05, 1.659700000000014e-05, 1.663899999999885e-05, 1.7153000000005858e-05, 1.663899999999885e-05, 1.713899999999935e-05, 1.719499999999763e-05, 1.718099999999806e-05, 1.7208000000004664e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.716699999999849e-05, 1.7166000000005954e-05, 1.663899999999885e-05, 1.6611999999999183e-05, 1.7180000000005524e-05, 1.662499999999928e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.6667000000004928e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.661099999999971e-05, 1.716699999999849e-05, 1.7235999999996865e-05, 1.661099999999971e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.510" endtime="20201030 10:59:14.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.504" endtime="20201030 10:59:14.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.517" endtime="20201030 10:59:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.515" endtime="20201030 10:59:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.514" endtime="20201030 10:59:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.066" endtime="20201030 10:59:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.065" endtime="20201030 10:59:14.538"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.549" endtime="20201030 10:59:14.567"></status>
</kw>
<msg timestamp="20201030 10:59:14.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.548" endtime="20201030 10:59:14.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.570" endtime="20201030 10:59:14.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.577" endtime="20201030 10:59:14.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.544" endtime="20201030 10:59:14.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.541" endtime="20201030 10:59:14.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.600" endtime="20201030 10:59:14.955"></status>
</kw>
<msg timestamp="20201030 10:59:14.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.597" endtime="20201030 10:59:14.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.965" endtime="20201030 10:59:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.984" endtime="20201030 10:59:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.590" endtime="20201030 10:59:14.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.585" endtime="20201030 10:59:14.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.002" level="INFO">${RESULT} = [{'diff': 1.7680000000002555e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.7722000000001265e-05}, {'diff': 1.8236000000001334e-05}, {'diff': 1.8222000000001765e-05}, {'diff': 1.7737000000000308e-...</msg>
<status status="PASS" starttime="20201030 10:59:14.993" endtime="20201030 10:59:15.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.011" level="INFO">${ACCURACY} = {'diff': [1.7680000000002555e-05, 1.7693999999998655e-05, 1.7722000000001265e-05, 1.8236000000001334e-05, 1.8222000000001765e-05, 1.7737000000000308e-05, 1.7665999999999515e-05, 1.8237000000000808e-05...</msg>
<status status="PASS" starttime="20201030 10:59:15.004" endtime="20201030 10:59:15.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.022" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.020" endtime="20201030 10:59:15.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.028" level="INFO">VALUE: [1.7680000000002555e-05, 1.7693999999998655e-05, 1.7722000000001265e-05, 1.8236000000001334e-05, 1.8222000000001765e-05, 1.7737000000000308e-05, 1.7665999999999515e-05, 1.8237000000000808e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.8221999999998295e-05, 1.8207999999998725e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.8209000000001668e-05, 1.8235999999997865e-05, 1.822299999999777e-05, 1.7722000000001265e-05, 1.8236000000001334e-05, 1.8222000000001765e-05, 1.8207999999998725e-05, 1.8207999999998725e-05, 1.8209000000001668e-05, 1.8208000000002195e-05, 1.7709000000001168e-05, 1.8221999999998295e-05, 1.715299999999892e-05, 1.82089999999982e-05, 1.715299999999892e-05, 1.768099999999856e-05, 1.7679999999999085e-05, 1.7709000000001168e-05, 1.8209000000001668e-05, 1.76950000000016e-05, 1.8221999999998295e-05, 1.8222000000001765e-05, 1.8250000000000904e-05, 1.8221999999998295e-05, 1.8222000000001765e-05, 1.8250000000000904e-05, 1.766699999999899e-05, 1.8221999999998295e-05, 1.766699999999899e-05, 1.768100000000203e-05, 1.8193999999999155e-05, 1.8207999999998725e-05, 1.81950000000021e-05, 1.7694000000002125e-05, 1.77630000000005e-05, 1.768099999999856e-05]</msg>
<status status="PASS" starttime="20201030 10:59:15.025" endtime="20201030 10:59:15.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.013" endtime="20201030 10:59:15.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.041" endtime="20201030 10:59:15.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.036" endtime="20201030 10:59:15.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.034" endtime="20201030 10:59:15.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.539" endtime="20201030 10:59:15.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.539" endtime="20201030 10:59:15.066"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.089" endtime="20201030 10:59:15.109"></status>
</kw>
<msg timestamp="20201030 10:59:15.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.086" endtime="20201030 10:59:15.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.112" endtime="20201030 10:59:15.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.119" endtime="20201030 10:59:15.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.078" endtime="20201030 10:59:15.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.073" endtime="20201030 10:59:15.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.143" endtime="20201030 10:59:15.498"></status>
</kw>
<msg timestamp="20201030 10:59:15.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041974917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.139" endtime="20201030 10:59:15.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041974917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.508" endtime="20201030 10:59:15.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.527" endtime="20201030 10:59:15.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.132" endtime="20201030 10:59:15.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.127" endtime="20201030 10:59:15.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.544" level="INFO">${RESULT} = [{'diff': 1.879099999999717e-05}, {'diff': 1.9264000000004944e-05}, {'diff': 1.8749999999997935e-05}, {'diff': 1.9292000000004084e-05}, {'diff': 1.933299999999638e-05}, {'diff': 1.8764000000004444e-05...</msg>
<status status="PASS" starttime="20201030 10:59:15.535" endtime="20201030 10:59:15.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.554" level="INFO">${ACCURACY} = {'diff': [1.879099999999717e-05, 1.9264000000004944e-05, 1.8749999999997935e-05, 1.9292000000004084e-05, 1.933299999999638e-05, 1.8764000000004444e-05, 1.8193999999999155e-05, 1.8209000000005138e-05, ...</msg>
<status status="PASS" starttime="20201030 10:59:15.546" endtime="20201030 10:59:15.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.565" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.562" endtime="20201030 10:59:15.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.570" level="INFO">VALUE: [1.879099999999717e-05, 1.9264000000004944e-05, 1.8749999999997935e-05, 1.9292000000004084e-05, 1.933299999999638e-05, 1.8764000000004444e-05, 1.8193999999999155e-05, 1.8209000000005138e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.8707999999999225e-05, 1.8777999999997075e-05, 1.8721999999998795e-05, 1.9264000000004944e-05, 1.8763999999997505e-05, 1.9291999999997145e-05, 1.8735999999998365e-05, 1.876299999999803e-05, 1.8735999999998365e-05, 1.866699999999999e-05, 1.8735999999998365e-05, 1.872299999999827e-05, 1.9263999999998005e-05, 1.9263999999998005e-05, 1.8749999999997935e-05, 1.8707999999999225e-05, 1.8834000000002293e-05, 1.9292000000004084e-05, 1.8763999999997505e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8721999999998795e-05, 1.9278000000004514e-05, 1.8735999999998365e-05, 1.9277999999997575e-05, 1.8749999999997935e-05, 1.8207999999998725e-05, 1.929099999999767e-05, 1.8764000000004444e-05, 1.8249999999997435e-05, 1.9235999999998865e-05, 1.873699999999784e-05, 1.8819999999995785e-05, 1.8721999999998795e-05, 1.8749999999997935e-05, 1.8721999999998795e-05, 1.8777999999997075e-05, 1.9235999999998865e-05]</msg>
<status status="PASS" starttime="20201030 10:59:15.567" endtime="20201030 10:59:15.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.556" endtime="20201030 10:59:15.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.584" endtime="20201030 10:59:15.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.579" endtime="20201030 10:59:15.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.576" endtime="20201030 10:59:15.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.068" endtime="20201030 10:59:15.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.067" endtime="20201030 10:59:15.610"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.633" endtime="20201030 10:59:15.652"></status>
</kw>
<msg timestamp="20201030 10:59:15.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.630" endtime="20201030 10:59:15.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.655" endtime="20201030 10:59:15.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.661" endtime="20201030 10:59:15.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.622" endtime="20201030 10:59:15.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.617" endtime="20201030 10:59:15.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.685" endtime="20201030 10:59:16.037"></status>
</kw>
<msg timestamp="20201030 10:59:16.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.682" endtime="20201030 10:59:16.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.046" endtime="20201030 10:59:16.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.065" endtime="20201030 10:59:16.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.674" endtime="20201030 10:59:16.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.670" endtime="20201030 10:59:16.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.083" level="INFO">${RESULT} = [{'diff': 1.9735999999999365e-05}, {'diff': 1.977700000000554e-05}, {'diff': 2.033299999999738e-05}, {'diff': 1.983300000000382e-05}, {'diff': 2.031899999999781e-05}, {'diff': 2.031899999999781e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:16.074" endtime="20201030 10:59:16.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.094" level="INFO">${ACCURACY} = {'diff': [1.9735999999999365e-05, 1.977700000000554e-05, 2.033299999999738e-05, 1.983300000000382e-05, 2.031899999999781e-05, 2.031899999999781e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 10:59:16.085" endtime="20201030 10:59:16.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.105" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.102" endtime="20201030 10:59:16.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.110" level="INFO">VALUE: [1.9735999999999365e-05, 1.977700000000554e-05, 2.033299999999738e-05, 1.983300000000382e-05, 2.031899999999781e-05, 2.031899999999781e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 2.03890000000026e-05, 2.033299999999738e-05, 2.033299999999738e-05, 1.9777999999998075e-05, 1.9277999999997575e-05, 2.030499999999824e-05, 2.0319999999997285e-05, 2.033300000000432e-05, 1.930499999999724e-05, 1.981900000000425e-05, 2.031899999999781e-05, 2.033300000000432e-05, 2.033300000000432e-05, 1.9792000000004584e-05, 1.9763999999998505e-05, 1.97769999999986e-05, 1.984700000000339e-05, 1.9249999999998435e-05, 1.9833999999996355e-05, 1.9264000000004944e-05, 1.981900000000425e-05, 1.9820000000003724e-05, 2.037500000000303e-05, 1.9833999999996355e-05, 1.9847999999995924e-05, 1.981899999999731e-05, 1.9777999999998075e-05, 1.9820000000003724e-05, 1.97769999999986e-05, 1.9249999999998435e-05, 1.9805999999997215e-05, 2.0347999999996425e-05, 2.0334000000003793e-05, 1.97769999999986e-05, 1.9792000000004584e-05, 1.9263999999998005e-05, 1.9777999999998075e-05, 2.037499999999609e-05, 1.988899999999516e-05, 1.9819999999996785e-05, 1.9263999999998005e-05, 2.033299999999738e-05]</msg>
<status status="PASS" starttime="20201030 10:59:16.107" endtime="20201030 10:59:16.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.095" endtime="20201030 10:59:16.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.123" endtime="20201030 10:59:16.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.119" endtime="20201030 10:59:16.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.116" endtime="20201030 10:59:16.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.612" endtime="20201030 10:59:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.611" endtime="20201030 10:59:16.148"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.171" endtime="20201030 10:59:16.192"></status>
</kw>
<msg timestamp="20201030 10:59:16.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.168" endtime="20201030 10:59:16.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.195" endtime="20201030 10:59:16.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.202" endtime="20201030 10:59:16.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.161" endtime="20201030 10:59:16.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.155" endtime="20201030 10:59:16.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.226" endtime="20201030 10:59:16.566"></status>
</kw>
<msg timestamp="20201030 10:59:16.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042575986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.223" endtime="20201030 10:59:16.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042575986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.576" endtime="20201030 10:59:16.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.594" endtime="20201030 10:59:16.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.216" endtime="20201030 10:59:16.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.211" endtime="20201030 10:59:16.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.612" level="INFO">${RESULT} = [{'diff': 2.086100000000396e-05}, {'diff': 2.137499999999709e-05}, {'diff': 2.0319999999997285e-05}, {'diff': 2.13890000000036e-05}, {'diff': 2.0833999999997355e-05}, {'diff': 2.084699999999745e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:16.603" endtime="20201030 10:59:16.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.627" level="INFO">${ACCURACY} = {'diff': [2.086100000000396e-05, 2.137499999999709e-05, 2.0319999999997285e-05, 2.13890000000036e-05, 2.0833999999997355e-05, 2.084699999999745e-05, 2.031899999999781e-05, 2.088899999999616e-05, 2.136...</msg>
<status status="PASS" starttime="20201030 10:59:16.614" endtime="20201030 10:59:16.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.638" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.636" endtime="20201030 10:59:16.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.644" level="INFO">VALUE: [2.086100000000396e-05, 2.137499999999709e-05, 2.0319999999997285e-05, 2.13890000000036e-05, 2.0833999999997355e-05, 2.084699999999745e-05, 2.031899999999781e-05, 2.088899999999616e-05, 2.136099999999752e-05, 2.033300000000432e-05, 2.0306000000004654e-05, 2.087499999999659e-05, 2.0915999999995827e-05, 2.0334000000003793e-05, 2.081899999999831e-05, 2.0834000000004294e-05, 2.143100000000231e-05, 2.034699999999695e-05, 2.0888000000003626e-05, 2.087499999999659e-05, 2.13890000000036e-05, 2.0820000000004724e-05, 2.0347999999996425e-05, 2.031899999999781e-05, 2.0833999999997355e-05, 2.137499999999709e-05, 2.0333999999996855e-05, 2.086099999999702e-05, 2.033299999999738e-05, 2.1401999999996757e-05, 2.138899999999666e-05, 2.0777999999999075e-05, 2.081899999999831e-05, 2.090299999999573e-05, 2.031899999999781e-05, 2.031899999999781e-05, 2.087500000000353e-05, 2.140300000000317e-05, 2.086100000000396e-05, 2.08890000000031e-05, 2.1388000000004126e-05, 2.138899999999666e-05, 2.087499999999659e-05, 2.084699999999745e-05, 2.086100000000396e-05, 2.087499999999659e-05, 2.0834000000004294e-05, 2.034699999999695e-05, 2.087499999999659e-05, 2.081899999999831e-05]</msg>
<status status="PASS" starttime="20201030 10:59:16.641" endtime="20201030 10:59:16.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.629" endtime="20201030 10:59:16.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.657" endtime="20201030 10:59:16.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.652" endtime="20201030 10:59:16.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.650" endtime="20201030 10:59:16.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.150" endtime="20201030 10:59:16.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.149" endtime="20201030 10:59:16.682"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.705" endtime="20201030 10:59:16.724"></status>
</kw>
<msg timestamp="20201030 10:59:16.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.701" endtime="20201030 10:59:16.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.728" endtime="20201030 10:59:16.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.734" endtime="20201030 10:59:16.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.694" endtime="20201030 10:59:16.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.688" endtime="20201030 10:59:16.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.758" endtime="20201030 10:59:17.100"></status>
</kw>
<msg timestamp="20201030 10:59:17.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041986292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.754" endtime="20201030 10:59:17.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041986292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.110" endtime="20201030 10:59:17.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.129" endtime="20201030 10:59:17.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.747" endtime="20201030 10:59:17.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.742" endtime="20201030 10:59:17.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:17.146" level="INFO">${RESULT} = [{'diff': 2.2000000000001185e-05}, {'diff': 2.1943999999995967e-05}, {'diff': 2.187499999999759e-05}, {'diff': 2.2472000000002545e-05}, {'diff': 2.194500000000238e-05}, {'diff': 2.1944000000002906e-05...</msg>
<status status="PASS" starttime="20201030 10:59:17.137" endtime="20201030 10:59:17.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:17.156" level="INFO">${ACCURACY} = {'diff': [2.2000000000001185e-05, 2.1943999999995967e-05, 2.187499999999759e-05, 2.2472000000002545e-05, 2.194500000000238e-05, 2.1944000000002906e-05, 2.243100000000331e-05, 2.1930000000003336e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:17.148" endtime="20201030 10:59:17.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.167" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:59:17.164" endtime="20201030 10:59:17.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.172" level="INFO">VALUE: [2.2000000000001185e-05, 2.1943999999995967e-05, 2.187499999999759e-05, 2.2472000000002545e-05, 2.194500000000238e-05, 2.1944000000002906e-05, 2.243100000000331e-05, 2.1930000000003336e-05, 2.137500000000403e-05, 2.140300000000317e-05, 2.194500000000238e-05, 2.244500000000288e-05, 2.137499999999709e-05, 2.237499999999809e-05, 2.13890000000036e-05, 2.186099999999802e-05, 2.1929999999996397e-05, 2.243100000000331e-05, 2.458300000000163e-05, 2.194500000000238e-05, 2.137500000000403e-05, 2.2457999999996037e-05, 2.2429999999996897e-05, 2.193100000000281e-05, 2.1930000000003336e-05, 2.136100000000446e-05, 2.1986000000001615e-05, 2.190299999999673e-05, 2.243099999999637e-05, 2.138899999999666e-05, 2.1958000000002476e-05, 2.23890000000046e-05, 2.193100000000281e-05, 2.137499999999709e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.1361999999996995e-05, 2.193099999999587e-05, 2.1930000000003336e-05, 2.1887999999997687e-05, 2.193100000000281e-05, 2.18890000000041e-05, 2.13890000000036e-05, 2.137499999999709e-05, 2.2443999999996467e-05, 2.1929999999996397e-05, 2.13890000000036e-05, 2.243099999999637e-05, 2.188899999999716e-05, 2.1915999999996827e-05]</msg>
<status status="PASS" starttime="20201030 10:59:17.169" endtime="20201030 10:59:17.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.157" endtime="20201030 10:59:17.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:17.185" endtime="20201030 10:59:17.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.180" endtime="20201030 10:59:17.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.178" endtime="20201030 10:59:17.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.684" endtime="20201030 10:59:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.683" endtime="20201030 10:59:17.210"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.235" endtime="20201030 10:59:17.256"></status>
</kw>
<msg timestamp="20201030 10:59:17.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.231" endtime="20201030 10:59:17.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.259" endtime="20201030 10:59:17.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.265" endtime="20201030 10:59:17.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.224" endtime="20201030 10:59:17.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.217" endtime="20201030 10:59:17.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.289" endtime="20201030 10:59:17.631"></status>
</kw>
<msg timestamp="20201030 10:59:17.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045610042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045632986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.286" endtime="20201030 10:59:17.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045610042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045632986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.640" endtime="20201030 10:59:17.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.659" endtime="20201030 10:59:17.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.279" endtime="20201030 10:59:17.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.274" endtime="20201030 10:59:17.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:17.677" level="INFO">${RESULT} = [{'diff': 2.2943999999996967e-05}, {'diff': 2.2958000000003476e-05}, {'diff': 2.2943999999996967e-05}, {'diff': 2.243099999999637e-05}, {'diff': 2.3499999999995747e-05}, {'diff': 2.24169999999968e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:17.668" endtime="20201030 10:59:17.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:17.686" level="INFO">${ACCURACY} = {'diff': [2.2943999999996967e-05, 2.2958000000003476e-05, 2.2943999999996967e-05, 2.243099999999637e-05, 2.3499999999995747e-05, 2.24169999999968e-05, 2.2444000000003406e-05, 2.2985999999995677e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:17.679" endtime="20201030 10:59:17.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.697" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:59:17.695" endtime="20201030 10:59:17.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.703" level="INFO">VALUE: [2.2943999999996967e-05, 2.2958000000003476e-05, 2.2943999999996967e-05, 2.243099999999637e-05, 2.3499999999995747e-05, 2.24169999999968e-05, 2.2444000000003406e-05, 2.2985999999995677e-05, 2.294499999999644e-05, 2.2430000000003836e-05, 2.244499999999594e-05, 2.2986000000002615e-05, 2.294500000000338e-05, 2.2444000000003406e-05, 2.2429999999996897e-05, 2.3000000000002185e-05, 2.2943999999996967e-05, 2.243100000000331e-05, 2.294499999999644e-05, 2.2444000000003406e-05, 2.247300000000202e-05, 2.3041999999993956e-05, 2.2943999999996967e-05, 2.294500000000338e-05, 2.3000000000002185e-05, 2.2972000000003046e-05, 2.2444000000003406e-05, 2.2985999999995677e-05, 2.2985999999995677e-05, 2.2472000000002545e-05, 2.294499999999644e-05, 2.2999999999995246e-05, 2.3485999999996177e-05, 2.244500000000288e-05, 2.2430000000003836e-05, 2.294500000000338e-05, 2.3000000000002185e-05, 2.2458000000002976e-05, 2.244499999999594e-05, 2.293099999999687e-05, 2.2986000000002615e-05, 2.295900000000295e-05, 2.3000000000002185e-05, 2.3014000000001755e-05, 2.3486000000003115e-05, 2.3584000000000105e-05, 2.2972000000003046e-05, 2.297300000000252e-05, 2.2930000000004336e-05, 2.2429999999996897e-05]</msg>
<status status="PASS" starttime="20201030 10:59:17.699" endtime="20201030 10:59:17.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.688" endtime="20201030 10:59:17.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:17.717" endtime="20201030 10:59:17.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.711" endtime="20201030 10:59:17.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.708" endtime="20201030 10:59:17.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.212" endtime="20201030 10:59:17.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.211" endtime="20201030 10:59:17.742"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.765" endtime="20201030 10:59:17.785"></status>
</kw>
<msg timestamp="20201030 10:59:17.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.762" endtime="20201030 10:59:17.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.788" endtime="20201030 10:59:17.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.792" endtime="20201030 10:59:17.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.755" endtime="20201030 10:59:17.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.749" endtime="20201030 10:59:17.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.803" endtime="20201030 10:59:18.089"></status>
</kw>
<msg timestamp="20201030 10:59:18.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041994236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.801" endtime="20201030 10:59:18.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041994236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.093" endtime="20201030 10:59:18.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.101" endtime="20201030 10:59:18.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.798" endtime="20201030 10:59:18.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.796" endtime="20201030 10:59:18.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.110" level="INFO">${RESULT} = [{'diff': 3.480600000000528e-05}, {'diff': 3.484700000000451e-05}, {'diff': 3.517999999999577e-05}, {'diff': 3.472300000000039e-05}, {'diff': 3.49450000000015e-05}, {'diff': 3.516700000000261e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:18.106" endtime="20201030 10:59:18.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:18.115" level="INFO">${ACCURACY} = {'diff': [3.480600000000528e-05, 3.484700000000451e-05, 3.517999999999577e-05, 3.472300000000039e-05, 3.49450000000015e-05, 3.516700000000261e-05, 3.438900000000272e-05, 3.423699999999946e-05, 3.50549...</msg>
<status status="PASS" starttime="20201030 10:59:18.111" endtime="20201030 10:59:18.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.120" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:59:18.119" endtime="20201030 10:59:18.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.123" level="INFO">VALUE: [3.480600000000528e-05, 3.484700000000451e-05, 3.517999999999577e-05, 3.472300000000039e-05, 3.49450000000015e-05, 3.516700000000261e-05, 3.438900000000272e-05, 3.423699999999946e-05, 3.5054999999999115e-05, 3.449999999999981e-05, 3.4569000000005123e-05, 3.515200000000357e-05, 3.444399999999459e-05, 3.4874999999996714e-05, 3.490300000000279e-05, 3.4596999999997324e-05, 3.5110999999997394e-05, 3.494399999999509e-05, 3.455600000000503e-05, 3.520800000000185e-05, 3.4332999999997504e-05, 3.504199999999902e-05, 3.495900000000107e-05, 3.49450000000015e-05, 3.447200000000067e-05, 3.483399999999748e-05, 3.500000000000031e-05, 3.4916999999995424e-05, 3.506999999999816e-05, 3.4444999999994064e-05, 3.4277000000006164e-05, 3.505599999999859e-05, 3.448699999999971e-05, 3.4624999999996464e-05, 3.46380000000035e-05, 3.473599999999355e-05, 3.468000000000221e-05, 3.493000000000246e-05, 3.4818999999998435e-05, 3.4860999999997144e-05, 3.461100000000383e-05, 3.422200000000042e-05, 3.5124999999996964e-05, 3.455599999999809e-05, 3.4819000000005373e-05, 3.429199999999827e-05, 3.441700000000186e-05, 3.504199999999902e-05, 3.451399999999938e-05, 3.42779999999987e-05]</msg>
<status status="PASS" starttime="20201030 10:59:18.121" endtime="20201030 10:59:18.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.116" endtime="20201030 10:59:18.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:18.129" endtime="20201030 10:59:18.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.127" endtime="20201030 10:59:18.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.125" endtime="20201030 10:59:18.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.744" endtime="20201030 10:59:18.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.743" endtime="20201030 10:59:18.150"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.161" endtime="20201030 10:59:18.177"></status>
</kw>
<msg timestamp="20201030 10:59:18.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.159" endtime="20201030 10:59:18.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.179" endtime="20201030 10:59:18.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.182" endtime="20201030 10:59:18.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.156" endtime="20201030 10:59:18.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.153" endtime="20201030 10:59:18.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.193" endtime="20201030 10:59:18.535"></status>
</kw>
<msg timestamp="20201030 10:59:18.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.192" endtime="20201030 10:59:18.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.544" endtime="20201030 10:59:18.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.563" endtime="20201030 10:59:18.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.188" endtime="20201030 10:59:18.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.186" endtime="20201030 10:59:18.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.581" level="INFO">${RESULT} = [{'diff': 3.526400000000013e-05}, {'diff': 3.5332999999998504e-05}, {'diff': 3.5875000000001184e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.57780000000002e-05}, {'diff': 3.5903000000000324e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:18.572" endtime="20201030 10:59:18.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:18.592" level="INFO">${ACCURACY} = {'diff': [3.526400000000013e-05, 3.5332999999998504e-05, 3.5875000000001184e-05, 3.554199999999952e-05, 3.57780000000002e-05, 3.5903000000000324e-05, 3.6111000000001864e-05, 3.5666999999999643e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:59:18.583" endtime="20201030 10:59:18.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.603" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:59:18.601" endtime="20201030 10:59:18.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.609" level="INFO">VALUE: [3.526400000000013e-05, 3.5332999999998504e-05, 3.5875000000001184e-05, 3.554199999999952e-05, 3.57780000000002e-05, 3.5903000000000324e-05, 3.6111000000001864e-05, 3.5666999999999643e-05, 3.572199999999845e-05, 3.57780000000002e-05, 3.576400000000063e-05, 3.530599999999884e-05, 3.595900000000207e-05, 3.57780000000002e-05, 3.533400000000145e-05, 3.6180999999999713e-05, 3.57780000000002e-05, 3.599999999999784e-05, 3.5653000000000074e-05, 3.544399999999906e-05, 3.5916999999999893e-05, 3.598600000000174e-05, 3.5554999999999615e-05, 3.5402999999999823e-05, 3.56659999999967e-05, 3.622199999999895e-05, 3.549999999999734e-05, 3.552799999999995e-05, 3.604200000000002e-05, 3.5416999999999393e-05, 3.6153000000000574e-05, 3.547200000000167e-05, 3.529200000000274e-05, 3.573599999999802e-05, 3.6125000000001434e-05, 3.5416999999999393e-05, 3.5361000000001114e-05, 3.598600000000174e-05, 3.6180999999999713e-05, 3.5402999999999823e-05, 3.5389000000000254e-05, 3.575000000000106e-05, 3.5653000000000074e-05, 3.556999999999866e-05, 3.552799999999995e-05, 3.5889000000000754e-05, 3.619399999999981e-05, 3.572200000000192e-05, 3.572199999999845e-05, 3.5290999999999795e-05]</msg>
<status status="PASS" starttime="20201030 10:59:18.605" endtime="20201030 10:59:18.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.594" endtime="20201030 10:59:18.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:18.621" endtime="20201030 10:59:18.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.617" endtime="20201030 10:59:18.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.614" endtime="20201030 10:59:18.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.151" endtime="20201030 10:59:18.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.150" endtime="20201030 10:59:18.647"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.670" endtime="20201030 10:59:18.690"></status>
</kw>
<msg timestamp="20201030 10:59:18.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.666" endtime="20201030 10:59:18.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.693" endtime="20201030 10:59:18.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.699" endtime="20201030 10:59:18.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.659" endtime="20201030 10:59:18.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.653" endtime="20201030 10:59:18.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.723" endtime="20201030 10:59:19.067"></status>
</kw>
<msg timestamp="20201030 10:59:19.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042236236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042273403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.720" endtime="20201030 10:59:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042236236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042273403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.077" endtime="20201030 10:59:19.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.096" endtime="20201030 10:59:19.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.713" endtime="20201030 10:59:19.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.708" endtime="20201030 10:59:19.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:19.114" level="INFO">${RESULT} = [{'diff': 3.7166999999997674e-05}, {'diff': 3.6360999999998644e-05}, {'diff': 3.6860999999999144e-05}, {'diff': 3.681999999999991e-05}, {'diff': 3.670900000000282e-05}, {'diff': 3.631999999999941e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:19.105" endtime="20201030 10:59:19.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:19.123" level="INFO">${ACCURACY} = {'diff': [3.7166999999997674e-05, 3.6360999999998644e-05, 3.6860999999999144e-05, 3.681999999999991e-05, 3.670900000000282e-05, 3.631999999999941e-05, 3.7152999999998104e-05, 3.7124999999998964e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:59:19.116" endtime="20201030 10:59:19.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.134" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:59:19.132" endtime="20201030 10:59:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.140" level="INFO">VALUE: [3.7166999999997674e-05, 3.6360999999998644e-05, 3.6860999999999144e-05, 3.681999999999991e-05, 3.670900000000282e-05, 3.631999999999941e-05, 3.7152999999998104e-05, 3.7124999999998964e-05, 3.6305000000000365e-05, 3.719399999999734e-05, 3.7110999999999394e-05, 3.6846999999999575e-05, 3.6638999999998034e-05, 3.672199999999598e-05, 3.6305000000000365e-05, 3.650000000000181e-05, 3.667999999999727e-05, 3.668000000000421e-05, 3.7138999999998534e-05, 3.67780000000012e-05, 3.7138999999998534e-05, 3.7096999999999825e-05, 3.6888999999998284e-05, 3.704200000000102e-05, 3.707000000000016e-05, 3.629200000000027e-05, 3.690300000000479e-05, 3.6638999999998034e-05, 3.6541000000001045e-05, 3.6374999999998214e-05, 3.636199999999812e-05, 3.672199999999598e-05, 3.672199999999598e-05, 3.675000000000206e-05, 3.690200000000532e-05, 3.690200000000532e-05, 3.647200000000267e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.648600000000224e-05, 3.647200000000267e-05, 3.674999999999512e-05, 3.644399999999659e-05, 3.6888999999998284e-05, 3.6360999999998644e-05, 3.623599999999505e-05, 3.6930999999996994e-05, 3.6610999999998894e-05, 3.625000000000156e-05, 3.670900000000282e-05]</msg>
<status status="PASS" starttime="20201030 10:59:19.137" endtime="20201030 10:59:19.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.125" endtime="20201030 10:59:19.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:19.161" endtime="20201030 10:59:19.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.157" endtime="20201030 10:59:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.154" endtime="20201030 10:59:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.649" endtime="20201030 10:59:19.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.647" endtime="20201030 10:59:19.186"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.210" endtime="20201030 10:59:19.230"></status>
</kw>
<msg timestamp="20201030 10:59:19.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.206" endtime="20201030 10:59:19.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.234" endtime="20201030 10:59:19.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.240" endtime="20201030 10:59:19.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.199" endtime="20201030 10:59:19.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.193" endtime="20201030 10:59:19.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.264" endtime="20201030 10:59:19.606"></status>
</kw>
<msg timestamp="20201030 10:59:19.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043419056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.261" endtime="20201030 10:59:19.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043419056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.615" endtime="20201030 10:59:19.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.634" endtime="20201030 10:59:19.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.253" endtime="20201030 10:59:19.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.248" endtime="20201030 10:59:19.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:19.652" level="INFO">${RESULT} = [{'diff': 3.7902999999998854e-05}, {'diff': 3.8013000000003405e-05}, {'diff': 3.7916999999998424e-05}, {'diff': 3.7541000000002045e-05}, {'diff': 3.795799999999766e-05}, {'diff': 3.765199999999913e-05...</msg>
<status status="PASS" starttime="20201030 10:59:19.643" endtime="20201030 10:59:19.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:19.661" level="INFO">${ACCURACY} = {'diff': [3.7902999999998854e-05, 3.8013000000003405e-05, 3.7916999999998424e-05, 3.7541000000002045e-05, 3.795799999999766e-05, 3.765199999999913e-05, 3.7874999999999714e-05, 3.8027000000002975e-05, ...</msg>
<status status="PASS" starttime="20201030 10:59:19.654" endtime="20201030 10:59:19.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.672" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:59:19.670" endtime="20201030 10:59:19.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.678" level="INFO">VALUE: [3.7902999999998854e-05, 3.8013000000003405e-05, 3.7916999999998424e-05, 3.7541000000002045e-05, 3.795799999999766e-05, 3.765199999999913e-05, 3.7874999999999714e-05, 3.8027000000002975e-05, 3.7861000000000145e-05, 3.766700000000511e-05, 3.742999999999802e-05, 3.79859999999968e-05, 3.7569000000001185e-05, 3.729200000000127e-05, 3.7319000000000935e-05, 3.772199999999698e-05, 3.7833000000001005e-05, 3.772200000000392e-05, 3.751400000000238e-05, 3.755600000000109e-05, 3.801400000000288e-05, 3.780600000000134e-05, 3.801400000000288e-05, 3.738900000000572e-05, 3.7445000000004e-05, 3.733399999999998e-05, 3.8166999999998674e-05, 3.745900000000357e-05, 3.794400000000503e-05, 3.740300000000529e-05, 3.8097000000000825e-05, 3.8082999999994316e-05, 3.770799999999741e-05, 3.7833000000001005e-05, 3.790199999999938e-05, 3.820799999999791e-05, 3.8124999999999964e-05, 3.779199999999483e-05, 3.801399999999594e-05, 3.8097000000000825e-05, 3.7402999999998354e-05, 3.725000000000256e-05, 3.8068999999994746e-05, 3.752800000000195e-05, 3.7444999999997064e-05, 3.7402999999998354e-05, 3.7596999999993386e-05, 3.7374999999999214e-05, 3.752800000000195e-05, 3.733399999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:59:19.675" endtime="20201030 10:59:19.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.663" endtime="20201030 10:59:19.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:19.692" endtime="20201030 10:59:19.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.686" endtime="20201030 10:59:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.684" endtime="20201030 10:59:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.189" endtime="20201030 10:59:19.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.187" endtime="20201030 10:59:19.717"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.740" endtime="20201030 10:59:19.760"></status>
</kw>
<msg timestamp="20201030 10:59:19.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.737" endtime="20201030 10:59:19.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.763" endtime="20201030 10:59:19.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.770" endtime="20201030 10:59:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.730" endtime="20201030 10:59:19.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.724" endtime="20201030 10:59:19.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.793" endtime="20201030 10:59:20.136"></status>
</kw>
<msg timestamp="20201030 10:59:20.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.790" endtime="20201030 10:59:20.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.145" endtime="20201030 10:59:20.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.164" endtime="20201030 10:59:20.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.783" endtime="20201030 10:59:20.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.778" endtime="20201030 10:59:20.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.182" level="INFO">${RESULT} = [{'diff': 3.911200000000087e-05}, {'diff': 3.8346999999994136e-05}, {'diff': 3.8639000000000034e-05}, {'diff': 3.847199999999773e-05}, {'diff': 3.8277000000003225e-05}, {'diff': 3.8527000000003475e-05...</msg>
<status status="PASS" starttime="20201030 10:59:20.173" endtime="20201030 10:59:20.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.193" level="INFO">${ACCURACY} = {'diff': [3.911200000000087e-05, 3.8346999999994136e-05, 3.8639000000000034e-05, 3.847199999999773e-05, 3.8277000000003225e-05, 3.8527000000003475e-05, 3.919399999999934e-05, 3.840199999999988e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:59:20.184" endtime="20201030 10:59:20.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.204" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.201" endtime="20201030 10:59:20.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.209" level="INFO">VALUE: [3.911200000000087e-05, 3.8346999999994136e-05, 3.8639000000000034e-05, 3.847199999999773e-05, 3.8277000000003225e-05, 3.8527000000003475e-05, 3.919399999999934e-05, 3.840199999999988e-05, 3.8875000000000715e-05, 3.848600000000424e-05, 3.844399999999859e-05, 3.9166999999999674e-05, 3.917999999999977e-05, 3.823599999999705e-05, 3.845799999999816e-05, 3.9111000000001395e-05, 3.8666999999999174e-05, 3.8568999999995246e-05, 3.908400000000173e-05, 3.899999999999737e-05, 3.902799999999651e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.857000000000166e-05, 3.899999999999737e-05, 3.899999999999737e-05, 3.891599999999995e-05, 3.8889000000000284e-05, 3.8805000000002865e-05, 3.8347000000001075e-05, 3.8360999999993706e-05, 3.851400000000338e-05, 3.9110999999994456e-05, 3.8652999999999604e-05, 3.849999999999687e-05, 3.9125000000000965e-05, 3.854200000000252e-05, 3.824999999999662e-05, 3.9139000000000534e-05, 3.877799999999626e-05, 3.852800000000295e-05, 3.830600000000184e-05, 3.920900000000532e-05, 3.8889000000000284e-05, 3.830600000000184e-05, 3.879199999999583e-05, 3.876400000000363e-05, 3.8458999999997634e-05, 3.86659999999997e-05, 3.8236999999996524e-05]</msg>
<status status="PASS" starttime="20201030 10:59:20.206" endtime="20201030 10:59:20.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.194" endtime="20201030 10:59:20.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.222" endtime="20201030 10:59:20.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.218" endtime="20201030 10:59:20.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.215" endtime="20201030 10:59:20.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.719" endtime="20201030 10:59:20.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.718" endtime="20201030 10:59:20.247"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.270" endtime="20201030 10:59:20.290"></status>
</kw>
<msg timestamp="20201030 10:59:20.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.267" endtime="20201030 10:59:20.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.293" endtime="20201030 10:59:20.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.299" endtime="20201030 10:59:20.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.260" endtime="20201030 10:59:20.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.253" endtime="20201030 10:59:20.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.324" endtime="20201030 10:59:20.665"></status>
</kw>
<msg timestamp="20201030 10:59:20.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041885917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041925431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.320" endtime="20201030 10:59:20.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041885917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041925431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.675" endtime="20201030 10:59:20.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.693" endtime="20201030 10:59:20.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.313" endtime="20201030 10:59:20.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.308" endtime="20201030 10:59:20.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.711" level="INFO">${RESULT} = [{'diff': 3.951399999999744e-05}, {'diff': 3.92780000000037e-05}, {'diff': 3.938800000000131e-05}, {'diff': 3.94580000000061e-05}, {'diff': 3.9319000000002935e-05}, {'diff': 3.9291000000003795e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:20.702" endtime="20201030 10:59:20.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.722" level="INFO">${ACCURACY} = {'diff': [3.951399999999744e-05, 3.92780000000037e-05, 3.938800000000131e-05, 3.94580000000061e-05, 3.9319000000002935e-05, 3.9291000000003795e-05, 3.940200000000088e-05, 4.0054999999997176e-05, 3.977...</msg>
<status status="PASS" starttime="20201030 10:59:20.713" endtime="20201030 10:59:20.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.733" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.731" endtime="20201030 10:59:20.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.739" level="INFO">VALUE: [3.951399999999744e-05, 3.92780000000037e-05, 3.938800000000131e-05, 3.94580000000061e-05, 3.9319000000002935e-05, 3.9291000000003795e-05, 3.940200000000088e-05, 4.0054999999997176e-05, 3.9777000000004725e-05, 3.9403000000000354e-05, 3.977799999999726e-05, 3.9333000000002505e-05, 3.923600000000499e-05, 3.9305000000003365e-05, 3.945799999999916e-05, 3.944399999999959e-05, 3.9597000000002325e-05, 3.9582999999995816e-05, 4.023599999999905e-05, 4.002799999999751e-05, 3.973599999999855e-05, 3.999999999999837e-05, 3.9444999999999064e-05, 4.0125000000001965e-05, 3.997200000000617e-05, 3.930600000000284e-05, 3.9875000000001715e-05, 3.945799999999916e-05, 3.9722999999998454e-05, 3.9333000000002505e-05, 4.0068999999996746e-05, 4.002799999999751e-05, 3.9568999999996246e-05, 3.944399999999959e-05, 3.954200000000352e-05, 3.944399999999959e-05, 3.9625000000001465e-05, 3.993000000000052e-05, 3.9818999999996496e-05, 3.99859999999988e-05, 3.954199999999658e-05, 3.9847000000002575e-05, 3.9374999999994276e-05, 3.9458999999998634e-05, 3.997199999999923e-05, 3.99859999999988e-05, 3.9444999999999064e-05, 3.980600000000334e-05, 3.957000000000266e-05, 3.9389000000000784e-05]</msg>
<status status="PASS" starttime="20201030 10:59:20.736" endtime="20201030 10:59:20.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.724" endtime="20201030 10:59:20.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.752" endtime="20201030 10:59:20.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.747" endtime="20201030 10:59:20.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.744" endtime="20201030 10:59:20.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.249" endtime="20201030 10:59:20.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.248" endtime="20201030 10:59:20.777"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.800" endtime="20201030 10:59:20.821"></status>
</kw>
<msg timestamp="20201030 10:59:20.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.797" endtime="20201030 10:59:20.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.824" endtime="20201030 10:59:20.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.830" endtime="20201030 10:59:20.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.789" endtime="20201030 10:59:20.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.783" endtime="20201030 10:59:20.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.854" endtime="20201030 10:59:21.198"></status>
</kw>
<msg timestamp="20201030 10:59:21.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042508083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.851" endtime="20201030 10:59:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042508083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.207" endtime="20201030 10:59:21.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.226" endtime="20201030 10:59:21.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.843" endtime="20201030 10:59:21.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.839" endtime="20201030 10:59:21.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.244" level="INFO">${RESULT} = [{'diff': 4.0722999999999454e-05}, {'diff': 4.080600000000434e-05}, {'diff': 4.0639000000002035e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.101399999999894e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:21.235" endtime="20201030 10:59:21.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.253" level="INFO">${ACCURACY} = {'diff': [4.0722999999999454e-05, 4.080600000000434e-05, 4.0639000000002035e-05, 4.024999999999862e-05, 4.049999999999887e-05, 4.101399999999894e-05, 4.118000000000177e-05, 4.099999999999937e-05, 4.04...</msg>
<status status="PASS" starttime="20201030 10:59:21.246" endtime="20201030 10:59:21.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.264" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.262" endtime="20201030 10:59:21.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.270" level="INFO">VALUE: [4.0722999999999454e-05, 4.080600000000434e-05, 4.0639000000002035e-05, 4.024999999999862e-05, 4.049999999999887e-05, 4.101399999999894e-05, 4.118000000000177e-05, 4.099999999999937e-05, 4.0403000000001354e-05, 4.052799999999801e-05, 4.095800000000066e-05, 4.0361000000002645e-05, 4.101399999999894e-05, 4.0611000000002895e-05, 4.022199999999948e-05, 4.1125000000002965e-05, 4.120800000000091e-05, 4.0625000000002465e-05, 4.0680999999993805e-05, 4.084800000000305e-05, 4.0431000000000494e-05, 4.0917000000001424e-05, 4.0680999999993805e-05, 4.102799999999851e-05, 4.126400000000613e-05, 4.07780000000052e-05, 4.0374999999995276e-05, 4.045800000000016e-05, 4.0276999999998286e-05, 4.0388999999994846e-05, 4.0290999999997856e-05, 4.1082999999997316e-05, 4.0861000000003145e-05, 4.047199999999973e-05, 4.1181000000001244e-05, 4.124999999999962e-05, 4.0888999999995346e-05, 4.051399999999844e-05, 4.0347000000003075e-05, 4.0959000000000134e-05, 4.074999999999912e-05, 4.072199999999998e-05, 4.101399999999894e-05, 4.0681000000000744e-05, 4.0445000000000064e-05, 4.08059999999974e-05, 4.0403000000001354e-05, 4.03059999999969e-05, 4.0374999999995276e-05, 4.051399999999844e-05]</msg>
<status status="PASS" starttime="20201030 10:59:21.267" endtime="20201030 10:59:21.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.255" endtime="20201030 10:59:21.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.283" endtime="20201030 10:59:21.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.278" endtime="20201030 10:59:21.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.276" endtime="20201030 10:59:21.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.779" endtime="20201030 10:59:21.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.778" endtime="20201030 10:59:21.308"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.331" endtime="20201030 10:59:21.357"></status>
</kw>
<msg timestamp="20201030 10:59:21.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.328" endtime="20201030 10:59:21.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.361" endtime="20201030 10:59:21.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.368" endtime="20201030 10:59:21.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.320" endtime="20201030 10:59:21.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.314" endtime="20201030 10:59:21.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.393" endtime="20201030 10:59:21.685"></status>
</kw>
<msg timestamp="20201030 10:59:21.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048039333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048081, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:21.390" endtime="20201030 10:59:21.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048039333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048081, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:21.690" endtime="20201030 10:59:21.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.698" endtime="20201030 10:59:21.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.382" endtime="20201030 10:59:21.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.377" endtime="20201030 10:59:21.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.706" level="INFO">${RESULT} = [{'diff': 4.1667000000002175e-05}, {'diff': 4.1666999999995236e-05}, {'diff': 4.1653000000002605e-05}, {'diff': 4.181999999999797e-05}, {'diff': 4.1304999999998426e-05}, {'diff': 4.175000000000012e-05...</msg>
<status status="PASS" starttime="20201030 10:59:21.702" endtime="20201030 10:59:21.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.711" level="INFO">${ACCURACY} = {'diff': [4.1667000000002175e-05, 4.1666999999995236e-05, 4.1653000000002605e-05, 4.181999999999797e-05, 4.1304999999998426e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.133400000000398e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:59:21.707" endtime="20201030 10:59:21.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.716" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.715" endtime="20201030 10:59:21.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.719" level="INFO">VALUE: [4.1667000000002175e-05, 4.1666999999995236e-05, 4.1653000000002605e-05, 4.181999999999797e-05, 4.1304999999998426e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.133400000000398e-05, 4.133399999999704e-05, 4.1931000000001994e-05, 4.1445000000001064e-05, 4.222200000000148e-05, 4.1347000000004075e-05, 4.173600000000055e-05, 4.194400000000209e-05, 4.1860999999997206e-05, 4.197199999999429e-05, 4.170800000000141e-05, 4.1568999999998246e-05, 4.1402999999995416e-05, 4.1653000000002605e-05, 4.2055000000006115e-05, 4.205599999999865e-05, 4.197200000000123e-05, 4.1597000000004325e-05, 4.1374999999996276e-05, 4.202800000000645e-05, 4.1596999999997386e-05, 4.122199999999354e-05, 4.129199999999833e-05, 4.15980000000038e-05, 4.149999999999987e-05, 4.1667000000002175e-05, 4.1695000000001314e-05, 4.1554999999998676e-05, 4.199999999999343e-05, 4.1818999999998496e-05, 4.1832999999998066e-05, 4.1431000000001494e-05, 4.1568999999998246e-05, 4.144400000000159e-05, 4.1846999999997636e-05, 4.2069000000005685e-05, 4.1554999999998676e-05, 4.2138999999996596e-05, 4.126400000000613e-05, 4.129199999999833e-05, 4.145800000000116e-05, 4.18059999999984e-05, 4.1597000000004325e-05]</msg>
<status status="PASS" starttime="20201030 10:59:21.717" endtime="20201030 10:59:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.712" endtime="20201030 10:59:21.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.726" endtime="20201030 10:59:21.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.723" endtime="20201030 10:59:21.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.722" endtime="20201030 10:59:21.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.310" endtime="20201030 10:59:21.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.309" endtime="20201030 10:59:21.750"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.773" endtime="20201030 10:59:21.794"></status>
</kw>
<msg timestamp="20201030 10:59:21.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.770" endtime="20201030 10:59:21.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.798" endtime="20201030 10:59:21.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.804" endtime="20201030 10:59:21.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.763" endtime="20201030 10:59:21.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.757" endtime="20201030 10:59:21.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.828" endtime="20201030 10:59:22.170"></status>
</kw>
<msg timestamp="20201030 10:59:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042358153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.824" endtime="20201030 10:59:22.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042358153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.179" endtime="20201030 10:59:22.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.198" endtime="20201030 10:59:22.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.817" endtime="20201030 10:59:22.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.812" endtime="20201030 10:59:22.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.215" level="INFO">${RESULT} = [{'diff': 4.2667000000003175e-05}, {'diff': 4.29860000000018e-05}, {'diff': 4.2959000000002134e-05}, {'diff': 4.29860000000018e-05}, {'diff': 4.290200000000438e-05}, {'diff': 4.300000000000137e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:22.207" endtime="20201030 10:59:22.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.226" level="INFO">${ACCURACY} = {'diff': [4.2667000000003175e-05, 4.29860000000018e-05, 4.2959000000002134e-05, 4.29860000000018e-05, 4.290200000000438e-05, 4.300000000000137e-05, 4.250000000000087e-05, 4.2360999999997706e-05, 4.262...</msg>
<status status="PASS" starttime="20201030 10:59:22.218" endtime="20201030 10:59:22.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.237" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.235" endtime="20201030 10:59:22.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.243" level="INFO">VALUE: [4.2667000000003175e-05, 4.29860000000018e-05, 4.2959000000002134e-05, 4.29860000000018e-05, 4.290200000000438e-05, 4.300000000000137e-05, 4.250000000000087e-05, 4.2360999999997706e-05, 4.2624999999997526e-05, 4.223600000000105e-05, 4.268000000000327e-05, 4.2360999999997706e-05, 4.3055000000000176e-05, 4.3125000000004965e-05, 4.2888999999997346e-05, 4.2582999999998816e-05, 4.305599999999965e-05, 4.223600000000105e-05, 4.301400000000094e-05, 4.2860999999998206e-05, 4.2625000000004465e-05, 4.2639000000004035e-05, 4.2708999999994945e-05, 4.2417000000002925e-05, 4.225000000000062e-05, 4.293000000000352e-05, 4.276400000000069e-05, 4.2596999999998386e-05, 4.2875000000004715e-05, 4.223600000000105e-05, 4.2610999999997956e-05, 4.226400000000019e-05, 4.251400000000044e-05, 4.2667000000003175e-05, 4.269400000000284e-05, 4.304200000000008e-05, 4.3223000000001954e-05, 4.320800000000291e-05, 4.2930999999996056e-05, 4.252800000000001e-05, 4.2846999999998636e-05, 4.226400000000019e-05, 4.308399999999879e-05, 4.302800000000051e-05, 4.23059999999989e-05, 4.226300000000072e-05, 4.251400000000044e-05, 4.2903000000003855e-05, 4.252800000000001e-05, 4.241600000000345e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.240" endtime="20201030 10:59:22.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.228" endtime="20201030 10:59:22.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.256" endtime="20201030 10:59:22.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.251" endtime="20201030 10:59:22.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.249" endtime="20201030 10:59:22.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.752" endtime="20201030 10:59:22.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.751" endtime="20201030 10:59:22.281"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.304" endtime="20201030 10:59:22.324"></status>
</kw>
<msg timestamp="20201030 10:59:22.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.300" endtime="20201030 10:59:22.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.327" endtime="20201030 10:59:22.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.334" endtime="20201030 10:59:22.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.293" endtime="20201030 10:59:22.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.287" endtime="20201030 10:59:22.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.358" endtime="20201030 10:59:22.700"></status>
</kw>
<msg timestamp="20201030 10:59:22.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041787097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041830889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.354" endtime="20201030 10:59:22.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041787097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041830889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.710" endtime="20201030 10:59:22.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.729" endtime="20201030 10:59:22.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.347" endtime="20201030 10:59:22.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.342" endtime="20201030 10:59:22.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.746" level="INFO">${RESULT} = [{'diff': 4.379200000000083e-05}, {'diff': 4.3445000000003064e-05}, {'diff': 4.323599999999511e-05}, {'diff': 4.34860000000023e-05}, {'diff': 4.331999999999947e-05}, {'diff': 4.3305000000000426e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:22.737" endtime="20201030 10:59:22.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.758" level="INFO">${ACCURACY} = {'diff': [4.379200000000083e-05, 4.3445000000003064e-05, 4.323599999999511e-05, 4.34860000000023e-05, 4.331999999999947e-05, 4.3305000000000426e-05, 4.3680999999996806e-05, 4.331999999999947e-05, 4.32...</msg>
<status status="PASS" starttime="20201030 10:59:22.748" endtime="20201030 10:59:22.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.769" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.767" endtime="20201030 10:59:22.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.774" level="INFO">VALUE: [4.379200000000083e-05, 4.3445000000003064e-05, 4.323599999999511e-05, 4.34860000000023e-05, 4.331999999999947e-05, 4.3305000000000426e-05, 4.3680999999996806e-05, 4.331999999999947e-05, 4.3237000000001524e-05, 4.376400000000169e-05, 4.4069000000000746e-05, 4.416599999999826e-05, 4.33059999999999e-05, 4.340199999999794e-05, 4.341599999999751e-05, 4.3416999999996986e-05, 4.3569000000000246e-05, 4.3611000000005895e-05, 4.352800000000101e-05, 4.3819000000000496e-05, 4.4152999999998166e-05, 4.3860999999999206e-05, 4.3610999999998956e-05, 4.3402999999997416e-05, 4.3860999999999206e-05, 4.3930999999997056e-05, 4.402800000000151e-05, 4.351400000000144e-05, 4.3318999999999996e-05, 4.411199999999893e-05, 4.355599999999321e-05, 4.322200000000248e-05, 4.3291000000000857e-05, 4.3569000000000246e-05, 4.344400000000359e-05, 4.4083000000000316e-05, 4.408299999999338e-05, 4.3860999999999206e-05, 4.326400000000119e-05, 4.3860999999999206e-05, 4.3902999999997916e-05, 4.377800000000126e-05, 4.329200000000033e-05, 4.3931000000003995e-05, 4.3430999999996556e-05, 4.349999999999493e-05, 4.3360999999998706e-05, 4.3902999999997916e-05, 4.407000000000022e-05, 4.3695000000003315e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.771" endtime="20201030 10:59:22.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.760" endtime="20201030 10:59:22.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.787" endtime="20201030 10:59:22.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.783" endtime="20201030 10:59:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.780" endtime="20201030 10:59:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.283" endtime="20201030 10:59:22.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.282" endtime="20201030 10:59:22.812"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.835" endtime="20201030 10:59:22.855"></status>
</kw>
<msg timestamp="20201030 10:59:22.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.832" endtime="20201030 10:59:22.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.859" endtime="20201030 10:59:22.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.865" endtime="20201030 10:59:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.825" endtime="20201030 10:59:22.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.819" endtime="20201030 10:59:22.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.889" endtime="20201030 10:59:23.233"></status>
</kw>
<msg timestamp="20201030 10:59:23.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042134556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.886" endtime="20201030 10:59:23.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042134556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042179264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.242" endtime="20201030 10:59:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.261" endtime="20201030 10:59:23.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.878" endtime="20201030 10:59:23.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.873" endtime="20201030 10:59:23.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.279" level="INFO">${RESULT} = [{'diff': 4.470800000000441e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.425000000000262e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.4222999999996015e-05}, {'diff': 4.451400000000244e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:23.270" endtime="20201030 10:59:23.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.288" level="INFO">${ACCURACY} = {'diff': [4.470800000000441e-05, 4.4666999999998236e-05, 4.425000000000262e-05, 4.4638999999999096e-05, 4.4222999999996015e-05, 4.451400000000244e-05, 4.429200000000133e-05, 4.515199999999969e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 10:59:23.281" endtime="20201030 10:59:23.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.299" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.297" endtime="20201030 10:59:23.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.305" level="INFO">VALUE: [4.470800000000441e-05, 4.4666999999998236e-05, 4.425000000000262e-05, 4.4638999999999096e-05, 4.4222999999996015e-05, 4.451400000000244e-05, 4.429200000000133e-05, 4.515199999999969e-05, 4.461200000000637e-05, 4.440200000000588e-05, 4.5111000000000456e-05, 4.445800000000416e-05, 4.4319000000000996e-05, 4.470800000000441e-05, 4.502800000000251e-05, 4.427799999999482e-05, 4.498599999999686e-05, 4.5152999999999166e-05, 4.4333000000000566e-05, 4.479200000000183e-05, 4.4987000000003274e-05, 4.477800000000226e-05, 4.4902999999998916e-05, 4.5138999999999596e-05, 4.4444999999997126e-05, 4.4639000000006035e-05, 4.4597000000000386e-05, 4.441599999999851e-05, 4.455600000000115e-05, 4.5152999999999166e-05, 4.445800000000416e-05, 4.4319000000000996e-05, 4.4624999999999526e-05, 4.467999999999833e-05, 4.4610999999999956e-05, 4.477800000000226e-05, 4.452799999999507e-05, 4.4930999999998056e-05, 4.445800000000416e-05, 4.4319000000000996e-05, 4.4930999999998056e-05, 4.4583000000000816e-05, 4.448599999999636e-05, 4.432000000000047e-05, 4.4847000000000636e-05, 4.4694999999997376e-05, 4.501400000000294e-05, 4.476400000000269e-05, 4.504200000000208e-05, 4.447199999999679e-05]</msg>
<status status="PASS" starttime="20201030 10:59:23.302" endtime="20201030 10:59:23.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.290" endtime="20201030 10:59:23.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.318" endtime="20201030 10:59:23.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.313" endtime="20201030 10:59:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.311" endtime="20201030 10:59:23.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.814" endtime="20201030 10:59:23.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.813" endtime="20201030 10:59:23.343"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.366" endtime="20201030 10:59:23.388"></status>
</kw>
<msg timestamp="20201030 10:59:23.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.363" endtime="20201030 10:59:23.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.392" endtime="20201030 10:59:23.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.398" endtime="20201030 10:59:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.355" endtime="20201030 10:59:23.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.350" endtime="20201030 10:59:23.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.422" endtime="20201030 10:59:23.765"></status>
</kw>
<msg timestamp="20201030 10:59:23.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043472972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043518208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.418" endtime="20201030 10:59:23.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043472972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043518208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.775" endtime="20201030 10:59:23.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.794" endtime="20201030 10:59:23.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.411" endtime="20201030 10:59:23.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.406" endtime="20201030 10:59:23.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.811" level="INFO">${RESULT} = [{'diff': 4.523600000000405e-05}, {'diff': 4.556899999999531e-05}, {'diff': 4.5319000000001997e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.522199999999754e-05}, {'diff': 4.555600000000215e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:23.803" endtime="20201030 10:59:23.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.821" level="INFO">${ACCURACY} = {'diff': [4.523600000000405e-05, 4.556899999999531e-05, 4.5319000000001997e-05, 4.5402999999999416e-05, 4.522199999999754e-05, 4.555600000000215e-05, 4.522199999999754e-05, 4.574999999999718e-05, 4.55...</msg>
<status status="PASS" starttime="20201030 10:59:23.814" endtime="20201030 10:59:23.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.832" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.830" endtime="20201030 10:59:23.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.838" level="INFO">VALUE: [4.523600000000405e-05, 4.556899999999531e-05, 4.5319000000001997e-05, 4.5402999999999416e-05, 4.522199999999754e-05, 4.555600000000215e-05, 4.522199999999754e-05, 4.574999999999718e-05, 4.554199999999564e-05, 4.598599999999786e-05, 4.6180999999999306e-05, 4.5611000000000956e-05, 4.532000000000147e-05, 4.5652999999999666e-05, 4.5375000000000276e-05, 4.5389000000006785e-05, 4.5861000000001206e-05, 4.607000000000222e-05, 4.605599999999571e-05, 4.591600000000001e-05, 4.576299999999728e-05, 4.527799999999582e-05, 4.605499999999624e-05, 4.6111000000001456e-05, 4.5347000000001136e-05, 4.544399999999865e-05, 4.6194999999998876e-05, 4.545799999999822e-05, 4.5916999999999486e-05, 4.594399999999915e-05, 4.5416999999998986e-05, 4.570799999999847e-05, 4.530599999999496e-05, 4.5445000000005065e-05, 4.586099999999427e-05, 4.6125000000001026e-05, 4.532000000000147e-05, 4.6125000000001026e-05, 4.584800000000111e-05, 4.582000000000197e-05, 4.5319000000001997e-05, 4.575000000000412e-05, 4.611099999999452e-05, 4.545799999999822e-05, 4.526400000000319e-05, 4.5666999999999236e-05, 4.56939999999989e-05, 4.574999999999718e-05, 4.544399999999865e-05, 4.602800000000351e-05]</msg>
<status status="PASS" starttime="20201030 10:59:23.834" endtime="20201030 10:59:23.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.823" endtime="20201030 10:59:23.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.852" endtime="20201030 10:59:23.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.846" endtime="20201030 10:59:23.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.843" endtime="20201030 10:59:23.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.345" endtime="20201030 10:59:23.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.344" endtime="20201030 10:59:23.877"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.900" endtime="20201030 10:59:23.920"></status>
</kw>
<msg timestamp="20201030 10:59:23.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.897" endtime="20201030 10:59:23.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.923" endtime="20201030 10:59:23.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.930" endtime="20201030 10:59:23.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.889" endtime="20201030 10:59:23.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.883" endtime="20201030 10:59:23.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.954" endtime="20201030 10:59:24.294"></status>
</kw>
<msg timestamp="20201030 10:59:24.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.950" endtime="20201030 10:59:24.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.304" endtime="20201030 10:59:24.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.323" endtime="20201030 10:59:24.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.943" endtime="20201030 10:59:24.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.938" endtime="20201030 10:59:24.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.340" level="INFO">${RESULT} = [{'diff': 4.6861000000002206e-05}, {'diff': 4.7222999999999016e-05}, {'diff': 4.6944999999999626e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.631899999999606e-05}, {'diff': 4.674999999999818e-05...</msg>
<status status="PASS" starttime="20201030 10:59:24.332" endtime="20201030 10:59:24.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.351" level="INFO">${ACCURACY} = {'diff': [4.6861000000002206e-05, 4.7222999999999016e-05, 4.6944999999999626e-05, 4.7153000000001166e-05, 4.631899999999606e-05, 4.674999999999818e-05, 4.629099999999692e-05, 4.652700000000454e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:59:24.343" endtime="20201030 10:59:24.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.362" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.360" endtime="20201030 10:59:24.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.368" level="INFO">VALUE: [4.6861000000002206e-05, 4.7222999999999016e-05, 4.6944999999999626e-05, 4.7153000000001166e-05, 4.631899999999606e-05, 4.674999999999818e-05, 4.629099999999692e-05, 4.652700000000454e-05, 4.68190000000035e-05, 4.697199999999929e-05, 4.7139000000001596e-05, 4.6403000000000416e-05, 4.68060000000034e-05, 4.6903000000000916e-05, 4.702799999999757e-05, 4.649999999999793e-05, 4.627799999999682e-05, 4.676399999999775e-05, 4.681999999999603e-05, 4.6458999999998696e-05, 4.6389000000000846e-05, 4.625000000000462e-05, 4.6389000000000846e-05, 4.682000000000297e-05, 4.6694999999999376e-05, 4.623600000000505e-05, 4.627800000000376e-05, 4.7111000000002456e-05, 4.66939999999999e-05, 4.6597000000002387e-05, 4.672199999999904e-05, 4.6472999999998266e-05, 4.6389000000000846e-05, 4.677800000000426e-05, 4.645799999999922e-05, 4.627799999999682e-05, 4.694400000000015e-05, 4.6680999999999806e-05, 4.709699999999595e-05, 4.630599999999596e-05, 4.6375000000001276e-05, 4.672199999999904e-05, 4.6861000000002206e-05, 4.6972999999998766e-05, 4.6736999999998086e-05, 4.680500000000393e-05, 4.6986999999998336e-05, 4.6944999999999626e-05, 4.7125000000002026e-05, 4.6861000000002206e-05]</msg>
<status status="PASS" starttime="20201030 10:59:24.365" endtime="20201030 10:59:24.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.353" endtime="20201030 10:59:24.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.387" endtime="20201030 10:59:24.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.383" endtime="20201030 10:59:24.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.380" endtime="20201030 10:59:24.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.879" endtime="20201030 10:59:24.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.878" endtime="20201030 10:59:24.412"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.435" endtime="20201030 10:59:24.455"></status>
</kw>
<msg timestamp="20201030 10:59:24.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.432" endtime="20201030 10:59:24.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.459" endtime="20201030 10:59:24.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.466" endtime="20201030 10:59:24.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.425" endtime="20201030 10:59:24.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.419" endtime="20201030 10:59:24.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.491" endtime="20201030 10:59:24.831"></status>
</kw>
<msg timestamp="20201030 10:59:24.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.488" endtime="20201030 10:59:24.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.841" endtime="20201030 10:59:24.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.860" endtime="20201030 10:59:24.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.480" endtime="20201030 10:59:24.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.475" endtime="20201030 10:59:24.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.877" level="INFO">${RESULT} = [{'diff': 4.749999999999893e-05}, {'diff': 4.758400000000329e-05}, {'diff': 4.754199999999764e-05}, {'diff': 4.777699999999885e-05}, {'diff': 4.730500000000443e-05}, {'diff': 4.798599999999986e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:24.868" endtime="20201030 10:59:24.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.889" level="INFO">${ACCURACY} = {'diff': [4.749999999999893e-05, 4.758400000000329e-05, 4.754199999999764e-05, 4.777699999999885e-05, 4.730500000000443e-05, 4.798599999999986e-05, 4.783300000000407e-05, 4.809699999999695e-05, 4.8125...</msg>
<status status="PASS" starttime="20201030 10:59:24.880" endtime="20201030 10:59:24.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.900" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.898" endtime="20201030 10:59:24.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.905" level="INFO">VALUE: [4.749999999999893e-05, 4.758400000000329e-05, 4.754199999999764e-05, 4.777699999999885e-05, 4.730500000000443e-05, 4.798599999999986e-05, 4.783300000000407e-05, 4.809699999999695e-05, 4.8125000000003026e-05, 4.781899999999756e-05, 4.8139000000002596e-05, 4.811099999999652e-05, 4.7417000000000986e-05, 4.798599999999986e-05, 4.7417000000000986e-05, 4.782000000000397e-05, 4.8111000000003457e-05, 4.798599999999986e-05, 4.75139999999985e-05, 4.806999999999728e-05, 4.7903000000001916e-05, 4.7679999999994394e-05, 4.770800000000047e-05, 4.787499999999584e-05, 4.770799999999353e-05, 4.804099999999867e-05, 4.78469999999967e-05, 4.743000000000108e-05, 4.798599999999986e-05, 4.745800000000022e-05, 4.808299999999738e-05, 4.727799999999782e-05, 4.758299999999688e-05, 4.749999999999893e-05, 4.811099999999652e-05, 4.770800000000047e-05, 4.75139999999985e-05, 4.733400000000304e-05, 4.7945000000000626e-05, 4.761099999999602e-05, 4.7695000000000376e-05, 4.757000000000372e-05, 4.822200000000054e-05, 4.7472999999999266e-05, 4.772200000000004e-05, 4.8125000000003026e-05, 4.729100000000486e-05, 4.7653000000001666e-05, 4.733300000000357e-05, 4.723599999999911e-05]</msg>
<status status="PASS" starttime="20201030 10:59:24.902" endtime="20201030 10:59:24.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.891" endtime="20201030 10:59:24.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.918" endtime="20201030 10:59:24.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.914" endtime="20201030 10:59:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.911" endtime="20201030 10:59:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.414" endtime="20201030 10:59:24.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.413" endtime="20201030 10:59:24.943"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.967" endtime="20201030 10:59:24.985"></status>
</kw>
<msg timestamp="20201030 10:59:24.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.963" endtime="20201030 10:59:24.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.987" endtime="20201030 10:59:24.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.990" endtime="20201030 10:59:24.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.956" endtime="20201030 10:59:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.950" endtime="20201030 10:59:24.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.001" endtime="20201030 10:59:25.311"></status>
</kw>
<msg timestamp="20201030 10:59:25.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.000" endtime="20201030 10:59:25.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.321" endtime="20201030 10:59:25.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.340" endtime="20201030 10:59:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.996" endtime="20201030 10:59:25.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.994" endtime="20201030 10:59:25.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.357" level="INFO">${RESULT} = [{'diff': 4.9151999999996754e-05}, {'diff': 4.8737000000000086e-05}, {'diff': 4.8457999999994283e-05}, {'diff': 4.8611000000003957e-05}, {'diff': 4.87219999999941e-05}, {'diff': 4.8901999999996504e-05...</msg>
<status status="PASS" starttime="20201030 10:59:25.348" endtime="20201030 10:59:25.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.367" level="INFO">${ACCURACY} = {'diff': [4.9151999999996754e-05, 4.8737000000000086e-05, 4.8457999999994283e-05, 4.8611000000003957e-05, 4.87219999999941e-05, 4.8901999999996504e-05, 4.913899999999666e-05, 4.8625000000003527e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:59:25.359" endtime="20201030 10:59:25.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.378" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.376" endtime="20201030 10:59:25.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.383" level="INFO">VALUE: [4.9151999999996754e-05, 4.8737000000000086e-05, 4.8457999999994283e-05, 4.8611000000003957e-05, 4.87219999999941e-05, 4.8901999999996504e-05, 4.913899999999666e-05, 4.8625000000003527e-05, 4.827799999999882e-05, 4.85139999999995e-05, 4.827799999999882e-05, 4.8667000000002236e-05, 4.847200000000079e-05, 4.823600000000011e-05, 4.877799999999932e-05, 4.8959000000001196e-05, 4.852799999999907e-05, 4.876300000000028e-05, 4.855599999999821e-05, 4.865299999999573e-05, 4.8375000000003276e-05, 4.881999999999803e-05, 4.8625000000003527e-05, 4.898600000000086e-05, 4.8443999999994714e-05, 4.8875000000003777e-05, 4.8361000000003707e-05, 4.9014e-05, 4.908299999999838e-05, 4.845800000000122e-05, 4.894400000000215e-05, 4.8903000000002916e-05, 4.905599999999871e-05, 4.858399999999735e-05, 4.909699999999795e-05, 4.886099999999727e-05, 4.895899999999426e-05, 4.8945000000001626e-05, 4.86669999999953e-05, 4.834700000000414e-05, 4.849999999999993e-05, 4.886100000000421e-05, 4.8403000000002416e-05, 4.8943999999995214e-05, 4.918099999999537e-05, 4.879099999999942e-05, 4.823600000000011e-05, 4.916600000000326e-05, 4.902799999999957e-05, 4.873600000000061e-05]</msg>
<status status="PASS" starttime="20201030 10:59:25.380" endtime="20201030 10:59:25.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.369" endtime="20201030 10:59:25.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.396" endtime="20201030 10:59:25.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.392" endtime="20201030 10:59:25.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.389" endtime="20201030 10:59:25.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.946" endtime="20201030 10:59:25.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.944" endtime="20201030 10:59:25.421"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.445" endtime="20201030 10:59:25.466"></status>
</kw>
<msg timestamp="20201030 10:59:25.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.441" endtime="20201030 10:59:25.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.470" endtime="20201030 10:59:25.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.476" endtime="20201030 10:59:25.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.434" endtime="20201030 10:59:25.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.428" endtime="20201030 10:59:25.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.500" endtime="20201030 10:59:25.843"></status>
</kw>
<msg timestamp="20201030 10:59:25.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043470264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043519611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.497" endtime="20201030 10:59:25.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043470264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043519611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.852" endtime="20201030 10:59:25.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.871" endtime="20201030 10:59:25.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.489" endtime="20201030 10:59:25.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.484" endtime="20201030 10:59:25.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.889" level="INFO">${RESULT} = [{'diff': 4.93469999999982e-05}, {'diff': 4.981899999999956e-05}, {'diff': 4.997200000000229e-05}, {'diff': 5.009699999999895e-05}, {'diff': 4.945800000000222e-05}, {'diff': 5.006899999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:25.880" endtime="20201030 10:59:25.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.898" level="INFO">${ACCURACY} = {'diff': [4.93469999999982e-05, 4.981899999999956e-05, 4.997200000000229e-05, 5.009699999999895e-05, 4.945800000000222e-05, 5.006899999999981e-05, 4.927799999999982e-05, 4.952800000000007e-05, 5.00140...</msg>
<status status="PASS" starttime="20201030 10:59:25.891" endtime="20201030 10:59:25.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.909" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.907" endtime="20201030 10:59:25.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.915" level="INFO">VALUE: [4.93469999999982e-05, 4.981899999999956e-05, 4.997200000000229e-05, 5.009699999999895e-05, 4.945800000000222e-05, 5.006899999999981e-05, 4.927799999999982e-05, 4.952800000000007e-05, 5.0014000000001e-05, 4.96669999999963e-05, 4.98469999999987e-05, 4.954200000000658e-05, 5.002800000000057e-05, 4.995800000000272e-05, 4.968099999999587e-05, 4.973600000000161e-05, 4.9929999999996644e-05, 5.018000000000383e-05, 4.945800000000222e-05, 4.948600000000136e-05, 5.020800000000297e-05, 5.012499999999809e-05, 4.984700000000564e-05, 4.9943999999996214e-05, 4.991699999999655e-05, 4.947200000000179e-05, 5.002800000000057e-05, 5.006999999999928e-05, 4.9709000000001946e-05, 4.981999999999903e-05, 5.002800000000057e-05, 4.9417000000002986e-05, 4.93469999999982e-05, 4.962499999999759e-05, 4.976400000000075e-05, 4.955499999999974e-05, 4.987499999999784e-05, 4.9375000000004277e-05, 5.015200000000469e-05, 5.0193999999996464e-05, 4.98469999999987e-05, 4.981899999999956e-05, 4.96669999999963e-05, 5.004200000000014e-05, 5.01940000000034e-05, 5.0193999999996464e-05, 4.9917000000003486e-05, 5.009699999999895e-05, 4.963899999999716e-05, 5.004200000000014e-05]</msg>
<status status="PASS" starttime="20201030 10:59:25.912" endtime="20201030 10:59:25.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.900" endtime="20201030 10:59:25.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.929" endtime="20201030 10:59:25.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.923" endtime="20201030 10:59:25.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.920" endtime="20201030 10:59:25.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.424" endtime="20201030 10:59:25.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.422" endtime="20201030 10:59:25.954"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.977" endtime="20201030 10:59:25.999"></status>
</kw>
<msg timestamp="20201030 10:59:26.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.974" endtime="20201030 10:59:26.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.002" endtime="20201030 10:59:26.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.009" endtime="20201030 10:59:26.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.967" endtime="20201030 10:59:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.961" endtime="20201030 10:59:26.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.033" endtime="20201030 10:59:26.373"></status>
</kw>
<msg timestamp="20201030 10:59:26.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.029" endtime="20201030 10:59:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.383" endtime="20201030 10:59:26.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.402" endtime="20201030 10:59:26.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.021" endtime="20201030 10:59:26.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.017" endtime="20201030 10:59:26.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.419" level="INFO">${RESULT} = [{'diff': 5.111099999999952e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.052800000000107e-05}, {'diff': 5.065299999999773e-05}, {'diff': 5.047200000000279e-05}, {'diff': 5.107000000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:26.410" endtime="20201030 10:59:26.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.434" level="INFO">${ACCURACY} = {'diff': [5.111099999999952e-05, 5.08469999999997e-05, 5.052800000000107e-05, 5.065299999999773e-05, 5.047200000000279e-05, 5.107000000000028e-05, 5.058299999999988e-05, 5.036099999999877e-05, 5.04029...</msg>
<status status="PASS" starttime="20201030 10:59:26.421" endtime="20201030 10:59:26.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.445" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.443" endtime="20201030 10:59:26.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.451" level="INFO">VALUE: [5.111099999999952e-05, 5.08469999999997e-05, 5.052800000000107e-05, 5.065299999999773e-05, 5.047200000000279e-05, 5.107000000000028e-05, 5.058299999999988e-05, 5.036099999999877e-05, 5.040299999999748e-05, 5.1181000000004306e-05, 5.058399999999935e-05, 5.074999999999524e-05, 5.094499999999669e-05, 5.0471999999995854e-05, 5.033299999999963e-05, 5.070800000000347e-05, 5.038899999999791e-05, 5.081900000000056e-05, 5.0929999999997644e-05, 5.031900000000006e-05, 5.112500000000603e-05, 5.052800000000107e-05, 5.086099999999927e-05, 5.0417000000003986e-05, 5.052800000000107e-05, 5.0445000000003126e-05, 5.076399999999481e-05, 5.068099999999687e-05, 5.093000000000458e-05, 5.077799999999438e-05, 5.030599999999996e-05, 5.061099999999902e-05, 5.0679999999997394e-05, 5.0943999999997214e-05, 5.031900000000006e-05, 5.109699999999995e-05, 5.0957999999996784e-05, 5.099999999999549e-05, 5.052799999999413e-05, 5.112499999999909e-05, 5.0693999999996964e-05, 5.083300000000013e-05, 5.033299999999963e-05, 5.069499999999644e-05, 5.056999999999978e-05, 5.03339999999991e-05, 5.047200000000279e-05, 5.094499999999669e-05, 5.037499999999834e-05, 5.065299999999773e-05]</msg>
<status status="PASS" starttime="20201030 10:59:26.448" endtime="20201030 10:59:26.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.436" endtime="20201030 10:59:26.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.464" endtime="20201030 10:59:26.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.459" endtime="20201030 10:59:26.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.457" endtime="20201030 10:59:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.956" endtime="20201030 10:59:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.955" endtime="20201030 10:59:26.489"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.512" endtime="20201030 10:59:26.532"></status>
</kw>
<msg timestamp="20201030 10:59:26.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.508" endtime="20201030 10:59:26.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.536" endtime="20201030 10:59:26.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.543" endtime="20201030 10:59:26.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.501" endtime="20201030 10:59:26.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.495" endtime="20201030 10:59:26.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.568" endtime="20201030 10:59:26.909"></status>
</kw>
<msg timestamp="20201030 10:59:26.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041731194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041782986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.565" endtime="20201030 10:59:26.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041731194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041782986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.919" endtime="20201030 10:59:26.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.938" endtime="20201030 10:59:26.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.557" endtime="20201030 10:59:26.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.552" endtime="20201030 10:59:26.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.955" level="INFO">${RESULT} = [{'diff': 5.179200000000189e-05}, {'diff': 5.20549999999953e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.1749999999996243e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.158300000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:26.946" endtime="20201030 10:59:26.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.966" level="INFO">${ACCURACY} = {'diff': [5.179200000000189e-05, 5.20549999999953e-05, 5.186100000000027e-05, 5.1749999999996243e-05, 5.137499999999934e-05, 5.158300000000088e-05, 5.205599999999477e-05, 5.1931000000005056e-05, 5.154...</msg>
<status status="PASS" starttime="20201030 10:59:26.957" endtime="20201030 10:59:26.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.977" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.975" endtime="20201030 10:59:26.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.983" level="INFO">VALUE: [5.179200000000189e-05, 5.20549999999953e-05, 5.186100000000027e-05, 5.1749999999996243e-05, 5.137499999999934e-05, 5.158300000000088e-05, 5.205599999999477e-05, 5.1931000000005056e-05, 5.154200000000164e-05, 5.18470000000007e-05, 5.1235999999996173e-05, 5.1695000000004376e-05, 5.134799999999967e-05, 5.13340000000001e-05, 5.180600000000146e-05, 5.154100000000217e-05, 5.1707999999997534e-05, 5.181900000000156e-05, 5.1249999999995743e-05, 5.177800000000232e-05, 5.188899999999941e-05, 5.180500000000199e-05, 5.211100000000052e-05, 5.16669999999983e-05, 5.218099999999837e-05, 5.137499999999934e-05, 5.201399999999606e-05, 5.168099999999787e-05, 5.140299999999848e-05, 5.125000000000268e-05, 5.1973000000003766e-05, 5.152699999999566e-05, 5.2165999999999324e-05, 5.2165999999999324e-05, 5.1443999999997714e-05, 5.212500000000009e-05, 5.1485999999996424e-05, 5.144400000000465e-05, 5.1999999999996493e-05, 5.1485999999996424e-05, 5.13470000000002e-05, 5.183300000000113e-05, 5.172299999999658e-05, 5.206899999999487e-05, 5.162499999999959e-05, 5.158400000000035e-05, 5.205599999999477e-05, 5.129100000000192e-05, 5.168099999999787e-05, 5.1403000000005417e-05]</msg>
<status status="PASS" starttime="20201030 10:59:26.980" endtime="20201030 10:59:26.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.968" endtime="20201030 10:59:26.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.996" endtime="20201030 10:59:27.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.991" endtime="20201030 10:59:27.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.989" endtime="20201030 10:59:27.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.491" endtime="20201030 10:59:27.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.490" endtime="20201030 10:59:27.021"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.044" endtime="20201030 10:59:27.064"></status>
</kw>
<msg timestamp="20201030 10:59:27.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.041" endtime="20201030 10:59:27.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.068" endtime="20201030 10:59:27.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.074" endtime="20201030 10:59:27.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.033" endtime="20201030 10:59:27.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.028" endtime="20201030 10:59:27.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.098" endtime="20201030 10:59:27.442"></status>
</kw>
<msg timestamp="20201030 10:59:27.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042186611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.094" endtime="20201030 10:59:27.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042186611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.452" endtime="20201030 10:59:27.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.471" endtime="20201030 10:59:27.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.087" endtime="20201030 10:59:27.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.082" endtime="20201030 10:59:27.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.488" level="INFO">${RESULT} = [{'diff': 5.309700000000195e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.2999999999997494e-05}, {'diff': 5.277800000000332e-05}, {'diff': 5.2459000000004696e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:27.479" endtime="20201030 10:59:27.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.498" level="INFO">${ACCURACY} = {'diff': [5.309700000000195e-05, 5.240299999999948e-05, 5.261100000000102e-05, 5.2999999999997494e-05, 5.277800000000332e-05, 5.2459000000004696e-05, 5.2513999999996563e-05, 5.26669999999993e-05, 5.23...</msg>
<status status="PASS" starttime="20201030 10:59:27.490" endtime="20201030 10:59:27.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.509" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.506" endtime="20201030 10:59:27.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.514" level="INFO">VALUE: [5.309700000000195e-05, 5.240299999999948e-05, 5.261100000000102e-05, 5.2999999999997494e-05, 5.277800000000332e-05, 5.2459000000004696e-05, 5.2513999999996563e-05, 5.26669999999993e-05, 5.234800000000067e-05, 5.250000000000393e-05, 5.3166000000000324e-05, 5.312500000000109e-05, 5.226299999999684e-05, 5.245800000000522e-05, 5.2429999999999144e-05, 5.25140000000035e-05, 5.229199999999545e-05, 5.281900000000256e-05, 5.240299999999948e-05, 5.2693999999998964e-05, 5.240299999999948e-05, 5.236100000000077e-05, 5.291699999999955e-05, 5.23340000000011e-05, 5.286100000000127e-05, 5.277800000000332e-05, 5.2763999999996813e-05, 5.28340000000016e-05, 5.262499999999365e-05, 5.308399999999491e-05, 5.3179999999999894e-05, 5.3166000000000324e-05, 5.2249999999996743e-05, 5.229100000000292e-05, 5.233300000000163e-05, 5.282000000000203e-05, 5.320800000000597e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.2485999999997424e-05, 5.280600000000246e-05, 5.237500000000034e-05, 5.302800000000357e-05, 5.2735999999997674e-05, 5.250000000000393e-05, 5.304200000000314e-05, 5.308400000000185e-05, 5.254100000000317e-05, 5.247200000000479e-05, 5.245800000000522e-05]</msg>
<status status="PASS" starttime="20201030 10:59:27.511" endtime="20201030 10:59:27.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.499" endtime="20201030 10:59:27.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.527" endtime="20201030 10:59:27.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.522" endtime="20201030 10:59:27.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.520" endtime="20201030 10:59:27.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.023" endtime="20201030 10:59:27.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.022" endtime="20201030 10:59:27.552"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.576" endtime="20201030 10:59:27.598"></status>
</kw>
<msg timestamp="20201030 10:59:27.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.572" endtime="20201030 10:59:27.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.602" endtime="20201030 10:59:27.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.609" endtime="20201030 10:59:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.564" endtime="20201030 10:59:27.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.559" endtime="20201030 10:59:27.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.632" endtime="20201030 10:59:27.975"></status>
</kw>
<msg timestamp="20201030 10:59:27.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.629" endtime="20201030 10:59:27.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.985" endtime="20201030 10:59:28.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.004" endtime="20201030 10:59:28.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.622" endtime="20201030 10:59:28.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.617" endtime="20201030 10:59:28.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.021" level="INFO">${RESULT} = [{'diff': 5.3721999999999104e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.386100000000227e-05}, {'diff': 5.3443999999999714e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.3985999999998924e-0...</msg>
<status status="PASS" starttime="20201030 10:59:28.012" endtime="20201030 10:59:28.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.031" level="INFO">${ACCURACY} = {'diff': [5.3721999999999104e-05, 5.3735999999998674e-05, 5.386100000000227e-05, 5.3443999999999714e-05, 5.4013999999998064e-05, 5.3985999999998924e-05, 5.411099999999558e-05, 5.330499999999655e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:59:28.023" endtime="20201030 10:59:28.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.042" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.039" endtime="20201030 10:59:28.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.047" level="INFO">VALUE: [5.3721999999999104e-05, 5.3735999999998674e-05, 5.386100000000227e-05, 5.3443999999999714e-05, 5.4013999999998064e-05, 5.3985999999998924e-05, 5.411099999999558e-05, 5.330499999999655e-05, 5.3957999999999784e-05, 5.359700000000245e-05, 5.36670000000003e-05, 5.3277999999996883e-05, 5.3263999999997313e-05, 5.409699999999601e-05, 5.404200000000414e-05, 5.3763999999997814e-05, 5.333300000000263e-05, 5.3707999999999534e-05, 5.350000000000493e-05, 5.390300000000098e-05, 5.3457999999999284e-05, 5.3680000000000394e-05, 5.393100000000012e-05, 5.3985999999998924e-05, 5.386099999999533e-05, 5.330600000000296e-05, 5.390299999999404e-05, 5.375000000000518e-05, 5.3499999999997994e-05, 5.409700000000295e-05, 5.334799999999473e-05, 5.394499999999969e-05, 5.322299999999808e-05, 5.370899999999901e-05, 5.412499999999515e-05, 5.333300000000263e-05, 5.3666000000000824e-05, 5.4208000000000034e-05, 5.411099999999558e-05, 5.330499999999655e-05, 5.3249999999997744e-05, 5.358300000000288e-05, 5.3693999999999964e-05, 5.343099999999962e-05, 5.3943999999993275e-05, 5.365299999999379e-05, 5.323600000000511e-05, 5.369499999999944e-05, 5.347299999999833e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201030 10:59:28.044" endtime="20201030 10:59:28.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.033" endtime="20201030 10:59:28.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.061" endtime="20201030 10:59:28.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.056" endtime="20201030 10:59:28.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.053" endtime="20201030 10:59:28.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.554" endtime="20201030 10:59:28.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.553" endtime="20201030 10:59:28.087"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.110" endtime="20201030 10:59:28.130"></status>
</kw>
<msg timestamp="20201030 10:59:28.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.106" endtime="20201030 10:59:28.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.134" endtime="20201030 10:59:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.140" endtime="20201030 10:59:28.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.099" endtime="20201030 10:59:28.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.093" endtime="20201030 10:59:28.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.164" endtime="20201030 10:59:28.486"></status>
</kw>
<msg timestamp="20201030 10:59:28.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:28.161" endtime="20201030 10:59:28.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:28.491" endtime="20201030 10:59:28.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.499" endtime="20201030 10:59:28.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.153" endtime="20201030 10:59:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.149" endtime="20201030 10:59:28.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.507" level="INFO">${RESULT} = [{'diff': 5.43470000000032e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.445899999999976e-05}, {'diff': 5.4694000000000964e-05}, {'diff': 5.4527999999998134e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:28.503" endtime="20201030 10:59:28.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.512" level="INFO">${ACCURACY} = {'diff': [5.43470000000032e-05, 5.4471999999999854e-05, 5.465300000000173e-05, 5.445899999999976e-05, 5.4694000000000964e-05, 5.4527999999998134e-05, 5.455599999999727e-05, 5.473699999999915e-05, 5.42...</msg>
<status status="PASS" starttime="20201030 10:59:28.508" endtime="20201030 10:59:28.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.518" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.517" endtime="20201030 10:59:28.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.524" level="INFO">VALUE: [5.43470000000032e-05, 5.4471999999999854e-05, 5.465300000000173e-05, 5.445899999999976e-05, 5.4694000000000964e-05, 5.4527999999998134e-05, 5.455599999999727e-05, 5.473699999999915e-05, 5.423699999999865e-05, 5.5194000000001464e-05, 5.513899999999572e-05, 5.4513999999998564e-05, 5.48749999999959e-05, 5.4916000000002074e-05, 5.462499999999565e-05, 5.5207999999994095e-05, 5.454200000000464e-05, 5.461099999999608e-05, 5.494500000000069e-05, 5.4999999999999494e-05, 5.486100000000327e-05, 5.519500000000094e-05, 5.48749999999959e-05, 5.440300000000148e-05, 5.4735999999999674e-05, 5.481999999999709e-05, 5.458400000000335e-05, 5.459800000000292e-05, 5.4749999999999244e-05, 5.486099999999633e-05, 5.4972000000000354e-05, 5.4458000000000284e-05, 5.512499999999615e-05, 5.45140000000055e-05, 5.506900000000481e-05, 5.4485999999999424e-05, 5.4291999999997453e-05, 5.4444000000000714e-05, 5.430599999999702e-05, 5.43470000000032e-05, 5.4972000000000354e-05, 5.488900000000241e-05, 5.506999999999734e-05, 5.436099999999583e-05, 5.509699999999701e-05, 5.4499999999998994e-05, 5.483299999999719e-05, 5.512499999999615e-05, 5.48470000000037e-05, 5.5027999999998634e-05]</msg>
<status status="PASS" starttime="20201030 10:59:28.521" endtime="20201030 10:59:28.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.513" endtime="20201030 10:59:28.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.537" endtime="20201030 10:59:28.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.532" endtime="20201030 10:59:28.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.530" endtime="20201030 10:59:28.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.089" endtime="20201030 10:59:28.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.088" endtime="20201030 10:59:28.562"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.585" endtime="20201030 10:59:28.606"></status>
</kw>
<msg timestamp="20201030 10:59:28.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.582" endtime="20201030 10:59:28.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.610" endtime="20201030 10:59:28.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.617" endtime="20201030 10:59:28.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.574" endtime="20201030 10:59:28.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.568" endtime="20201030 10:59:28.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.642" endtime="20201030 10:59:28.984"></status>
</kw>
<msg timestamp="20201030 10:59:28.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042036722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042092111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.639" endtime="20201030 10:59:28.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042036722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042092111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.993" endtime="20201030 10:59:29.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.012" endtime="20201030 10:59:29.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.631" endtime="20201030 10:59:29.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.626" endtime="20201030 10:59:29.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.030" level="INFO">${RESULT} = [{'diff': 5.538900000000291e-05}, {'diff': 5.586100000000427e-05}, {'diff': 5.609799999999748e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.611099999999758e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:29.021" endtime="20201030 10:59:29.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.041" level="INFO">${ACCURACY} = {'diff': [5.538900000000291e-05, 5.586100000000427e-05, 5.609799999999748e-05, 5.6014000000000064e-05, 5.6027999999999634e-05, 5.611099999999758e-05, 5.613900000000366e-05, 5.613900000000366e-05, 5.52...</msg>
<status status="PASS" starttime="20201030 10:59:29.032" endtime="20201030 10:59:29.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.052" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.050" endtime="20201030 10:59:29.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.058" level="INFO">VALUE: [5.538900000000291e-05, 5.586100000000427e-05, 5.609799999999748e-05, 5.6014000000000064e-05, 5.6027999999999634e-05, 5.611099999999758e-05, 5.613900000000366e-05, 5.613900000000366e-05, 5.5249999999999744e-05, 5.55549999999988e-05, 5.5707999999994595e-05, 5.562500000000359e-05, 5.5652000000003254e-05, 5.5708000000001534e-05, 5.5263999999999314e-05, 5.556899999999837e-05, 5.5458000000001284e-05, 5.5291999999998453e-05, 5.6194000000002464e-05, 5.609699999999801e-05, 5.5693999999995025e-05, 5.608299999999844e-05, 5.540300000000248e-05, 5.606999999999834e-05, 5.5305999999998023e-05, 5.554099999999923e-05, 5.609799999999748e-05, 5.561099999999708e-05, 5.533299999999769e-05, 5.618100000000237e-05, 5.5972000000001354e-05, 5.583299999999819e-05, 5.531899999999812e-05, 5.609700000000495e-05, 5.611099999999758e-05, 5.591699999999561e-05, 5.541700000000205e-05, 5.5721999999994165e-05, 5.618100000000237e-05, 5.5291999999998453e-05, 5.532000000000453e-05, 5.5249999999999744e-05, 5.53749999999964e-05, 5.609799999999748e-05, 5.582000000000503e-05, 5.586200000000374e-05, 5.533299999999769e-05, 5.5472000000000854e-05, 5.5722000000001104e-05, 5.5915999999996135e-05]</msg>
<status status="PASS" starttime="20201030 10:59:29.054" endtime="20201030 10:59:29.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.043" endtime="20201030 10:59:29.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.070" endtime="20201030 10:59:29.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.066" endtime="20201030 10:59:29.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.063" endtime="20201030 10:59:29.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.564" endtime="20201030 10:59:29.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.563" endtime="20201030 10:59:29.096"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.119" endtime="20201030 10:59:29.140"></status>
</kw>
<msg timestamp="20201030 10:59:29.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.115" endtime="20201030 10:59:29.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.143" endtime="20201030 10:59:29.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.150" endtime="20201030 10:59:29.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.108" endtime="20201030 10:59:29.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.102" endtime="20201030 10:59:29.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.173" endtime="20201030 10:59:29.515"></status>
</kw>
<msg timestamp="20201030 10:59:29.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042035583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.170" endtime="20201030 10:59:29.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042035583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.525" endtime="20201030 10:59:29.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.544" endtime="20201030 10:59:29.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.162" endtime="20201030 10:59:29.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.158" endtime="20201030 10:59:29.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.561" level="INFO">${RESULT} = [{'diff': 5.6236000000001174e-05}, {'diff': 5.711100000000552e-05}, {'diff': 5.661100000000502e-05}, {'diff': 5.6707999999995595e-05}, {'diff': 5.6651999999997316e-05}, {'diff': 5.663899999999722e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:29.552" endtime="20201030 10:59:29.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.571" level="INFO">${ACCURACY} = {'diff': [5.6236000000001174e-05, 5.711100000000552e-05, 5.661100000000502e-05, 5.6707999999995595e-05, 5.6651999999997316e-05, 5.663899999999722e-05, 5.7028000000000634e-05, 5.6708000000002534e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:59:29.563" endtime="20201030 10:59:29.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.582" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.580" endtime="20201030 10:59:29.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.588" level="INFO">VALUE: [5.6236000000001174e-05, 5.711100000000552e-05, 5.661100000000502e-05, 5.6707999999995595e-05, 5.6651999999997316e-05, 5.663899999999722e-05, 5.7028000000000634e-05, 5.6708000000002534e-05, 5.6528000000000134e-05, 5.693100000000312e-05, 5.6721999999995165e-05, 5.709699999999901e-05, 5.6277999999999884e-05, 5.6500000000000994e-05, 5.690300000000398e-05, 5.695899999999532e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.7069999999999343e-05, 5.6651999999997316e-05, 5.6416000000003574e-05, 5.6541999999999704e-05, 5.6235999999994235e-05, 5.6708000000002534e-05, 5.7208000000003034e-05, 5.63749999999974e-05, 5.709699999999901e-05, 5.712499999999815e-05, 5.7193999999996525e-05, 5.665299999999679e-05, 5.693099999999618e-05, 5.709799999999848e-05, 5.645899999999482e-05, 5.645899999999482e-05, 5.6735999999994735e-05, 5.6222000000001604e-05, 5.6222000000001604e-05, 5.6415999999996636e-05, 5.6486000000001424e-05, 5.6235999999994235e-05, 5.640300000000348e-05, 5.686099999999833e-05, 5.7000000000001494e-05, 5.6514000000000564e-05, 5.6485999999994485e-05, 5.656899999999937e-05, 5.6944000000003214e-05, 5.7055999999999774e-05, 5.6250000000000744e-05, 5.6541999999999704e-05]</msg>
<status status="PASS" starttime="20201030 10:59:29.584" endtime="20201030 10:59:29.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.573" endtime="20201030 10:59:29.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.611" endtime="20201030 10:59:29.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.606" endtime="20201030 10:59:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.604" endtime="20201030 10:59:29.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.098" endtime="20201030 10:59:29.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.096" endtime="20201030 10:59:29.639"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.665" endtime="20201030 10:59:29.689"></status>
</kw>
<msg timestamp="20201030 10:59:29.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.661" endtime="20201030 10:59:29.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.692" endtime="20201030 10:59:29.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.699" endtime="20201030 10:59:29.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.653" endtime="20201030 10:59:29.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.646" endtime="20201030 10:59:29.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.725" endtime="20201030 10:59:30.088"></status>
</kw>
<msg timestamp="20201030 10:59:30.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050039708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050097278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.721" endtime="20201030 10:59:30.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050039708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050097278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.098" endtime="20201030 10:59:30.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.118" endtime="20201030 10:59:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.713" endtime="20201030 10:59:30.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.708" endtime="20201030 10:59:30.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.136" level="INFO">${RESULT} = [{'diff': 5.7569999999999844e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.8055999999993835e-05}, {'diff': 5.806900000000087e-05}, {'diff': 5.7472000000002854e-05}, {'diff': 5.809700000000001e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:30.127" endtime="20201030 10:59:30.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.146" level="INFO">${ACCURACY} = {'diff': [5.7569999999999844e-05, 5.73749999999984e-05, 5.8055999999993835e-05, 5.806900000000087e-05, 5.7472000000002854e-05, 5.809700000000001e-05, 5.76670000000043e-05, 5.745900000000276e-05, 5.815...</msg>
<status status="PASS" starttime="20201030 10:59:30.139" endtime="20201030 10:59:30.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.158" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.156" endtime="20201030 10:59:30.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.164" level="INFO">VALUE: [5.7569999999999844e-05, 5.73749999999984e-05, 5.8055999999993835e-05, 5.806900000000087e-05, 5.7472000000002854e-05, 5.809700000000001e-05, 5.76670000000043e-05, 5.745900000000276e-05, 5.815299999999829e-05, 5.794499999999675e-05, 5.759800000000592e-05, 5.7472000000002854e-05, 5.7736000000002674e-05, 5.761199999999855e-05, 5.7750000000002244e-05, 5.783300000000019e-05, 5.7500000000001994e-05, 5.729099999999404e-05, 5.7777999999994445e-05, 5.8028000000001634e-05, 5.741699999999711e-05, 5.7528000000001134e-05, 5.743100000000362e-05, 5.733299999999969e-05, 5.7986000000002924e-05, 5.812500000000609e-05, 5.8083999999999913e-05, 5.7278000000000884e-05, 5.772299999999564e-05, 5.787500000000584e-05, 5.813900000000566e-05, 5.7916000000005075e-05, 5.736099999999883e-05, 5.734699999999926e-05, 5.756900000000037e-05, 5.790300000000498e-05, 5.8194000000004464e-05, 5.7957999999996845e-05, 5.806900000000087e-05, 5.8056000000000774e-05, 5.8014000000002064e-05, 5.7722000000003104e-05, 5.8070000000000344e-05, 5.7985999999995985e-05, 5.7236000000002174e-05, 5.7569999999999844e-05, 5.733299999999969e-05, 5.811099999999958e-05, 5.731900000000012e-05, 5.7485999999995485e-05]</msg>
<status status="PASS" starttime="20201030 10:59:30.161" endtime="20201030 10:59:30.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.148" endtime="20201030 10:59:30.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.179" endtime="20201030 10:59:30.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.173" endtime="20201030 10:59:30.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.170" endtime="20201030 10:59:30.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.641" endtime="20201030 10:59:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.640" endtime="20201030 10:59:30.205"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.229" endtime="20201030 10:59:30.251"></status>
</kw>
<msg timestamp="20201030 10:59:30.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.226" endtime="20201030 10:59:30.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.255" endtime="20201030 10:59:30.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.261" endtime="20201030 10:59:30.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.218" endtime="20201030 10:59:30.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.212" endtime="20201030 10:59:30.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.287" endtime="20201030 10:59:30.648"></status>
</kw>
<msg timestamp="20201030 10:59:30.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043694236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043753403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.283" endtime="20201030 10:59:30.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043694236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043753403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.658" endtime="20201030 10:59:30.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.678" endtime="20201030 10:59:30.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.275" endtime="20201030 10:59:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.270" endtime="20201030 10:59:30.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.698" level="INFO">${RESULT} = [{'diff': 5.91670000000058e-05}, {'diff': 5.8764000000002814e-05}, {'diff': 5.8820000000001094e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.868099999999793e-05}, {'diff': 5.8208000000004034e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:30.688" endtime="20201030 10:59:30.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.710" level="INFO">${ACCURACY} = {'diff': [5.91670000000058e-05, 5.8764000000002814e-05, 5.8820000000001094e-05, 5.83749999999994e-05, 5.868099999999793e-05, 5.8208000000004034e-05, 5.886100000000033e-05, 5.8499999999996055e-05, 5.89...</msg>
<status status="PASS" starttime="20201030 10:59:30.700" endtime="20201030 10:59:30.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.722" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.719" endtime="20201030 10:59:30.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.727" level="INFO">VALUE: [5.91670000000058e-05, 5.8764000000002814e-05, 5.8820000000001094e-05, 5.83749999999994e-05, 5.868099999999793e-05, 5.8208000000004034e-05, 5.886100000000033e-05, 5.8499999999996055e-05, 5.8929999999998706e-05, 5.85550000000018e-05, 5.88749999999999e-05, 5.8792000000001954e-05, 5.8944000000005214e-05, 5.8278000000001884e-05, 5.8222000000003604e-05, 5.8250000000002744e-05, 5.870899999999707e-05, 5.918099999999843e-05, 5.9000000000003494e-05, 5.865299999999879e-05, 5.9070000000001344e-05, 5.8457999999997345e-05, 5.834700000000026e-05, 5.8665999999998886e-05, 5.8985999999996985e-05, 5.830500000000155e-05, 5.8486000000003424e-05, 5.9207999999998095e-05, 5.8235999999996235e-05, 5.865299999999879e-05, 5.831900000000112e-05, 5.8291999999994515e-05, 5.8320000000000594e-05, 5.8972000000004354e-05, 5.8570000000000844e-05, 5.8528000000002134e-05, 5.8584000000000414e-05, 5.8833999999993725e-05, 5.8915999999999136e-05, 5.881900000000162e-05, 5.8778000000002384e-05, 5.868099999999793e-05, 5.8736000000003674e-05, 5.880500000000205e-05, 5.8264000000002314e-05, 5.883300000000119e-05, 5.8750000000003244e-05, 5.9194000000005464e-05, 5.918099999999843e-05, 5.8472000000003854e-05]</msg>
<status status="PASS" starttime="20201030 10:59:30.724" endtime="20201030 10:59:30.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.712" endtime="20201030 10:59:30.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.741" endtime="20201030 10:59:30.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.736" endtime="20201030 10:59:30.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.733" endtime="20201030 10:59:30.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.207" endtime="20201030 10:59:30.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.206" endtime="20201030 10:59:30.767"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.791" endtime="20201030 10:59:30.813"></status>
</kw>
<msg timestamp="20201030 10:59:30.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.788" endtime="20201030 10:59:30.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.817" endtime="20201030 10:59:30.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.823" endtime="20201030 10:59:30.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.780" endtime="20201030 10:59:30.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.774" endtime="20201030 10:59:30.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.849" endtime="20201030 10:59:31.214"></status>
</kw>
<msg timestamp="20201030 10:59:31.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044017514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.845" endtime="20201030 10:59:31.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044017514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.224" endtime="20201030 10:59:31.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.243" endtime="20201030 10:59:31.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.837" endtime="20201030 10:59:31.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.832" endtime="20201030 10:59:31.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.262" level="INFO">${RESULT} = [{'diff': 6.006899999999593e-05}, {'diff': 5.981900000000262e-05}, {'diff': 5.9485999999997485e-05}, {'diff': 5.943099999999868e-05}, {'diff': 5.9292000000002454e-05}, {'diff': 6.009700000000201e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:31.253" endtime="20201030 10:59:31.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.274" level="INFO">${ACCURACY} = {'diff': [6.006899999999593e-05, 5.981900000000262e-05, 5.9485999999997485e-05, 5.943099999999868e-05, 5.9292000000002454e-05, 6.009700000000201e-05, 5.9791999999996015e-05, 6.018099999999943e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 10:59:31.264" endtime="20201030 10:59:31.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.286" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.283" endtime="20201030 10:59:31.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.292" level="INFO">VALUE: [6.006899999999593e-05, 5.981900000000262e-05, 5.9485999999997485e-05, 5.943099999999868e-05, 5.9292000000002454e-05, 6.009700000000201e-05, 5.9791999999996015e-05, 6.018099999999943e-05, 5.9542000000002704e-05, 5.965299999999979e-05, 6.0084000000001914e-05, 5.993099999999918e-05, 5.9278000000002884e-05, 6.0013999999997125e-05, 6.0112000000001053e-05, 6.004099999999679e-05, 6.0013999999997125e-05, 5.984700000000176e-05, 5.979100000000348e-05, 5.9250000000003744e-05, 6.020899999999857e-05, 5.93750000000004e-05, 5.961100000000108e-05, 5.9500000000003994e-05, 5.9485999999997485e-05, 5.993099999999918e-05, 5.936099999999389e-05, 5.9805999999995585e-05, 5.9320000000001594e-05, 5.9957999999998846e-05, 5.9306000000002024e-05, 5.9848000000001234e-05, 5.9693999999999026e-05, 5.9429999999999206e-05, 5.958300000000194e-05, 5.9652000000000316e-05, 5.962499999999371e-05, 5.9278000000002884e-05, 5.961099999999414e-05, 6.012499999999421e-05, 5.983300000000219e-05, 5.9264000000003314e-05, 5.9777999999996445e-05, 5.96949999999985e-05, 5.9528000000003134e-05, 5.9499999999997055e-05, 5.9513999999996625e-05, 5.983300000000219e-05, 5.9263999999996375e-05, 5.9652000000000316e-05]</msg>
<status status="PASS" starttime="20201030 10:59:31.288" endtime="20201030 10:59:31.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.276" endtime="20201030 10:59:31.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.305" endtime="20201030 10:59:31.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.301" endtime="20201030 10:59:31.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.298" endtime="20201030 10:59:31.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.769" endtime="20201030 10:59:31.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.768" endtime="20201030 10:59:31.331"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.356" endtime="20201030 10:59:31.377"></status>
</kw>
<msg timestamp="20201030 10:59:31.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.352" endtime="20201030 10:59:31.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.381" endtime="20201030 10:59:31.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.387" endtime="20201030 10:59:31.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.344" endtime="20201030 10:59:31.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.338" endtime="20201030 10:59:31.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.412" endtime="20201030 10:59:31.765"></status>
</kw>
<msg timestamp="20201030 10:59:31.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043976417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044037125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.409" endtime="20201030 10:59:31.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043976417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044037125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.770" endtime="20201030 10:59:31.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.778" endtime="20201030 10:59:31.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.401" endtime="20201030 10:59:31.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.396" endtime="20201030 10:59:31.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.787" level="INFO">${RESULT} = [{'diff': 6.0708000000006535e-05}, {'diff': 6.031900000000312e-05}, {'diff': 6.0582999999996e-05}, {'diff': 6.1027999999997695e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.0556000000003274e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:31.782" endtime="20201030 10:59:31.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.791" level="INFO">${ACCURACY} = {'diff': [6.0708000000006535e-05, 6.031900000000312e-05, 6.0582999999996e-05, 6.1027999999997695e-05, 6.12080000000001e-05, 6.0556000000003274e-05, 6.105599999999684e-05, 6.0235999999998235e-05, 6.113...</msg>
<status status="PASS" starttime="20201030 10:59:31.788" endtime="20201030 10:59:31.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.796" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.795" endtime="20201030 10:59:31.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.799" level="INFO">VALUE: [6.0708000000006535e-05, 6.031900000000312e-05, 6.0582999999996e-05, 6.1027999999997695e-05, 6.12080000000001e-05, 6.0556000000003274e-05, 6.105599999999684e-05, 6.0235999999998235e-05, 6.113800000000225e-05, 6.0666000000000886e-05, 6.108300000000344e-05, 6.0763999999997875e-05, 6.119400000000053e-05, 6.108300000000344e-05, 6.119400000000053e-05, 6.104099999999779e-05, 6.0291999999996515e-05, 6.041700000000011e-05, 6.10829999999965e-05, 6.0750000000005244e-05, 6.0319999999995655e-05, 6.095899999999932e-05, 6.055499999999686e-05, 6.1027999999997695e-05, 6.052700000000466e-05, 6.0278000000003884e-05, 6.065300000000079e-05, 6.0528000000004134e-05, 6.0652000000001316e-05, 6.054099999999729e-05, 6.0471999999998916e-05, 6.033299999999575e-05, 6.1013999999998125e-05, 6.066700000000036e-05, 6.0236000000005174e-05, 6.059700000000251e-05, 6.0443999999999776e-05, 6.034700000000226e-05, 6.0235999999998235e-05, 6.070899999999907e-05, 6.040300000000054e-05, 6.0777999999997445e-05, 6.113900000000172e-05, 6.0777999999997445e-05, 6.0764000000004814e-05, 6.0749999999998305e-05, 6.0457999999999346e-05, 6.0985999999998985e-05, 6.0235999999998235e-05, 6.0249999999997805e-05]</msg>
<status status="PASS" starttime="20201030 10:59:31.797" endtime="20201030 10:59:31.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.792" endtime="20201030 10:59:31.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.805" endtime="20201030 10:59:31.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.803" endtime="20201030 10:59:31.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.801" endtime="20201030 10:59:31.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.333" endtime="20201030 10:59:31.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.332" endtime="20201030 10:59:31.826"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.837" endtime="20201030 10:59:31.855"></status>
</kw>
<msg timestamp="20201030 10:59:31.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.835" endtime="20201030 10:59:31.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.857" endtime="20201030 10:59:31.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.863" endtime="20201030 10:59:31.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.832" endtime="20201030 10:59:31.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.829" endtime="20201030 10:59:31.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.886" endtime="20201030 10:59:32.231"></status>
</kw>
<msg timestamp="20201030 10:59:32.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025638708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.883" endtime="20201030 10:59:32.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025638708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.240" endtime="20201030 10:59:32.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.259" endtime="20201030 10:59:32.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.876" endtime="20201030 10:59:32.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.871" endtime="20201030 10:59:32.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.277" level="INFO">${RESULT} = [{'diff': 6.197200000000042e-05}, {'diff': 6.217999999999849e-05}, {'diff': 6.15690000000009e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.176399999999888e-05}, {'diff': 6.20690000000014e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:32.268" endtime="20201030 10:59:32.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.287" level="INFO">${ACCURACY} = {'diff': [6.197200000000042e-05, 6.217999999999849e-05, 6.15690000000009e-05, 6.131900000000065e-05, 6.176399999999888e-05, 6.20690000000014e-05, 6.173599999999974e-05, 6.179099999999854e-05, 6.159700...</msg>
<status status="PASS" starttime="20201030 10:59:32.279" endtime="20201030 10:59:32.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.298" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.296" endtime="20201030 10:59:32.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.303" level="INFO">VALUE: [6.197200000000042e-05, 6.217999999999849e-05, 6.15690000000009e-05, 6.131900000000065e-05, 6.176399999999888e-05, 6.20690000000014e-05, 6.173599999999974e-05, 6.179099999999854e-05, 6.159700000000004e-05, 6.220900000000057e-05, 6.163900000000222e-05, 6.222300000000014e-05, 6.157000000000037e-05, 6.186199999999933e-05, 6.205499999999836e-05, 6.166700000000136e-05, 6.12499999999988e-05, 6.183300000000072e-05, 6.159700000000004e-05, 6.176400000000234e-05, 6.175000000000277e-05, 6.159700000000004e-05, 6.204200000000173e-05, 6.195799999999738e-05, 6.148599999999949e-05, 6.162500000000265e-05, 6.138900000000197e-05, 6.193100000000118e-05, 6.129200000000098e-05, 6.140299999999807e-05, 6.127799999999795e-05, 6.205499999999836e-05, 6.127699999999847e-05, 6.19439999999978e-05, 6.152699999999872e-05, 6.145800000000035e-05, 6.204200000000173e-05, 6.219399999999806e-05, 6.193100000000118e-05, 6.205599999999784e-05, 6.207000000000087e-05, 6.144500000000025e-05, 6.195900000000032e-05, 6.194500000000075e-05, 6.179200000000148e-05, 6.141699999999764e-05, 6.123700000000218e-05, 6.149999999999906e-05, 6.173599999999974e-05, 6.170799999999713e-05]</msg>
<status status="PASS" starttime="20201030 10:59:32.300" endtime="20201030 10:59:32.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.289" endtime="20201030 10:59:32.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.318" endtime="20201030 10:59:32.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.312" endtime="20201030 10:59:32.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.309" endtime="20201030 10:59:32.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.827" endtime="20201030 10:59:32.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.826" endtime="20201030 10:59:32.343"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.366" endtime="20201030 10:59:32.387"></status>
</kw>
<msg timestamp="20201030 10:59:32.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.363" endtime="20201030 10:59:32.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.390" endtime="20201030 10:59:32.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.397" endtime="20201030 10:59:32.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.355" endtime="20201030 10:59:32.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.350" endtime="20201030 10:59:32.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.421" endtime="20201030 10:59:32.763"></status>
</kw>
<msg timestamp="20201030 10:59:32.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042071514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.417" endtime="20201030 10:59:32.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042071514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.773" endtime="20201030 10:59:32.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.793" endtime="20201030 10:59:32.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.410" endtime="20201030 10:59:32.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.405" endtime="20201030 10:59:32.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.810" level="INFO">${RESULT} = [{'diff': 6.29029999999961e-05}, {'diff': 6.304199999999927e-05}, {'diff': 6.245900000000082e-05}, {'diff': 6.267999999999552e-05}, {'diff': 6.234800000000373e-05}, {'diff': 6.245900000000082e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:32.801" endtime="20201030 10:59:32.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.821" level="INFO">${ACCURACY} = {'diff': [6.29029999999961e-05, 6.304199999999927e-05, 6.245900000000082e-05, 6.267999999999552e-05, 6.234800000000373e-05, 6.245900000000082e-05, 6.316699999999592e-05, 6.259799999999704e-05, 6.29860...</msg>
<status status="PASS" starttime="20201030 10:59:32.812" endtime="20201030 10:59:32.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.832" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.830" endtime="20201030 10:59:32.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.838" level="INFO">VALUE: [6.29029999999961e-05, 6.304199999999927e-05, 6.245900000000082e-05, 6.267999999999552e-05, 6.234800000000373e-05, 6.245900000000082e-05, 6.316699999999592e-05, 6.259799999999704e-05, 6.298600000000099e-05, 6.252699999999972e-05, 6.245800000000135e-05, 6.311099999999764e-05, 6.25279999999992e-05, 6.234699999999732e-05, 6.268100000000193e-05, 6.223600000000024e-05, 6.305599999999884e-05, 6.309699999999807e-05, 6.252800000000613e-05, 6.241700000000211e-05, 6.230599999999809e-05, 6.240199999999613e-05, 6.318100000000243e-05, 6.306899999999893e-05, 6.226399999999938e-05, 6.2582999999998e-05, 6.22499999999998e-05, 6.315300000000329e-05, 6.245799999999441e-05, 6.311099999999764e-05, 6.305599999999884e-05, 6.309699999999807e-05, 6.23750000000034e-05, 6.231899999999818e-05, 6.273600000000074e-05, 6.270899999999413e-05, 6.265299999999585e-05, 6.252699999999972e-05, 6.230599999999809e-05, 6.26950000000015e-05, 6.293099999999524e-05, 6.272200000000117e-05, 6.233300000000469e-05, 6.318000000000296e-05, 6.229100000000598e-05, 6.273600000000074e-05, 6.244399999999484e-05, 6.222200000000067e-05, 6.245800000000135e-05, 6.286099999999739e-05]</msg>
<status status="PASS" starttime="20201030 10:59:32.834" endtime="20201030 10:59:32.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.823" endtime="20201030 10:59:32.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.850" endtime="20201030 10:59:32.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.846" endtime="20201030 10:59:32.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.843" endtime="20201030 10:59:32.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.345" endtime="20201030 10:59:32.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.344" endtime="20201030 10:59:32.876"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.899" endtime="20201030 10:59:32.920"></status>
</kw>
<msg timestamp="20201030 10:59:32.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.895" endtime="20201030 10:59:32.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.924" endtime="20201030 10:59:32.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.930" endtime="20201030 10:59:32.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.888" endtime="20201030 10:59:32.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.882" endtime="20201030 10:59:32.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.954" endtime="20201030 10:59:33.296"></status>
</kw>
<msg timestamp="20201030 10:59:33.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041956236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.950" endtime="20201030 10:59:33.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041956236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.305" endtime="20201030 10:59:33.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.324" endtime="20201030 10:59:33.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.943" endtime="20201030 10:59:33.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.938" endtime="20201030 10:59:33.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.341" level="INFO">${RESULT} = [{'diff': 6.381899999999968e-05}, {'diff': 6.32500000000008e-05}, {'diff': 6.400000000000156e-05}, {'diff': 6.347200000000192e-05}, {'diff': 6.35280000000002e-05}, {'diff': 6.391699999999667e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:33.333" endtime="20201030 10:59:33.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:33.353" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.32500000000008e-05, 6.400000000000156e-05, 6.347200000000192e-05, 6.35280000000002e-05, 6.391699999999667e-05, 6.35699999999989e-05, 6.359800000000498e-05, 6.3666999...</msg>
<status status="PASS" starttime="20201030 10:59:33.344" endtime="20201030 10:59:33.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.364" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:59:33.362" endtime="20201030 10:59:33.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.369" level="INFO">VALUE: [6.381899999999968e-05, 6.32500000000008e-05, 6.400000000000156e-05, 6.347200000000192e-05, 6.35280000000002e-05, 6.391699999999667e-05, 6.35699999999989e-05, 6.359800000000498e-05, 6.366699999999642e-05, 6.370899999999513e-05, 6.400000000000156e-05, 6.379100000000054e-05, 6.395800000000285e-05, 6.331899999999918e-05, 6.366600000000389e-05, 6.340300000000354e-05, 6.326400000000038e-05, 6.409699999999907e-05, 6.415300000000429e-05, 6.37500000000013e-05, 6.411100000000558e-05, 6.4195000000003e-05, 6.394500000000275e-05, 6.40280000000007e-05, 6.363799999999781e-05, 6.348700000000096e-05, 6.366599999999695e-05, 6.398600000000199e-05, 6.416599999999745e-05, 6.37909999999936e-05, 6.397199999999548e-05, 6.347200000000192e-05, 6.380500000000011e-05, 6.404200000000027e-05, 6.330600000000602e-05, 6.395799999999591e-05, 6.391699999999667e-05, 6.416700000000386e-05, 6.372300000000164e-05, 6.416600000000439e-05, 6.388799999999806e-05, 6.359799999999804e-05, 6.354100000000029e-05, 6.390300000000404e-05, 6.336099999999789e-05, 6.406899999999993e-05, 6.386099999999839e-05, 6.386099999999839e-05, 6.411099999999864e-05, 6.326400000000038e-05]</msg>
<status status="PASS" starttime="20201030 10:59:33.366" endtime="20201030 10:59:33.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.355" endtime="20201030 10:59:33.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:33.382" endtime="20201030 10:59:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.378" endtime="20201030 10:59:33.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.375" endtime="20201030 10:59:33.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.878" endtime="20201030 10:59:33.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.877" endtime="20201030 10:59:33.409"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.434" endtime="20201030 10:59:33.455"></status>
</kw>
<msg timestamp="20201030 10:59:33.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.430" endtime="20201030 10:59:33.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.458" endtime="20201030 10:59:33.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.465" endtime="20201030 10:59:33.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.423" endtime="20201030 10:59:33.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.416" endtime="20201030 10:59:33.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.489" endtime="20201030 10:59:33.834"></status>
</kw>
<msg timestamp="20201030 10:59:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045430722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045495889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.485" endtime="20201030 10:59:33.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045430722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045495889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.843" endtime="20201030 10:59:33.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.862" endtime="20201030 10:59:33.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.478" endtime="20201030 10:59:33.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.473" endtime="20201030 10:59:33.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.880" level="INFO">${RESULT} = [{'diff': 6.516699999999792e-05}, {'diff': 6.499999999999562e-05}, {'diff': 6.488900000000547e-05}, {'diff': 6.513899999999878e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.441699999999717e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:33.871" endtime="20201030 10:59:33.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:33.889" level="INFO">${ACCURACY} = {'diff': [6.516699999999792e-05, 6.499999999999562e-05, 6.488900000000547e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.441699999999717e-05, 6.469499999999656e-05, 6.429200000000052e-05, 6.4987...</msg>
<status status="PASS" starttime="20201030 10:59:33.882" endtime="20201030 10:59:33.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.900" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:59:33.898" endtime="20201030 10:59:33.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.906" level="INFO">VALUE: [6.516699999999792e-05, 6.499999999999562e-05, 6.488900000000547e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.441699999999717e-05, 6.469499999999656e-05, 6.429200000000052e-05, 6.498700000000246e-05, 6.466599999999795e-05, 6.472200000000317e-05, 6.431900000000018e-05, 6.519399999999759e-05, 6.44029999999976e-05, 6.500000000000256e-05, 6.494400000000428e-05, 6.469399999999709e-05, 6.482000000000016e-05, 6.50700000000004e-05, 6.508399999999998e-05, 6.483399999999973e-05, 6.512499999999921e-05, 6.4277999999994e-05, 6.440300000000454e-05, 6.430600000000009e-05, 6.447199999999598e-05, 6.483300000000025e-05, 6.511099999999964e-05, 6.501400000000213e-05, 6.455499999999392e-05, 6.467999999999752e-05, 6.494499999999681e-05, 6.461099999999914e-05, 6.468100000000393e-05, 6.518099999999749e-05, 6.451400000000163e-05, 6.465300000000479e-05, 6.462500000000565e-05, 6.470799999999666e-05, 6.431900000000018e-05, 6.500000000000256e-05, 6.423600000000224e-05, 6.486099999999939e-05, 6.498600000000299e-05, 6.513899999999878e-05, 6.486099999999939e-05, 6.45280000000012e-05, 6.450000000000206e-05, 6.45280000000012e-05, 6.495900000000332e-05]</msg>
<status status="PASS" starttime="20201030 10:59:33.903" endtime="20201030 10:59:33.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.891" endtime="20201030 10:59:33.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:33.919" endtime="20201030 10:59:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.914" endtime="20201030 10:59:33.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.912" endtime="20201030 10:59:33.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.412" endtime="20201030 10:59:33.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.410" endtime="20201030 10:59:33.944"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.967" endtime="20201030 10:59:33.990"></status>
</kw>
<msg timestamp="20201030 10:59:33.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.964" endtime="20201030 10:59:33.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.993" endtime="20201030 10:59:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.000" endtime="20201030 10:59:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.956" endtime="20201030 10:59:34.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.950" endtime="20201030 10:59:34.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.024" endtime="20201030 10:59:34.365"></status>
</kw>
<msg timestamp="20201030 10:59:34.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04375575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:34.020" endtime="20201030 10:59:34.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04375575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:34.374" endtime="20201030 10:59:34.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.393" endtime="20201030 10:59:34.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.013" endtime="20201030 10:59:34.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.008" endtime="20201030 10:59:34.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.411" level="INFO">${RESULT} = [{'diff': 6.586100000000039e-05}, {'diff': 6.574999999999637e-05}, {'diff': 6.573600000000374e-05}, {'diff': 6.591699999999867e-05}, {'diff': 6.616699999999892e-05}, {'diff': 6.580600000000159e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:34.402" endtime="20201030 10:59:34.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.420" level="INFO">${ACCURACY} = {'diff': [6.586100000000039e-05, 6.574999999999637e-05, 6.573600000000374e-05, 6.591699999999867e-05, 6.616699999999892e-05, 6.580600000000159e-05, 6.597299999999695e-05, 6.569499999999756e-05, 6.5278...</msg>
<status status="PASS" starttime="20201030 10:59:34.413" endtime="20201030 10:59:34.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.431" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.429" endtime="20201030 10:59:34.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.437" level="INFO">VALUE: [6.586100000000039e-05, 6.574999999999637e-05, 6.573600000000374e-05, 6.591699999999867e-05, 6.616699999999892e-05, 6.580600000000159e-05, 6.597299999999695e-05, 6.569499999999756e-05, 6.527800000000195e-05, 6.536099999999989e-05, 6.554100000000229e-05, 6.530499999999467e-05, 6.563799999999981e-05, 6.59159999999992e-05, 6.608299999999456e-05, 6.530500000000161e-05, 6.556900000000143e-05, 6.536099999999989e-05, 6.587499999999996e-05, 6.615299999999935e-05, 6.550000000000306e-05, 6.570899999999713e-05, 6.527800000000195e-05, 6.576399999999594e-05, 6.612500000000021e-05, 6.57080000000046e-05, 6.615299999999935e-05, 6.556899999999449e-05, 6.595799999999791e-05, 6.594399999999834e-05, 6.612500000000021e-05, 6.545800000000435e-05, 6.600000000000356e-05, 6.598599999999705e-05, 6.62229999999972e-05, 6.533300000000075e-05, 6.594500000000475e-05, 6.52500000000028e-05, 6.532000000000066e-05, 6.586100000000039e-05, 6.570799999999766e-05, 6.576399999999594e-05, 6.61109999999937e-05, 6.538799999999956e-05, 6.613899999999978e-05, 6.623600000000424e-05, 6.619399999999859e-05, 6.595799999999791e-05, 6.573600000000374e-05, 6.55700000000009e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.434" endtime="20201030 10:59:34.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.422" endtime="20201030 10:59:34.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.451" endtime="20201030 10:59:34.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.445" endtime="20201030 10:59:34.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.443" endtime="20201030 10:59:34.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.946" endtime="20201030 10:59:34.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.945" endtime="20201030 10:59:34.476"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.500" endtime="20201030 10:59:34.521"></status>
</kw>
<msg timestamp="20201030 10:59:34.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.496" endtime="20201030 10:59:34.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.525" endtime="20201030 10:59:34.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.531" endtime="20201030 10:59:34.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.489" endtime="20201030 10:59:34.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.483" endtime="20201030 10:59:34.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.555" endtime="20201030 10:59:34.895"></status>
</kw>
<msg timestamp="20201030 10:59:34.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041822722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.551" endtime="20201030 10:59:34.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041822722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.899" endtime="20201030 10:59:34.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.908" endtime="20201030 10:59:34.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.544" endtime="20201030 10:59:34.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.539" endtime="20201030 10:59:34.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.916" level="INFO">${RESULT} = [{'diff': 6.644499999999831e-05}, {'diff': 6.71109999999947e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.623600000000424e-05}, {'diff': 6.686200000000087e-05}, {'diff': 6.662500000000071e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:34.912" endtime="20201030 10:59:34.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.921" level="INFO">${ACCURACY} = {'diff': [6.644499999999831e-05, 6.71109999999947e-05, 6.715300000000035e-05, 6.623600000000424e-05, 6.686200000000087e-05, 6.662500000000071e-05, 6.64300000000062e-05, 6.64159999999997e-05, 6.6500000...</msg>
<status status="PASS" starttime="20201030 10:59:34.917" endtime="20201030 10:59:34.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.926" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.925" endtime="20201030 10:59:34.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.929" level="INFO">VALUE: [6.644499999999831e-05, 6.71109999999947e-05, 6.715300000000035e-05, 6.623600000000424e-05, 6.686200000000087e-05, 6.662500000000071e-05, 6.64300000000062e-05, 6.64159999999997e-05, 6.650000000000406e-05, 6.719399999999959e-05, 6.677800000000345e-05, 6.669399999999909e-05, 6.706900000000293e-05, 6.62359999999973e-05, 6.724999999999787e-05, 6.626299999999696e-05, 6.67359999999978e-05, 6.699999999999762e-05, 6.652799999999626e-05, 6.69160000000002e-05, 6.711100000000164e-05, 6.715300000000035e-05, 6.679100000000354e-05, 6.644399999999884e-05, 6.665299999999985e-05, 6.674999999999737e-05, 6.687500000000096e-05, 6.627800000000295e-05, 6.677799999999651e-05, 6.718099999999949e-05, 6.655600000000234e-05, 6.682000000000216e-05, 6.70700000000024e-05, 6.663900000000028e-05, 6.718000000000002e-05, 6.697299999999795e-05, 6.704099999999685e-05, 6.694399999999934e-05, 6.718099999999949e-05, 6.654099999999635e-05, 6.651399999999669e-05, 6.70830000000025e-05, 6.65280000000032e-05, 6.663900000000028e-05, 6.713900000000078e-05, 6.702799999999676e-05, 6.662500000000071e-05, 6.629199999999558e-05, 6.704200000000327e-05, 6.633400000000123e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.927" endtime="20201030 10:59:34.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.922" endtime="20201030 10:59:34.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.935" endtime="20201030 10:59:34.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.933" endtime="20201030 10:59:34.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.932" endtime="20201030 10:59:34.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.479" endtime="20201030 10:59:34.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.477" endtime="20201030 10:59:34.956"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.967" endtime="20201030 10:59:34.985"></status>
</kw>
<msg timestamp="20201030 10:59:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.966" endtime="20201030 10:59:34.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.987" endtime="20201030 10:59:34.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.990" endtime="20201030 10:59:34.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.962" endtime="20201030 10:59:34.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.959" endtime="20201030 10:59:34.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.007" endtime="20201030 10:59:35.347"></status>
</kw>
<msg timestamp="20201030 10:59:35.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:35.004" endtime="20201030 10:59:35.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:35.357" endtime="20201030 10:59:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.376" endtime="20201030 10:59:35.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.996" endtime="20201030 10:59:35.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.993" endtime="20201030 10:59:35.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.393" level="INFO">${RESULT} = [{'diff': 6.761099999999867e-05}, {'diff': 6.781900000000021e-05}, {'diff': 6.811099999999917e-05}, {'diff': 6.736099999999842e-05}, {'diff': 6.802799999999776e-05}, {'diff': 6.731999999999919e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:35.384" endtime="20201030 10:59:35.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.405" level="INFO">${ACCURACY} = {'diff': [6.761099999999867e-05, 6.781900000000021e-05, 6.811099999999917e-05, 6.736099999999842e-05, 6.802799999999776e-05, 6.731999999999919e-05, 6.798599999999905e-05, 6.751300000000168e-05, 6.7195...</msg>
<status status="PASS" starttime="20201030 10:59:35.395" endtime="20201030 10:59:35.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.416" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.413" endtime="20201030 10:59:35.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.421" level="INFO">VALUE: [6.761099999999867e-05, 6.781900000000021e-05, 6.811099999999917e-05, 6.736099999999842e-05, 6.802799999999776e-05, 6.731999999999919e-05, 6.798599999999905e-05, 6.751300000000168e-05, 6.719500000000253e-05, 6.754100000000082e-05, 6.80969999999996e-05, 6.724999999999787e-05, 6.800000000000209e-05, 6.747200000000245e-05, 6.74030000000006e-05, 6.815299999999788e-05, 6.806900000000046e-05, 6.806999999999994e-05, 6.795899999999938e-05, 6.758400000000248e-05, 6.745899999999888e-05, 6.727800000000048e-05, 6.74160000000007e-05, 6.790299999999763e-05, 6.752699999999778e-05, 6.765200000000138e-05, 6.747200000000245e-05, 6.801399999999819e-05, 6.781900000000021e-05, 6.755599999999987e-05, 6.733300000000275e-05, 6.811099999999917e-05, 6.769500000000303e-05, 6.752800000000073e-05, 6.74030000000006e-05, 6.788800000000206e-05, 6.794499999999981e-05, 6.816700000000092e-05, 6.729100000000057e-05, 6.77359999999988e-05, 6.754100000000082e-05, 6.750000000000159e-05, 6.811099999999917e-05, 6.808300000000003e-05, 6.762499999999824e-05, 6.755599999999987e-05, 6.780600000000012e-05, 6.787500000000196e-05, 6.77090000000026e-05, 6.727800000000048e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.418" endtime="20201030 10:59:35.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.407" endtime="20201030 10:59:35.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.434" endtime="20201030 10:59:35.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.430" endtime="20201030 10:59:35.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.427" endtime="20201030 10:59:35.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.957" endtime="20201030 10:59:35.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.957" endtime="20201030 10:59:35.459"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.482" endtime="20201030 10:59:35.504"></status>
</kw>
<msg timestamp="20201030 10:59:35.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.479" endtime="20201030 10:59:35.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.507" endtime="20201030 10:59:35.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.513" endtime="20201030 10:59:35.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.471" endtime="20201030 10:59:35.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.466" endtime="20201030 10:59:35.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.537" endtime="20201030 10:59:35.882"></status>
</kw>
<msg timestamp="20201030 10:59:35.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.534" endtime="20201030 10:59:35.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.892" endtime="20201030 10:59:35.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.911" endtime="20201030 10:59:35.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.527" endtime="20201030 10:59:35.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.522" endtime="20201030 10:59:35.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.928" level="INFO">${RESULT} = [{'diff': 6.837499999999552e-05}, {'diff': 6.87909999999986e-05}, {'diff': 6.872200000000023e-05}, {'diff': 6.858299999999706e-05}, {'diff': 6.826400000000538e-05}, {'diff': 6.848599999999955e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:35.919" endtime="20201030 10:59:35.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.938" level="INFO">${ACCURACY} = {'diff': [6.837499999999552e-05, 6.87909999999986e-05, 6.872200000000023e-05, 6.858299999999706e-05, 6.826400000000538e-05, 6.848599999999955e-05, 6.866700000000142e-05, 6.880600000000459e-05, 6.82499...</msg>
<status status="PASS" starttime="20201030 10:59:35.930" endtime="20201030 10:59:35.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.949" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.947" endtime="20201030 10:59:35.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.954" level="INFO">VALUE: [6.837499999999552e-05, 6.87909999999986e-05, 6.872200000000023e-05, 6.858299999999706e-05, 6.826400000000538e-05, 6.848599999999955e-05, 6.866700000000142e-05, 6.880600000000459e-05, 6.824999999999887e-05, 6.862500000000271e-05, 6.868100000000099e-05, 6.899999999999962e-05, 6.887499999999602e-05, 6.826399999999844e-05, 6.908299999999756e-05, 6.870800000000066e-05, 6.824999999999887e-05, 6.852799999999826e-05, 6.916700000000192e-05, 6.894500000000081e-05, 6.895800000000091e-05, 6.899999999999962e-05, 6.887500000000296e-05, 6.822199999999973e-05, 6.824999999999887e-05, 6.92360000000003e-05, 6.845899999999988e-05, 6.829199999999758e-05, 6.874999999999937e-05, 6.830499999999767e-05, 6.881899999999774e-05, 6.912500000000321e-05, 6.87359999999998e-05, 6.876400000000588e-05, 6.8583000000004e-05, 6.872200000000023e-05, 6.894500000000081e-05, 6.832000000000366e-05, 6.874999999999937e-05, 6.916700000000192e-05, 6.88480000000033e-05, 6.908400000000398e-05, 6.905500000000536e-05, 6.843000000000127e-05, 6.859699999999663e-05, 6.881899999999774e-05, 6.90280000000057e-05, 6.904199999999833e-05, 6.89030000000021e-05, 6.908299999999756e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.951" endtime="20201030 10:59:35.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.940" endtime="20201030 10:59:35.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.967" endtime="20201030 10:59:35.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.963" endtime="20201030 10:59:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.960" endtime="20201030 10:59:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.461" endtime="20201030 10:59:35.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.460" endtime="20201030 10:59:35.992"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.016" endtime="20201030 10:59:36.039"></status>
</kw>
<msg timestamp="20201030 10:59:36.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.012" endtime="20201030 10:59:36.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.043" endtime="20201030 10:59:36.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.049" endtime="20201030 10:59:36.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.005" endtime="20201030 10:59:36.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.999" endtime="20201030 10:59:36.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.073" endtime="20201030 10:59:36.414"></status>
</kw>
<msg timestamp="20201030 10:59:36.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043805569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.070" endtime="20201030 10:59:36.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043805569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.423" endtime="20201030 10:59:36.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.442" endtime="20201030 10:59:36.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.062" endtime="20201030 10:59:36.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.058" endtime="20201030 10:59:36.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.460" level="INFO">${RESULT} = [{'diff': 7.000000000000062e-05}, {'diff': 6.956899999999849e-05}, {'diff': 6.951399999999969e-05}, {'diff': 7.018000000000302e-05}, {'diff': 6.95979999999971e-05}, {'diff': 6.962499999999677e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:36.451" endtime="20201030 10:59:36.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:36.470" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-05, 6.956899999999849e-05, 6.951399999999969e-05, 7.018000000000302e-05, 6.95979999999971e-05, 6.962499999999677e-05, 7.012499999999727e-05, 6.919500000000106e-05, 6.96660...</msg>
<status status="PASS" starttime="20201030 10:59:36.462" endtime="20201030 10:59:36.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.481" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:59:36.478" endtime="20201030 10:59:36.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.486" level="INFO">VALUE: [7.000000000000062e-05, 6.956899999999849e-05, 6.951399999999969e-05, 7.018000000000302e-05, 6.95979999999971e-05, 6.962499999999677e-05, 7.012499999999727e-05, 6.919500000000106e-05, 6.966600000000295e-05, 6.988900000000353e-05, 6.954199999999883e-05, 6.981999999999822e-05, 7.009699999999813e-05, 6.927699999999953e-05, 6.991599999999626e-05, 6.970799999999472e-05, 6.984700000000482e-05, 7.008299999999856e-05, 6.926399999999944e-05, 7.000000000000062e-05, 7.006900000000593e-05, 6.980599999999865e-05, 6.969500000000156e-05, 6.963900000000328e-05, 6.990299999999616e-05, 6.97360000000008e-05, 7.016700000000292e-05, 7.013799999999737e-05, 6.952699999999978e-05, 6.944400000000184e-05, 6.995800000000191e-05, 6.944400000000184e-05, 6.983299999999831e-05, 6.995800000000191e-05, 6.931899999999824e-05, 6.97360000000008e-05, 6.963899999999634e-05, 6.956999999999797e-05, 6.955600000000534e-05, 6.934700000000432e-05, 7.020900000000163e-05, 6.956999999999797e-05, 6.936199999999643e-05, 6.924999999999987e-05, 7.00830000000055e-05, 6.970799999999472e-05, 6.955499999999892e-05, 6.927799999999901e-05, 6.956899999999849e-05, 7.005499999999942e-05]</msg>
<status status="PASS" starttime="20201030 10:59:36.483" endtime="20201030 10:59:36.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.471" endtime="20201030 10:59:36.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.505" endtime="20201030 10:59:36.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.494" endtime="20201030 10:59:36.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.492" endtime="20201030 10:59:36.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.994" endtime="20201030 10:59:36.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.993" endtime="20201030 10:59:36.530"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.553" endtime="20201030 10:59:36.575"></status>
</kw>
<msg timestamp="20201030 10:59:36.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.550" endtime="20201030 10:59:36.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.578" endtime="20201030 10:59:36.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.584" endtime="20201030 10:59:36.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.542" endtime="20201030 10:59:36.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.537" endtime="20201030 10:59:36.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.608" endtime="20201030 10:59:36.950"></status>
</kw>
<msg timestamp="20201030 10:59:36.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041966944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.605" endtime="20201030 10:59:36.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041966944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.960" endtime="20201030 10:59:36.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.979" endtime="20201030 10:59:36.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.598" endtime="20201030 10:59:36.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.593" endtime="20201030 10:59:36.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.996" level="INFO">${RESULT} = [{'diff': 7.072200000000223e-05}, {'diff': 7.065299999999691e-05}, {'diff': 7.033299999999881e-05}, {'diff': 7.094400000000334e-05}, {'diff': 7.118100000000349e-05}, {'diff': 7.094400000000334e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:36.987" endtime="20201030 10:59:36.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.007" level="INFO">${ACCURACY} = {'diff': [7.072200000000223e-05, 7.065299999999691e-05, 7.033299999999881e-05, 7.094400000000334e-05, 7.118100000000349e-05, 7.094400000000334e-05, 7.115299999999741e-05, 7.095799999999597e-05, 7.1014...</msg>
<status status="PASS" starttime="20201030 10:59:36.998" endtime="20201030 10:59:37.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.019" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.016" endtime="20201030 10:59:37.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.024" level="INFO">VALUE: [7.072200000000223e-05, 7.065299999999691e-05, 7.033299999999881e-05, 7.094400000000334e-05, 7.118100000000349e-05, 7.094400000000334e-05, 7.115299999999741e-05, 7.095799999999597e-05, 7.101400000000119e-05, 7.05559999999994e-05, 7.080599999999965e-05, 7.069500000000256e-05, 7.050000000000112e-05, 7.029099999999316e-05, 7.048599999999461e-05, 7.122199999999579e-05, 7.029199999999958e-05, 7.076400000000094e-05, 7.087499999999802e-05, 7.109699999999913e-05, 7.077800000000051e-05, 7.076400000000094e-05, 7.061100000000514e-05, 7.120900000000263e-05, 7.080599999999965e-05, 7.102800000000076e-05, 7.115200000000488e-05, 7.098600000000205e-05, 7.024999999999393e-05, 7.044400000000284e-05, 7.109699999999913e-05, 7.091599999999726e-05, 7.100000000000162e-05, 7.026400000000044e-05, 7.108299999999956e-05, 7.026400000000044e-05, 7.06109999999982e-05, 7.077800000000051e-05, 7.04309999999958e-05, 7.10700000000064e-05, 7.090299999999716e-05, 7.101400000000119e-05, 7.026400000000044e-05, 7.027700000000053e-05, 7.026400000000044e-05, 7.052800000000026e-05, 7.104200000000033e-05, 7.048600000000155e-05, 7.058299999999906e-05, 7.077800000000051e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.021" endtime="20201030 10:59:37.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.009" endtime="20201030 10:59:37.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.037" endtime="20201030 10:59:37.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.032" endtime="20201030 10:59:37.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.030" endtime="20201030 10:59:37.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.532" endtime="20201030 10:59:37.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.531" endtime="20201030 10:59:37.062"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.085" endtime="20201030 10:59:37.106"></status>
</kw>
<msg timestamp="20201030 10:59:37.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.082" endtime="20201030 10:59:37.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.109" endtime="20201030 10:59:37.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.116" endtime="20201030 10:59:37.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.074" endtime="20201030 10:59:37.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.069" endtime="20201030 10:59:37.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.140" endtime="20201030 10:59:37.482"></status>
</kw>
<msg timestamp="20201030 10:59:37.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042040792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.136" endtime="20201030 10:59:37.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042040792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.492" endtime="20201030 10:59:37.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.511" endtime="20201030 10:59:37.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.129" endtime="20201030 10:59:37.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.124" endtime="20201030 10:59:37.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.528" level="INFO">${RESULT} = [{'diff': 7.182000000000022e-05}, {'diff': 7.183399999999979e-05}, {'diff': 7.195899999999644e-05}, {'diff': 7.216599999999851e-05}, {'diff': 7.18189999999938e-05}, {'diff': 7.144400000000384e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:37.519" endtime="20201030 10:59:37.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.539" level="INFO">${ACCURACY} = {'diff': [7.182000000000022e-05, 7.183399999999979e-05, 7.195899999999644e-05, 7.216599999999851e-05, 7.18189999999938e-05, 7.144400000000384e-05, 7.15690000000005e-05, 7.175000000000237e-05, 7.170799...</msg>
<status status="PASS" starttime="20201030 10:59:37.530" endtime="20201030 10:59:37.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.551" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.548" endtime="20201030 10:59:37.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.556" level="INFO">VALUE: [7.182000000000022e-05, 7.183399999999979e-05, 7.195899999999644e-05, 7.216599999999851e-05, 7.18189999999938e-05, 7.144400000000384e-05, 7.15690000000005e-05, 7.175000000000237e-05, 7.170799999999672e-05, 7.16109999999992e-05, 7.174999999999543e-05, 7.219399999999765e-05, 7.202800000000176e-05, 7.133399999999929e-05, 7.169500000000356e-05, 7.207000000000047e-05, 7.202700000000228e-05, 7.184699999999988e-05, 7.170799999999672e-05, 7.167999999999758e-05, 7.204100000000185e-05, 7.191599999999826e-05, 7.12360000000023e-05, 7.205499999999448e-05, 7.148599999999561e-05, 7.198599999999611e-05, 7.12360000000023e-05, 7.19030000000051e-05, 7.129200000000058e-05, 7.202800000000176e-05, 7.194500000000381e-05, 7.15560000000004e-05, 7.163899999999834e-05, 7.147199999999604e-05, 7.163900000000528e-05, 7.163899999999834e-05, 7.200000000000262e-05, 7.129200000000058e-05, 7.147199999999604e-05, 7.220799999999722e-05, 7.209700000000013e-05, 7.183399999999979e-05, 7.137499999999852e-05, 7.163900000000528e-05, 7.124999999999493e-05, 7.124999999999493e-05, 7.166600000000495e-05, 7.204100000000185e-05, 7.195800000000391e-05, 7.184699999999988e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.553" endtime="20201030 10:59:37.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.541" endtime="20201030 10:59:37.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.569" endtime="20201030 10:59:37.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.564" endtime="20201030 10:59:37.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.562" endtime="20201030 10:59:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.064" endtime="20201030 10:59:37.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.063" endtime="20201030 10:59:37.594"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.617" endtime="20201030 10:59:37.639"></status>
</kw>
<msg timestamp="20201030 10:59:37.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.614" endtime="20201030 10:59:37.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.642" endtime="20201030 10:59:37.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.649" endtime="20201030 10:59:37.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.606" endtime="20201030 10:59:37.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.601" endtime="20201030 10:59:37.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.672" endtime="20201030 10:59:38.015"></status>
</kw>
<msg timestamp="20201030 10:59:38.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.669" endtime="20201030 10:59:38.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.025" endtime="20201030 10:59:38.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.044" endtime="20201030 10:59:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.662" endtime="20201030 10:59:38.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.657" endtime="20201030 10:59:38.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.061" level="INFO">${RESULT} = [{'diff': 7.225000000000287e-05}, {'diff': 7.255500000000192e-05}, {'diff': 7.227700000000253e-05}, {'diff': 7.230500000000167e-05}, {'diff': 7.252800000000226e-05}, {'diff': 7.265299999999891e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:38.052" endtime="20201030 10:59:38.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.071" level="INFO">${ACCURACY} = {'diff': [7.225000000000287e-05, 7.255500000000192e-05, 7.227700000000253e-05, 7.230500000000167e-05, 7.252800000000226e-05, 7.265299999999891e-05, 7.288899999999959e-05, 7.245800000000441e-05, 7.2624...</msg>
<status status="PASS" starttime="20201030 10:59:38.063" endtime="20201030 10:59:38.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.082" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.079" endtime="20201030 10:59:38.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.087" level="INFO">VALUE: [7.225000000000287e-05, 7.255500000000192e-05, 7.227700000000253e-05, 7.230500000000167e-05, 7.252800000000226e-05, 7.265299999999891e-05, 7.288899999999959e-05, 7.245800000000441e-05, 7.262499999999977e-05, 7.263899999999934e-05, 7.225000000000287e-05, 7.318099999999855e-05, 7.258400000000054e-05, 7.301400000000319e-05, 7.312500000000027e-05, 7.287500000000002e-05, 7.240199999999919e-05, 7.237499999999952e-05, 7.254200000000183e-05, 7.250000000000312e-05, 7.275000000000337e-05, 7.225000000000287e-05, 7.295799999999797e-05, 7.225000000000287e-05, 7.252800000000226e-05, 7.238899999999909e-05, 7.312500000000027e-05, 7.297299999999701e-05, 7.272200000000423e-05, 7.237499999999952e-05, 7.249999999999618e-05, 7.286100000000045e-05, 7.254200000000183e-05, 7.313899999999984e-05, 7.254199999999489e-05, 7.257000000000097e-05, 7.270799999999772e-05, 7.282000000000122e-05, 7.29439999999984e-05, 7.262499999999977e-05, 7.269499999999762e-05, 7.315299999999941e-05, 7.22639999999955e-05, 7.305499999999548e-05, 7.295800000000491e-05, 7.308300000000156e-05, 7.29439999999984e-05, 7.283299999999437e-05, 7.237499999999952e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.084" endtime="20201030 10:59:38.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.072" endtime="20201030 10:59:38.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.100" endtime="20201030 10:59:38.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.096" endtime="20201030 10:59:38.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.093" endtime="20201030 10:59:38.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.596" endtime="20201030 10:59:38.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.595" endtime="20201030 10:59:38.125"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.148" endtime="20201030 10:59:38.171"></status>
</kw>
<msg timestamp="20201030 10:59:38.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.145" endtime="20201030 10:59:38.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.175" endtime="20201030 10:59:38.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.181" endtime="20201030 10:59:38.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.137" endtime="20201030 10:59:38.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.132" endtime="20201030 10:59:38.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.205" endtime="20201030 10:59:38.527"></status>
</kw>
<msg timestamp="20201030 10:59:38.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.202" endtime="20201030 10:59:38.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.537" endtime="20201030 10:59:38.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.556" endtime="20201030 10:59:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.194" endtime="20201030 10:59:38.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.190" endtime="20201030 10:59:38.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.573" level="INFO">${RESULT} = [{'diff': 7.398599999999811e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.365299999999991e-05}, {'diff': 7.419399999999965e-05}, {'diff': 7.395800000000591e-05}, {'diff': 7.406899999999605e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:38.564" endtime="20201030 10:59:38.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.583" level="INFO">${ACCURACY} = {'diff': [7.398599999999811e-05, 7.412500000000127e-05, 7.365299999999991e-05, 7.419399999999965e-05, 7.395800000000591e-05, 7.406899999999605e-05, 7.395799999999897e-05, 7.390300000000016e-05, 7.3375...</msg>
<status status="PASS" starttime="20201030 10:59:38.575" endtime="20201030 10:59:38.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.594" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.592" endtime="20201030 10:59:38.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.599" level="INFO">VALUE: [7.398599999999811e-05, 7.412500000000127e-05, 7.365299999999991e-05, 7.419399999999965e-05, 7.395800000000591e-05, 7.406899999999605e-05, 7.395799999999897e-05, 7.390300000000016e-05, 7.337500000000052e-05, 7.327700000000353e-05, 7.332000000000172e-05, 7.401399999999725e-05, 7.404099999999691e-05, 7.390200000000069e-05, 7.376400000000394e-05, 7.39439999999994e-05, 7.33189999999953e-05, 7.411099999999476e-05, 7.388900000000059e-05, 7.422199999999879e-05, 7.408300000000256e-05, 7.395900000000538e-05, 7.394499999999887e-05, 7.404200000000333e-05, 7.336100000000095e-05, 7.369499999999862e-05, 7.32639999999965e-05, 7.37360000000048e-05, 7.354100000000335e-05, 7.419399999999965e-05, 7.349999999999718e-05, 7.358300000000206e-05, 7.36110000000012e-05, 7.395799999999897e-05, 7.320799999999822e-05, 7.330600000000215e-05, 7.402799999999682e-05, 7.402799999999682e-05, 7.329199999999564e-05, 7.334700000000138e-05, 7.412500000000127e-05, 7.323599999999736e-05, 7.330500000000267e-05, 7.42639999999975e-05, 7.388900000000059e-05, 7.341599999999976e-05, 7.336100000000095e-05, 7.341699999999923e-05, 7.41110000000017e-05, 7.327800000000301e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.596" endtime="20201030 10:59:38.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.585" endtime="20201030 10:59:38.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.614" endtime="20201030 10:59:38.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.608" endtime="20201030 10:59:38.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.605" endtime="20201030 10:59:38.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.127" endtime="20201030 10:59:38.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.126" endtime="20201030 10:59:38.639"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.662" endtime="20201030 10:59:38.684"></status>
</kw>
<msg timestamp="20201030 10:59:38.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.659" endtime="20201030 10:59:38.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.688" endtime="20201030 10:59:38.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.694" endtime="20201030 10:59:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.651" endtime="20201030 10:59:38.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.646" endtime="20201030 10:59:38.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.718" endtime="20201030 10:59:39.061"></status>
</kw>
<msg timestamp="20201030 10:59:39.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042019333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.715" endtime="20201030 10:59:39.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042019333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.070" endtime="20201030 10:59:39.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.089" endtime="20201030 10:59:39.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.707" endtime="20201030 10:59:39.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.702" endtime="20201030 10:59:39.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.107" level="INFO">${RESULT} = [{'diff': 7.463900000000134e-05}, {'diff': 7.520800000000022e-05}, {'diff': 7.43189999999963e-05}, {'diff': 7.433299999999587e-05}, {'diff': 7.468000000000058e-05}, {'diff': 7.490300000000116e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:39.098" endtime="20201030 10:59:39.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.118" level="INFO">${ACCURACY} = {'diff': [7.463900000000134e-05, 7.520800000000022e-05, 7.43189999999963e-05, 7.433299999999587e-05, 7.468000000000058e-05, 7.490300000000116e-05, 7.479200000000408e-05, 7.445799999999947e-05, 7.47360...</msg>
<status status="PASS" starttime="20201030 10:59:39.109" endtime="20201030 10:59:39.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.129" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.127" endtime="20201030 10:59:39.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.134" level="INFO">VALUE: [7.463900000000134e-05, 7.520800000000022e-05, 7.43189999999963e-05, 7.433299999999587e-05, 7.468000000000058e-05, 7.490300000000116e-05, 7.479200000000408e-05, 7.445799999999947e-05, 7.47360000000058e-05, 7.504199999999739e-05, 7.502800000000476e-05, 7.462500000000177e-05, 7.522199999999979e-05, 7.436199999999449e-05, 7.438900000000109e-05, 7.43189999999963e-05, 7.480499999999723e-05, 7.508300000000356e-05, 7.515300000000141e-05, 7.447199999999904e-05, 7.447299999999851e-05, 7.51110000000027e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.494499999999987e-05, 7.469499999999962e-05, 7.513799999999543e-05, 7.437500000000152e-05, 7.422199999999879e-05, 7.491599999999432e-05, 7.459700000000263e-05, 7.484700000000288e-05, 7.433300000000281e-05, 7.51110000000027e-05, 7.470799999999972e-05, 7.469499999999962e-05, 7.47360000000058e-05, 7.416699999999998e-05, 7.502799999999782e-05, 7.473599999999886e-05, 7.513800000000237e-05, 7.483300000000331e-05, 7.506899999999705e-05, 7.512500000000227e-05, 7.508400000000304e-05, 7.49440000000004e-05, 7.508300000000356e-05, 7.424999999999793e-05, 7.452800000000426e-05, 7.512500000000227e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.131" endtime="20201030 10:59:39.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.120" endtime="20201030 10:59:39.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.147" endtime="20201030 10:59:39.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.143" endtime="20201030 10:59:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.140" endtime="20201030 10:59:39.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.641" endtime="20201030 10:59:39.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.640" endtime="20201030 10:59:39.173"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.196" endtime="20201030 10:59:39.217"></status>
</kw>
<msg timestamp="20201030 10:59:39.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.192" endtime="20201030 10:59:39.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.220" endtime="20201030 10:59:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.227" endtime="20201030 10:59:39.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.185" endtime="20201030 10:59:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.179" endtime="20201030 10:59:39.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.250" endtime="20201030 10:59:39.593"></status>
</kw>
<msg timestamp="20201030 10:59:39.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041835236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041910583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.247" endtime="20201030 10:59:39.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041835236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041910583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.602" endtime="20201030 10:59:39.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.621" endtime="20201030 10:59:39.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.240" endtime="20201030 10:59:39.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.235" endtime="20201030 10:59:39.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.639" level="INFO">${RESULT} = [{'diff': 7.534700000000338e-05}, {'diff': 7.558299999999712e-05}, {'diff': 7.529099999999816e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.605499999999848e-05}, {'diff': 7.581900000000474e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:39.630" endtime="20201030 10:59:39.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.650" level="INFO">${ACCURACY} = {'diff': [7.534700000000338e-05, 7.558299999999712e-05, 7.529099999999816e-05, 7.524999999999893e-05, 7.605499999999848e-05, 7.581900000000474e-05, 7.554199999999789e-05, 7.52639999999985e-05, 7.54439...</msg>
<status status="PASS" starttime="20201030 10:59:39.641" endtime="20201030 10:59:39.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.661" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.659" endtime="20201030 10:59:39.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.667" level="INFO">VALUE: [7.534700000000338e-05, 7.558299999999712e-05, 7.529099999999816e-05, 7.524999999999893e-05, 7.605499999999848e-05, 7.581900000000474e-05, 7.554199999999789e-05, 7.52639999999985e-05, 7.544399999999396e-05, 7.58890000000026e-05, 7.563900000000234e-05, 7.570900000000019e-05, 7.536099999999601e-05, 7.536100000000295e-05, 7.548699999999908e-05, 7.583400000000379e-05, 7.598600000000011e-05, 7.608299999999762e-05, 7.53189999999973e-05, 7.545800000000047e-05, 7.573599999999986e-05, 7.573599999999986e-05, 7.530600000000415e-05, 7.558299999999712e-05, 7.522199999999979e-05, 7.540300000000166e-05, 7.583399999999685e-05, 7.565300000000191e-05, 7.572299999999976e-05, 7.53189999999973e-05, 7.555499999999798e-05, 7.566599999999507e-05, 7.577799999999857e-05, 7.612500000000327e-05, 7.60969999999972e-05, 7.534799999999592e-05, 7.541700000000123e-05, 7.523599999999936e-05, 7.568100000000105e-05, 7.619500000000112e-05, 7.594499999999393e-05, 7.612499999999633e-05, 7.580499999999823e-05, 7.586100000000345e-05, 7.622200000000079e-05, 7.598600000000011e-05, 7.570800000000072e-05, 7.608299999999762e-05, 7.598600000000011e-05, 7.615300000000241e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.664" endtime="20201030 10:59:39.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.652" endtime="20201030 10:59:39.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.680" endtime="20201030 10:59:39.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.675" endtime="20201030 10:59:39.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.673" endtime="20201030 10:59:39.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.175" endtime="20201030 10:59:39.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.174" endtime="20201030 10:59:39.705"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.728" endtime="20201030 10:59:39.750"></status>
</kw>
<msg timestamp="20201030 10:59:39.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.725" endtime="20201030 10:59:39.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.753" endtime="20201030 10:59:39.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.759" endtime="20201030 10:59:39.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.717" endtime="20201030 10:59:39.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.711" endtime="20201030 10:59:39.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.783" endtime="20201030 10:59:40.129"></status>
</kw>
<msg timestamp="20201030 10:59:40.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04199675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042073042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:39.780" endtime="20201030 10:59:40.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04199675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042073042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:40.139" endtime="20201030 10:59:40.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.158" endtime="20201030 10:59:40.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.773" endtime="20201030 10:59:40.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.768" endtime="20201030 10:59:40.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.175" level="INFO">${RESULT} = [{'diff': 7.629199999999864e-05}, {'diff': 7.70560000000059e-05}, {'diff': 7.686099999999751e-05}, {'diff': 7.663800000000387e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.68189999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:40.166" endtime="20201030 10:59:40.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.184" level="INFO">${ACCURACY} = {'diff': [7.629199999999864e-05, 7.70560000000059e-05, 7.686099999999751e-05, 7.663800000000387e-05, 7.650000000000018e-05, 7.68189999999988e-05, 7.673599999999392e-05, 7.637500000000352e-05, 7.683299...</msg>
<status status="PASS" starttime="20201030 10:59:40.177" endtime="20201030 10:59:40.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.196" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.193" endtime="20201030 10:59:40.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.201" level="INFO">VALUE: [7.629199999999864e-05, 7.70560000000059e-05, 7.686099999999751e-05, 7.663800000000387e-05, 7.650000000000018e-05, 7.68189999999988e-05, 7.673599999999392e-05, 7.637500000000352e-05, 7.683299999999837e-05, 7.632000000000472e-05, 7.649999999999324e-05, 7.644399999999496e-05, 7.630600000000515e-05, 7.712499999999733e-05, 7.62639999999995e-05, 7.693000000000283e-05, 7.686100000000445e-05, 7.637500000000352e-05, 7.654099999999942e-05, 7.644399999999496e-05, 7.655499999999898e-05, 7.634699999999744e-05, 7.690299999999622e-05, 7.623600000000036e-05, 7.706899999999905e-05, 7.623600000000036e-05, 7.669500000000162e-05, 7.690300000000316e-05, 7.633399999999735e-05, 7.629199999999864e-05, 7.687499999999708e-05, 7.636099999999701e-05, 7.624999999999993e-05, 7.717999999999614e-05, 7.658299999999812e-05, 7.638899999999615e-05, 7.630600000000515e-05, 7.623600000000036e-05, 7.711099999999776e-05, 7.705499999999949e-05, 7.66110000000042e-05, 7.709799999999767e-05, 7.66389999999964e-05, 7.695900000000144e-05, 7.698700000000058e-05, 7.725000000000093e-05, 7.67770000000001e-05, 7.675000000000043e-05, 7.720800000000222e-05, 7.704200000000633e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.198" endtime="20201030 10:59:40.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.186" endtime="20201030 10:59:40.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.214" endtime="20201030 10:59:40.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.209" endtime="20201030 10:59:40.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.207" endtime="20201030 10:59:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.707" endtime="20201030 10:59:40.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.706" endtime="20201030 10:59:40.239"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.262" endtime="20201030 10:59:40.286"></status>
</kw>
<msg timestamp="20201030 10:59:40.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.259" endtime="20201030 10:59:40.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.289" endtime="20201030 10:59:40.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.296" endtime="20201030 10:59:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.251" endtime="20201030 10:59:40.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.246" endtime="20201030 10:59:40.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.320" endtime="20201030 10:59:40.662"></status>
</kw>
<msg timestamp="20201030 10:59:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043766681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.316" endtime="20201030 10:59:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043689153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043766681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.671" endtime="20201030 10:59:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.690" endtime="20201030 10:59:40.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.309" endtime="20201030 10:59:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.304" endtime="20201030 10:59:40.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.708" level="INFO">${RESULT} = [{'diff': 7.752800000000032e-05}, {'diff': 7.731999999999878e-05}, {'diff': 7.794499999999593e-05}, {'diff': 7.804100000000092e-05}, {'diff': 7.819400000000365e-05}, {'diff': 7.748600000000161e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:40.699" endtime="20201030 10:59:40.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.717" level="INFO">${ACCURACY} = {'diff': [7.752800000000032e-05, 7.731999999999878e-05, 7.794499999999593e-05, 7.804100000000092e-05, 7.819400000000365e-05, 7.748600000000161e-05, 7.737499999999758e-05, 7.720800000000222e-05, 7.8041...</msg>
<status status="PASS" starttime="20201030 10:59:40.710" endtime="20201030 10:59:40.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.728" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.726" endtime="20201030 10:59:40.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.734" level="INFO">VALUE: [7.752800000000032e-05, 7.731999999999878e-05, 7.794499999999593e-05, 7.804100000000092e-05, 7.819400000000365e-05, 7.748600000000161e-05, 7.737499999999758e-05, 7.720800000000222e-05, 7.804199999999345e-05, 7.745799999999553e-05, 7.794499999999593e-05, 7.768099999999611e-05, 7.783399999999885e-05, 7.74310000000028e-05, 7.747300000000151e-05, 7.787499999999808e-05, 7.787499999999808e-05, 7.74719999999951e-05, 7.81389999999979e-05, 7.799999999999474e-05, 7.7764000000001e-05, 7.809799999999867e-05, 7.7764000000001e-05, 7.751400000000075e-05, 7.769500000000262e-05, 7.759799999999817e-05, 7.761099999999826e-05, 7.788899999999765e-05, 7.752800000000032e-05, 7.794500000000287e-05, 7.791599999999732e-05, 7.81110000000057e-05, 7.791600000000426e-05, 7.773600000000186e-05, 7.798599999999517e-05, 7.729199999999964e-05, 7.80969999999992e-05, 7.811099999999876e-05, 7.806999999999953e-05, 7.762499999999783e-05, 7.740299999999672e-05, 7.741700000000323e-05, 7.726300000000103e-05, 7.780599999999971e-05, 7.769399999999621e-05, 7.819399999999671e-05, 7.763900000000434e-05, 7.791599999999732e-05, 7.791700000000373e-05, 7.798600000000211e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.731" endtime="20201030 10:59:40.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.719" endtime="20201030 10:59:40.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.748" endtime="20201030 10:59:40.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.742" endtime="20201030 10:59:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.740" endtime="20201030 10:59:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.241" endtime="20201030 10:59:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.240" endtime="20201030 10:59:40.773"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.797" endtime="20201030 10:59:40.819"></status>
</kw>
<msg timestamp="20201030 10:59:40.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.793" endtime="20201030 10:59:40.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.822" endtime="20201030 10:59:40.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.829" endtime="20201030 10:59:40.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.786" endtime="20201030 10:59:40.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.780" endtime="20201030 10:59:40.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.852" endtime="20201030 10:59:41.195"></status>
</kw>
<msg timestamp="20201030 10:59:41.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042262375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.849" endtime="20201030 10:59:41.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042262375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.205" endtime="20201030 10:59:41.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.223" endtime="20201030 10:59:41.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.842" endtime="20201030 10:59:41.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.837" endtime="20201030 10:59:41.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:41.241" level="INFO">${RESULT} = [{'diff': 7.91389999999989e-05}, {'diff': 7.887499999999908e-05}, {'diff': 7.89169999999978e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.884699999999994e-05}, {'diff': 7.869399999999721e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:41.232" endtime="20201030 10:59:41.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.253" level="INFO">${ACCURACY} = {'diff': [7.91389999999989e-05, 7.887499999999908e-05, 7.89169999999978e-05, 7.862499999999883e-05, 7.884699999999994e-05, 7.869399999999721e-05, 7.89440000000044e-05, 7.861099999999926e-05, 7.8346999...</msg>
<status status="PASS" starttime="20201030 10:59:41.244" endtime="20201030 10:59:41.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.264" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.262" endtime="20201030 10:59:41.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.270" level="INFO">VALUE: [7.91389999999989e-05, 7.887499999999908e-05, 7.89169999999978e-05, 7.862499999999883e-05, 7.884699999999994e-05, 7.869399999999721e-05, 7.89440000000044e-05, 7.861099999999926e-05, 7.834699999999944e-05, 7.852800000000132e-05, 7.861099999999926e-05, 7.901400000000225e-05, 7.89169999999978e-05, 7.908300000000063e-05, 7.906900000000106e-05, 7.87770000000021e-05, 7.91110000000067e-05, 7.859700000000663e-05, 7.822199999999585e-05, 7.91389999999989e-05, 7.894399999999746e-05, 7.851399999999481e-05, 7.840299999999772e-05, 7.899999999999574e-05, 7.900000000000268e-05, 7.837499999999858e-05, 7.907000000000053e-05, 7.887499999999908e-05, 7.90970000000002e-05, 7.847200000000304e-05, 7.890199999999875e-05, 7.85969999999997e-05, 7.867999999999764e-05, 7.894399999999746e-05, 7.834699999999944e-05, 7.844499999999643e-05, 7.825000000000193e-05, 7.912499999999933e-05, 7.884799999999942e-05, 7.875000000000243e-05, 7.872199999999635e-05, 7.879200000000114e-05, 7.902800000000182e-05, 7.890299999999822e-05, 7.837499999999858e-05, 7.900000000000268e-05, 7.836100000000595e-05, 7.83890000000051e-05, 7.906900000000106e-05, 7.877800000000157e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.267" endtime="20201030 10:59:41.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.254" endtime="20201030 10:59:41.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.282" endtime="20201030 10:59:41.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.278" endtime="20201030 10:59:41.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.276" endtime="20201030 10:59:41.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.776" endtime="20201030 10:59:41.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.774" endtime="20201030 10:59:41.308"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.331" endtime="20201030 10:59:41.353"></status>
</kw>
<msg timestamp="20201030 10:59:41.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.327" endtime="20201030 10:59:41.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.356" endtime="20201030 10:59:41.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.363" endtime="20201030 10:59:41.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.320" endtime="20201030 10:59:41.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.314" endtime="20201030 10:59:41.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.386" endtime="20201030 10:59:41.699"></status>
</kw>
<msg timestamp="20201030 10:59:41.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042019708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.383" endtime="20201030 10:59:41.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042019708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.703" endtime="20201030 10:59:41.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.711" endtime="20201030 10:59:41.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.376" endtime="20201030 10:59:41.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.371" endtime="20201030 10:59:41.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:41.720" level="INFO">${RESULT} = [{'diff': 7.98190000000018e-05}, {'diff': 7.995799999999803e-05}, {'diff': 7.979200000000214e-05}, {'diff': 7.92919999999947e-05}, {'diff': 7.958300000000113e-05}, {'diff': 7.994499999999793e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:41.716" endtime="20201030 10:59:41.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.727" level="INFO">${ACCURACY} = {'diff': [7.98190000000018e-05, 7.995799999999803e-05, 7.979200000000214e-05, 7.92919999999947e-05, 7.958300000000113e-05, 7.994499999999793e-05, 7.949999999999624e-05, 7.930600000000121e-05, 7.951399...</msg>
<status status="PASS" starttime="20201030 10:59:41.721" endtime="20201030 10:59:41.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.733" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.731" endtime="20201030 10:59:41.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.735" level="INFO">VALUE: [7.98190000000018e-05, 7.995799999999803e-05, 7.979200000000214e-05, 7.92919999999947e-05, 7.958300000000113e-05, 7.994499999999793e-05, 7.949999999999624e-05, 7.930600000000121e-05, 7.951399999999581e-05, 7.94169999999983e-05, 7.954200000000189e-05, 7.933300000000088e-05, 7.93890000000061e-05, 7.997200000000454e-05, 8.008300000000163e-05, 7.962499999999983e-05, 7.943000000000533e-05, 7.94719999999971e-05, 7.987500000000008e-05, 8.011100000000076e-05, 7.965299999999897e-05, 7.937499999999958e-05, 7.977800000000257e-05, 8.019500000000512e-05, 7.952800000000232e-05, 7.99719999999976e-05, 7.950000000000318e-05, 7.991599999999932e-05, 8.005600000000196e-05, 7.93190000000013e-05, 8.008300000000163e-05, 7.929200000000164e-05, 7.975000000000343e-05, 8.000000000000368e-05, 7.981999999999434e-05, 8.002800000000282e-05, 7.977800000000257e-05, 7.952800000000232e-05, 8.002799999999588e-05, 8.01389999999999e-05, 8.011099999999383e-05, 8.015299999999947e-05, 7.938899999999915e-05, 7.952800000000232e-05, 7.969500000000462e-05, 7.936100000000001e-05, 8.008399999999416e-05, 8.011100000000076e-05, 7.934799999999992e-05, 7.994399999999846e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.734" endtime="20201030 10:59:41.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.728" endtime="20201030 10:59:41.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.741" endtime="20201030 10:59:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.739" endtime="20201030 10:59:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.738" endtime="20201030 10:59:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.310" endtime="20201030 10:59:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.309" endtime="20201030 10:59:41.762"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.773" endtime="20201030 10:59:41.794"></status>
</kw>
<msg timestamp="20201030 10:59:41.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.771" endtime="20201030 10:59:41.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.798" endtime="20201030 10:59:41.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.804" endtime="20201030 10:59:41.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.768" endtime="20201030 10:59:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.765" endtime="20201030 10:59:41.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.828" endtime="20201030 10:59:42.172"></status>
</kw>
<msg timestamp="20201030 10:59:42.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.824" endtime="20201030 10:59:42.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.181" endtime="20201030 10:59:42.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.200" endtime="20201030 10:59:42.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.817" endtime="20201030 10:59:42.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.812" endtime="20201030 10:59:42.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.218" level="INFO">${RESULT} = [{'diff': 8.055600000000246e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.069499999999868e-05}, {'diff': 8.065299999999997e-05}, {'diff': 8.108299999999916e-05}, {'diff': 8.025000000000046e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:42.209" endtime="20201030 10:59:42.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.227" level="INFO">${ACCURACY} = {'diff': [8.055600000000246e-05, 8.112500000000133e-05, 8.069499999999868e-05, 8.065299999999997e-05, 8.108299999999916e-05, 8.025000000000046e-05, 8.111100000000177e-05, 8.020799999999828e-05, 8.0290...</msg>
<status status="PASS" starttime="20201030 10:59:42.220" endtime="20201030 10:59:42.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.238" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.236" endtime="20201030 10:59:42.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.244" level="INFO">VALUE: [8.055600000000246e-05, 8.112500000000133e-05, 8.069499999999868e-05, 8.065299999999997e-05, 8.108299999999916e-05, 8.025000000000046e-05, 8.111100000000177e-05, 8.020799999999828e-05, 8.02909999999997e-05, 8.105500000000002e-05, 8.030599999999874e-05, 8.081899999999934e-05, 8.081899999999934e-05, 8.069499999999868e-05, 8.087500000000108e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.09719999999986e-05, 8.050000000000071e-05, 8.120799999999928e-05, 8.025000000000046e-05, 8.058300000000213e-05, 8.11390000000009e-05, 8.065299999999997e-05, 8.097200000000207e-05, 8.044499999999843e-05, 8.030599999999874e-05, 8.091599999999685e-05, 8.0458999999998e-05, 8.031999999999831e-05, 8.03329999999984e-05, 8.02779999999996e-05, 8.073599999999792e-05, 8.055499999999952e-05, 8.061100000000126e-05, 8.080599999999924e-05, 8.106900000000306e-05, 8.065299999999997e-05, 8.04169999999993e-05, 8.102800000000035e-05, 8.087500000000108e-05, 8.088900000000065e-05, 8.109800000000167e-05, 8.086099999999805e-05, 8.102800000000035e-05, 8.06390000000004e-05, 8.105500000000002e-05, 8.100000000000121e-05, 8.06390000000004e-05, 8.030599999999874e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.241" endtime="20201030 10:59:42.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.229" endtime="20201030 10:59:42.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.256" endtime="20201030 10:59:42.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.252" endtime="20201030 10:59:42.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.249" endtime="20201030 10:59:42.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.763" endtime="20201030 10:59:42.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.763" endtime="20201030 10:59:42.282"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.305" endtime="20201030 10:59:42.329"></status>
</kw>
<msg timestamp="20201030 10:59:42.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.301" endtime="20201030 10:59:42.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.332" endtime="20201030 10:59:42.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.338" endtime="20201030 10:59:42.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.294" endtime="20201030 10:59:42.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.288" endtime="20201030 10:59:42.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.362" endtime="20201030 10:59:42.705"></status>
</kw>
<msg timestamp="20201030 10:59:42.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043795764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.359" endtime="20201030 10:59:42.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043795764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.714" endtime="20201030 10:59:42.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.733" endtime="20201030 10:59:42.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.351" endtime="20201030 10:59:42.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.347" endtime="20201030 10:59:42.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.751" level="INFO">${RESULT} = [{'diff': 8.215300000000147e-05}, {'diff': 8.143099999999986e-05}, {'diff': 8.187499999999515e-05}, {'diff': 8.190300000000122e-05}, {'diff': 8.182000000000328e-05}, {'diff': 8.165300000000097e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:42.742" endtime="20201030 10:59:42.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.760" level="INFO">${ACCURACY} = {'diff': [8.215300000000147e-05, 8.143099999999986e-05, 8.187499999999515e-05, 8.190300000000122e-05, 8.182000000000328e-05, 8.165300000000097e-05, 8.148599999999867e-05, 8.151300000000528e-05, 8.1291...</msg>
<status status="PASS" starttime="20201030 10:59:42.753" endtime="20201030 10:59:42.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.771" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.769" endtime="20201030 10:59:42.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.777" level="INFO">VALUE: [8.215300000000147e-05, 8.143099999999986e-05, 8.187499999999515e-05, 8.190300000000122e-05, 8.182000000000328e-05, 8.165300000000097e-05, 8.148599999999867e-05, 8.151300000000528e-05, 8.129100000000417e-05, 8.179099999999773e-05, 8.155500000000399e-05, 8.183300000000338e-05, 8.181999999999634e-05, 8.205600000000396e-05, 8.186100000000252e-05, 8.17919999999972e-05, 8.16390000000014e-05, 8.206999999999659e-05, 8.124999999999799e-05, 8.173599999999892e-05, 8.212500000000234e-05, 8.156899999999662e-05, 8.194400000000046e-05, 8.136100000000202e-05, 8.125000000000493e-05, 8.199999999999874e-05, 8.154199999999695e-05, 8.133399999999541e-05, 8.149999999999824e-05, 8.21249999999954e-05, 8.151399999999781e-05, 8.198699999999864e-05, 8.151399999999781e-05, 8.144399999999996e-05, 8.144399999999996e-05, 8.195800000000003e-05, 8.195800000000003e-05, 8.122199999999885e-05, 8.134700000000245e-05, 8.195800000000003e-05, 8.148599999999867e-05, 8.204199999999745e-05, 8.1458999999999e-05, 8.208399999999616e-05, 8.169499999999968e-05, 8.174999999999849e-05, 8.193000000000089e-05, 8.191600000000132e-05, 8.125000000000493e-05, 8.173599999999892e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.773" endtime="20201030 10:59:42.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.762" endtime="20201030 10:59:42.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.791" endtime="20201030 10:59:42.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.785" endtime="20201030 10:59:42.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.782" endtime="20201030 10:59:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.284" endtime="20201030 10:59:42.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.282" endtime="20201030 10:59:42.816"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.839" endtime="20201030 10:59:42.861"></status>
</kw>
<msg timestamp="20201030 10:59:42.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.836" endtime="20201030 10:59:42.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.864" endtime="20201030 10:59:42.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.871" endtime="20201030 10:59:42.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.828" endtime="20201030 10:59:42.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.822" endtime="20201030 10:59:42.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.894" endtime="20201030 10:59:43.237"></status>
</kw>
<msg timestamp="20201030 10:59:43.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041996861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.891" endtime="20201030 10:59:43.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041996861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.246" endtime="20201030 10:59:43.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.265" endtime="20201030 10:59:43.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.884" endtime="20201030 10:59:43.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.879" endtime="20201030 10:59:43.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.282" level="INFO">${RESULT} = [{'diff': 8.22640000000055e-05}, {'diff': 8.316700000000204e-05}, {'diff': 8.304199999999845e-05}, {'diff': 8.294400000000146e-05}, {'diff': 8.283299999999744e-05}, {'diff': 8.298600000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:43.273" endtime="20201030 10:59:43.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.293" level="INFO">${ACCURACY} = {'diff': [8.22640000000055e-05, 8.316700000000204e-05, 8.304199999999845e-05, 8.294400000000146e-05, 8.283299999999744e-05, 8.298600000000017e-05, 8.311100000000377e-05, 8.2459e-05, 8.288900000000265e...</msg>
<status status="PASS" starttime="20201030 10:59:43.285" endtime="20201030 10:59:43.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.304" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.302" endtime="20201030 10:59:43.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.310" level="INFO">VALUE: [8.22640000000055e-05, 8.316700000000204e-05, 8.304199999999845e-05, 8.294400000000146e-05, 8.283299999999744e-05, 8.298600000000017e-05, 8.311100000000377e-05, 8.2459e-05, 8.288900000000265e-05, 8.233299999999694e-05, 8.233299999999694e-05, 8.313899999999597e-05, 8.272200000000035e-05, 8.270800000000078e-05, 8.236099999999608e-05, 8.233299999999694e-05, 8.238899999999522e-05, 8.222199999999985e-05, 8.268100000000111e-05, 8.26249999999959e-05, 8.283300000000438e-05, 8.227800000000507e-05, 8.283300000000438e-05, 8.286099999999658e-05, 8.299999999999974e-05, 8.240300000000172e-05, 8.244399999999402e-05, 8.29720000000006e-05, 8.243100000000086e-05, 8.29170000000018e-05, 8.261100000000327e-05, 8.29590000000005e-05, 8.31390000000029e-05, 8.251399999999881e-05, 8.304099999999898e-05, 8.306900000000506e-05, 8.227699999999866e-05, 8.269400000000121e-05, 8.304199999999845e-05, 8.281899999999787e-05, 8.227799999999813e-05, 8.238900000000215e-05, 8.2846999999997e-05, 8.255599999999752e-05, 8.233400000000335e-05, 8.309800000000367e-05, 8.222299999999932e-05, 8.265199999999556e-05, 8.290300000000222e-05, 8.220800000000028e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.307" endtime="20201030 10:59:43.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.295" endtime="20201030 10:59:43.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.323" endtime="20201030 10:59:43.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.318" endtime="20201030 10:59:43.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.316" endtime="20201030 10:59:43.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.818" endtime="20201030 10:59:43.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.817" endtime="20201030 10:59:43.348"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.371" endtime="20201030 10:59:43.393"></status>
</kw>
<msg timestamp="20201030 10:59:43.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.368" endtime="20201030 10:59:43.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.397" endtime="20201030 10:59:43.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.403" endtime="20201030 10:59:43.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.360" endtime="20201030 10:59:43.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.354" endtime="20201030 10:59:43.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.427" endtime="20201030 10:59:43.768"></status>
</kw>
<msg timestamp="20201030 10:59:43.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042086375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.423" endtime="20201030 10:59:43.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042086375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.778" endtime="20201030 10:59:43.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.797" endtime="20201030 10:59:43.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.416" endtime="20201030 10:59:43.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.411" endtime="20201030 10:59:43.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.814" level="INFO">${RESULT} = [{'diff': 8.330600000000521e-05}, {'diff': 8.416700000000304e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.354199999999895e-05}, {'diff': 8.384800000000442e-05}, {'diff': 8.383400000000485e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:43.805" endtime="20201030 10:59:43.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.825" level="INFO">${ACCURACY} = {'diff': [8.330600000000521e-05, 8.416700000000304e-05, 8.41249999999974e-05, 8.354199999999895e-05, 8.384800000000442e-05, 8.383400000000485e-05, 8.393000000000289e-05, 8.402799999999988e-05, 8.36249...</msg>
<status status="PASS" starttime="20201030 10:59:43.816" endtime="20201030 10:59:43.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.837" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.834" endtime="20201030 10:59:43.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.842" level="INFO">VALUE: [8.330600000000521e-05, 8.416700000000304e-05, 8.41249999999974e-05, 8.354199999999895e-05, 8.384800000000442e-05, 8.383400000000485e-05, 8.393000000000289e-05, 8.402799999999988e-05, 8.36249999999969e-05, 8.381899999999887e-05, 8.3846999999998e-05, 8.386099999999758e-05, 8.405599999999902e-05, 8.375000000000049e-05, 8.411100000000477e-05, 8.352799999999938e-05, 8.402799999999988e-05, 8.369500000000168e-05, 8.336099999999708e-05, 8.380599999999877e-05, 8.376400000000006e-05, 8.405499999999955e-05, 8.365300000000297e-05, 8.344400000000196e-05, 8.324999999999999e-05, 8.376300000000059e-05, 8.373600000000092e-05, 8.377799999999963e-05, 8.388900000000366e-05, 8.3846999999998e-05, 8.366700000000254e-05, 8.398700000000064e-05, 8.36249999999969e-05, 8.33469999999975e-05, 8.387500000000409e-05, 8.36249999999969e-05, 8.404200000000639e-05, 8.39720000000016e-05, 8.366700000000254e-05, 8.372200000000135e-05, 8.387500000000409e-05, 8.411099999999783e-05, 8.420900000000175e-05, 8.336099999999708e-05, 8.420900000000175e-05, 8.383299999999844e-05, 8.398599999999423e-05, 8.368100000000211e-05, 8.324999999999999e-05, 8.352799999999938e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.839" endtime="20201030 10:59:43.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.827" endtime="20201030 10:59:43.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.855" endtime="20201030 10:59:43.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.850" endtime="20201030 10:59:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.848" endtime="20201030 10:59:43.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.350" endtime="20201030 10:59:43.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.349" endtime="20201030 10:59:43.880"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.903" endtime="20201030 10:59:43.925"></status>
</kw>
<msg timestamp="20201030 10:59:43.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.900" endtime="20201030 10:59:43.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.928" endtime="20201030 10:59:43.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.934" endtime="20201030 10:59:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.892" endtime="20201030 10:59:43.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.886" endtime="20201030 10:59:43.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.958" endtime="20201030 10:59:44.301"></status>
</kw>
<msg timestamp="20201030 10:59:44.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.955" endtime="20201030 10:59:44.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.311" endtime="20201030 10:59:44.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.330" endtime="20201030 10:59:44.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.948" endtime="20201030 10:59:44.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.943" endtime="20201030 10:59:44.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.348" level="INFO">${RESULT} = [{'diff': 8.459699999999876e-05}, {'diff': 8.508299999999969e-05}, {'diff': 8.523600000000242e-05}, {'diff': 8.46669999999966e-05}, {'diff': 8.502800000000088e-05}, {'diff': 8.4846999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:59:44.339" endtime="20201030 10:59:44.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.357" level="INFO">${ACCURACY} = {'diff': [8.459699999999876e-05, 8.508299999999969e-05, 8.523600000000242e-05, 8.46669999999966e-05, 8.502800000000088e-05, 8.4846999999999e-05, 8.461100000000527e-05, 8.425000000000099e-05, 8.4304999...</msg>
<status status="PASS" starttime="20201030 10:59:44.350" endtime="20201030 10:59:44.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.368" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.366" endtime="20201030 10:59:44.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.374" level="INFO">VALUE: [8.459699999999876e-05, 8.508299999999969e-05, 8.523600000000242e-05, 8.46669999999966e-05, 8.502800000000088e-05, 8.4846999999999e-05, 8.461100000000527e-05, 8.425000000000099e-05, 8.43049999999998e-05, 8.434700000000545e-05, 8.462500000000484e-05, 8.463899999999747e-05, 8.509699999999926e-05, 8.51669999999971e-05, 8.51669999999971e-05, 8.454199999999995e-05, 8.444500000000243e-05, 8.519400000000371e-05, 8.468100000000311e-05, 8.505500000000055e-05, 8.427800000000013e-05, 8.486099999999858e-05, 8.475000000000149e-05, 8.504100000000098e-05, 8.448600000000167e-05, 8.466700000000354e-05, 8.516700000000405e-05, 8.466599999999713e-05, 8.423600000000142e-05, 8.49720000000026e-05, 8.487499999999815e-05, 8.437499999999765e-05, 8.470800000000278e-05, 8.427699999999372e-05, 8.473600000000192e-05, 8.456899999999962e-05, 8.481899999999987e-05, 8.513899999999797e-05, 8.440299999999679e-05, 8.51249999999984e-05, 8.452800000000038e-05, 8.470900000000225e-05, 8.505600000000002e-05, 8.475000000000149e-05, 8.475000000000149e-05, 8.509699999999926e-05, 8.463800000000493e-05, 8.44720000000021e-05, 8.494400000000346e-05, 8.504200000000045e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.370" endtime="20201030 10:59:44.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.359" endtime="20201030 10:59:44.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.386" endtime="20201030 10:59:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.382" endtime="20201030 10:59:44.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.379" endtime="20201030 10:59:44.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.882" endtime="20201030 10:59:44.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.881" endtime="20201030 10:59:44.412"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.435" endtime="20201030 10:59:44.459"></status>
</kw>
<msg timestamp="20201030 10:59:44.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.431" endtime="20201030 10:59:44.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.462" endtime="20201030 10:59:44.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.469" endtime="20201030 10:59:44.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.424" endtime="20201030 10:59:44.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.418" endtime="20201030 10:59:44.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.493" endtime="20201030 10:59:44.833"></status>
</kw>
<msg timestamp="20201030 10:59:44.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043781194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.489" endtime="20201030 10:59:44.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043781194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.843" endtime="20201030 10:59:44.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.862" endtime="20201030 10:59:44.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.482" endtime="20201030 10:59:44.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.477" endtime="20201030 10:59:44.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.879" level="INFO">${RESULT} = [{'diff': 8.5847e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.558300000000019e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.5...</msg>
<status status="PASS" starttime="20201030 10:59:44.871" endtime="20201030 10:59:44.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.889" level="INFO">${ACCURACY} = {'diff': [8.5847e-05, 8.583300000000044e-05, 8.558300000000019e-05, 8.561099999999933e-05, 8.533299999999994e-05, 8.581900000000087e-05, 8.5944999999997e-05, 8.582000000000034e-05, 8.523600000000242e-...</msg>
<status status="PASS" starttime="20201030 10:59:44.881" endtime="20201030 10:59:44.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.900" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.898" endtime="20201030 10:59:44.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.905" level="INFO">VALUE: [8.5847e-05, 8.583300000000044e-05, 8.558300000000019e-05, 8.561099999999933e-05, 8.533299999999994e-05, 8.581900000000087e-05, 8.5944999999997e-05, 8.582000000000034e-05, 8.523600000000242e-05, 8.590299999999829e-05, 8.620799999999734e-05, 8.540299999999779e-05, 8.608300000000069e-05, 8.570800000000378e-05, 8.587499999999915e-05, 8.554200000000095e-05, 8.595800000000403e-05, 8.57920000000012e-05, 8.537500000000559e-05, 8.554200000000095e-05, 8.586099999999958e-05, 8.545799999999659e-05, 8.575000000000249e-05, 8.557000000000009e-05, 8.613899999999897e-05, 8.620799999999734e-05, 8.566599999999813e-05, 8.552800000000138e-05, 8.545800000000353e-05, 8.588799999999924e-05, 8.527800000000113e-05, 8.536099999999908e-05, 8.611099999999983e-05, 8.611099999999983e-05, 8.57370000000024e-05, 8.608300000000069e-05, 8.536099999999908e-05, 8.609700000000026e-05, 8.581900000000087e-05, 8.616599999999863e-05, 8.575000000000249e-05, 8.590299999999829e-05, 8.525000000000199e-05, 8.554200000000095e-05, 8.619499999999725e-05, 8.526400000000156e-05, 8.570899999999632e-05, 8.537499999999865e-05, 8.604099999999504e-05, 8.590199999999881e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.902" endtime="20201030 10:59:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.891" endtime="20201030 10:59:44.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.920" endtime="20201030 10:59:44.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.914" endtime="20201030 10:59:44.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.911" endtime="20201030 10:59:44.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.414" endtime="20201030 10:59:44.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.412" endtime="20201030 10:59:44.945"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.968" endtime="20201030 10:59:44.991"></status>
</kw>
<msg timestamp="20201030 10:59:44.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.965" endtime="20201030 10:59:44.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.994" endtime="20201030 10:59:44.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.001" endtime="20201030 10:59:45.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.957" endtime="20201030 10:59:45.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.951" endtime="20201030 10:59:45.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.020" endtime="20201030 10:59:45.343"></status>
</kw>
<msg timestamp="20201030 10:59:45.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042402153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.018" endtime="20201030 10:59:45.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042402153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.353" endtime="20201030 10:59:45.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.372" endtime="20201030 10:59:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.014" endtime="20201030 10:59:45.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.009" endtime="20201030 10:59:45.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.389" level="INFO">${RESULT} = [{'diff': 8.695899999999757e-05}, {'diff': 8.694399999999852e-05}, {'diff': 8.672299999999689e-05}, {'diff': 8.716599999999963e-05}, {'diff': 8.650000000000324e-05}, {'diff': 8.683300000000144e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:45.380" endtime="20201030 10:59:45.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.400" level="INFO">${ACCURACY} = {'diff': [8.695899999999757e-05, 8.694399999999852e-05, 8.672299999999689e-05, 8.716599999999963e-05, 8.650000000000324e-05, 8.683300000000144e-05, 8.676400000000306e-05, 8.713899999999997e-05, 8.7193...</msg>
<status status="PASS" starttime="20201030 10:59:45.391" endtime="20201030 10:59:45.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.411" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.409" endtime="20201030 10:59:45.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.417" level="INFO">VALUE: [8.695899999999757e-05, 8.694399999999852e-05, 8.672299999999689e-05, 8.716599999999963e-05, 8.650000000000324e-05, 8.683300000000144e-05, 8.676400000000306e-05, 8.713899999999997e-05, 8.719399999999877e-05, 8.636100000000008e-05, 8.645799999999759e-05, 8.684800000000048e-05, 8.694500000000494e-05, 8.702800000000288e-05, 8.688800000000024e-05, 8.648600000000367e-05, 8.661100000000033e-05, 8.711100000000083e-05, 8.691699999999886e-05, 8.702800000000288e-05, 8.670899999999732e-05, 8.623599999999648e-05, 8.709699999999432e-05, 8.686100000000058e-05, 8.677799999999569e-05, 8.720899999999782e-05, 8.707000000000159e-05, 8.648599999999673e-05, 8.627699999999572e-05, 8.655500000000205e-05, 8.66799999999987e-05, 8.62920000000017e-05, 8.652800000000238e-05, 8.683300000000144e-05, 8.624999999999605e-05, 8.623599999999648e-05, 8.665300000000598e-05, 8.64999999999963e-05, 8.701400000000331e-05, 8.651400000000281e-05, 8.670800000000478e-05, 8.692999999999895e-05, 8.626399999999562e-05, 8.677799999999569e-05, 8.648599999999673e-05, 8.632000000000084e-05, 8.6332999999994e-05, 8.62920000000017e-05, 8.670900000000425e-05, 8.702800000000288e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.413" endtime="20201030 10:59:45.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.402" endtime="20201030 10:59:45.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.435" endtime="20201030 10:59:45.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.431" endtime="20201030 10:59:45.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.428" endtime="20201030 10:59:45.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.947" endtime="20201030 10:59:45.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.946" endtime="20201030 10:59:45.460"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.484" endtime="20201030 10:59:45.506"></status>
</kw>
<msg timestamp="20201030 10:59:45.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.480" endtime="20201030 10:59:45.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.509" endtime="20201030 10:59:45.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.515" endtime="20201030 10:59:45.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.473" endtime="20201030 10:59:45.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.467" endtime="20201030 10:59:45.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.539" endtime="20201030 10:59:45.881"></status>
</kw>
<msg timestamp="20201030 10:59:45.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041970806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.536" endtime="20201030 10:59:45.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041970806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.891" endtime="20201030 10:59:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.910" endtime="20201030 10:59:45.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.529" endtime="20201030 10:59:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.524" endtime="20201030 10:59:45.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.927" level="INFO">${RESULT} = [{'diff': 8.743099999999893e-05}, {'diff': 8.781899999999593e-05}, {'diff': 8.770799999999884e-05}, {'diff': 8.819499999999925e-05}, {'diff': 8.804199999999651e-05}, {'diff': 8.777799999999669e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:45.918" endtime="20201030 10:59:45.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.938" level="INFO">${ACCURACY} = {'diff': [8.743099999999893e-05, 8.781899999999593e-05, 8.770799999999884e-05, 8.819499999999925e-05, 8.804199999999651e-05, 8.777799999999669e-05, 8.808299999999575e-05, 8.741699999999936e-05, 8.8125...</msg>
<status status="PASS" starttime="20201030 10:59:45.929" endtime="20201030 10:59:45.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.950" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.947" endtime="20201030 10:59:45.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.955" level="INFO">VALUE: [8.743099999999893e-05, 8.781899999999593e-05, 8.770799999999884e-05, 8.819499999999925e-05, 8.804199999999651e-05, 8.777799999999669e-05, 8.808299999999575e-05, 8.741699999999936e-05, 8.81250000000014e-05, 8.757000000000209e-05, 8.820899999999882e-05, 8.823599999999848e-05, 8.820799999999934e-05, 8.783300000000244e-05, 8.747199999999816e-05, 8.733399999999447e-05, 8.71799999999992e-05, 8.774999999999755e-05, 8.731900000000237e-05, 8.730600000000227e-05, 8.790300000000029e-05, 8.733400000000141e-05, 8.776399999999712e-05, 8.781900000000287e-05, 8.754100000000348e-05, 8.737500000000065e-05, 8.750000000000424e-05, 8.781899999999593e-05, 8.758300000000219e-05, 8.736100000000108e-05, 8.727800000000313e-05, 8.748600000000467e-05, 8.787499999999421e-05, 8.759700000000176e-05, 8.747299999999764e-05, 8.774999999999755e-05, 8.822199999999891e-05, 8.733300000000194e-05, 8.790199999999387e-05, 8.723600000000442e-05, 8.754200000000295e-05, 8.724999999999705e-05, 8.793099999999943e-05, 8.763900000000047e-05, 8.818100000000662e-05, 8.770900000000525e-05, 8.763900000000047e-05, 8.73199999999949e-05, 8.786100000000158e-05, 8.758300000000219e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.952" endtime="20201030 10:59:45.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.940" endtime="20201030 10:59:45.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.968" endtime="20201030 10:59:45.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.963" endtime="20201030 10:59:45.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.961" endtime="20201030 10:59:45.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.462" endtime="20201030 10:59:45.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.461" endtime="20201030 10:59:45.993"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.016" endtime="20201030 10:59:46.039"></status>
</kw>
<msg timestamp="20201030 10:59:46.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.013" endtime="20201030 10:59:46.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.042" endtime="20201030 10:59:46.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.049" endtime="20201030 10:59:46.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.006" endtime="20201030 10:59:46.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.000" endtime="20201030 10:59:46.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.072" endtime="20201030 10:59:46.417"></status>
</kw>
<msg timestamp="20201030 10:59:46.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042160694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.069" endtime="20201030 10:59:46.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042160694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.427" endtime="20201030 10:59:46.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.446" endtime="20201030 10:59:46.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.062" endtime="20201030 10:59:46.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.057" endtime="20201030 10:59:46.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.463" level="INFO">${RESULT} = [{'diff': 8.906899999999718e-05}, {'diff': 8.908299999999675e-05}, {'diff': 8.912499999999546e-05}, {'diff': 8.852699999999797e-05}, {'diff': 8.874999999999855e-05}, {'diff': 8.891700000000086e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:46.454" endtime="20201030 10:59:46.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.472" level="INFO">${ACCURACY} = {'diff': [8.906899999999718e-05, 8.908299999999675e-05, 8.912499999999546e-05, 8.852699999999797e-05, 8.874999999999855e-05, 8.891700000000086e-05, 8.869500000000669e-05, 8.915300000000154e-05, 8.9041...</msg>
<status status="PASS" starttime="20201030 10:59:46.465" endtime="20201030 10:59:46.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.484" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.481" endtime="20201030 10:59:46.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.489" level="INFO">VALUE: [8.906899999999718e-05, 8.908299999999675e-05, 8.912499999999546e-05, 8.852699999999797e-05, 8.874999999999855e-05, 8.891700000000086e-05, 8.869500000000669e-05, 8.915300000000154e-05, 8.904199999999751e-05, 8.850000000000524e-05, 8.883400000000291e-05, 8.845799999999959e-05, 8.913900000000197e-05, 8.877799999999769e-05, 8.840199999999437e-05, 8.91250000000024e-05, 8.919399999999383e-05, 8.893000000000095e-05, 8.884700000000301e-05, 8.845799999999959e-05, 8.890300000000129e-05, 8.890300000000129e-05, 8.82920000000037e-05, 8.823699999999796e-05, 8.879099999999779e-05, 8.841600000000088e-05, 8.909699999999632e-05, 8.870799999999984e-05, 8.858300000000319e-05, 8.869499999999975e-05, 8.850000000000524e-05, 8.87920000000042e-05, 8.897199999999966e-05, 8.876400000000506e-05, 8.84449999999995e-05, 8.88050000000043e-05, 8.854099999999754e-05, 8.908299999999675e-05, 8.845799999999959e-05, 8.84999999999983e-05, 8.879199999999726e-05, 8.858399999999572e-05, 8.911099999999589e-05, 8.830599999999633e-05, 8.83199999999959e-05, 8.870899999999932e-05, 8.848599999999873e-05, 8.908400000000316e-05, 8.816600000000063e-05, 8.922199999999991e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.486" endtime="20201030 10:59:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.474" endtime="20201030 10:59:46.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.502" endtime="20201030 10:59:46.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.497" endtime="20201030 10:59:46.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.495" endtime="20201030 10:59:46.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.995" endtime="20201030 10:59:46.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.994" endtime="20201030 10:59:46.527"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.550" endtime="20201030 10:59:46.578"></status>
</kw>
<msg timestamp="20201030 10:59:46.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.547" endtime="20201030 10:59:46.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.581" endtime="20201030 10:59:46.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.588" endtime="20201030 10:59:46.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.540" endtime="20201030 10:59:46.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.534" endtime="20201030 10:59:46.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.611" endtime="20201030 10:59:46.954"></status>
</kw>
<msg timestamp="20201030 10:59:46.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.608" endtime="20201030 10:59:46.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.963" endtime="20201030 10:59:46.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.982" endtime="20201030 10:59:46.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.601" endtime="20201030 10:59:46.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.596" endtime="20201030 10:59:46.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.000" level="INFO">${RESULT} = [{'diff': 8.959799999999629e-05}, {'diff': 8.931899999999743e-05}, {'diff': 8.96800000000017e-05}, {'diff': 8.925000000000599e-05}, {'diff': 8.994400000000152e-05}, {'diff': 8.923599999999948e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:46.991" endtime="20201030 10:59:47.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.009" level="INFO">${ACCURACY} = {'diff': [8.959799999999629e-05, 8.931899999999743e-05, 8.96800000000017e-05, 8.925000000000599e-05, 8.994400000000152e-05, 8.923599999999948e-05, 9.019400000000177e-05, 8.940300000000179e-05, 8.96939...</msg>
<status status="PASS" starttime="20201030 10:59:47.002" endtime="20201030 10:59:47.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.020" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.018" endtime="20201030 10:59:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.026" level="INFO">VALUE: [8.959799999999629e-05, 8.931899999999743e-05, 8.96800000000017e-05, 8.925000000000599e-05, 8.994400000000152e-05, 8.923599999999948e-05, 9.019400000000177e-05, 8.940300000000179e-05, 8.969399999999433e-05, 8.983300000000444e-05, 8.92920000000047e-05, 8.937500000000265e-05, 8.99999999999998e-05, 8.93199999999969e-05, 8.938900000000222e-05, 8.941600000000188e-05, 9.012499999999646e-05, 9.001399999999937e-05, 8.979199999999826e-05, 8.937500000000265e-05, 8.976399999999912e-05, 9.015300000000254e-05, 9.002799999999894e-05, 8.969399999999433e-05, 8.995900000000057e-05, 8.94450000000005e-05, 9.005499999999861e-05, 9.015300000000254e-05, 8.981900000000487e-05, 8.96670000000016e-05, 8.944400000000102e-05, 8.998600000000023e-05, 8.943099999999399e-05, 8.990300000000229e-05, 8.997300000000014e-05, 8.927799999999819e-05, 8.984700000000401e-05, 8.926399999999862e-05, 9.005499999999861e-05, 8.994399999999458e-05, 8.984700000000401e-05, 8.995799999999415e-05, 9.01250000000034e-05, 8.952799999999844e-05, 9.01250000000034e-05, 8.987500000000315e-05, 8.925000000000599e-05, 9.01529999999956e-05, 8.977799999999869e-05, 8.965300000000204e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.023" endtime="20201030 10:59:47.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.011" endtime="20201030 10:59:47.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.040" endtime="20201030 10:59:47.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.034" endtime="20201030 10:59:47.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.032" endtime="20201030 10:59:47.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.529" endtime="20201030 10:59:47.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.528" endtime="20201030 10:59:47.065"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.088" endtime="20201030 10:59:47.110"></status>
</kw>
<msg timestamp="20201030 10:59:47.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.085" endtime="20201030 10:59:47.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.114" endtime="20201030 10:59:47.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.120" endtime="20201030 10:59:47.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.078" endtime="20201030 10:59:47.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.072" endtime="20201030 10:59:47.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.144" endtime="20201030 10:59:47.486"></status>
</kw>
<msg timestamp="20201030 10:59:47.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042030542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.141" endtime="20201030 10:59:47.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042030542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.495" endtime="20201030 10:59:47.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.514" endtime="20201030 10:59:47.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.133" endtime="20201030 10:59:47.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.129" endtime="20201030 10:59:47.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.532" level="INFO">${RESULT} = [{'diff': 9.068099999999524e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.037499999999671e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.0332999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:47.523" endtime="20201030 10:59:47.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.543" level="INFO">${ACCURACY} = {'diff': [9.068099999999524e-05, 9.104199999999951e-05, 9.037499999999671e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.0332999999998e-05, 9.090300000000329e-05, 9.020800000000134e-05, 9.102799...</msg>
<status status="PASS" starttime="20201030 10:59:47.534" endtime="20201030 10:59:47.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.554" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.551" endtime="20201030 10:59:47.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.559" level="INFO">VALUE: [9.068099999999524e-05, 9.104199999999951e-05, 9.037499999999671e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.0332999999998e-05, 9.090300000000329e-05, 9.020800000000134e-05, 9.102799999999994e-05, 9.119400000000277e-05, 9.070800000000184e-05, 9.095899999999463e-05, 9.095899999999463e-05, 9.090300000000329e-05, 9.04450000000015e-05, 9.119399999999583e-05, 9.07079999999949e-05, 9.031899999999843e-05, 9.08329999999985e-05, 9.047199999999422e-05, 9.066699999999567e-05, 9.068100000000218e-05, 9.098600000000123e-05, 9.054199999999901e-05, 9.091700000000286e-05, 9.091700000000286e-05, 9.037500000000365e-05, 9.030499999999886e-05, 9.097200000000166e-05, 9.030499999999886e-05, 9.08329999999985e-05, 9.112499999999746e-05, 9.054199999999901e-05, 9.073600000000098e-05, 9.041700000000236e-05, 9.027799999999919e-05, 9.069500000000175e-05, 9.065300000000304e-05, 9.108299999999875e-05, 9.073600000000098e-05, 9.109699999999832e-05, 9.041699999999542e-05, 9.090300000000329e-05, 9.093100000000243e-05, 9.119400000000277e-05, 9.030599999999833e-05, 9.068100000000218e-05, 9.029199999999876e-05, 9.105599999999908e-05, 9.029199999999876e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.556" endtime="20201030 10:59:47.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.544" endtime="20201030 10:59:47.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.572" endtime="20201030 10:59:47.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.568" endtime="20201030 10:59:47.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.565" endtime="20201030 10:59:47.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.067" endtime="20201030 10:59:47.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.066" endtime="20201030 10:59:47.597"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.620" endtime="20201030 10:59:47.643"></status>
</kw>
<msg timestamp="20201030 10:59:47.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.617" endtime="20201030 10:59:47.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.646" endtime="20201030 10:59:47.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.653" endtime="20201030 10:59:47.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.609" endtime="20201030 10:59:47.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.604" endtime="20201030 10:59:47.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.677" endtime="20201030 10:59:48.018"></status>
</kw>
<msg timestamp="20201030 10:59:48.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.673" endtime="20201030 10:59:48.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.028" endtime="20201030 10:59:48.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.047" endtime="20201030 10:59:48.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.666" endtime="20201030 10:59:48.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.661" endtime="20201030 10:59:48.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.065" level="INFO">${RESULT} = [{'diff': 9.173599999999504e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.188899999999778e-05}, {'diff': 9.211099999999889e-05}, {'diff': 9.134699999999857e-05}, {'diff': 9.158400000000566e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:48.056" endtime="20201030 10:59:48.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.076" level="INFO">${ACCURACY} = {'diff': [9.173599999999504e-05, 9.161099999999839e-05, 9.188899999999778e-05, 9.211099999999889e-05, 9.134699999999857e-05, 9.158400000000566e-05, 9.16670000000036e-05, 9.158399999999872e-05, 9.16249...</msg>
<status status="PASS" starttime="20201030 10:59:48.067" endtime="20201030 10:59:48.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.087" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.085" endtime="20201030 10:59:48.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.093" level="INFO">VALUE: [9.173599999999504e-05, 9.161099999999839e-05, 9.188899999999778e-05, 9.211099999999889e-05, 9.134699999999857e-05, 9.158400000000566e-05, 9.16670000000036e-05, 9.158399999999872e-05, 9.162499999999796e-05, 9.127800000000019e-05, 9.195799999999615e-05, 9.130599999999933e-05, 9.156899999999968e-05, 9.1332999999999e-05, 9.211099999999889e-05, 9.209799999999879e-05, 9.148600000000173e-05, 9.15000000000013e-05, 9.187500000000515e-05, 9.190300000000429e-05, 9.170899999999538e-05, 9.123600000000148e-05, 9.21250000000054e-05, 9.216600000000463e-05, 9.142999999999651e-05, 9.22079999999964e-05, 9.165300000000404e-05, 9.181899999999993e-05, 9.193099999999649e-05, 9.18329999999995e-05, 9.173600000000198e-05, 9.148600000000173e-05, 9.173599999999504e-05, 9.170899999999538e-05, 9.212499999999846e-05, 9.147199999999522e-05, 9.19859999999953e-05, 9.204100000000104e-05, 9.125000000000105e-05, 9.205600000000008e-05, 9.201400000000137e-05, 9.184700000000601e-05, 9.130599999999933e-05, 9.144499999999556e-05, 9.18199999999994e-05, 9.159800000000523e-05, 9.154100000000054e-05, 9.141599999999694e-05, 9.131899999999943e-05, 9.198600000000223e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.090" endtime="20201030 10:59:48.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.078" endtime="20201030 10:59:48.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.106" endtime="20201030 10:59:48.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.101" endtime="20201030 10:59:48.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.099" endtime="20201030 10:59:48.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.599" endtime="20201030 10:59:48.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.598" endtime="20201030 10:59:48.131"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.154" endtime="20201030 10:59:48.176"></status>
</kw>
<msg timestamp="20201030 10:59:48.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.150" endtime="20201030 10:59:48.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.179" endtime="20201030 10:59:48.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.186" endtime="20201030 10:59:48.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.143" endtime="20201030 10:59:48.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.137" endtime="20201030 10:59:48.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.209" endtime="20201030 10:59:48.520"></status>
</kw>
<msg timestamp="20201030 10:59:48.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041836625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041929069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.206" endtime="20201030 10:59:48.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041836625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041929069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.525" endtime="20201030 10:59:48.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.533" endtime="20201030 10:59:48.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.199" endtime="20201030 10:59:48.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.194" endtime="20201030 10:59:48.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.541" level="INFO">${RESULT} = [{'diff': 9.244399999999708e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.268100000000418e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.318099999999774e-05}, {'diff': 9.266699999999767e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:48.537" endtime="20201030 10:59:48.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.546" level="INFO">${ACCURACY} = {'diff': [9.244399999999708e-05, 9.286099999999964e-05, 9.268100000000418e-05, 9.280600000000083e-05, 9.318099999999774e-05, 9.266699999999767e-05, 9.284700000000007e-05, 9.24859999999958e-05, 9.27920...</msg>
<status status="PASS" starttime="20201030 10:59:48.542" endtime="20201030 10:59:48.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.551" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.550" endtime="20201030 10:59:48.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.553" level="INFO">VALUE: [9.244399999999708e-05, 9.286099999999964e-05, 9.268100000000418e-05, 9.280600000000083e-05, 9.318099999999774e-05, 9.266699999999767e-05, 9.284700000000007e-05, 9.24859999999958e-05, 9.279200000000126e-05, 9.287499999999921e-05, 9.263799999999905e-05, 9.254100000000154e-05, 9.302699999999553e-05, 9.291599999999844e-05, 9.305500000000161e-05, 9.287500000000615e-05, 9.244399999999708e-05, 9.275000000000255e-05, 9.302800000000194e-05, 9.284700000000007e-05, 9.304200000000151e-05, 9.240299999999785e-05, 9.226400000000162e-05, 9.231900000000043e-05, 9.225000000000205e-05, 9.247199999999622e-05, 9.308299999999381e-05, 9.281900000000093e-05, 9.227800000000119e-05, 9.302699999999553e-05, 9.286099999999964e-05, 9.279199999999432e-05, 9.290199999999887e-05, 9.295799999999715e-05, 9.231900000000043e-05, 9.294399999999758e-05, 9.284700000000007e-05, 9.311099999999989e-05, 9.316699999999817e-05, 9.322199999999697e-05, 9.230600000000033e-05, 9.247200000000316e-05, 9.316700000000511e-05, 9.277799999999475e-05, 9.275000000000255e-05, 9.26659999999982e-05, 9.290200000000581e-05, 9.279100000000179e-05, 9.276400000000212e-05, 9.290299999999835e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.552" endtime="20201030 10:59:48.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.546" endtime="20201030 10:59:48.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.561" endtime="20201030 10:59:48.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.557" endtime="20201030 10:59:48.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.556" endtime="20201030 10:59:48.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.133" endtime="20201030 10:59:48.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.132" endtime="20201030 10:59:48.586"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.609" endtime="20201030 10:59:48.633"></status>
</kw>
<msg timestamp="20201030 10:59:48.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.606" endtime="20201030 10:59:48.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.637" endtime="20201030 10:59:48.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.643" endtime="20201030 10:59:48.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.599" endtime="20201030 10:59:48.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.593" endtime="20201030 10:59:48.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.667" endtime="20201030 10:59:49.009"></status>
</kw>
<msg timestamp="20201030 10:59:49.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043467931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.663" endtime="20201030 10:59:49.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043467931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.018" endtime="20201030 10:59:49.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.037" endtime="20201030 10:59:49.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.656" endtime="20201030 10:59:49.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.651" endtime="20201030 10:59:49.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.055" level="INFO">${RESULT} = [{'diff': 9.336199999999961e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.38609999999937e-05}, {'diff': 9.341699999999842e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:49.046" endtime="20201030 10:59:49.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.064" level="INFO">${ACCURACY} = {'diff': [9.336199999999961e-05, 9.330600000000133e-05, 9.356900000000168e-05, 9.386100000000064e-05, 9.38609999999937e-05, 9.341699999999842e-05, 9.351400000000287e-05, 9.388899999999978e-05, 9.33749...</msg>
<status status="PASS" starttime="20201030 10:59:49.057" endtime="20201030 10:59:49.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.075" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.073" endtime="20201030 10:59:49.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.081" level="INFO">VALUE: [9.336199999999961e-05, 9.330600000000133e-05, 9.356900000000168e-05, 9.386100000000064e-05, 9.38609999999937e-05, 9.341699999999842e-05, 9.351400000000287e-05, 9.388899999999978e-05, 9.337499999999971e-05, 9.418099999999874e-05, 9.384700000000107e-05, 9.412500000000046e-05, 9.386100000000064e-05, 9.341600000000588e-05, 9.36800000000057e-05, 9.3333000000001e-05, 9.338899999999928e-05, 9.398600000000423e-05, 9.374999999999661e-05, 9.35279999999955e-05, 9.379200000000226e-05, 9.359800000000029e-05, 9.336199999999961e-05, 9.401400000000337e-05, 9.336100000000014e-05, 9.38330000000015e-05, 9.36659999999992e-05, 9.357000000000115e-05, 9.355600000000158e-05, 9.386100000000064e-05, 9.355599999999464e-05, 9.395899999999763e-05, 9.340299999999885e-05, 9.406999999999471e-05, 9.351400000000287e-05, 9.352700000000297e-05, 9.406900000000218e-05, 9.386100000000064e-05, 9.366699999999867e-05, 9.351400000000287e-05, 9.362499999999996e-05, 9.333400000000047e-05, 9.348699999999627e-05, 9.333299999999406e-05, 9.401399999999643e-05, 9.329199999999482e-05, 9.413900000000003e-05, 9.363899999999953e-05, 9.331900000000143e-05, 9.416700000000611e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.078" endtime="20201030 10:59:49.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.066" endtime="20201030 10:59:49.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.095" endtime="20201030 10:59:49.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.089" endtime="20201030 10:59:49.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.087" endtime="20201030 10:59:49.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.588" endtime="20201030 10:59:49.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.587" endtime="20201030 10:59:49.120"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.143" endtime="20201030 10:59:49.166"></status>
</kw>
<msg timestamp="20201030 10:59:49.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.140" endtime="20201030 10:59:49.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.170" endtime="20201030 10:59:49.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.176" endtime="20201030 10:59:49.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.133" endtime="20201030 10:59:49.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.127" endtime="20201030 10:59:49.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.200" endtime="20201030 10:59:49.542"></status>
</kw>
<msg timestamp="20201030 10:59:49.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042125736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.196" endtime="20201030 10:59:49.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042125736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.552" endtime="20201030 10:59:49.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.571" endtime="20201030 10:59:49.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.189" endtime="20201030 10:59:49.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.184" endtime="20201030 10:59:49.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.588" level="INFO">${RESULT} = [{'diff': 9.479199999999632e-05}, {'diff': 9.423600000000448e-05}, {'diff': 9.47079999999989e-05}, {'diff': 9.437500000000071e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.520899999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:49.579" endtime="20201030 10:59:49.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.599" level="INFO">${ACCURACY} = {'diff': [9.479199999999632e-05, 9.423600000000448e-05, 9.47079999999989e-05, 9.437500000000071e-05, 9.491699999999992e-05, 9.520899999999888e-05, 9.50000000000048e-05, 9.444399999999908e-05, 9.466600...</msg>
<status status="PASS" starttime="20201030 10:59:49.590" endtime="20201030 10:59:49.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.610" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.608" endtime="20201030 10:59:49.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.616" level="INFO">VALUE: [9.479199999999632e-05, 9.423600000000448e-05, 9.47079999999989e-05, 9.437500000000071e-05, 9.491699999999992e-05, 9.520899999999888e-05, 9.50000000000048e-05, 9.444399999999908e-05, 9.46660000000002e-05, 9.484700000000207e-05, 9.469399999999933e-05, 9.434700000000157e-05, 9.468099999999924e-05, 9.470800000000584e-05, 9.479199999999632e-05, 9.445799999999865e-05, 9.491699999999992e-05, 9.46530000000001e-05, 9.46660000000002e-05, 9.437500000000071e-05, 9.442999999999951e-05, 9.499999999999786e-05, 9.481900000000293e-05, 9.423599999999754e-05, 9.4333000000002e-05, 9.470899999999838e-05, 9.508399999999528e-05, 9.504200000000351e-05, 9.513900000000103e-05, 9.437500000000071e-05, 9.502700000000447e-05, 9.52079999999994e-05, 9.513900000000103e-05, 9.44859999999978e-05, 9.491699999999992e-05, 9.468099999999924e-05, 9.5027999999997e-05, 9.526400000000462e-05, 9.44450000000055e-05, 9.430500000000286e-05, 9.458299999999531e-05, 9.424999999999711e-05, 9.497199999999872e-05, 9.481899999999599e-05, 9.508299999999581e-05, 9.495799999999915e-05, 9.508300000000275e-05, 9.433400000000147e-05, 9.4945000000006e-05, 9.505599999999614e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.613" endtime="20201030 10:59:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.601" endtime="20201030 10:59:49.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.629" endtime="20201030 10:59:49.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.624" endtime="20201030 10:59:49.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.622" endtime="20201030 10:59:49.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.122" endtime="20201030 10:59:49.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.121" endtime="20201030 10:59:49.654"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.677" endtime="20201030 10:59:49.700"></status>
</kw>
<msg timestamp="20201030 10:59:49.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.673" endtime="20201030 10:59:49.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.703" endtime="20201030 10:59:49.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.709" endtime="20201030 10:59:49.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.666" endtime="20201030 10:59:49.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.660" endtime="20201030 10:59:49.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.733" endtime="20201030 10:59:50.076"></status>
</kw>
<msg timestamp="20201030 10:59:50.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042220125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.730" endtime="20201030 10:59:50.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042220125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.085" endtime="20201030 10:59:50.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.104" endtime="20201030 10:59:50.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.722" endtime="20201030 10:59:50.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.718" endtime="20201030 10:59:50.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.122" level="INFO">${RESULT} = [{'diff': 9.526399999999768e-05}, {'diff': 9.605600000000408e-05}, {'diff': 9.547199999999922e-05}, {'diff': 9.559800000000229e-05}, {'diff': 9.545899999999913e-05}, {'diff': 9.569400000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:50.113" endtime="20201030 10:59:50.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.133" level="INFO">${ACCURACY} = {'diff': [9.526399999999768e-05, 9.605600000000408e-05, 9.547199999999922e-05, 9.559800000000229e-05, 9.545899999999913e-05, 9.569400000000033e-05, 9.608300000000375e-05, 9.591600000000144e-05, 9.5221...</msg>
<status status="PASS" starttime="20201030 10:59:50.124" endtime="20201030 10:59:50.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.144" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.142" endtime="20201030 10:59:50.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.150" level="INFO">VALUE: [9.526399999999768e-05, 9.605600000000408e-05, 9.547199999999922e-05, 9.559800000000229e-05, 9.545899999999913e-05, 9.569400000000033e-05, 9.608300000000375e-05, 9.591600000000144e-05, 9.522199999999897e-05, 9.57079999999999e-05, 9.581899999999699e-05, 9.604200000000451e-05, 9.59859999999993e-05, 9.599999999999886e-05, 9.541700000000042e-05, 9.601399999999843e-05, 9.527700000000472e-05, 9.561100000000239e-05, 9.574999999999861e-05, 9.530500000000386e-05, 9.613900000000203e-05, 9.561100000000239e-05, 9.591700000000092e-05, 9.568100000000024e-05, 9.609800000000279e-05, 9.549999999999836e-05, 9.55279999999975e-05, 9.595899999999963e-05, 9.549999999999836e-05, 9.61939999999939e-05, 9.549999999999836e-05, 9.576399999999818e-05, 9.613900000000203e-05, 9.562500000000196e-05, 9.545799999999965e-05, 9.552800000000444e-05, 9.561099999999545e-05, 9.609800000000279e-05, 9.58880000000023e-05, 9.524999999999811e-05, 9.59859999999993e-05, 9.551400000000487e-05, 9.579200000000426e-05, 9.566700000000067e-05, 9.580600000000383e-05, 9.554199999999707e-05, 9.543099999999999e-05, 9.533400000000247e-05, 9.59859999999993e-05, 9.558299999999631e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.147" endtime="20201030 10:59:50.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.135" endtime="20201030 10:59:50.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.162" endtime="20201030 10:59:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.158" endtime="20201030 10:59:50.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.155" endtime="20201030 10:59:50.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.656" endtime="20201030 10:59:50.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.655" endtime="20201030 10:59:50.188"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.211" endtime="20201030 10:59:50.233"></status>
</kw>
<msg timestamp="20201030 10:59:50.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.207" endtime="20201030 10:59:50.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.237" endtime="20201030 10:59:50.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.243" endtime="20201030 10:59:50.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.200" endtime="20201030 10:59:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.194" endtime="20201030 10:59:50.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.267" endtime="20201030 10:59:50.611"></status>
</kw>
<msg timestamp="20201030 10:59:50.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042011264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.263" endtime="20201030 10:59:50.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042011264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.620" endtime="20201030 10:59:50.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.640" endtime="20201030 10:59:50.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.256" endtime="20201030 10:59:50.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.251" endtime="20201030 10:59:50.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.657" level="INFO">${RESULT} = [{'diff': 9.706999999999771e-05}, {'diff': 9.651399999999893e-05}, {'diff': 9.69730000000002e-05}, {'diff': 9.713799999999662e-05}, {'diff': 9.701399999999943e-05}, {'diff': 9.648699999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:50.648" endtime="20201030 10:59:50.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.667" level="INFO">${ACCURACY} = {'diff': [9.706999999999771e-05, 9.651399999999893e-05, 9.69730000000002e-05, 9.713799999999662e-05, 9.701399999999943e-05, 9.648699999999927e-05, 9.631900000000443e-05, 9.674999999999961e-05, 9.71250...</msg>
<status status="PASS" starttime="20201030 10:59:50.659" endtime="20201030 10:59:50.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.678" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.675" endtime="20201030 10:59:50.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.683" level="INFO">VALUE: [9.706999999999771e-05, 9.651399999999893e-05, 9.69730000000002e-05, 9.713799999999662e-05, 9.701399999999943e-05, 9.648699999999927e-05, 9.631900000000443e-05, 9.674999999999961e-05, 9.712500000000346e-05, 9.674999999999961e-05, 9.695800000000115e-05, 9.669400000000133e-05, 9.681999999999746e-05, 9.712500000000346e-05, 9.629099999999835e-05, 9.665299999999516e-05, 9.720799999999447e-05, 9.673600000000004e-05, 9.72080000000014e-05, 9.691600000000244e-05, 9.690299999999541e-05, 9.683299999999756e-05, 9.704199999999857e-05, 9.649999999999936e-05, 9.679199999999832e-05, 9.716700000000217e-05, 9.693100000000149e-05, 9.662499999999602e-05, 9.706900000000518e-05, 9.654100000000554e-05, 9.695800000000115e-05, 9.701399999999943e-05, 9.711099999999695e-05, 9.623599999999954e-05, 9.688900000000278e-05, 9.659799999999635e-05, 9.704200000000551e-05, 9.66530000000021e-05, 9.694400000000158e-05, 9.668000000000176e-05, 9.647200000000022e-05, 9.71530000000026e-05, 9.64729999999997e-05, 9.679199999999832e-05, 9.686100000000364e-05, 9.672200000000047e-05, 9.704200000000551e-05, 9.694400000000158e-05, 9.658299999999731e-05, 9.62080000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.680" endtime="20201030 10:59:50.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.668" endtime="20201030 10:59:50.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.702" endtime="20201030 10:59:50.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.697" endtime="20201030 10:59:50.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.695" endtime="20201030 10:59:50.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.190" endtime="20201030 10:59:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.189" endtime="20201030 10:59:50.727"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.750" endtime="20201030 10:59:50.774"></status>
</kw>
<msg timestamp="20201030 10:59:50.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.747" endtime="20201030 10:59:50.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.778" endtime="20201030 10:59:50.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.784" endtime="20201030 10:59:50.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.739" endtime="20201030 10:59:50.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.733" endtime="20201030 10:59:50.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.808" endtime="20201030 10:59:51.150"></status>
</kw>
<msg timestamp="20201030 10:59:51.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043433681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:50.805" endtime="20201030 10:59:51.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043433681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:51.160" endtime="20201030 10:59:51.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.179" endtime="20201030 10:59:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.797" endtime="20201030 10:59:51.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.793" endtime="20201030 10:59:51.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.196" level="INFO">${RESULT} = [{'diff': 9.731899999999849e-05}, {'diff': 9.781899999999899e-05}, {'diff': 9.804199999999957e-05}, {'diff': 9.795900000000163e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.82080000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:51.187" endtime="20201030 10:59:51.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.206" level="INFO">${ACCURACY} = {'diff': [9.731899999999849e-05, 9.781899999999899e-05, 9.804199999999957e-05, 9.795900000000163e-05, 9.729199999999882e-05, 9.82080000000024e-05, 9.805499999999967e-05, 9.776400000000018e-05, 9.82080...</msg>
<status status="PASS" starttime="20201030 10:59:51.198" endtime="20201030 10:59:51.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.217" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.214" endtime="20201030 10:59:51.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.222" level="INFO">VALUE: [9.731899999999849e-05, 9.781899999999899e-05, 9.804199999999957e-05, 9.795900000000163e-05, 9.729199999999882e-05, 9.82080000000024e-05, 9.805499999999967e-05, 9.776400000000018e-05, 9.82080000000024e-05, 9.78330000000055e-05, 9.74860000000008e-05, 9.793099999999555e-05, 9.8028e-05, 9.761099999999745e-05, 9.73609999999972e-05, 9.78609999999977e-05, 9.737499999999677e-05, 9.733299999999806e-05, 9.76660000000032e-05, 9.80410000000001e-05, 9.804199999999957e-05, 9.750000000000036e-05, 9.811100000000489e-05, 9.816700000000317e-05, 9.816700000000317e-05, 9.745900000000113e-05, 9.781899999999899e-05, 9.75409999999996e-05, 9.772200000000147e-05, 9.7415999999996e-05, 9.766599999999626e-05, 9.736100000000414e-05, 9.729200000000576e-05, 9.761100000000439e-05, 9.78609999999977e-05, 9.725000000000011e-05, 9.794400000000258e-05, 9.815199999999719e-05, 9.750000000000036e-05, 9.811099999999795e-05, 9.818000000000326e-05, 9.772200000000147e-05, 9.729199999999882e-05, 9.793100000000249e-05, 9.813899999999709e-05, 9.745900000000113e-05, 9.8028e-05, 9.82080000000024e-05, 9.788799999999737e-05, 9.80139999999935e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.219" endtime="20201030 10:59:51.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.207" endtime="20201030 10:59:51.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.236" endtime="20201030 10:59:51.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.230" endtime="20201030 10:59:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.228" endtime="20201030 10:59:51.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.729" endtime="20201030 10:59:51.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.728" endtime="20201030 10:59:51.262"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.285" endtime="20201030 10:59:51.308"></status>
</kw>
<msg timestamp="20201030 10:59:51.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.281" endtime="20201030 10:59:51.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.311" endtime="20201030 10:59:51.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.317" endtime="20201030 10:59:51.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.274" endtime="20201030 10:59:51.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.268" endtime="20201030 10:59:51.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.341" endtime="20201030 10:59:51.687"></status>
</kw>
<msg timestamp="20201030 10:59:51.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.338" endtime="20201030 10:59:51.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.696" endtime="20201030 10:59:51.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.715" endtime="20201030 10:59:51.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.330" endtime="20201030 10:59:51.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.326" endtime="20201030 10:59:51.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.733" level="INFO">${RESULT} = [{'diff': 9.888900000000478e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.893099999999655e-05}, {'diff': 9.829199999999982e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.823600000000154e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:51.724" endtime="20201030 10:59:51.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.748" level="INFO">${ACCURACY} = {'diff': [9.888900000000478e-05, 9.883299999999956e-05, 9.893099999999655e-05, 9.829199999999982e-05, 9.851400000000093e-05, 9.823600000000154e-05, 9.834800000000504e-05, 9.866599999999726e-05, 9.8458...</msg>
<status status="PASS" starttime="20201030 10:59:51.735" endtime="20201030 10:59:51.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.759" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.757" endtime="20201030 10:59:51.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.764" level="INFO">VALUE: [9.888900000000478e-05, 9.883299999999956e-05, 9.893099999999655e-05, 9.829199999999982e-05, 9.851400000000093e-05, 9.823600000000154e-05, 9.834800000000504e-05, 9.866599999999726e-05, 9.845800000000265e-05, 9.851400000000093e-05, 9.851400000000093e-05, 9.913900000000503e-05, 9.829199999999982e-05, 9.88609999999987e-05, 9.895899999999569e-05, 9.829199999999982e-05, 9.855500000000017e-05, 9.883299999999956e-05, 9.894400000000358e-05, 9.916599999999776e-05, 9.862499999999802e-05, 9.887500000000521e-05, 9.837500000000471e-05, 9.897200000000272e-05, 9.866700000000367e-05, 9.87359999999951e-05, 9.91809999999968e-05, 9.895899999999569e-05, 9.880500000000042e-05, 9.8513999999994e-05, 9.883399999999903e-05, 9.88609999999987e-05, 9.91939999999969e-05, 9.833299999999906e-05, 9.897200000000272e-05, 9.901400000000143e-05, 9.893099999999655e-05, 9.840299999999691e-05, 9.879100000000085e-05, 9.902700000000153e-05, 9.850000000000136e-05, 9.870799999999597e-05, 9.887499999999827e-05, 9.85280000000005e-05, 9.836100000000514e-05, 9.890299999999741e-05, 9.84730000000017e-05, 9.897299999999526e-05, 9.875000000000161e-05, 9.834699999999863e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.761" endtime="20201030 10:59:51.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.750" endtime="20201030 10:59:51.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.777" endtime="20201030 10:59:51.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.773" endtime="20201030 10:59:51.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.770" endtime="20201030 10:59:51.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.264" endtime="20201030 10:59:51.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.263" endtime="20201030 10:59:51.800"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.810" endtime="20201030 10:59:51.830"></status>
</kw>
<msg timestamp="20201030 10:59:51.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.809" endtime="20201030 10:59:51.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.831" endtime="20201030 10:59:51.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.834" endtime="20201030 10:59:51.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.805" endtime="20201030 10:59:51.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.803" endtime="20201030 10:59:51.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.846" endtime="20201030 10:59:52.178"></status>
</kw>
<msg timestamp="20201030 10:59:52.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:51.844" endtime="20201030 10:59:52.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:52.187" endtime="20201030 10:59:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.206" endtime="20201030 10:59:52.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.840" endtime="20201030 10:59:52.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.838" endtime="20201030 10:59:52.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.223" level="INFO">${RESULT} = [{'diff': 9.986100000000317e-05}, {'diff': 9.973699999999905e-05}, {'diff': 9.933399999999953e-05}, {'diff': 0.00010005599999999767}, {'diff': 9.950000000000236e-05}, {'diff': 9.99999999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:52.214" endtime="20201030 10:59:52.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.234" level="INFO">${ACCURACY} = {'diff': [9.986100000000317e-05, 9.973699999999905e-05, 9.933399999999953e-05, 0.00010005599999999767, 9.950000000000236e-05, 9.99999999999994e-05, 0.00010008299999999734, 9.980500000000142e-05, 0.000...</msg>
<status status="PASS" starttime="20201030 10:59:52.225" endtime="20201030 10:59:52.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.246" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.243" endtime="20201030 10:59:52.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.251" level="INFO">VALUE: [9.986100000000317e-05, 9.973699999999905e-05, 9.933399999999953e-05, 0.00010005599999999767, 9.950000000000236e-05, 9.99999999999994e-05, 0.00010008299999999734, 9.980500000000142e-05, 0.00010006900000000124, 0.00010011099999999995, 0.00010004200000000157, 9.993100000000102e-05, 9.945800000000019e-05, 9.927800000000125e-05, 0.00010008400000000028, 9.951299999999899e-05, 9.99869999999993e-05, 0.00010023600000000008, 0.00010017999999999833, 9.924999999999864e-05, 9.929200000000082e-05, 0.00010012499999999952, 9.95280000000015e-05, 9.983400000000003e-05, 9.925000000000211e-05, 9.998599999999983e-05, 9.995800000000069e-05, 9.970800000000044e-05, 9.976399999999871e-05, 9.991699999999798e-05, 9.965300000000163e-05, 9.95280000000015e-05, 9.981900000000099e-05, 9.99999999999994e-05, 9.972299999999948e-05, 9.979200000000132e-05, 0.0001000410000000021, 9.994500000000059e-05, 9.941600000000148e-05, 9.923599999999907e-05, 9.933300000000006e-05, 9.941700000000095e-05, 9.940300000000138e-05, 9.95280000000015e-05, 9.970800000000044e-05, 9.957000000000021e-05, 9.93060000000004e-05, 9.98609999999997e-05, 0.0001000410000000021, 9.96939999999974e-05]</msg>
<status status="PASS" starttime="20201030 10:59:52.248" endtime="20201030 10:59:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.236" endtime="20201030 10:59:52.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.264" endtime="20201030 10:59:52.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.259" endtime="20201030 10:59:52.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.257" endtime="20201030 10:59:52.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.801" endtime="20201030 10:59:52.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.800" endtime="20201030 10:59:52.289"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.312" endtime="20201030 10:59:52.335"></status>
</kw>
<msg timestamp="20201030 10:59:52.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.309" endtime="20201030 10:59:52.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.339" endtime="20201030 10:59:52.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.345" endtime="20201030 10:59:52.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.301" endtime="20201030 10:59:52.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.295" endtime="20201030 10:59:52.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.369" endtime="20201030 10:59:52.714"></status>
</kw>
<msg timestamp="20201030 10:59:52.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042207361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042307653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.366" endtime="20201030 10:59:52.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042207361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042307653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.724" endtime="20201030 10:59:52.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.742" endtime="20201030 10:59:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.358" endtime="20201030 10:59:52.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.353" endtime="20201030 10:59:52.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.760" level="INFO">${RESULT} = [{'diff': 0.00010029200000000182}, {'diff': 0.00010074999999999668}, {'diff': 0.00010070900000000438}, {'diff': 0.00010117999999999933}, {'diff': 0.00010092999999999908}, {'diff': 0.000101040999999996...</msg>
<status status="PASS" starttime="20201030 10:59:52.751" endtime="20201030 10:59:52.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.769" level="INFO">${ACCURACY} = {'diff': [0.00010029200000000182, 0.00010074999999999668, 0.00010070900000000438, 0.00010117999999999933, 0.00010092999999999908, 0.00010104099999999616, 0.00010070799999999797, 0.00010083300000000156...</msg>
<status status="PASS" starttime="20201030 10:59:52.762" endtime="20201030 10:59:52.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.780" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.778" endtime="20201030 10:59:52.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.785" level="INFO">VALUE: [0.00010029200000000182, 0.00010074999999999668, 0.00010070900000000438, 0.00010117999999999933, 0.00010092999999999908, 0.00010104099999999616, 0.00010070799999999797, 0.00010083300000000156, 0.00010113900000000009, 0.00010088899999999984, 0.0001008610000000007, 0.00010112500000000052, 0.0001011809999999988, 0.00010069500000000481, 0.00010066599999999926, 0.00010051400000000293, 0.0001010410000000031, 0.00010026400000000268, 0.000101028000000003, 0.00010049999999999643, 0.00010033300000000106, 0.00010084700000000113, 0.00010101400000000343, 0.0001003339999999936, 0.00010097199999999779, 0.00010038899999999934, 0.00010112500000000052, 0.00010058300000000131, 0.00010113900000000009, 0.00010097199999999779, 0.00010025000000000311, 0.00010118100000000574, 0.00010030599999999446, 0.00010023600000000354, 0.00010080599999999496, 0.00010055500000000217, 0.00010083299999999462, 0.00010120799999999847, 0.000100513999999996, 0.00010066699999999873, 0.0001008610000000007, 0.0001003060000000014, 0.00010115299999999966, 0.00010079199999999539, 0.00010113900000000009, 0.00010054200000000207, 0.00010094400000000558, 0.00010083400000000103, 0.00010041600000000594, 0.00010116599999999976]</msg>
<status status="PASS" starttime="20201030 10:59:52.782" endtime="20201030 10:59:52.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.771" endtime="20201030 10:59:52.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.798" endtime="20201030 10:59:52.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.793" endtime="20201030 10:59:52.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.791" endtime="20201030 10:59:52.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.291" endtime="20201030 10:59:52.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.290" endtime="20201030 10:59:52.823"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.847" endtime="20201030 10:59:52.871"></status>
</kw>
<msg timestamp="20201030 10:59:52.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.843" endtime="20201030 10:59:52.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.875" endtime="20201030 10:59:52.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.881" endtime="20201030 10:59:52.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.836" endtime="20201030 10:59:52.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.830" endtime="20201030 10:59:52.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.905" endtime="20201030 10:59:53.248"></status>
</kw>
<msg timestamp="20201030 10:59:53.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043797569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.902" endtime="20201030 10:59:53.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043797569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.257" endtime="20201030 10:59:53.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.276" endtime="20201030 10:59:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.894" endtime="20201030 10:59:53.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.890" endtime="20201030 10:59:53.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:53.293" level="INFO">${RESULT} = [{'diff': 0.00010188800000000137}, {'diff': 0.00010133299999999512}, {'diff': 0.00010127800000000325}, {'diff': 0.00010129200000000282}, {'diff': 0.00010177799999999682}, {'diff': 0.000101457999999998...</msg>
<status status="PASS" starttime="20201030 10:59:53.284" endtime="20201030 10:59:53.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:53.302" level="INFO">${ACCURACY} = {'diff': [0.00010188800000000137, 0.00010133299999999512, 0.00010127800000000325, 0.00010129200000000282, 0.00010177799999999682, 0.00010145799999999872, 0.00010169499999999887, 0.00010194500000000606...</msg>
<status status="PASS" starttime="20201030 10:59:53.295" endtime="20201030 10:59:53.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.313" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:59:53.311" endtime="20201030 10:59:53.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.319" level="INFO">VALUE: [0.00010188800000000137, 0.00010133299999999512, 0.00010127800000000325, 0.00010129200000000282, 0.00010177799999999682, 0.00010145799999999872, 0.00010169499999999887, 0.00010194500000000606, 0.00010190300000000041, 0.00010212499999999458, 0.0001019160000000005, 0.000101416, 0.0001020139999999975, 0.00010148699999999733, 0.00010144399999999915, 0.00010208299999999587, 0.00010204199999999664, 0.00010190300000000041, 0.00010198599999999836, 0.00010194399999999965, 0.000101416, 0.00010131900000000249, 0.00010161100000000145, 0.00010179100000000385, 0.00010176399999999725, 0.00010174999999999768, 0.0001016809999999993, 0.00010129199999999589, 0.00010198599999999836, 0.00010209699999999544, 0.0001019160000000005, 0.0001013060000000024, 0.00010208300000000281, 0.00010184700000000213, 0.00010158300000000231, 0.0001013060000000024, 0.00010140299999999991, 0.00010219499999999937, 0.00010143099999999905, 0.00010155600000000264, 0.00010211200000000142, 0.00010147199999999829, 0.00010162500000000102, 0.00010197199999999879, 0.00010161100000000145, 0.00010177800000000375, 0.00010209700000000238, 0.00010219499999999937, 0.00010154200000000307, 0.00010156999999999528]</msg>
<status status="PASS" starttime="20201030 10:59:53.315" endtime="20201030 10:59:53.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.304" endtime="20201030 10:59:53.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.333" endtime="20201030 10:59:53.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.327" endtime="20201030 10:59:53.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.324" endtime="20201030 10:59:53.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.825" endtime="20201030 10:59:53.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.824" endtime="20201030 10:59:53.358"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.381" endtime="20201030 10:59:53.404"></status>
</kw>
<msg timestamp="20201030 10:59:53.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.378" endtime="20201030 10:59:53.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.407" endtime="20201030 10:59:53.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.413" endtime="20201030 10:59:53.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.370" endtime="20201030 10:59:53.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.364" endtime="20201030 10:59:53.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.439" endtime="20201030 10:59:53.783"></status>
</kw>
<msg timestamp="20201030 10:59:53.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041791972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.435" endtime="20201030 10:59:53.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041791972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.793" endtime="20201030 10:59:53.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.811" endtime="20201030 10:59:53.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.427" endtime="20201030 10:59:53.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.422" endtime="20201030 10:59:53.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:53.829" level="INFO">${RESULT} = [{'diff': 0.00010231899999999655}, {'diff': 0.00010313900000000209}, {'diff': 0.00010272199999999954}, {'diff': 0.00010276400000000518}, {'diff': 0.00010283299999999662}, {'diff': 0.000102347000000002...</msg>
<status status="PASS" starttime="20201030 10:59:53.820" endtime="20201030 10:59:53.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:53.839" level="INFO">${ACCURACY} = {'diff': [0.00010231899999999655, 0.00010313900000000209, 0.00010272199999999954, 0.00010276400000000518, 0.00010283299999999662, 0.00010234700000000263, 0.00010237499999999483, 0.00010291700000000098...</msg>
<status status="PASS" starttime="20201030 10:59:53.831" endtime="20201030 10:59:53.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.850" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:59:53.848" endtime="20201030 10:59:53.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.856" level="INFO">VALUE: [0.00010231899999999655, 0.00010313900000000209, 0.00010272199999999954, 0.00010276400000000518, 0.00010283299999999662, 0.00010234700000000263, 0.00010237499999999483, 0.00010291700000000098, 0.00010262500000000202, 0.0001031940000000009, 0.00010299999999999893, 0.0001027359999999991, 0.00010241700000000048, 0.00010276399999999825, 0.00010304199999999764, 0.0001030139999999985, 0.0001025280000000045, 0.000102513999999998, 0.00010316600000000176, 0.00010256900000000374, 0.00010299999999999893, 0.00010302799999999807, 0.00010270799999999997, 0.0001023610000000022, 0.0001022359999999986, 0.00010244499999999962, 0.00010233400000000253, 0.00010265300000000116, 0.00010316700000000123, 0.00010266600000000126, 0.00010306900000000424, 0.00010283300000000356, 0.0001031940000000009, 0.00010283299999999662, 0.00010258300000000331, 0.00010259699999999594, 0.00010241700000000048, 0.0001023889999999944, 0.000102513999999998, 0.00010262500000000202, 0.00010230500000000392, 0.0001026940000000004, 0.0001027359999999991, 0.00010262499999999508, 0.00010255600000000364, 0.00010306999999999678, 0.00010236099999999526, 0.00010265300000000116, 0.0001022359999999986, 0.00010261199999999499]</msg>
<status status="PASS" starttime="20201030 10:59:53.853" endtime="20201030 10:59:53.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.841" endtime="20201030 10:59:53.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.869" endtime="20201030 10:59:53.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.864" endtime="20201030 10:59:53.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.862" endtime="20201030 10:59:53.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.360" endtime="20201030 10:59:53.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.359" endtime="20201030 10:59:53.894"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.918" endtime="20201030 10:59:53.941"></status>
</kw>
<msg timestamp="20201030 10:59:53.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.915" endtime="20201030 10:59:53.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.945" endtime="20201030 10:59:53.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.951" endtime="20201030 10:59:53.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.907" endtime="20201030 10:59:53.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.901" endtime="20201030 10:59:53.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.975" endtime="20201030 10:59:54.318"></status>
</kw>
<msg timestamp="20201030 10:59:54.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043273444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043377208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.972" endtime="20201030 10:59:54.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043273444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043377208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.328" endtime="20201030 10:59:54.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.346" endtime="20201030 10:59:54.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.964" endtime="20201030 10:59:54.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.959" endtime="20201030 10:59:54.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.364" level="INFO">${RESULT} = [{'diff': 0.00010376399999999925}, {'diff': 0.00010351400000000593}, {'diff': 0.00010420800000000147}, {'diff': 0.00010344399999999421}, {'diff': 0.0001035689999999978}, {'diff': 0.0001035700000000042...</msg>
<status status="PASS" starttime="20201030 10:59:54.355" endtime="20201030 10:59:54.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.375" level="INFO">${ACCURACY} = {'diff': [0.00010376399999999925, 0.00010351400000000593, 0.00010420800000000147, 0.00010344399999999421, 0.0001035689999999978, 0.00010357000000000421, 0.00010397300000000026, 0.00010355600000000464,...</msg>
<status status="PASS" starttime="20201030 10:59:54.366" endtime="20201030 10:59:54.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.386" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.383" endtime="20201030 10:59:54.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.391" level="INFO">VALUE: [0.00010376399999999925, 0.00010351400000000593, 0.00010420800000000147, 0.00010344399999999421, 0.0001035689999999978, 0.00010357000000000421, 0.00010397300000000026, 0.00010355600000000464, 0.00010329199999999789, 0.00010324999999999918, 0.00010329099999999841, 0.00010415199999999625, 0.00010374999999999968, 0.00010333300000000406, 0.00010372200000000054, 0.00010340299999999497, 0.00010352799999999857, 0.00010366700000000173, 0.00010358300000000431, 0.00010409699999999744, 0.00010369399999999446, 0.00010351400000000593, 0.00010368000000000183, 0.00010345800000000072, 0.00010324999999999918, 0.0001040689999999983, 0.00010391700000000198, 0.00010376399999999925, 0.00010380599999999796, 0.00010404199999999864, 0.00010337500000000277, 0.00010412500000000352, 0.00010365300000000216, 0.00010376399999999925, 0.00010381899999999805, 0.00010349999999999943, 0.0001032359999999996, 0.00010349999999999943, 0.00010366699999999479, 0.0001040139999999995, 0.0001036940000000014, 0.0001038610000000037, 0.0001038610000000037, 0.0001033060000000044, 0.00010394400000000165, 0.00010412499999999658, 0.00010355600000000464, 0.00010390300000000241, 0.0001038610000000037, 0.00010366699999999479]</msg>
<status status="PASS" starttime="20201030 10:59:54.388" endtime="20201030 10:59:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.377" endtime="20201030 10:59:54.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.404" endtime="20201030 10:59:54.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.400" endtime="20201030 10:59:54.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.397" endtime="20201030 10:59:54.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.897" endtime="20201030 10:59:54.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.895" endtime="20201030 10:59:54.429"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.453" endtime="20201030 10:59:54.476"></status>
</kw>
<msg timestamp="20201030 10:59:54.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.449" endtime="20201030 10:59:54.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.480" endtime="20201030 10:59:54.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.487" endtime="20201030 10:59:54.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.442" endtime="20201030 10:59:54.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.436" endtime="20201030 10:59:54.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.510" endtime="20201030 10:59:54.852"></status>
</kw>
<msg timestamp="20201030 10:59:54.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0429245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043029333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:54.507" endtime="20201030 10:59:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0429245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043029333, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:54.861" endtime="20201030 10:59:54.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.880" endtime="20201030 10:59:54.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.500" endtime="20201030 10:59:54.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.495" endtime="20201030 10:59:54.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.897" level="INFO">${RESULT} = [{'diff': 0.00010483300000000556}, {'diff': 0.00010465299999999622}, {'diff': 0.0001046810000000023}, {'diff': 0.00010487500000000427}, {'diff': 0.00010493099999999561}, {'diff': 0.0001046810000000023...</msg>
<status status="PASS" starttime="20201030 10:59:54.888" endtime="20201030 10:59:54.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.906" level="INFO">${ACCURACY} = {'diff': [0.00010483300000000556, 0.00010465299999999622, 0.0001046810000000023, 0.00010487500000000427, 0.00010493099999999561, 0.0001046810000000023, 0.00010502800000000007, 0.00010437499999999683, ...</msg>
<status status="PASS" starttime="20201030 10:59:54.899" endtime="20201030 10:59:54.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.917" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.915" endtime="20201030 10:59:54.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.923" level="INFO">VALUE: [0.00010483300000000556, 0.00010465299999999622, 0.0001046810000000023, 0.00010487500000000427, 0.00010493099999999561, 0.0001046810000000023, 0.00010502800000000007, 0.00010437499999999683, 0.00010515200000000419, 0.00010452700000000009, 0.00010462499999999708, 0.0001045280000000065, 0.00010504199999999964, 0.00010472200000000154, 0.00010470800000000197, 0.00010490299999999647, 0.00010509800000000485, 0.00010443100000000205, 0.00010423700000000008, 0.00010499999999999399, 0.00010458299999999837, 0.00010475000000000068, 0.00010437500000000377, 0.00010427799999999932, 0.00010429099999999941, 0.00010477799999999982, 0.00010482000000000546, 0.00010445900000000119, 0.00010472200000000154, 0.00010500000000000093, 0.00010441599999999607, 0.00010476400000000025, 0.0001045280000000065, 0.00010472200000000154, 0.00010481999999999853, 0.00010483400000000503, 0.00010445900000000119, 0.00010462500000000402, 0.00010452799999999957, 0.00010437499999999683, 0.00010427799999999932, 0.00010481899999999905, 0.00010483299999999862, 0.00010494400000000265, 0.00010469500000000187, 0.00010434699999999769, 0.00010487500000000427, 0.00010495900000000169, 0.00010512499999999758, 0.00010500000000000093]</msg>
<status status="PASS" starttime="20201030 10:59:54.920" endtime="20201030 10:59:54.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.908" endtime="20201030 10:59:54.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.936" endtime="20201030 10:59:54.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.931" endtime="20201030 10:59:54.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.929" endtime="20201030 10:59:54.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.431" endtime="20201030 10:59:54.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.430" endtime="20201030 10:59:54.961"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.984" endtime="20201030 10:59:55.009"></status>
</kw>
<msg timestamp="20201030 10:59:55.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.980" endtime="20201030 10:59:55.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.012" endtime="20201030 10:59:55.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.019" endtime="20201030 10:59:55.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.973" endtime="20201030 10:59:55.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.967" endtime="20201030 10:59:55.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.043" endtime="20201030 10:59:55.361"></status>
</kw>
<msg timestamp="20201030 10:59:55.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04366025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:55.039" endtime="20201030 10:59:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04366025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:55.371" endtime="20201030 10:59:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.389" endtime="20201030 10:59:55.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.032" endtime="20201030 10:59:55.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.027" endtime="20201030 10:59:55.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.407" level="INFO">${RESULT} = [{'diff': 0.00010598599999999542}, {'diff': 0.00010537499999999783}, {'diff': 0.00010604200000000064}, {'diff': 0.00010599999999999499}, {'diff': 0.00010545800000000272}, {'diff': 0.000105542000000000...</msg>
<status status="PASS" starttime="20201030 10:59:55.398" endtime="20201030 10:59:55.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.416" level="INFO">${ACCURACY} = {'diff': [0.00010598599999999542, 0.00010537499999999783, 0.00010604200000000064, 0.00010599999999999499, 0.00010545800000000272, 0.00010554200000000014, 0.0001060690000000003, 0.00010597199999999585,...</msg>
<status status="PASS" starttime="20201030 10:59:55.409" endtime="20201030 10:59:55.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.427" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.425" endtime="20201030 10:59:55.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.432" level="INFO">VALUE: [0.00010598599999999542, 0.00010537499999999783, 0.00010604200000000064, 0.00010599999999999499, 0.00010545800000000272, 0.00010554200000000014, 0.0001060690000000003, 0.00010597199999999585, 0.00010563899999999765, 0.00010565300000000416, 0.00010583299999999962, 0.00010538900000000434, 0.00010569499999999593, 0.00010609799999999892, 0.0001053339999999986, 0.00010526300000000127, 0.00010565199999999775, 0.00010543000000000358, 0.00010584699999999919, 0.00010533299999999912, 0.00010604200000000064, 0.00010520799999999553, 0.00010529199999999989, 0.00010612499999999858, 0.00010548599999999492, 0.00010569399999999646, 0.00010545800000000272, 0.00010533299999999912, 0.00010530499999999998, 0.00010531899999999955, 0.0001060560000000002, 0.00010595800000000322, 0.00010541700000000348, 0.0001052360000000016, 0.00010604200000000064, 0.00010524999999999424, 0.00010562500000000502, 0.00010555500000000023, 0.00010613899999999815, 0.0001057219999999956, 0.00010620799999999653, 0.0001060690000000003, 0.00010559699999999894, 0.00010550000000000143, 0.000105514000000001, 0.0001055689999999998, 0.00010616599999999782, 0.00010590300000000441, 0.00010527700000000084, 0.00010604100000000116]</msg>
<status status="PASS" starttime="20201030 10:59:55.429" endtime="20201030 10:59:55.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.418" endtime="20201030 10:59:55.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.447" endtime="20201030 10:59:55.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.441" endtime="20201030 10:59:55.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.438" endtime="20201030 10:59:55.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.963" endtime="20201030 10:59:55.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.962" endtime="20201030 10:59:55.472"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.496" endtime="20201030 10:59:55.520"></status>
</kw>
<msg timestamp="20201030 10:59:55.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.492" endtime="20201030 10:59:55.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.523" endtime="20201030 10:59:55.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.530" endtime="20201030 10:59:55.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.485" endtime="20201030 10:59:55.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.479" endtime="20201030 10:59:55.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.553" endtime="20201030 10:59:55.897"></status>
</kw>
<msg timestamp="20201030 10:59:55.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042868889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.550" endtime="20201030 10:59:55.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042868889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.906" endtime="20201030 10:59:55.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.924" endtime="20201030 10:59:55.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.543" endtime="20201030 10:59:55.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.538" endtime="20201030 10:59:55.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.942" level="INFO">${RESULT} = [{'diff': 0.00010675000000000268}, {'diff': 0.000106514000000002}, {'diff': 0.00010684700000000019}, {'diff': 0.00010634699999999969}, {'diff': 0.00010627800000000132}, {'diff': 0.0001063889999999984}...</msg>
<status status="PASS" starttime="20201030 10:59:55.933" endtime="20201030 10:59:55.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.952" level="INFO">${ACCURACY} = {'diff': [0.00010675000000000268, 0.000106514000000002, 0.00010684700000000019, 0.00010634699999999969, 0.00010627800000000132, 0.0001063889999999984, 0.00010692999999999814, 0.00010629100000000141, 0...</msg>
<status status="PASS" starttime="20201030 10:59:55.944" endtime="20201030 10:59:55.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.963" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.961" endtime="20201030 10:59:55.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.969" level="INFO">VALUE: [0.00010675000000000268, 0.000106514000000002, 0.00010684700000000019, 0.00010634699999999969, 0.00010627800000000132, 0.0001063889999999984, 0.00010692999999999814, 0.00010629100000000141, 0.00010708300000000087, 0.00010645799999999678, 0.00010694499999999718, 0.00010686099999999976, 0.00010658399999999985, 0.00010649999999999549, 0.00010666599999999832, 0.0001067360000000031, 0.00010688799999999943, 0.00010650000000000243, 0.00010666599999999832, 0.00010666699999999779, 0.00010716699999999829, 0.00010698600000000336, 0.00010624999999999524, 0.00010640300000000491, 0.00010675000000000268, 0.00010674999999999574, 0.00010665199999999875, 0.0001065690000000008, 0.00010675000000000268, 0.00010663900000000559, 0.00010644399999999721, 0.00010644499999999668, 0.00010665300000000516, 0.00010674999999999574, 0.00010668000000000483, 0.00010686099999999976, 0.00010659699999999994, 0.00010648599999999592, 0.00010680600000000096, 0.00010658300000000037, 0.0001065560000000007, 0.00010695900000000369, 0.00010666700000000473, 0.00010668099999999736, 0.0001067219999999966, 0.00010670800000000397, 0.00010652700000000209, 0.00010708300000000087, 0.00010640300000000491, 0.00010631900000000055]</msg>
<status status="PASS" starttime="20201030 10:59:55.966" endtime="20201030 10:59:55.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.954" endtime="20201030 10:59:55.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.990" endtime="20201030 10:59:56.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.986" endtime="20201030 10:59:56.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.983" endtime="20201030 10:59:56.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.474" endtime="20201030 10:59:56.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.473" endtime="20201030 10:59:56.015"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.038" endtime="20201030 10:59:56.062"></status>
</kw>
<msg timestamp="20201030 10:59:56.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.035" endtime="20201030 10:59:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.066" endtime="20201030 10:59:56.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.072" endtime="20201030 10:59:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.028" endtime="20201030 10:59:56.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.022" endtime="20201030 10:59:56.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.096" endtime="20201030 10:59:56.437"></status>
</kw>
<msg timestamp="20201030 10:59:56.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042059153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.093" endtime="20201030 10:59:56.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042059153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.446" endtime="20201030 10:59:56.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.465" endtime="20201030 10:59:56.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.086" endtime="20201030 10:59:56.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.081" endtime="20201030 10:59:56.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:56.482" level="INFO">${RESULT} = [{'diff': 0.00010733300000000112}, {'diff': 0.00010801399999999656}, {'diff': 0.00010819499999999843}, {'diff': 0.00010791699999999904}, {'diff': 0.0001077089999999975}, {'diff': 0.0001080560000000022...</msg>
<status status="PASS" starttime="20201030 10:59:56.473" endtime="20201030 10:59:56.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:56.493" level="INFO">${ACCURACY} = {'diff': [0.00010733300000000112, 0.00010801399999999656, 0.00010819499999999843, 0.00010791699999999904, 0.0001077089999999975, 0.0001080560000000022, 0.00010727700000000284, 0.00010787500000000033, ...</msg>
<status status="PASS" starttime="20201030 10:59:56.484" endtime="20201030 10:59:56.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.504" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:59:56.502" endtime="20201030 10:59:56.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.510" level="INFO">VALUE: [0.00010733300000000112, 0.00010801399999999656, 0.00010819499999999843, 0.00010791699999999904, 0.0001077089999999975, 0.0001080560000000022, 0.00010727700000000284, 0.00010787500000000033, 0.00010805500000000273, 0.00010791599999999957, 0.00010782000000000153, 0.00010809700000000144, 0.0001080419999999957, 0.0001077089999999975, 0.00010745800000000472, 0.00010816699999999929, 0.00010720900000000394, 0.00010726299999999633, 0.0001072360000000036, 0.00010750000000000343, 0.0001080969999999945, 0.00010775000000000368, 0.00010730600000000146, 0.00010733300000000112, 0.00010743099999999811, 0.00010779200000000239, 0.00010806999999999484, 0.00010729199999999495, 0.00010745799999999778, 0.00010762500000000008, 0.0001080969999999945, 0.00010766700000000573, 0.00010793099999999861, 0.0001075419999999952, 0.00010754200000000214, 0.00010768099999999836, 0.00010752799999999563, 0.0001072769999999959, 0.00010762500000000008, 0.00010804100000000316, 0.00010724999999999624, 0.0001075560000000017, 0.00010791699999999904, 0.00010774999999999674, 0.00010770900000000444, 0.00010808400000000135, 0.00010740299999999897, 0.00010757000000000128, 0.00010808300000000187, 0.00010745799999999778]</msg>
<status status="PASS" starttime="20201030 10:59:56.507" endtime="20201030 10:59:56.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.495" endtime="20201030 10:59:56.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:56.523" endtime="20201030 10:59:56.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.518" endtime="20201030 10:59:56.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.515" endtime="20201030 10:59:56.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.017" endtime="20201030 10:59:56.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.016" endtime="20201030 10:59:56.549"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.572" endtime="20201030 10:59:56.595"></status>
</kw>
<msg timestamp="20201030 10:59:56.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.569" endtime="20201030 10:59:56.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.599" endtime="20201030 10:59:56.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.605" endtime="20201030 10:59:56.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.561" endtime="20201030 10:59:56.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.555" endtime="20201030 10:59:56.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.629" endtime="20201030 10:59:56.978"></status>
</kw>
<msg timestamp="20201030 10:59:56.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042640319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.625" endtime="20201030 10:59:56.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042640319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.988" endtime="20201030 10:59:57.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.006" endtime="20201030 10:59:57.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.618" endtime="20201030 10:59:57.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.613" endtime="20201030 10:59:57.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.024" level="INFO">${RESULT} = [{'diff': 0.00010877799999999688}, {'diff': 0.00010869399999999946}, {'diff': 0.0001088890000000009}, {'diff': 0.00010873599999999817}, {'diff': 0.00010858400000000185}, {'diff': 0.0001084160000000000...</msg>
<status status="PASS" starttime="20201030 10:59:57.015" endtime="20201030 10:59:57.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.033" level="INFO">${ACCURACY} = {'diff': [0.00010877799999999688, 0.00010869399999999946, 0.0001088890000000009, 0.00010873599999999817, 0.00010858400000000185, 0.00010841600000000007, 0.00010902799999999713, 0.00010851399999999706,...</msg>
<status status="PASS" starttime="20201030 10:59:57.026" endtime="20201030 10:59:57.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.044" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.041" endtime="20201030 10:59:57.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.049" level="INFO">VALUE: [0.00010877799999999688, 0.00010869399999999946, 0.0001088890000000009, 0.00010873599999999817, 0.00010858400000000185, 0.00010841600000000007, 0.00010902799999999713, 0.00010851399999999706, 0.00010830599999999552, 0.00010915200000000125, 0.00010912500000000158, 0.0001090690000000033, 0.00010915300000000072, 0.0001088890000000009, 0.00010837499999999389, 0.00010887499999999439, 0.00010877799999999688, 0.00010873599999999817, 0.00010870799999999903, 0.00010847199999999835, 0.00010884700000000219, 0.00010848599999999792, 0.00010879200000000339, 0.00010849999999999749, 0.00010829199999999595, 0.00010838800000000093, 0.0001087219999999986, 0.00010883299999999568, 0.00010890300000000047, 0.00010874999999999774, 0.00010824999999999724, 0.00010845799999999878, 0.00010886100000000176, 0.00010891700000000004, 0.00010899999999999799, 0.00010829200000000289, 0.00010869399999999946, 0.00010918000000000039, 0.00010893000000000014, 0.0001087219999999986, 0.00010866699999999979, 0.00010837500000000083, 0.00010826400000000375, 0.00010907000000000278, 0.00010852699999999715, 0.00010887499999999439, 0.00010826400000000375, 0.00010848600000000486, 0.00010824999999999724, 0.00010904099999999722]</msg>
<status status="PASS" starttime="20201030 10:59:57.046" endtime="20201030 10:59:57.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.034" endtime="20201030 10:59:57.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.062" endtime="20201030 10:59:57.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.058" endtime="20201030 10:59:57.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.055" endtime="20201030 10:59:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.551" endtime="20201030 10:59:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.550" endtime="20201030 10:59:57.087"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.110" endtime="20201030 10:59:57.135"></status>
</kw>
<msg timestamp="20201030 10:59:57.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.107" endtime="20201030 10:59:57.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.139" endtime="20201030 10:59:57.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.145" endtime="20201030 10:59:57.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.099" endtime="20201030 10:59:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.093" endtime="20201030 10:59:57.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.169" endtime="20201030 10:59:57.511"></status>
</kw>
<msg timestamp="20201030 10:59:57.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043825458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.165" endtime="20201030 10:59:57.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043825458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.521" endtime="20201030 10:59:57.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.539" endtime="20201030 10:59:57.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.158" endtime="20201030 10:59:57.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.153" endtime="20201030 10:59:57.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.557" level="INFO">${RESULT} = [{'diff': 0.00010977800000000482}, {'diff': 0.00010983300000000362}, {'diff': 0.00010927799999999738}, {'diff': 0.00011009799999999598}, {'diff': 0.00010947299999999882}, {'diff': 0.000109945000000000...</msg>
<status status="PASS" starttime="20201030 10:59:57.548" endtime="20201030 10:59:57.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.567" level="INFO">${ACCURACY} = {'diff': [0.00010977800000000482, 0.00010983300000000362, 0.00010927799999999738, 0.00011009799999999598, 0.00010947299999999882, 0.00010994500000000018, 0.00010923599999999867, 0.00010987499999999539...</msg>
<status status="PASS" starttime="20201030 10:59:57.559" endtime="20201030 10:59:57.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.578" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.576" endtime="20201030 10:59:57.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.584" level="INFO">VALUE: [0.00010977800000000482, 0.00010983300000000362, 0.00010927799999999738, 0.00011009799999999598, 0.00010947299999999882, 0.00010994500000000018, 0.00010923599999999867, 0.00010987499999999539, 0.00010979099999999797, 0.00010944400000000021, 0.00010933299999999618, 0.00010963800000000218, 0.00010966699999999385, 0.00010956999999999634, 0.00011013900000000215, 0.00010945899999999925, 0.00010991599999999463, 0.00010986099999999582, 0.00010983300000000362, 0.00010958299999999643, 0.0001102220000000001, 0.0001100560000000042, 0.00010937499999999489, 0.00010933399999999566, 0.00010969400000000046, 0.00011015299999999478, 0.00010965200000000175, 0.00011004099999999822, 0.00010970800000000003, 0.00010979200000000439, 0.00010926400000000475, 0.00011016700000000129, 0.00010972299999999907, 0.00010949999999999849, 0.0001097219999999996, 0.00011000000000000593, 0.00010993000000000114, 0.00010991600000000157, 0.00010948599999999892, 0.00010987500000000233, 0.00011011100000000301, 0.00010945799999999978, 0.0001095419999999972, 0.00010962500000000208, 0.00010988800000000243, 0.00010937500000000183, 0.00011004099999999822, 0.00010933299999999618, 0.00010949999999999849, 0.00010997199999999985]</msg>
<status status="PASS" starttime="20201030 10:59:57.581" endtime="20201030 10:59:57.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.569" endtime="20201030 10:59:57.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.598" endtime="20201030 10:59:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.592" endtime="20201030 10:59:57.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.590" endtime="20201030 10:59:57.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.089" endtime="20201030 10:59:57.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.088" endtime="20201030 10:59:57.624"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.647" endtime="20201030 10:59:57.672"></status>
</kw>
<msg timestamp="20201030 10:59:57.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.644" endtime="20201030 10:59:57.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.676" endtime="20201030 10:59:57.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.682" endtime="20201030 10:59:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.636" endtime="20201030 10:59:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.630" endtime="20201030 10:59:57.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.706" endtime="20201030 10:59:58.049"></status>
</kw>
<msg timestamp="20201030 10:59:58.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042727903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.702" endtime="20201030 10:59:58.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042727903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.058" endtime="20201030 10:59:58.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.077" endtime="20201030 10:59:58.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.695" endtime="20201030 10:59:58.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.690" endtime="20201030 10:59:58.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:58.094" level="INFO">${RESULT} = [{'diff': 0.00011023599999999967}, {'diff': 0.00011104200000000564}, {'diff': 0.00011031899999999761}, {'diff': 0.00011047299999999982}, {'diff': 0.00011036100000000326}, {'diff': 0.000110944000000001...</msg>
<status status="PASS" starttime="20201030 10:59:58.085" endtime="20201030 10:59:58.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:58.104" level="INFO">${ACCURACY} = {'diff': [0.00011023599999999967, 0.00011104200000000564, 0.00011031899999999761, 0.00011047299999999982, 0.00011036100000000326, 0.00011094400000000171, 0.00011074999999999974, 0.00011101399999999956...</msg>
<status status="PASS" starttime="20201030 10:59:58.096" endtime="20201030 10:59:58.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.116" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:59:58.113" endtime="20201030 10:59:58.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.121" level="INFO">VALUE: [0.00011023599999999967, 0.00011104200000000564, 0.00011031899999999761, 0.00011047299999999982, 0.00011036100000000326, 0.00011094400000000171, 0.00011074999999999974, 0.00011101399999999956, 0.00011073600000000017, 0.00011098600000000042, 0.00011099999999999999, 0.00011069400000000146, 0.00011083399999999716, 0.00011082000000000453, 0.00011062500000000308, 0.00011049999999999949, 0.00011097200000000085, 0.0001110969999999975, 0.0001109169999999951, 0.00011044500000000068, 0.00011027800000000532, 0.00011104200000000564, 0.000110596999999997, 0.00011034699999999675, 0.00011044400000000121, 0.00011112499999999664, 0.00011058300000000437, 0.00011062500000000308, 0.0001102220000000001, 0.00011079200000000539, 0.00011094400000000171, 0.00011066600000000232, 0.00011106899999999836, 0.0001102220000000001, 0.00011099999999999999, 0.00011083299999999768, 0.00011066699999999485, 0.00011029199999999795, 0.00011118100000000186, 0.00011077799999999888, 0.00011115299999999578, 0.00011026399999999881, 0.00011077800000000582, 0.00011095799999999434, 0.00011073600000000017, 0.00011094400000000171, 0.00011099999999999999, 0.0001103890000000024, 0.00011074999999999974, 0.00011116700000000229]</msg>
<status status="PASS" starttime="20201030 10:59:58.118" endtime="20201030 10:59:58.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.106" endtime="20201030 10:59:58.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:58.134" endtime="20201030 10:59:58.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.129" endtime="20201030 10:59:58.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.127" endtime="20201030 10:59:58.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.626" endtime="20201030 10:59:58.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.625" endtime="20201030 10:59:58.159"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.182" endtime="20201030 10:59:58.206"></status>
</kw>
<msg timestamp="20201030 10:59:58.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.179" endtime="20201030 10:59:58.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.210" endtime="20201030 10:59:58.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.216" endtime="20201030 10:59:58.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.171" endtime="20201030 10:59:58.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.165" endtime="20201030 10:59:58.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.240" endtime="20201030 10:59:58.564"></status>
</kw>
<msg timestamp="20201030 10:59:58.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042061583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.236" endtime="20201030 10:59:58.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042061583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.568" endtime="20201030 10:59:58.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.577" endtime="20201030 10:59:58.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.229" endtime="20201030 10:59:58.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.224" endtime="20201030 10:59:58.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:58.591" level="INFO">${RESULT} = [{'diff': 0.00011177799999999988}, {'diff': 0.00011216700000000329}, {'diff': 0.00011206999999999884}, {'diff': 0.00011218099999999592}, {'diff': 0.00011168099999999542}, {'diff': 0.000111846999999998...</msg>
<status status="PASS" starttime="20201030 10:59:58.582" endtime="20201030 10:59:58.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:58.603" level="INFO">${ACCURACY} = {'diff': [0.00011177799999999988, 0.00011216700000000329, 0.00011206999999999884, 0.00011218099999999592, 0.00011168099999999542, 0.00011184699999999825, 0.00011211100000000501, 0.00011194400000000271...</msg>
<status status="PASS" starttime="20201030 10:59:58.594" endtime="20201030 10:59:58.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.615" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:59:58.612" endtime="20201030 10:59:58.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.620" level="INFO">VALUE: [0.00011177799999999988, 0.00011216700000000329, 0.00011206999999999884, 0.00011218099999999592, 0.00011168099999999542, 0.00011184699999999825, 0.00011211100000000501, 0.00011194400000000271, 0.00011183399999999816, 0.00011191700000000304, 0.00011202800000000013, 0.00011129199999999895, 0.00011140300000000297, 0.00011152799999999963, 0.00011213799999999774, 0.00011201400000000056, 0.00011147200000000135, 0.00011137500000000383, 0.00011211099999999807, 0.00011151400000000006, 0.00011200000000000099, 0.00011186099999999782, 0.00011152799999999963, 0.00011208399999999841, 0.00011152799999999963, 0.00011165200000000375, 0.00011216599999999688, 0.00011125000000000024, 0.00011220800000000253, 0.00011181899999999911, 0.00011162500000000408, 0.00011226400000000081, 0.000112209000000002, 0.00011218000000000339, 0.00011195799999999534, 0.00011187499999999739, 0.00011150000000000049, 0.00011170800000000203, 0.00011134700000000469, 0.00011156999999999834, 0.00011180599999999902, 0.00011125000000000024, 0.00011125000000000024, 0.00011186099999999782, 0.00011129199999999895, 0.00011151400000000006, 0.00011191700000000304, 0.00011187500000000433, 0.00011170799999999509, 0.000112209000000002]</msg>
<status status="PASS" starttime="20201030 10:59:58.617" endtime="20201030 10:59:58.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.605" endtime="20201030 10:59:58.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:58.634" endtime="20201030 10:59:58.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.629" endtime="20201030 10:59:58.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.626" endtime="20201030 10:59:58.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.161" endtime="20201030 10:59:58.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.160" endtime="20201030 10:59:58.659"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.682" endtime="20201030 10:59:58.705"></status>
</kw>
<msg timestamp="20201030 10:59:58.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.679" endtime="20201030 10:59:58.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.709" endtime="20201030 10:59:58.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.715" endtime="20201030 10:59:58.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.671" endtime="20201030 10:59:58.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.665" endtime="20201030 10:59:58.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.739" endtime="20201030 10:59:59.081"></status>
</kw>
<msg timestamp="20201030 10:59:59.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042040042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042152875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.736" endtime="20201030 10:59:59.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042040042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042152875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.091" endtime="20201030 10:59:59.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.109" endtime="20201030 10:59:59.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.729" endtime="20201030 10:59:59.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.724" endtime="20201030 10:59:59.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:59.127" level="INFO">${RESULT} = [{'diff': 0.00011283299999999968}, {'diff': 0.00011226400000000081}, {'diff': 0.00011288899999999796}, {'diff': 0.00011269499999999599}, {'diff': 0.00011245899999999531}, {'diff': 0.000112987000000001...</msg>
<status status="PASS" starttime="20201030 10:59:59.118" endtime="20201030 10:59:59.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:59.136" level="INFO">${ACCURACY} = {'diff': [0.00011283299999999968, 0.00011226400000000081, 0.00011288899999999796, 0.00011269499999999599, 0.00011245899999999531, 0.00011298700000000189, 0.00011276400000000131, 0.0001129299999999972,...</msg>
<status status="PASS" starttime="20201030 10:59:59.129" endtime="20201030 10:59:59.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.147" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:59:59.145" endtime="20201030 10:59:59.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.153" level="INFO">VALUE: [0.00011283299999999968, 0.00011226400000000081, 0.00011288899999999796, 0.00011269499999999599, 0.00011245899999999531, 0.00011298700000000189, 0.00011276400000000131, 0.0001129299999999972, 0.00011277800000000088, 0.0001129169999999971, 0.00011295799999999634, 0.00011244399999999627, 0.00011286099999999882, 0.00011233399999999866, 0.00011317999999999745, 0.0001128749999999984, 0.00011265300000000422, 0.00011229100000000047, 0.00011266700000000379, 0.00011244399999999627, 0.00011231999999999909, 0.00011255599999999977, 0.00011275000000000174, 0.00011313899999999821, 0.00011238799999999799, 0.00011318000000000439, 0.00011279200000000045, 0.0001124169999999966, 0.00011306999999999984, 0.00011245800000000278, 0.00011225000000000124, 0.0001130420000000007, 0.00011272199999999566, 0.00011261100000000551, 0.0001127499999999948, 0.00011258299999999943, 0.00011323600000000267, 0.00011316600000000482, 0.00011281900000000011, 0.00011298599999999548, 0.00011275000000000174, 0.0001124299999999967, 0.00011233299999999918, 0.00011277800000000088, 0.00011320800000000353, 0.00011262499999999814, 0.00011312499999999864, 0.00011294399999999677, 0.00011295799999999634, 0.00011248600000000192]</msg>
<status status="PASS" starttime="20201030 10:59:59.150" endtime="20201030 10:59:59.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.138" endtime="20201030 10:59:59.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:59.165" endtime="20201030 10:59:59.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.161" endtime="20201030 10:59:59.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.158" endtime="20201030 10:59:59.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.661" endtime="20201030 10:59:59.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.660" endtime="20201030 10:59:59.191"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.214" endtime="20201030 10:59:59.239"></status>
</kw>
<msg timestamp="20201030 10:59:59.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.210" endtime="20201030 10:59:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.242" endtime="20201030 10:59:59.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.249" endtime="20201030 10:59:59.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.203" endtime="20201030 10:59:59.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.197" endtime="20201030 10:59:59.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.272" endtime="20201030 10:59:59.614"></status>
</kw>
<msg timestamp="20201030 10:59:59.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043684944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.269" endtime="20201030 10:59:59.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043684944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.624" endtime="20201030 10:59:59.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.646" endtime="20201030 10:59:59.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.262" endtime="20201030 10:59:59.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.257" endtime="20201030 10:59:59.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:59.665" level="INFO">${RESULT} = [{'diff': 0.00011381999999999365}, {'diff': 0.00011419499999999749}, {'diff': 0.00011386100000000676}, {'diff': 0.0001140420000000017}, {'diff': 0.00011340199999999856}, {'diff': 0.0001132910000000014...</msg>
<status status="PASS" starttime="20201030 10:59:59.656" endtime="20201030 10:59:59.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:59.675" level="INFO">${ACCURACY} = {'diff': [0.00011381999999999365, 0.00011419499999999749, 0.00011386100000000676, 0.0001140420000000017, 0.00011340199999999856, 0.00011329100000000147, 0.000113597, 0.0001139169999999981, 0.000113958...</msg>
<status status="PASS" starttime="20201030 10:59:59.668" endtime="20201030 10:59:59.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.687" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:59:59.684" endtime="20201030 10:59:59.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.692" level="INFO">VALUE: [0.00011381999999999365, 0.00011419499999999749, 0.00011386100000000676, 0.0001140420000000017, 0.00011340199999999856, 0.00011329100000000147, 0.000113597, 0.0001139169999999981, 0.00011395800000000428, 0.00011337500000000583, 0.00011347299999999588, 0.0001139169999999981, 0.00011344500000000368, 0.00011355600000000077, 0.00011330600000000052, 0.00011354100000000172, 0.0001138749999999994, 0.00011377800000000188, 0.0001139169999999981, 0.00011390299999999853, 0.0001138749999999994, 0.0001133749999999989, 0.00011373600000000317, 0.00011412499999999964, 0.00011366699999999785, 0.00011358300000000043, 0.0001140550000000018, 0.00011349999999999555, 0.00011376400000000231, 0.00011388899999999896, 0.00011383400000000016, 0.00011338799999999899, 0.00011395800000000428, 0.00011411100000000007, 0.00011354099999999478, 0.00011418099999999792, 0.00011384700000000025, 0.00011411100000000007, 0.00011352800000000163, 0.00011347199999999641, 0.0001139299999999982, 0.00011407000000000084, 0.0001138749999999994, 0.00011344400000000421, 0.00011408300000000093, 0.00011357000000000034, 0.00011350000000000249, 0.00011400000000000299, 0.00011325000000000224, 0.00011383400000000016]</msg>
<status status="PASS" starttime="20201030 10:59:59.689" endtime="20201030 10:59:59.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.677" endtime="20201030 10:59:59.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:59.707" endtime="20201030 10:59:59.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.701" endtime="20201030 10:59:59.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.699" endtime="20201030 10:59:59.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.193" endtime="20201030 10:59:59.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.192" endtime="20201030 10:59:59.733"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.758" endtime="20201030 10:59:59.783"></status>
</kw>
<msg timestamp="20201030 10:59:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.754" endtime="20201030 10:59:59.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.786" endtime="20201030 10:59:59.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.793" endtime="20201030 10:59:59.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.746" endtime="20201030 10:59:59.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.740" endtime="20201030 10:59:59.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.818" endtime="20201030 11:00:00.181"></status>
</kw>
<msg timestamp="20201030 11:00:00.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043943653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044057861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.814" endtime="20201030 11:00:00.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043943653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044057861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.191" endtime="20201030 11:00:00.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.210" endtime="20201030 11:00:00.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.807" endtime="20201030 11:00:00.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.801" endtime="20201030 11:00:00.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.229" level="INFO">${RESULT} = [{'diff': 0.00011420799999999759}, {'diff': 0.00011481900000000211}, {'diff': 0.00011433400000000066}, {'diff': 0.00011440299999999903}, {'diff': 0.00011472299999999713}, {'diff': 0.000114263999999995...</msg>
<status status="PASS" starttime="20201030 11:00:00.220" endtime="20201030 11:00:00.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:00.240" level="INFO">${ACCURACY} = {'diff': [0.00011420799999999759, 0.00011481900000000211, 0.00011433400000000066, 0.00011440299999999903, 0.00011472299999999713, 0.00011426399999999587, 0.00011516599999999988, 0.0001148750000000004,...</msg>
<status status="PASS" starttime="20201030 11:00:00.231" endtime="20201030 11:00:00.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.251" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:00:00.249" endtime="20201030 11:00:00.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.257" level="INFO">VALUE: [0.00011420799999999759, 0.00011481900000000211, 0.00011433400000000066, 0.00011440299999999903, 0.00011472299999999713, 0.00011426399999999587, 0.00011516599999999988, 0.0001148750000000004, 0.0001142499999999963, 0.00011426400000000281, 0.00011512500000000064, 0.00011436100000000032, 0.0001147499999999968, 0.00011423599999999673, 0.0001148750000000004, 0.00011463899999999971, 0.0001147499999999968, 0.00011479200000000245, 0.00011480600000000202, 0.00011444399999999827, 0.00011462500000000014, 0.00011483300000000168, 0.00011433400000000066, 0.00011463800000000024, 0.0001144299999999987, 0.00011473599999999723, 0.00011441700000000554, 0.0001148750000000004, 0.00011470799999999809, 0.00011486100000000082, 0.0001145420000000022, 0.00011462500000000014, 0.0001150420000000027, 0.00011515200000000031, 0.00011495799999999834, 0.00011468000000000589, 0.0001149169999999991, 0.00011468100000000536, 0.00011463899999999971, 0.00011452799999999569, 0.00011513900000000021, 0.00011519499999999849, 0.00011516699999999935, 0.00011506900000000236, 0.00011461100000000057, 0.00011470799999999809, 0.00011512500000000064, 0.00011512500000000064, 0.00011444499999999774, 0.00011448599999999698]</msg>
<status status="PASS" starttime="20201030 11:00:00.254" endtime="20201030 11:00:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.242" endtime="20201030 11:00:00.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:00.271" endtime="20201030 11:00:00.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.266" endtime="20201030 11:00:00.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.263" endtime="20201030 11:00:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.736" endtime="20201030 11:00:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.734" endtime="20201030 11:00:00.297"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.321" endtime="20201030 11:00:00.346"></status>
</kw>
<msg timestamp="20201030 11:00:00.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.318" endtime="20201030 11:00:00.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.350" endtime="20201030 11:00:00.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.356" endtime="20201030 11:00:00.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.310" endtime="20201030 11:00:00.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.304" endtime="20201030 11:00:00.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.381" endtime="20201030 11:00:00.744"></status>
</kw>
<msg timestamp="20201030 11:00:00.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044552417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.378" endtime="20201030 11:00:00.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044552417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.754" endtime="20201030 11:00:00.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.773" endtime="20201030 11:00:00.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.370" endtime="20201030 11:00:00.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.365" endtime="20201030 11:00:00.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.792" level="INFO">${RESULT} = [{'diff': 0.00011575000000000474}, {'diff': 0.00011583400000000216}, {'diff': 0.00011540300000000003}, {'diff': 0.00011534700000000175}, {'diff': 0.00011590300000000053}, {'diff': 0.000115653000000000...</msg>
<status status="PASS" starttime="20201030 11:00:00.783" endtime="20201030 11:00:00.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:00.803" level="INFO">${ACCURACY} = {'diff': [0.00011575000000000474, 0.00011583400000000216, 0.00011540300000000003, 0.00011534700000000175, 0.00011590300000000053, 0.00011565300000000028, 0.00011568099999999942, 0.00011526400000000381...</msg>
<status status="PASS" starttime="20201030 11:00:00.794" endtime="20201030 11:00:00.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.815" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:00:00.813" endtime="20201030 11:00:00.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.821" level="INFO">VALUE: [0.00011575000000000474, 0.00011583400000000216, 0.00011540300000000003, 0.00011534700000000175, 0.00011590300000000053, 0.00011565300000000028, 0.00011568099999999942, 0.00011526400000000381, 0.00011538900000000046, 0.00011579199999999651, 0.00011606900000000336, 0.00011529100000000347, 0.00011523599999999773, 0.00011534700000000175, 0.00011618099999999992, 0.00011536100000000132, 0.0001153750000000009, 0.00011605599999999633, 0.00011570899999999856, 0.00011594499999999924, 0.00011554199999999626, 0.00011554100000000372, 0.00011523599999999773, 0.00011608300000000293, 0.00011570799999999909, 0.0001159170000000001, 0.00011609800000000198, 0.00011532000000000209, 0.00011547299999999788, 0.00011609800000000198, 0.00011569399999999952, 0.0001152499999999973, 0.00011541600000000013, 0.00011613900000000121, 0.00011595799999999934, 0.00011545799999999884, 0.0001157499999999978, 0.00011579200000000345, 0.0001159170000000001, 0.00011620799999999959, 0.00011562500000000114, 0.00011577800000000388, 0.00011533300000000218, 0.00011612500000000164, 0.00011604199999999676, 0.0001159170000000001, 0.00011569499999999899, 0.00011616700000000035, 0.0001160970000000025, 0.0001158750000000014]</msg>
<status status="PASS" starttime="20201030 11:00:00.818" endtime="20201030 11:00:00.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.805" endtime="20201030 11:00:00.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:00.834" endtime="20201030 11:00:00.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.830" endtime="20201030 11:00:00.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.827" endtime="20201030 11:00:00.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.299" endtime="20201030 11:00:00.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.298" endtime="20201030 11:00:00.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.139" endtime="20201030 11:00:00.861"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:08.006" endtime="20201030 11:00:00.864" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:12.900" endtime="20201030 11:00:00.877"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.026" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:00:01.042" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:00:03.018" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:00:01.022" endtime="20201030 11:00:03.020"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.025" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:00:03.022" endtime="20201030 11:00:03.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.020" endtime="20201030 11:00:03.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:03.032" endtime="20201030 11:00:03.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.029" endtime="20201030 11:00:03.440"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.469" endtime="20201030 11:00:03.496"></status>
</kw>
<msg timestamp="20201030 11:00:03.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD...</msg>
<status status="PASS" starttime="20201030 11:00:03.466" endtime="20201030 11:00:03.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD...</msg>
<status status="PASS" starttime="20201030 11:00:03.499" endtime="20201030 11:00:03.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.510" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:03.506" endtime="20201030 11:00:03.511"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:03.460" endtime="20201030 11:00:03.512"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:03.454" endtime="20201030 11:00:03.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.452" endtime="20201030 11:00:03.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:03.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:03.521" endtime="20201030 11:00:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.517" endtime="20201030 11:00:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.450" endtime="20201030 11:00:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.448" endtime="20201030 11:00:03.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.526" endtime="20201030 11:00:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.445" endtime="20201030 11:00:03.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.533" endtime="20201030 11:00:03.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.442" endtime="20201030 11:00:03.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.017" endtime="20201030 11:00:03.539"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:03.553" endtime="20201030 11:00:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.549" endtime="20201030 11:00:03.578"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.611" endtime="20201030 11:00:03.631"></status>
</kw>
<msg timestamp="20201030 11:00:03.632" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.607" endtime="20201030 11:00:03.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.634" endtime="20201030 11:00:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:03.641" endtime="20201030 11:00:03.646"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:03.600" endtime="20201030 11:00:03.648"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:03.594" endtime="20201030 11:00:03.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.591" endtime="20201030 11:00:03.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:03.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:03.656" endtime="20201030 11:00:03.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.652" endtime="20201030 11:00:03.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.590" endtime="20201030 11:00:03.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.588" endtime="20201030 11:00:03.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.661" endtime="20201030 11:00:03.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.584" endtime="20201030 11:00:03.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.579" endtime="20201030 11:00:03.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.546" endtime="20201030 11:00:03.668"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.690" endtime="20201030 11:00:09.814"></status>
</kw>
<msg timestamp="20201030 11:00:09.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.687" endtime="20201030 11:00:09.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:09.818" endtime="20201030 11:00:09.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.824" endtime="20201030 11:00:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.680" endtime="20201030 11:00:09.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.674" endtime="20201030 11:00:09.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:09.836" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:09.832" endtime="20201030 11:00:09.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.849" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:09.845" endtime="20201030 11:00:09.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.853" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:09.851" endtime="20201030 11:00:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.839" endtime="20201030 11:00:09.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.865" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:09.863" endtime="20201030 11:00:09.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.870" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:09.868" endtime="20201030 11:00:09.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.857" endtime="20201030 11:00:09.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.881" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:09.879" endtime="20201030 11:00:09.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.886" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:00:09.884" endtime="20201030 11:00:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.873" endtime="20201030 11:00:09.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.895" endtime="20201030 11:00:10.251"></status>
</kw>
<msg timestamp="20201030 11:00:10.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.227231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.227232444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:00:09.893" endtime="20201030 11:00:10.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.227231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.227232444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:00:10.260" endtime="20201030 11:00:10.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.278" endtime="20201030 11:00:10.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.890" endtime="20201030 11:00:10.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.888" endtime="20201030 11:00:10.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:10.297" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10000916699999998}, {'diff': 0.10001031900000001}, {'diff': 0.10001034700000005}, {'diff': 0.100010347}, {'diff': 0.10001031900000001}, {'diff': 0.10001033299999995}, {'diff':...</msg>
<status status="PASS" starttime="20201030 11:00:10.288" endtime="20201030 11:00:10.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:10.306" level="INFO">${RESULT} = {'diff': [0, 0.10000916699999998, 0.10001031900000001, 0.10001034700000005, 0.100010347, 0.10001031900000001, 0.10001033299999995, 0.10001036100000005, 0.10001036100000005, 5.419999999922709e-07, 5.40...</msg>
<status status="PASS" starttime="20201030 11:00:10.299" endtime="20201030 11:00:10.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.318" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:10.316" endtime="20201030 11:00:10.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.324" level="INFO">VALUE: [0, 0.10000916699999998, 0.10001031900000001, 0.10001034700000005, 0.100010347, 0.10001031900000001, 0.10001033299999995, 0.10001036100000005, 0.10001036100000005, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080600000001, 0.10001029200000011, 0.10001026299999993, 0.10001027800000006, 0.10001033300000017, 5.419999999922709e-07, 0.10001076399999986, 0.10001027800000006, 0.10001034800000008, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001081899999997, 0.10001036100000027, 0.10001036099999983, 0.10001036099999983, 0.10001034799999964, 0.10001034799999964, 0.100010347, 0.100010347, 0.100010347, 0.10001033299999973, 0.10001036099999983, 0.1000103189999999, 0.1000103750000001, 0.10001031999999999, 0.10001034699999956, 0.10001031999999999, 0.10001034700000044, 0.10001034800000053, 0.10001033400000026, 0.10001033399999937, 0.10001034799999964, 0.10001033400000026, 0.10001034700000044]</msg>
<status status="PASS" starttime="20201030 11:00:10.321" endtime="20201030 11:00:10.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.308" endtime="20201030 11:00:10.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.670" endtime="20201030 11:00:10.329"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:03.540" endtime="20201030 11:00:10.332" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:10.354" endtime="20201030 11:00:10.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.351" endtime="20201030 11:00:10.379"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.414" endtime="20201030 11:00:10.436"></status>
</kw>
<msg timestamp="20201030 11:00:10.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.411" endtime="20201030 11:00:10.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.440" endtime="20201030 11:00:10.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.451" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:10.447" endtime="20201030 11:00:10.452"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:10.403" endtime="20201030 11:00:10.454"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:10.396" endtime="20201030 11:00:10.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.393" endtime="20201030 11:00:10.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:10.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:10.463" endtime="20201030 11:00:10.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.459" endtime="20201030 11:00:10.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.391" endtime="20201030 11:00:10.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.390" endtime="20201030 11:00:10.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.469" endtime="20201030 11:00:10.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.385" endtime="20201030 11:00:10.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.380" endtime="20201030 11:00:10.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.348" endtime="20201030 11:00:10.476"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.503" endtime="20201030 11:00:16.629"></status>
</kw>
<msg timestamp="20201030 11:00:16.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.498" endtime="20201030 11:00:16.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.637" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:16.633" endtime="20201030 11:00:16.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.639" endtime="20201030 11:00:16.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.490" endtime="20201030 11:00:16.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.484" endtime="20201030 11:00:16.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:16.654" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:16.649" endtime="20201030 11:00:16.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.665" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:16.662" endtime="20201030 11:00:16.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.670" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:16.667" endtime="20201030 11:00:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.656" endtime="20201030 11:00:16.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.682" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:16.680" endtime="20201030 11:00:16.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.687" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:16.685" endtime="20201030 11:00:16.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.673" endtime="20201030 11:00:16.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.700" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:16.697" endtime="20201030 11:00:16.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.705" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:00:16.702" endtime="20201030 11:00:16.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.691" endtime="20201030 11:00:16.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.725" endtime="20201030 11:00:17.103"></status>
</kw>
<msg timestamp="20201030 11:00:17.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140397694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.240480972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:16.721" endtime="20201030 11:00:17.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140397694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.240480972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:17.112" endtime="20201030 11:00:17.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.132" endtime="20201030 11:00:17.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.713" endtime="20201030 11:00:17.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.708" endtime="20201030 11:00:17.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:17.150" level="INFO">${FILTERED} = [{'diff': 0.100083278}, {'diff': 0.09995677799999997}, {'diff': 0.10001036099999999}, {'diff': 0.10001036099999999}, {'diff': 0.10001037499999998}, {'diff': 0.100010347}, {'diff': 0.10001036200000002}...</msg>
<status status="PASS" starttime="20201030 11:00:17.141" endtime="20201030 11:00:17.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:17.161" level="INFO">${RESULT} = {'diff': [0.100083278, 0.09995677799999997, 0.10001036099999999, 0.10001036099999999, 0.10001037499999998, 0.100010347, 0.10001036200000002, 0.10001036100000005, 0.10001036100000005, 0.100010360999999...</msg>
<status status="PASS" starttime="20201030 11:00:17.152" endtime="20201030 11:00:17.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.172" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:17.169" endtime="20201030 11:00:17.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.178" level="INFO">VALUE: [0.100083278, 0.09995677799999997, 0.10001036099999999, 0.10001036099999999, 0.10001037499999998, 0.100010347, 0.10001036200000002, 0.10001036100000005, 0.10001036100000005, 0.10001036099999983, 0.10001036100000005, 0.10001037499999987, 0.100010347, 0.1000103750000001, 0.10001037499999987, 0.100010347, 0.10001038899999992, 0.10001033300000017, 0.1000103750000001, 0.10001036099999983, 0.10001036100000027, 0.10001038899999992, 0.10001034800000008, 0.10001034800000008, 0.10001036099999983, 0.10001036100000027, 0.1000103750000001, 0.10001036199999991, 0.10001036100000027, 0.100010347, 0.10001029199999989, 0.10001031999999999, 0.10001030600000016, 0.1000103189999999, 0.1000103189999999, 0.10001030500000008, 0.10001031900000035, 0.10001030599999972, 0.10001036100000027, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 11:00:17.174" endtime="20201030 11:00:17.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.163" endtime="20201030 11:00:17.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.479" endtime="20201030 11:00:17.183"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:10.340" endtime="20201030 11:00:17.186" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:17.208" endtime="20201030 11:00:17.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.204" endtime="20201030 11:00:17.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.268" endtime="20201030 11:00:17.291"></status>
</kw>
<msg timestamp="20201030 11:00:17.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.265" endtime="20201030 11:00:17.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.294" endtime="20201030 11:00:17.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.306" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:17.301" endtime="20201030 11:00:17.307"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:17.257" endtime="20201030 11:00:17.308"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:17.250" endtime="20201030 11:00:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.247" endtime="20201030 11:00:17.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:17.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:17.318" endtime="20201030 11:00:17.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.313" endtime="20201030 11:00:17.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.245" endtime="20201030 11:00:17.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.243" endtime="20201030 11:00:17.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.323" endtime="20201030 11:00:17.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.239" endtime="20201030 11:00:17.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.234" endtime="20201030 11:00:17.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.201" endtime="20201030 11:00:17.331"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.357" endtime="20201030 11:00:23.482"></status>
</kw>
<msg timestamp="20201030 11:00:23.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.353" endtime="20201030 11:00:23.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:23.486" endtime="20201030 11:00:23.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.493" endtime="20201030 11:00:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.346" endtime="20201030 11:00:23.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.338" endtime="20201030 11:00:23.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:23.507" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:23.502" endtime="20201030 11:00:23.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.518" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:23.515" endtime="20201030 11:00:23.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.522" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:23.520" endtime="20201030 11:00:23.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.509" endtime="20201030 11:00:23.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.535" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:23.533" endtime="20201030 11:00:23.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.540" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:23.537" endtime="20201030 11:00:23.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.526" endtime="20201030 11:00:23.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.552" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:23.550" endtime="20201030 11:00:23.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.557" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:00:23.555" endtime="20201030 11:00:23.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.544" endtime="20201030 11:00:23.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.578" endtime="20201030 11:00:23.889"></status>
</kw>
<msg timestamp="20201030 11:00:23.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140273847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.240419569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:23.574" endtime="20201030 11:00:23.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140273847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.240419569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:23.899" endtime="20201030 11:00:23.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.918" endtime="20201030 11:00:23.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.566" endtime="20201030 11:00:23.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.561" endtime="20201030 11:00:23.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:23.936" level="INFO">${FILTERED} = [{'diff': 0.10014572199999999}, {'diff': 0.099897597}, {'diff': 0.10000933300000003}, {'diff': 0.10001037500000004}, {'diff': 0.1000103189999999}, {'diff': 0.10001033299999995}, {'diff': 0.10001031900...</msg>
<status status="PASS" starttime="20201030 11:00:23.927" endtime="20201030 11:00:23.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:23.947" level="INFO">${RESULT} = {'diff': [0.10014572199999999, 0.099897597, 0.10000933300000003, 0.10001037500000004, 0.1000103189999999, 0.10001033299999995, 0.10001031900000001, 0.10001033299999995, 0.10001033299999995, 0.10001034...</msg>
<status status="PASS" starttime="20201030 11:00:23.938" endtime="20201030 11:00:23.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.958" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:23.956" endtime="20201030 11:00:23.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.963" level="INFO">VALUE: [0.10014572199999999, 0.099897597, 0.10000933300000003, 0.10001037500000004, 0.1000103189999999, 0.10001033299999995, 0.10001031900000001, 0.10001033299999995, 0.10001033299999995, 0.100010347, 0.10001033299999995, 0.10001033299999995, 0.10001033299999995, 0.10001033300000017, 0.100010347, 0.10001033299999995, 0.10001033299999995, 0.100010347, 0.10001033299999995, 0.100010347, 0.10001034800000008, 0.10001030600000016, 0.100010347, 0.10001033400000026, 0.10001033399999981, 0.10001034799999964, 0.10001034799999964, 0.10001031999999999, 0.10001034800000008, 0.10001033399999981, 0.10001033400000026, 0.100010347, 0.10001033300000017, 0.10001040299999975, 0.10001040200000011, 0.10001038899999992, 0.1000103750000001, 0.10001038899999992, 0.10001037500000054, 0.10001038900000037, 0.10001041700000002, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201030 11:00:23.960" endtime="20201030 11:00:23.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.949" endtime="20201030 11:00:23.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.333" endtime="20201030 11:00:23.968"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:17.193" endtime="20201030 11:00:23.971" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:23.990" endtime="20201030 11:00:24.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.986" endtime="20201030 11:00:24.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.050" endtime="20201030 11:00:24.074"></status>
</kw>
<msg timestamp="20201030 11:00:24.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.046" endtime="20201030 11:00:24.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.077" endtime="20201030 11:00:24.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:24.084" endtime="20201030 11:00:24.090"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:24.039" endtime="20201030 11:00:24.091"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:24.032" endtime="20201030 11:00:24.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.029" endtime="20201030 11:00:24.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:24.102" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:24.101" endtime="20201030 11:00:24.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.096" endtime="20201030 11:00:24.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.027" endtime="20201030 11:00:24.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.025" endtime="20201030 11:00:24.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.106" endtime="20201030 11:00:24.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.021" endtime="20201030 11:00:24.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.016" endtime="20201030 11:00:24.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.983" endtime="20201030 11:00:24.114"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.138" endtime="20201030 11:00:30.263"></status>
</kw>
<msg timestamp="20201030 11:00:30.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.134" endtime="20201030 11:00:30.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.271" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:30.266" endtime="20201030 11:00:30.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.273" endtime="20201030 11:00:30.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.126" endtime="20201030 11:00:30.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.121" endtime="20201030 11:00:30.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:30.287" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:30.283" endtime="20201030 11:00:30.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.298" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:30.296" endtime="20201030 11:00:30.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.303" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:30.301" endtime="20201030 11:00:30.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.289" endtime="20201030 11:00:30.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.316" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:30.313" endtime="20201030 11:00:30.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.320" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:30.318" endtime="20201030 11:00:30.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.307" endtime="20201030 11:00:30.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.333" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:30.331" endtime="20201030 11:00:30.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.338" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:00:30.336" endtime="20201030 11:00:30.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.324" endtime="20201030 11:00:30.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.358" endtime="20201030 11:00:30.671"></status>
</kw>
<msg timestamp="20201030 11:00:30.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13922025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.239470361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:30.355" endtime="20201030 11:00:30.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13922025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.239470361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:30.681" endtime="20201030 11:00:30.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.700" endtime="20201030 11:00:30.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.347" endtime="20201030 11:00:30.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.342" endtime="20201030 11:00:30.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:30.718" level="INFO">${FILTERED} = [{'diff': 0.100250111}, {'diff': 0.10005370799999996}, {'diff': 0.09975277799999999}, {'diff': 0.10001136100000002}, {'diff': 0.10001037499999998}, {'diff': 0.10001031900000001}, {'diff': 0.1000103610...</msg>
<status status="PASS" starttime="20201030 11:00:30.709" endtime="20201030 11:00:30.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:30.728" level="INFO">${RESULT} = {'diff': [0.100250111, 0.10005370799999996, 0.09975277799999999, 0.10001136100000002, 0.10001037499999998, 0.10001031900000001, 0.10001036100000005, 0.100010347, 0.10001036200000002, 0.100010347, 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:30.720" endtime="20201030 11:00:30.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.738" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:30.736" endtime="20201030 11:00:30.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.744" level="INFO">VALUE: [0.100250111, 0.10005370799999996, 0.09975277799999999, 0.10001136100000002, 0.10001037499999998, 0.10001031900000001, 0.10001036100000005, 0.100010347, 0.10001036200000002, 0.100010347, 0.1000103750000001, 0.100010347, 0.10001036100000005, 0.10001034800000008, 0.10001034800000008, 0.10001036100000005, 0.100010347, 0.10001036100000005, 0.10001036099999983, 0.10001034800000008, 0.10001043099999984, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 0.10001084700000007, 0.10001034699999956, 0.10001036099999983, 0.10001027699999998, 0.10001027800000006, 0.10001025000000041, 0.10001033300000017, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 11:00:30.741" endtime="20201030 11:00:30.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.730" endtime="20201030 11:00:30.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.116" endtime="20201030 11:00:30.749"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:23.977" endtime="20201030 11:00:30.751" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:30.771" endtime="20201030 11:00:30.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.767" endtime="20201030 11:00:30.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.832" endtime="20201030 11:00:30.855"></status>
</kw>
<msg timestamp="20201030 11:00:30.856" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:30.829" endtime="20201030 11:00:30.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:30.858" endtime="20201030 11:00:30.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:30.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:30.865" endtime="20201030 11:00:30.871"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:30.821" endtime="20201030 11:00:30.872"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:30.814" endtime="20201030 11:00:30.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.810" endtime="20201030 11:00:30.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:30.883" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:30.882" endtime="20201030 11:00:30.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.877" endtime="20201030 11:00:30.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.808" endtime="20201030 11:00:30.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.806" endtime="20201030 11:00:30.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.887" endtime="20201030 11:00:30.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.801" endtime="20201030 11:00:30.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.797" endtime="20201030 11:00:30.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.764" endtime="20201030 11:00:30.895"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:30.919" endtime="20201030 11:00:37.044"></status>
</kw>
<msg timestamp="20201030 11:00:37.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:30.915" endtime="20201030 11:00:37.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.052" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:37.048" endtime="20201030 11:00:37.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.055" endtime="20201030 11:00:37.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.907" endtime="20201030 11:00:37.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.902" endtime="20201030 11:00:37.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:37.069" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:37.064" endtime="20201030 11:00:37.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.080" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:37.077" endtime="20201030 11:00:37.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.084" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:37.082" endtime="20201030 11:00:37.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.071" endtime="20201030 11:00:37.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.095" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:37.093" endtime="20201030 11:00:37.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.097" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:37.096" endtime="20201030 11:00:37.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.088" endtime="20201030 11:00:37.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.104" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:37.102" endtime="20201030 11:00:37.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.106" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:00:37.105" endtime="20201030 11:00:37.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.099" endtime="20201030 11:00:37.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.115" endtime="20201030 11:00:37.471"></status>
</kw>
<msg timestamp="20201030 11:00:37.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139528944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.239905917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:37.114" endtime="20201030 11:00:37.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139528944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.239905917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:37.481" endtime="20201030 11:00:37.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.500" endtime="20201030 11:00:37.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.110" endtime="20201030 11:00:37.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.108" endtime="20201030 11:00:37.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:37.518" level="INFO">${FILTERED} = [{'diff': 0.10037697300000001}, {'diff': 0.10005819500000002}, {'diff': 0.09962573699999999}, {'diff': 0.10001036099999999}, {'diff': 0.10001037499999998}, {'diff': 0.10001037499999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:37.509" endtime="20201030 11:00:37.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:37.528" level="INFO">${RESULT} = {'diff': [0.10037697300000001, 0.10005819500000002, 0.09962573699999999, 0.10001036099999999, 0.10001037499999998, 0.10001037499999998, 0.10001034800000008, 0.10001036099999994, 0.1000103750000001, 0....</msg>
<status status="PASS" starttime="20201030 11:00:37.520" endtime="20201030 11:00:37.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.538" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:37.536" endtime="20201030 11:00:37.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.544" level="INFO">VALUE: [0.10037697300000001, 0.10005819500000002, 0.09962573699999999, 0.10001036099999999, 0.10001037499999998, 0.10001037499999998, 0.10001034800000008, 0.10001036099999994, 0.1000103750000001, 0.10001036099999983, 0.10001041700000002, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.410000001315751e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.1000108609999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 11:00:37.541" endtime="20201030 11:00:37.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.530" endtime="20201030 11:00:37.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:30.897" endtime="20201030 11:00:37.549"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:30.757" endtime="20201030 11:00:37.552" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:37.573" endtime="20201030 11:00:37.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.567" endtime="20201030 11:00:37.597"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.632" endtime="20201030 11:00:37.655"></status>
</kw>
<msg timestamp="20201030 11:00:37.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:37.629" endtime="20201030 11:00:37.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.663" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:37.658" endtime="20201030 11:00:37.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:37.670" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:37.665" endtime="20201030 11:00:37.670"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:37.621" endtime="20201030 11:00:37.672"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:37.614" endtime="20201030 11:00:37.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.611" endtime="20201030 11:00:37.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:37.683" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:37.682" endtime="20201030 11:00:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.677" endtime="20201030 11:00:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.609" endtime="20201030 11:00:37.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.607" endtime="20201030 11:00:37.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.687" endtime="20201030 11:00:37.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.603" endtime="20201030 11:00:37.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.598" endtime="20201030 11:00:37.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.564" endtime="20201030 11:00:37.695"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:37.719" endtime="20201030 11:00:43.844"></status>
</kw>
<msg timestamp="20201030 11:00:43.845" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:37.715" endtime="20201030 11:00:43.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.852" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:43.848" endtime="20201030 11:00:43.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:43.854" endtime="20201030 11:00:43.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.707" endtime="20201030 11:00:43.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.702" endtime="20201030 11:00:43.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:43.869" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:43.864" endtime="20201030 11:00:43.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.885" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:43.877" endtime="20201030 11:00:43.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.891" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:43.888" endtime="20201030 11:00:43.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:43.870" endtime="20201030 11:00:43.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.903" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:43.901" endtime="20201030 11:00:43.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.908" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:43.906" endtime="20201030 11:00:43.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:43.894" endtime="20201030 11:00:43.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.921" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:43.918" endtime="20201030 11:00:43.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:43.926" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:00:43.923" endtime="20201030 11:00:43.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:43.912" endtime="20201030 11:00:43.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:43.946" endtime="20201030 11:00:44.291"></status>
</kw>
<msg timestamp="20201030 11:00:44.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.238167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:43.942" endtime="20201030 11:00:44.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:44.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.238167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:44.300" endtime="20201030 11:00:44.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:44.319" endtime="20201030 11:00:44.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:43.934" endtime="20201030 11:00:44.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:43.929" endtime="20201030 11:00:44.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:44.337" level="INFO">${FILTERED} = [{'diff': 0.100544611}, {'diff': 0.10006382}, {'diff': 0.09945522200000001}, {'diff': 0.10001034800000003}, {'diff': 0.10001033400000003}, {'diff': 0.10001033400000003}, {'diff': 0.10001036099999994},...</msg>
<status status="PASS" starttime="20201030 11:00:44.328" endtime="20201030 11:00:44.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:44.348" level="INFO">${RESULT} = {'diff': [0.100544611, 0.10006382, 0.09945522200000001, 0.10001034800000003, 0.10001033400000003, 0.10001033400000003, 0.10001036099999994, 0.10001033300000006, 0.10001037499999987, 5.410000001315751e...</msg>
<status status="PASS" starttime="20201030 11:00:44.339" endtime="20201030 11:00:44.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:44.359" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:44.357" endtime="20201030 11:00:44.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:44.365" level="INFO">VALUE: [0.100544611, 0.10006382, 0.09945522200000001, 0.10001034800000003, 0.10001033400000003, 0.10001033400000003, 0.10001036099999994, 0.10001033300000006, 0.10001037499999987, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001081899999997, 0.10001033300000017, 0.10001036099999983, 0.10001033400000026, 0.10001036100000027, 0.10001031999999999, 0.10001034800000008, 0.10001033400000026, 0.10001034800000008, 0.10001033399999981, 0.10001036099999983, 0.100010347, 0.10001038899999992, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001082000000006, 0.10001034699999956, 0.10001031999999999, 0.10001033299999929, 0.10001034699999956, 0.10001036199999991, 0.10001031999999999, 0.10001033400000026, 0.10001033399999937, 0.10001034799999964, 0.10001033400000026, 0.10001029200000033, 0.1000102630000006, 0.1000102639999998]</msg>
<status status="PASS" starttime="20201030 11:00:44.362" endtime="20201030 11:00:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:44.350" endtime="20201030 11:00:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:37.697" endtime="20201030 11:00:44.370"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:37.558" endtime="20201030 11:00:44.372" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:00:00.908" endtime="20201030 11:00:44.391"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:57:12.471" endtime="20201030 11:00:44.477"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
