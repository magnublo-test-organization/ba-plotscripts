<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 10:56:22.320" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:22.895" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:22.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:23.872" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:22.894" endtime="20201030 10:56:23.872"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:23.875" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:23.873" endtime="20201030 10:56:23.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:22.892" endtime="20201030 10:56:23.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:23.878" endtime="20201030 10:56:24.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:23.877" endtime="20201030 10:56:24.062"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.074" endtime="20201030 10:56:24.098"></status>
</kw>
<msg timestamp="20201030 10:56:24.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.073" endtime="20201030 10:56:24.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.099" endtime="20201030 10:56:24.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.104" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:24.102" endtime="20201030 10:56:24.104"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:24.070" endtime="20201030 10:56:24.105"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:24.068" endtime="20201030 10:56:24.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.067" endtime="20201030 10:56:24.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:24.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:24.109" endtime="20201030 10:56:24.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.107" endtime="20201030 10:56:24.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.066" endtime="20201030 10:56:24.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.065" endtime="20201030 10:56:24.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.112" endtime="20201030 10:56:24.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.064" endtime="20201030 10:56:24.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.115" endtime="20201030 10:56:24.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.062" endtime="20201030 10:56:24.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:22.890" endtime="20201030 10:56:24.118"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:24.124" endtime="20201030 10:56:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.122" endtime="20201030 10:56:24.144"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.157" endtime="20201030 10:56:24.178"></status>
</kw>
<msg timestamp="20201030 10:56:24.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.156" endtime="20201030 10:56:24.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.180" endtime="20201030 10:56:24.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.184" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:24.183" endtime="20201030 10:56:24.185"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:24.153" endtime="20201030 10:56:24.185"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:24.151" endtime="20201030 10:56:24.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.149" endtime="20201030 10:56:24.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:24.190" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:24.189" endtime="20201030 10:56:24.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.187" endtime="20201030 10:56:24.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.148" endtime="20201030 10:56:24.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.147" endtime="20201030 10:56:24.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.192" endtime="20201030 10:56:24.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.146" endtime="20201030 10:56:24.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.144" endtime="20201030 10:56:24.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.121" endtime="20201030 10:56:24.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.203" endtime="20201030 10:56:24.217"></status>
</kw>
<msg timestamp="20201030 10:56:24.218" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.201" endtime="20201030 10:56:24.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.220" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:24.219" endtime="20201030 10:56:24.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:24.221" endtime="20201030 10:56:24.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.197" endtime="20201030 10:56:24.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.195" endtime="20201030 10:56:24.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.228" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:56:24.227" endtime="20201030 10:56:24.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.231" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:56:24.230" endtime="20201030 10:56:24.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.225" endtime="20201030 10:56:24.231"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:24.118" endtime="20201030 10:56:24.232" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:22.441" endtime="20201030 10:56:24.235"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:24.287" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:24.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:25.358" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:24.286" endtime="20201030 10:56:25.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.365" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:25.362" endtime="20201030 10:56:25.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.285" endtime="20201030 10:56:25.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:25.370" endtime="20201030 10:56:25.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.368" endtime="20201030 10:56:25.593"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.605" endtime="20201030 10:56:25.628"></status>
</kw>
<msg timestamp="20201030 10:56:25.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.603" endtime="20201030 10:56:25.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.630" endtime="20201030 10:56:25.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.634" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:25.633" endtime="20201030 10:56:25.635"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:25.601" endtime="20201030 10:56:25.635"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:25.599" endtime="20201030 10:56:25.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.598" endtime="20201030 10:56:25.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:25.640" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:25.639" endtime="20201030 10:56:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.637" endtime="20201030 10:56:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.597" endtime="20201030 10:56:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.596" endtime="20201030 10:56:25.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.642" endtime="20201030 10:56:25.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.595" endtime="20201030 10:56:25.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.645" endtime="20201030 10:56:25.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.593" endtime="20201030 10:56:25.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:24.283" endtime="20201030 10:56:25.647"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:25.654" endtime="20201030 10:56:25.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.651" endtime="20201030 10:56:25.674"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.686" endtime="20201030 10:56:25.706"></status>
</kw>
<msg timestamp="20201030 10:56:25.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.685" endtime="20201030 10:56:25.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.708" endtime="20201030 10:56:25.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.712" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:25.710" endtime="20201030 10:56:25.712"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:25.682" endtime="20201030 10:56:25.713"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:25.680" endtime="20201030 10:56:25.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.679" endtime="20201030 10:56:25.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:25.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:25.717" endtime="20201030 10:56:25.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.715" endtime="20201030 10:56:25.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.678" endtime="20201030 10:56:25.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.677" endtime="20201030 10:56:25.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.719" endtime="20201030 10:56:25.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.676" endtime="20201030 10:56:25.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.674" endtime="20201030 10:56:25.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.650" endtime="20201030 10:56:25.722"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.731" endtime="20201030 10:56:25.747"></status>
</kw>
<msg timestamp="20201030 10:56:25.747" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.730" endtime="20201030 10:56:25.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:25.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:25.748" endtime="20201030 10:56:25.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.751" endtime="20201030 10:56:25.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.727" endtime="20201030 10:56:25.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.725" endtime="20201030 10:56:25.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:25.760" endtime="20201030 10:56:26.032"></status>
</kw>
<msg timestamp="20201030 10:56:26.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:25.758" endtime="20201030 10:56:26.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:26.035" endtime="20201030 10:56:26.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.040" endtime="20201030 10:56:26.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.756" endtime="20201030 10:56:26.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.754" endtime="20201030 10:56:26.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:26.046" level="INFO">${RESULT} = [{'diff': 4.611000000001586e-06}, {'diff': 6.889000000009915e-06}, {'diff': 7.0280000000061404e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 1.1082999999995069e-05}, {'diff': 9.52800000000864e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:26.043" endtime="20201030 10:56:26.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:26.050" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.611000000001586e-06, 6.889000000009915e-06, 7.0280000000061404e-06, 1.0333000000001258e-05, 1.1082999999995069e-05, 9.52800000000864e-06, 9.181000000010875e-06, 7.639000000003726e-06, 8.05...</msg>
<status status="PASS" starttime="20201030 10:56:26.047" endtime="20201030 10:56:26.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:26.053" endtime="20201030 10:56:26.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.056" level="INFO">VALUE: [4.611000000001586e-06, 6.889000000009915e-06, 7.0280000000061404e-06, 1.0333000000001258e-05, 1.1082999999995069e-05, 9.52800000000864e-06, 9.181000000010875e-06, 7.639000000003726e-06, 8.055000000006807e-06, 1.079099999999611e-05, 7.763000000007847e-06, 1.0388999999999537e-05, 7.2779999999994516e-06, 1.0416999999998677e-05, 4.971999999991983e-06, 9.207999999996663e-06, 1.0514000000003132e-05, 8.34800000000524e-06, 7.458000000001852e-06, 1.0972999999997457e-05, 8.26400000000782e-06, 6.277000000012856e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.444999999994817e-06]</msg>
<status status="PASS" starttime="20201030 10:56:26.055" endtime="20201030 10:56:26.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.051" endtime="20201030 10:56:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.724" endtime="20201030 10:56:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.723" endtime="20201030 10:56:26.058"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.065" endtime="20201030 10:56:26.080"></status>
</kw>
<msg timestamp="20201030 10:56:26.080" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.064" endtime="20201030 10:56:26.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.082" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.081" endtime="20201030 10:56:26.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.084" endtime="20201030 10:56:26.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.061" endtime="20201030 10:56:26.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.060" endtime="20201030 10:56:26.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.094" endtime="20201030 10:56:26.385"></status>
</kw>
<msg timestamp="20201030 10:56:26.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:26.092" endtime="20201030 10:56:26.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:26.390" endtime="20201030 10:56:26.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.398" endtime="20201030 10:56:26.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.090" endtime="20201030 10:56:26.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.088" endtime="20201030 10:56:26.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:26.405" level="INFO">${RESULT} = [{'diff': 4.611000000001586e-06}, {'diff': 6.889000000009915e-06}, {'diff': 7.0280000000061404e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 1.1082999999995069e-05}, {'diff': 9.52800000000864e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:26.402" endtime="20201030 10:56:26.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:26.409" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.611000000001586e-06, 6.889000000009915e-06, 7.0280000000061404e-06, 1.0333000000001258e-05, 1.1082999999995069e-05, 9.52800000000864e-06, 9.181000000010875e-06, 7.639000000003726e-06, 8.05...</msg>
<status status="PASS" starttime="20201030 10:56:26.406" endtime="20201030 10:56:26.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.414" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:26.413" endtime="20201030 10:56:26.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.417" level="INFO">VALUE: [4.611000000001586e-06, 6.889000000009915e-06, 7.0280000000061404e-06, 1.0333000000001258e-05, 1.1082999999995069e-05, 9.52800000000864e-06, 9.181000000010875e-06, 7.639000000003726e-06, 8.055000000006807e-06, 1.079099999999611e-05, 7.763000000007847e-06, 1.0388999999999537e-05, 7.2779999999994516e-06, 1.0416999999998677e-05, 4.971999999991983e-06, 9.207999999996663e-06, 1.0514000000003132e-05, 8.34800000000524e-06, 7.458000000001852e-06, 1.0972999999997457e-05, 8.26400000000782e-06, 6.277000000012856e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.444999999994817e-06, 0.324583445, 8.333000000027013e-06, 7.1530000000374905e-06, 9.223000000002646e-06, 7.945000000009195e-06, 9.722000000045306e-06, 1.0263999999982065e-05, 9.15299999998398e-06, 9.833999999986354e-06, 7.458999999987448e-06, 8.153000000010735e-06, 9.486000000002992e-06, 8.167000000003366e-06, 6.958000000001352e-06, 1.0916999999999177e-05, 7.083000000018824e-06, 6.875000000017284e-06, 1.0971999999997983e-05, 1.0347000000021644e-05, 6.277000000054489e-06, 6.583000000004446e-06, 4.846999999974511e-06, 9.583000000035202e-06, 9.597000000027833e-06, 7.90299999997579e-06]</msg>
<status status="PASS" starttime="20201030 10:56:26.415" endtime="20201030 10:56:26.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.410" endtime="20201030 10:56:26.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.058" endtime="20201030 10:56:26.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.058" endtime="20201030 10:56:26.419"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.427" endtime="20201030 10:56:26.442"></status>
</kw>
<msg timestamp="20201030 10:56:26.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.426" endtime="20201030 10:56:26.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.444" endtime="20201030 10:56:26.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.446" endtime="20201030 10:56:26.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.423" endtime="20201030 10:56:26.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.421" endtime="20201030 10:56:26.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.456" endtime="20201030 10:56:26.759"></status>
</kw>
<msg timestamp="20201030 10:56:26.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067743361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.067753208, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:26.454" endtime="20201030 10:56:26.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067743361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.067753208, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:26.764" endtime="20201030 10:56:26.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.774" endtime="20201030 10:56:26.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.452" endtime="20201030 10:56:26.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.450" endtime="20201030 10:56:26.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:26.781" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.2779999999994516e-06}, {'diff': 1.0416999999998677e-05}, {'diff': 4.971999999991983e-06}, {'diff': 9.207999999996663e-06}, {'diff': 1.0514000000003132e-05}, {'diff': 8.3480000...</msg>
<status status="PASS" starttime="20201030 10:56:26.777" endtime="20201030 10:56:26.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:26.786" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.2779999999994516e-06, 1.0416999999998677e-05, 4.971999999991983e-06, 9.207999999996663e-06, 1.0514000000003132e-05, 8.34800000000524e-06, 7.458000000001852e-06, 1.0972999999997457e-05, ...</msg>
<status status="PASS" starttime="20201030 10:56:26.782" endtime="20201030 10:56:26.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.791" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:26.790" endtime="20201030 10:56:26.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.794" level="INFO">VALUE: [0, 7.2779999999994516e-06, 1.0416999999998677e-05, 4.971999999991983e-06, 9.207999999996663e-06, 1.0514000000003132e-05, 8.34800000000524e-06, 7.458000000001852e-06, 1.0972999999997457e-05, 8.26400000000782e-06, 6.277000000012856e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.444999999994817e-06, 0.324583445, 8.333000000027013e-06, 7.1530000000374905e-06, 9.223000000002646e-06, 7.945000000009195e-06, 9.722000000045306e-06, 1.0263999999982065e-05, 9.15299999998398e-06, 9.833999999986354e-06, 7.458999999987448e-06, 8.153000000010735e-06, 9.486000000002992e-06, 8.167000000003366e-06, 6.958000000001352e-06, 1.0916999999999177e-05, 7.083000000018824e-06, 6.875000000017284e-06, 1.0971999999997983e-05, 1.0347000000021644e-05, 6.277000000054489e-06, 6.583000000004446e-06, 4.846999999974511e-06, 9.583000000035202e-06, 9.597000000027833e-06, 7.90299999997579e-06, 0.349952167, 8.457999999933463e-06, 4.792000000031216e-06, 9.833000000014636e-06, 6.667000000071255e-06, 8.097000000040211e-06, 6.5410000000820645e-06, 7.90299999997579e-06, 9.541999999918005e-06, 1.1333999999973976e-05, 5.028000000018018e-06, 8.777000000015356e-06, 6.457999999986974e-06, 5.693999999945021e-06, 7.208999999952503e-06, 8.583999999922654e-06, 9.57000000001429e-06, 1.0708000000025919e-05, 1.1069000000030194e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.818999999937738e-06, 9.88899999998516e-06, 5.472000000006361e-06, 6.653000000023113e-06]</msg>
<status status="PASS" starttime="20201030 10:56:26.792" endtime="20201030 10:56:26.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.787" endtime="20201030 10:56:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.420" endtime="20201030 10:56:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.419" endtime="20201030 10:56:26.796"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.804" endtime="20201030 10:56:26.818"></status>
</kw>
<msg timestamp="20201030 10:56:26.818" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.802" endtime="20201030 10:56:26.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:26.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:26.819" endtime="20201030 10:56:26.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.822" endtime="20201030 10:56:26.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.799" endtime="20201030 10:56:26.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.798" endtime="20201030 10:56:26.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:26.831" endtime="20201030 10:56:27.138"></status>
</kw>
<msg timestamp="20201030 10:56:27.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.392732778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.392738847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:26.830" endtime="20201030 10:56:27.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.392732778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.392738847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.144" endtime="20201030 10:56:27.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.154" endtime="20201030 10:56:27.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.827" endtime="20201030 10:56:27.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.825" endtime="20201030 10:56:27.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:27.161" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.167000000003366e-06}, {'diff': 6.958000000001352e-06}, {'diff': 1.0916999999999177e-05}, {'diff': 7.083000000018824e-06}, {'diff': 6.875000000017284e-06}, {'diff': 1.097199999...</msg>
<status status="PASS" starttime="20201030 10:56:27.157" endtime="20201030 10:56:27.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:27.166" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.167000000003366e-06, 6.958000000001352e-06, 1.0916999999999177e-05, 7.083000000018824e-06, 6.875000000017284e-06, 1.0971999999997983e-05, 1.0347000000021644e-05, 6.277000000054489e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:27.162" endtime="20201030 10:56:27.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.170" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:27.169" endtime="20201030 10:56:27.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.173" level="INFO">VALUE: [0, 8.167000000003366e-06, 6.958000000001352e-06, 1.0916999999999177e-05, 7.083000000018824e-06, 6.875000000017284e-06, 1.0971999999997983e-05, 1.0347000000021644e-05, 6.277000000054489e-06, 6.583000000004446e-06, 4.846999999974511e-06, 9.583000000035202e-06, 9.597000000027833e-06, 7.90299999997579e-06, 0.349952167, 8.457999999933463e-06, 4.792000000031216e-06, 9.833000000014636e-06, 6.667000000071255e-06, 8.097000000040211e-06, 6.5410000000820645e-06, 7.90299999997579e-06, 9.541999999918005e-06, 1.1333999999973976e-05, 5.028000000018018e-06, 8.777000000015356e-06, 6.457999999986974e-06, 5.693999999945021e-06, 7.208999999952503e-06, 8.583999999922654e-06, 9.57000000001429e-06, 1.0708000000025919e-05, 1.1069000000030194e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.818999999937738e-06, 9.88899999998516e-06, 5.472000000006361e-06, 6.653000000023113e-06, 0.36577495800000004, 8.167000000058877e-06, 9.028000000022018e-06, 5.000000000032756e-06, 6.707999999910896e-06, 8.889000000067426e-06, 9.652999999998357e-06, 8.097999999900907e-06, 9.153000000150513e-06, 7.791000000034742e-06, 8.833000000096902e-06, 8.34699999985311e-06, 9.959000000003826e-06, 7.499999999938112e-06, 5.762999999880947e-06, 8.764000000160976e-06, 8.74999999989079e-06, 5.693999999945021e-06, 7.818999999908982e-06, 9.860999999888875e-06, 1.147199999995685e-05, 5.236000000019558e-06, 7.638999999892704e-06, 9.208000000038297e-06, 9.375000000089173e-06]</msg>
<status status="PASS" starttime="20201030 10:56:27.171" endtime="20201030 10:56:27.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.166" endtime="20201030 10:56:27.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.796" endtime="20201030 10:56:27.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:26.796" endtime="20201030 10:56:27.175"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.183" endtime="20201030 10:56:27.198"></status>
</kw>
<msg timestamp="20201030 10:56:27.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.181" endtime="20201030 10:56:27.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.199" endtime="20201030 10:56:27.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.202" endtime="20201030 10:56:27.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.178" endtime="20201030 10:56:27.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.177" endtime="20201030 10:56:27.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.211" endtime="20201030 10:56:27.515"></status>
</kw>
<msg timestamp="20201030 10:56:27.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.743079569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.743089667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.210" endtime="20201030 10:56:27.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.743079569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.743089667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.520" endtime="20201030 10:56:27.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.530" endtime="20201030 10:56:27.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.207" endtime="20201030 10:56:27.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.205" endtime="20201030 10:56:27.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:27.537" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.457999999986974e-06}, {'diff': 5.693999999945021e-06}, {'diff': 7.208999999952503e-06}, {'diff': 8.583999999922654e-06}, {'diff': 9.57000000001429e-06}, {'diff': 1.07080000000...</msg>
<status status="PASS" starttime="20201030 10:56:27.533" endtime="20201030 10:56:27.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:27.542" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.457999999986974e-06, 5.693999999945021e-06, 7.208999999952503e-06, 8.583999999922654e-06, 9.57000000001429e-06, 1.0708000000025919e-05, 1.1069000000030194e-05, 6.264000000033576e-06, 7....</msg>
<status status="PASS" starttime="20201030 10:56:27.538" endtime="20201030 10:56:27.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.547" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:27.546" endtime="20201030 10:56:27.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.550" level="INFO">VALUE: [0, 6.457999999986974e-06, 5.693999999945021e-06, 7.208999999952503e-06, 8.583999999922654e-06, 9.57000000001429e-06, 1.0708000000025919e-05, 1.1069000000030194e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.818999999937738e-06, 9.88899999998516e-06, 5.472000000006361e-06, 6.653000000023113e-06, 0.36577495800000004, 8.167000000058877e-06, 9.028000000022018e-06, 5.000000000032756e-06, 6.707999999910896e-06, 8.889000000067426e-06, 9.652999999998357e-06, 8.097999999900907e-06, 9.153000000150513e-06, 7.791000000034742e-06, 8.833000000096902e-06, 8.34699999985311e-06, 9.959000000003826e-06, 7.499999999938112e-06, 5.762999999880947e-06, 8.764000000160976e-06, 8.74999999989079e-06, 5.693999999945021e-06, 7.818999999908982e-06, 9.860999999888875e-06, 1.147199999995685e-05, 5.236000000019558e-06, 7.638999999892704e-06, 9.208000000038297e-06, 9.375000000089173e-06, 0.369478583, 7.95900000016836e-06, 1.1138999999937838e-05, 6.874999999961773e-06, 8.277999999917185e-06, 9.38799999983253e-06, 6.111000000030842e-06, 7.264000000173354e-06, 1.1264000000066332e-05, 4.971999999936472e-06, 5.221999999971416e-06, 6.180000000188812e-06, 8.707999999968408e-06, 6.278000000081718e-06, 7.263999999951309e-06, 1.0166999999894344e-05, 6.611000000100731e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.721999999876772e-06, 5.889000000092182e-06, 7.652999999940846e-06, 6.653000000023113e-06, 6.708999999993637e-06, 1.0792000000092727e-05]</msg>
<status status="PASS" starttime="20201030 10:56:27.548" endtime="20201030 10:56:27.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.544" endtime="20201030 10:56:27.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.175" endtime="20201030 10:56:27.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.175" endtime="20201030 10:56:27.552"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.560" endtime="20201030 10:56:27.574"></status>
</kw>
<msg timestamp="20201030 10:56:27.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.558" endtime="20201030 10:56:27.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.577" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.576" endtime="20201030 10:56:27.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.578" endtime="20201030 10:56:27.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.555" endtime="20201030 10:56:27.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.554" endtime="20201030 10:56:27.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.588" endtime="20201030 10:56:27.891"></status>
</kw>
<msg timestamp="20201030 10:56:27.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109243611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109249819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.586" endtime="20201030 10:56:27.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109243611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109249819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.896" endtime="20201030 10:56:27.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.906" endtime="20201030 10:56:27.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.584" endtime="20201030 10:56:27.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.582" endtime="20201030 10:56:27.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:27.913" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.959000000003826e-06}, {'diff': 7.499999999938112e-06}, {'diff': 5.762999999880947e-06}, {'diff': 8.764000000160976e-06}, {'diff': 8.74999999989079e-06}, {'diff': 5.69399999994...</msg>
<status status="PASS" starttime="20201030 10:56:27.909" endtime="20201030 10:56:27.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:27.920" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.959000000003826e-06, 7.499999999938112e-06, 5.762999999880947e-06, 8.764000000160976e-06, 8.74999999989079e-06, 5.693999999945021e-06, 7.818999999908982e-06, 9.860999999888875e-06, 1.14...</msg>
<status status="PASS" starttime="20201030 10:56:27.914" endtime="20201030 10:56:27.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.925" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:27.924" endtime="20201030 10:56:27.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.928" level="INFO">VALUE: [0, 9.959000000003826e-06, 7.499999999938112e-06, 5.762999999880947e-06, 8.764000000160976e-06, 8.74999999989079e-06, 5.693999999945021e-06, 7.818999999908982e-06, 9.860999999888875e-06, 1.147199999995685e-05, 5.236000000019558e-06, 7.638999999892704e-06, 9.208000000038297e-06, 9.375000000089173e-06, 0.369478583, 7.95900000016836e-06, 1.1138999999937838e-05, 6.874999999961773e-06, 8.277999999917185e-06, 9.38799999983253e-06, 6.111000000030842e-06, 7.264000000173354e-06, 1.1264000000066332e-05, 4.971999999936472e-06, 5.221999999971416e-06, 6.180000000188812e-06, 8.707999999968408e-06, 6.278000000081718e-06, 7.263999999951309e-06, 1.0166999999894344e-05, 6.611000000100731e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.721999999876772e-06, 5.889000000092182e-06, 7.652999999940846e-06, 6.653000000023113e-06, 6.708999999993637e-06, 1.0792000000092727e-05, 0.3667455279999998, 5.500000000102645e-06, 1.1042000000127672e-05, 8.028000000104285e-06, 5.778000000011829e-06, 8.028000000104285e-06, 7.749999999973056e-06, 8.457999999933463e-06, 8.695000000003006e-06, 5.597999999995551e-06, 7.596999999970322e-06, 6.764000000103465e-06, 7.263999999951309e-06, 9.361000000041031e-06, 9.208000000038297e-06, 8.999999999925734e-06, 1.1653000000055869e-05, 6.208000000063052e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.805000000082885e-06, 5.639000000057237e-06, 7.513999999986254e-06, 7.526999999951656e-06, 9.208000000038297e-06]</msg>
<status status="PASS" starttime="20201030 10:56:27.926" endtime="20201030 10:56:27.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.921" endtime="20201030 10:56:27.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.552" endtime="20201030 10:56:27.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.552" endtime="20201030 10:56:27.929"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.937" endtime="20201030 10:56:27.952"></status>
</kw>
<msg timestamp="20201030 10:56:27.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.936" endtime="20201030 10:56:27.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:27.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:27.953" endtime="20201030 10:56:27.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.956" endtime="20201030 10:56:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.933" endtime="20201030 10:56:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.931" endtime="20201030 10:56:27.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:27.965" endtime="20201030 10:56:28.267"></status>
</kw>
<msg timestamp="20201030 10:56:28.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.479112208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.479119278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:27.964" endtime="20201030 10:56:28.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.479112208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.479119278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:28.272" endtime="20201030 10:56:28.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.282" endtime="20201030 10:56:28.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.961" endtime="20201030 10:56:28.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.959" endtime="20201030 10:56:28.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:28.289" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.707999999968408e-06}, {'diff': 6.278000000081718e-06}, {'diff': 7.263999999951309e-06}, {'diff': 1.0166999999894344e-05}, {'diff': 6.611000000100731e-06}, {'diff': 6.513999999...</msg>
<status status="PASS" starttime="20201030 10:56:28.286" endtime="20201030 10:56:28.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:28.294" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.707999999968408e-06, 6.278000000081718e-06, 7.263999999951309e-06, 1.0166999999894344e-05, 6.611000000100731e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.721999999876772e-06, 5....</msg>
<status status="PASS" starttime="20201030 10:56:28.290" endtime="20201030 10:56:28.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.299" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:28.298" endtime="20201030 10:56:28.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.301" level="INFO">VALUE: [0, 8.707999999968408e-06, 6.278000000081718e-06, 7.263999999951309e-06, 1.0166999999894344e-05, 6.611000000100731e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.721999999876772e-06, 5.889000000092182e-06, 7.652999999940846e-06, 6.653000000023113e-06, 6.708999999993637e-06, 1.0792000000092727e-05, 0.3667455279999998, 5.500000000102645e-06, 1.1042000000127672e-05, 8.028000000104285e-06, 5.778000000011829e-06, 8.028000000104285e-06, 7.749999999973056e-06, 8.457999999933463e-06, 8.695000000003006e-06, 5.597999999995551e-06, 7.596999999970322e-06, 6.764000000103465e-06, 7.263999999951309e-06, 9.361000000041031e-06, 9.208000000038297e-06, 8.999999999925734e-06, 1.1653000000055869e-05, 6.208000000063052e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.805000000082885e-06, 5.639000000057237e-06, 7.513999999986254e-06, 7.526999999951656e-06, 9.208000000038297e-06, 0.36719326399999996, 6.707999999910896e-06, 5.0420000001771825e-06, 1.0082999999827535e-05, 8.959000000086093e-06, 7.5970000001923665e-06, 8.166000000198181e-06, 5.471999999784316e-06, 8.320000000061611e-06, 9.028000000022018e-06, 1.0667000000186277e-05, 7.388999999857759e-06, 1.0472000000039117e-05, 8.653000000080624e-06, 1.0540999999975043e-05, 8.235999999772758e-06, 8.62499999998434e-06, 8.596999999888055e-06, 6.152999999731179e-06, 5.722000000041305e-06, 1.0292000000244883e-05, 9.943999999872943e-06, 9.583999999840387e-06, 1.1193999999825621e-05, 1.115299999998598e-05]</msg>
<status status="PASS" starttime="20201030 10:56:28.300" endtime="20201030 10:56:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.295" endtime="20201030 10:56:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.930" endtime="20201030 10:56:28.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:27.930" endtime="20201030 10:56:28.303"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.312" endtime="20201030 10:56:28.326"></status>
</kw>
<msg timestamp="20201030 10:56:28.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:28.310" endtime="20201030 10:56:28.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:28.328" endtime="20201030 10:56:28.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.330" endtime="20201030 10:56:28.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.307" endtime="20201030 10:56:28.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.305" endtime="20201030 10:56:28.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.340" endtime="20201030 10:56:28.645"></status>
</kw>
<msg timestamp="20201030 10:56:28.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.846236167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.846246583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:28.338" endtime="20201030 10:56:28.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.846236167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.846246583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:28.650" endtime="20201030 10:56:28.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.660" endtime="20201030 10:56:28.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.335" endtime="20201030 10:56:28.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.334" endtime="20201030 10:56:28.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:28.667" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.263999999951309e-06}, {'diff': 9.361000000041031e-06}, {'diff': 9.208000000038297e-06}, {'diff': 8.999999999925734e-06}, {'diff': 1.1653000000055869e-05}, {'diff': 6.208000000...</msg>
<status status="PASS" starttime="20201030 10:56:28.664" endtime="20201030 10:56:28.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:28.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.263999999951309e-06, 9.361000000041031e-06, 9.208000000038297e-06, 8.999999999925734e-06, 1.1653000000055869e-05, 6.208000000063052e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.8...</msg>
<status status="PASS" starttime="20201030 10:56:28.668" endtime="20201030 10:56:28.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.678" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:28.676" endtime="20201030 10:56:28.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.680" level="INFO">VALUE: [0, 7.263999999951309e-06, 9.361000000041031e-06, 9.208000000038297e-06, 8.999999999925734e-06, 1.1653000000055869e-05, 6.208000000063052e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.805000000082885e-06, 5.639000000057237e-06, 7.513999999986254e-06, 7.526999999951656e-06, 9.208000000038297e-06, 0.36719326399999996, 6.707999999910896e-06, 5.0420000001771825e-06, 1.0082999999827535e-05, 8.959000000086093e-06, 7.5970000001923665e-06, 8.166000000198181e-06, 5.471999999784316e-06, 8.320000000061611e-06, 9.028000000022018e-06, 1.0667000000186277e-05, 7.388999999857759e-06, 1.0472000000039117e-05, 8.653000000080624e-06, 1.0540999999975043e-05, 8.235999999772758e-06, 8.62499999998434e-06, 8.596999999888055e-06, 6.152999999731179e-06, 5.722000000041305e-06, 1.0292000000244883e-05, 9.943999999872943e-06, 9.583999999840387e-06, 1.1193999999825621e-05, 1.115299999998598e-05, 0.3625842079999999, 6.0969999999827e-06, 1.0028000000161796e-05, 8.72200000001655e-06, 7.83399999981782e-06, 1.0069000000001438e-05, 8.388999999997537e-06, 4.915999999965948e-06, 1.0222000000226217e-05, 5.445000000214861e-06, 9.540999999835265e-06, 5.874999999821995e-06, 6.235999999937292e-06, 6.388999999717981e-06, 8.403000000267724e-06, 8.832999999874858e-06, 6.959000000250626e-06, 6.402999999988168e-06, 6.901999999975317e-06, 9.903000000033302e-06, 6.959000000250626e-06, 7.708000000050674e-06, 8.542000000222316e-06, 7.124999999774673e-06, 1.0153000000290291e-05]</msg>
<status status="PASS" starttime="20201030 10:56:28.679" endtime="20201030 10:56:28.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.674" endtime="20201030 10:56:28.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.304" endtime="20201030 10:56:28.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.303" endtime="20201030 10:56:28.682"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.690" endtime="20201030 10:56:28.704"></status>
</kw>
<msg timestamp="20201030 10:56:28.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:28.688" endtime="20201030 10:56:28.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:28.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:28.705" endtime="20201030 10:56:28.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.708" endtime="20201030 10:56:28.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.686" endtime="20201030 10:56:28.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.684" endtime="20201030 10:56:28.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:28.717" endtime="20201030 10:56:29.025"></status>
</kw>
<msg timestamp="20201030 10:56:29.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.213825833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.213833486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:28.716" endtime="20201030 10:56:29.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.213825833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.213833486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.030" endtime="20201030 10:56:29.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.040" endtime="20201030 10:56:29.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.713" endtime="20201030 10:56:29.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.711" endtime="20201030 10:56:29.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:29.047" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0472000000039117e-05}, {'diff': 8.653000000080624e-06}, {'diff': 1.0540999999975043e-05}, {'diff': 8.235999999772758e-06}, {'diff': 8.62499999998434e-06}, {'diff': 8.596999999...</msg>
<status status="PASS" starttime="20201030 10:56:29.043" endtime="20201030 10:56:29.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:29.053" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0472000000039117e-05, 8.653000000080624e-06, 1.0540999999975043e-05, 8.235999999772758e-06, 8.62499999998434e-06, 8.596999999888055e-06, 6.152999999731179e-06, 5.722000000041305e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:29.048" endtime="20201030 10:56:29.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.058" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:29.056" endtime="20201030 10:56:29.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.060" level="INFO">VALUE: [0, 1.0472000000039117e-05, 8.653000000080624e-06, 1.0540999999975043e-05, 8.235999999772758e-06, 8.62499999998434e-06, 8.596999999888055e-06, 6.152999999731179e-06, 5.722000000041305e-06, 1.0292000000244883e-05, 9.943999999872943e-06, 9.583999999840387e-06, 1.1193999999825621e-05, 1.115299999998598e-05, 0.3625842079999999, 6.0969999999827e-06, 1.0028000000161796e-05, 8.72200000001655e-06, 7.83399999981782e-06, 1.0069000000001438e-05, 8.388999999997537e-06, 4.915999999965948e-06, 1.0222000000226217e-05, 5.445000000214861e-06, 9.540999999835265e-06, 5.874999999821995e-06, 6.235999999937292e-06, 6.388999999717981e-06, 8.403000000267724e-06, 8.832999999874858e-06, 6.959000000250626e-06, 6.402999999988168e-06, 6.901999999975317e-06, 9.903000000033302e-06, 6.959000000250626e-06, 7.708000000050674e-06, 8.542000000222316e-06, 7.124999999774673e-06, 1.0153000000290291e-05, 0.36841313899999983, 7.860999999831364e-06, 8.096999999818166e-06, 9.874999999937017e-06, 9.277000000196267e-06, 8.87499999979724e-06, 8.958999999642003e-06, 9.16699999997661e-06, 8.221999999946661e-06, 9.597000000027833e-06, 6.319000000143404e-06, 7.403000000127946e-06, 1.0638999999645904e-05, 7.652999999940846e-06, 9.665999999963759e-06, 8.27800000013923e-06, 7.083999999935031e-06, 9.207999999816252e-06, 9.402999999963413e-06, 6.374999999891884e-06, 4.860999999856119e-06, 1.020799999995603e-05, 9.625000000124118e-06, 5.722000000041305e-06, 4.320000000390678e-06]</msg>
<status status="PASS" starttime="20201030 10:56:29.059" endtime="20201030 10:56:29.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.054" endtime="20201030 10:56:29.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.683" endtime="20201030 10:56:29.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:28.682" endtime="20201030 10:56:29.062"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.070" endtime="20201030 10:56:29.084"></status>
</kw>
<msg timestamp="20201030 10:56:29.085" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.068" endtime="20201030 10:56:29.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.086" endtime="20201030 10:56:29.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.088" endtime="20201030 10:56:29.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.066" endtime="20201030 10:56:29.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.064" endtime="20201030 10:56:29.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.099" endtime="20201030 10:56:29.407"></status>
</kw>
<msg timestamp="20201030 10:56:29.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.576824333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.576833292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.097" endtime="20201030 10:56:29.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.576824333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.576833292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.412" endtime="20201030 10:56:29.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.422" endtime="20201030 10:56:29.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.093" endtime="20201030 10:56:29.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.091" endtime="20201030 10:56:29.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:29.429" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.235999999937292e-06}, {'diff': 6.388999999717981e-06}, {'diff': 8.403000000267724e-06}, {'diff': 8.832999999874858e-06}, {'diff': 6.959000000250626e-06}, {'diff': 6.4029999999...</msg>
<status status="PASS" starttime="20201030 10:56:29.425" endtime="20201030 10:56:29.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:29.433" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.235999999937292e-06, 6.388999999717981e-06, 8.403000000267724e-06, 8.832999999874858e-06, 6.959000000250626e-06, 6.402999999988168e-06, 6.901999999975317e-06, 9.903000000033302e-06, 6.9...</msg>
<status status="PASS" starttime="20201030 10:56:29.430" endtime="20201030 10:56:29.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.438" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:29.437" endtime="20201030 10:56:29.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.442" level="INFO">VALUE: [0, 6.235999999937292e-06, 6.388999999717981e-06, 8.403000000267724e-06, 8.832999999874858e-06, 6.959000000250626e-06, 6.402999999988168e-06, 6.901999999975317e-06, 9.903000000033302e-06, 6.959000000250626e-06, 7.708000000050674e-06, 8.542000000222316e-06, 7.124999999774673e-06, 1.0153000000290291e-05, 0.36841313899999983, 7.860999999831364e-06, 8.096999999818166e-06, 9.874999999937017e-06, 9.277000000196267e-06, 8.87499999979724e-06, 8.958999999642003e-06, 9.16699999997661e-06, 8.221999999946661e-06, 9.597000000027833e-06, 6.319000000143404e-06, 7.403000000127946e-06, 1.0638999999645904e-05, 7.652999999940846e-06, 9.665999999963759e-06, 8.27800000013923e-06, 7.083999999935031e-06, 9.207999999816252e-06, 9.402999999963413e-06, 6.374999999891884e-06, 4.860999999856119e-06, 1.020799999995603e-05, 9.625000000124118e-06, 5.722000000041305e-06, 4.320000000390678e-06, 0.3688684720000004, 1.0151999999763461e-05, 7.207999999980785e-06, 6.777999999929563e-06, 7.0279999997424625e-06, 1.1903000000312858e-05, 7.5970000001923665e-06, 1.020900000003877e-05, 7.957999999863574e-06, 4.222000000275727e-06, 9.083000000131847e-06, 6.402999999988168e-06, 9.332999999944747e-06, 1.0083000000271625e-05, 8.695000000003006e-06, 4.915999999965948e-06, 8.929999999907068e-06, 5.7230000001240455e-06, 7.971999999689672e-06, 7.902999999753746e-06, 7.889000000371738e-06, 6.971999999993983e-06, 6.707999999910896e-06, 7.999999999785956e-06, 7.403000000127946e-06]</msg>
<status status="PASS" starttime="20201030 10:56:29.439" endtime="20201030 10:56:29.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.435" endtime="20201030 10:56:29.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.063" endtime="20201030 10:56:29.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.062" endtime="20201030 10:56:29.443"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.451" endtime="20201030 10:56:29.465"></status>
</kw>
<msg timestamp="20201030 10:56:29.466" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.450" endtime="20201030 10:56:29.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.468" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.467" endtime="20201030 10:56:29.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.470" endtime="20201030 10:56:29.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.447" endtime="20201030 10:56:29.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.445" endtime="20201030 10:56:29.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.479" endtime="20201030 10:56:29.792"></status>
</kw>
<msg timestamp="20201030 10:56:29.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.945630097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.945636014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.477" endtime="20201030 10:56:29.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.945630097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.945636014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.797" endtime="20201030 10:56:29.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.807" endtime="20201030 10:56:29.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.475" endtime="20201030 10:56:29.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.473" endtime="20201030 10:56:29.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:29.814" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0638999999645904e-05}, {'diff': 7.652999999940846e-06}, {'diff': 9.665999999963759e-06}, {'diff': 8.27800000013923e-06}, {'diff': 7.083999999935031e-06}, {'diff': 9.2079999998...</msg>
<status status="PASS" starttime="20201030 10:56:29.810" endtime="20201030 10:56:29.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:29.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0638999999645904e-05, 7.652999999940846e-06, 9.665999999963759e-06, 8.27800000013923e-06, 7.083999999935031e-06, 9.207999999816252e-06, 9.402999999963413e-06, 6.374999999891884e-06, 4.8...</msg>
<status status="PASS" starttime="20201030 10:56:29.815" endtime="20201030 10:56:29.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.824" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:29.823" endtime="20201030 10:56:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.827" level="INFO">VALUE: [0, 1.0638999999645904e-05, 7.652999999940846e-06, 9.665999999963759e-06, 8.27800000013923e-06, 7.083999999935031e-06, 9.207999999816252e-06, 9.402999999963413e-06, 6.374999999891884e-06, 4.860999999856119e-06, 1.020799999995603e-05, 9.625000000124118e-06, 5.722000000041305e-06, 4.320000000390678e-06, 0.3688684720000004, 1.0151999999763461e-05, 7.207999999980785e-06, 6.777999999929563e-06, 7.0279999997424625e-06, 1.1903000000312858e-05, 7.5970000001923665e-06, 1.020900000003877e-05, 7.957999999863574e-06, 4.222000000275727e-06, 9.083000000131847e-06, 6.402999999988168e-06, 9.332999999944747e-06, 1.0083000000271625e-05, 8.695000000003006e-06, 4.915999999965948e-06, 8.929999999907068e-06, 5.7230000001240455e-06, 7.971999999689672e-06, 7.902999999753746e-06, 7.889000000371738e-06, 6.971999999993983e-06, 6.707999999910896e-06, 7.999999999785956e-06, 7.403000000127946e-06, 0.37200697299999996, 6.153000000175268e-06, 1.0388999999833004e-05, 8.833000000318947e-06, 6.471999999924094e-06, 7.847000000005266e-06, 9.153000000150513e-06, 8.97299999991219e-06, 6.833000000039391e-06, 7.042000000012649e-06, 6.026999999964033e-06, 1.0028000000161796e-05, 7.221999999806883e-06, 7.457999999793685e-06, 9.750000000252612e-06, 8.096999999818166e-06, 7.985999999959859e-06, 7.388999999857759e-06, 6.1389999999050815e-06, 8.902999999893524e-06, 8.347000000075155e-06, 7.569000000096082e-06, 5.999999999950489e-06, 9.57000000001429e-06, 7.207999999980785e-06]</msg>
<status status="PASS" starttime="20201030 10:56:29.825" endtime="20201030 10:56:29.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.821" endtime="20201030 10:56:29.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.444" endtime="20201030 10:56:29.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.443" endtime="20201030 10:56:29.828"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.836" endtime="20201030 10:56:29.851"></status>
</kw>
<msg timestamp="20201030 10:56:29.851" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.835" endtime="20201030 10:56:29.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:29.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:29.852" endtime="20201030 10:56:29.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.855" endtime="20201030 10:56:29.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.832" endtime="20201030 10:56:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.830" endtime="20201030 10:56:29.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:29.864" endtime="20201030 10:56:30.182"></status>
</kw>
<msg timestamp="20201030 10:56:30.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.314890472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.314898125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:29.862" endtime="20201030 10:56:30.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.314890472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.314898125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:30.187" endtime="20201030 10:56:30.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.198" endtime="20201030 10:56:30.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.860" endtime="20201030 10:56:30.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.858" endtime="20201030 10:56:30.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:30.205" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.332999999944747e-06}, {'diff': 1.0083000000271625e-05}, {'diff': 8.695000000003006e-06}, {'diff': 4.915999999965948e-06}, {'diff': 8.929999999907068e-06}, {'diff': 5.723000000...</msg>
<status status="PASS" starttime="20201030 10:56:30.201" endtime="20201030 10:56:30.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:30.209" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.332999999944747e-06, 1.0083000000271625e-05, 8.695000000003006e-06, 4.915999999965948e-06, 8.929999999907068e-06, 5.7230000001240455e-06, 7.971999999689672e-06, 7.902999999753746e-06, 7...</msg>
<status status="PASS" starttime="20201030 10:56:30.206" endtime="20201030 10:56:30.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.412" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:30.410" endtime="20201030 10:56:30.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.418" level="INFO">VALUE: [0, 9.332999999944747e-06, 1.0083000000271625e-05, 8.695000000003006e-06, 4.915999999965948e-06, 8.929999999907068e-06, 5.7230000001240455e-06, 7.971999999689672e-06, 7.902999999753746e-06, 7.889000000371738e-06, 6.971999999993983e-06, 6.707999999910896e-06, 7.999999999785956e-06, 7.403000000127946e-06, 0.37200697299999996, 6.153000000175268e-06, 1.0388999999833004e-05, 8.833000000318947e-06, 6.471999999924094e-06, 7.847000000005266e-06, 9.153000000150513e-06, 8.97299999991219e-06, 6.833000000039391e-06, 7.042000000012649e-06, 6.026999999964033e-06, 1.0028000000161796e-05, 7.221999999806883e-06, 7.457999999793685e-06, 9.750000000252612e-06, 8.096999999818166e-06, 7.985999999959859e-06, 7.388999999857759e-06, 6.1389999999050815e-06, 8.902999999893524e-06, 8.347000000075155e-06, 7.569000000096082e-06, 5.999999999950489e-06, 9.57000000001429e-06, 7.207999999980785e-06, 0.3744355690000001, 6.083000000600691e-06, 1.0361000000180809e-05, 6.166999999557277e-06, 7.83299999973508e-06, 5.860999999995897e-06, 8.084000000074809e-06, 7.444000000411677e-06, 8.763999999494843e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.195000000516984e-06, 7.764000000243243e-06, 4.209000000088281e-06, 7.222999999889623e-06, 1.0361000000180809e-05, 8.208000000564653e-06, 8.693999999920266e-06, 1.0458000000213019e-05, 8.236000000216848e-06, 6.458000000542086e-06, 9.291999999661016e-06, 7.833000000623258e-06, 1.0082999999383446e-05, 7.722000000320861e-06]</msg>
<status status="PASS" starttime="20201030 10:56:30.415" endtime="20201030 10:56:30.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.404" endtime="20201030 10:56:30.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.829" endtime="20201030 10:56:30.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:29.829" endtime="20201030 10:56:30.421"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.439" endtime="20201030 10:56:30.458"></status>
</kw>
<msg timestamp="20201030 10:56:30.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:30.434" endtime="20201030 10:56:30.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:30.461" endtime="20201030 10:56:30.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.466" endtime="20201030 10:56:30.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.429" endtime="20201030 10:56:30.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.425" endtime="20201030 10:56:30.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.485" endtime="20201030 10:56:30.809"></status>
</kw>
<msg timestamp="20201030 10:56:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687282181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.687292514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:30.482" endtime="20201030 10:56:30.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687282181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.687292514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:30.814" endtime="20201030 10:56:30.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.824" endtime="20201030 10:56:30.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.476" endtime="20201030 10:56:30.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.473" endtime="20201030 10:56:30.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:30.831" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.221999999806883e-06}, {'diff': 7.457999999793685e-06}, {'diff': 9.750000000252612e-06}, {'diff': 8.096999999818166e-06}, {'diff': 7.985999999959859e-06}, {'diff': 7.3889999998...</msg>
<status status="PASS" starttime="20201030 10:56:30.827" endtime="20201030 10:56:30.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:30.836" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.221999999806883e-06, 7.457999999793685e-06, 9.750000000252612e-06, 8.096999999818166e-06, 7.985999999959859e-06, 7.388999999857759e-06, 6.1389999999050815e-06, 8.902999999893524e-06, 8....</msg>
<status status="PASS" starttime="20201030 10:56:30.832" endtime="20201030 10:56:30.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.841" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:30.840" endtime="20201030 10:56:30.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.844" level="INFO">VALUE: [0, 7.221999999806883e-06, 7.457999999793685e-06, 9.750000000252612e-06, 8.096999999818166e-06, 7.985999999959859e-06, 7.388999999857759e-06, 6.1389999999050815e-06, 8.902999999893524e-06, 8.347000000075155e-06, 7.569000000096082e-06, 5.999999999950489e-06, 9.57000000001429e-06, 7.207999999980785e-06, 0.3744355690000001, 6.083000000600691e-06, 1.0361000000180809e-05, 6.166999999557277e-06, 7.83299999973508e-06, 5.860999999995897e-06, 8.084000000074809e-06, 7.444000000411677e-06, 8.763999999494843e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.195000000516984e-06, 7.764000000243243e-06, 4.209000000088281e-06, 7.222999999889623e-06, 1.0361000000180809e-05, 8.208000000564653e-06, 8.693999999920266e-06, 1.0458000000213019e-05, 8.236000000216848e-06, 6.458000000542086e-06, 9.291999999661016e-06, 7.833000000623258e-06, 1.0082999999383446e-05, 7.722000000320861e-06, 0.5944438189999994, 1.0944999999651372e-05, 7.43000000014149e-06, 1.0611000000437798e-05, 8.417000000093822e-06, 9.971999999969228e-06, 8.458000000821642e-06, 8.457999999933463e-06, 4.624999999869317e-06, 1.0291999999800794e-05, 7.944000000037477e-06, 4.985999999540525e-06, 8.763999999494843e-06, 1.0721999999852017e-05, 8.77799999976503e-06, 9.403000000851591e-06, 5.833999999538264e-06, 9.721999999712239e-06, 5.458000000402308e-06, 7.528000000256441e-06, 6.19400000001491e-06, 8.902999999449435e-06, 9.083999999326409e-06, 8.832999999874858e-06, 1.0333000000528614e-05]</msg>
<status status="PASS" starttime="20201030 10:56:30.842" endtime="20201030 10:56:30.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.838" endtime="20201030 10:56:30.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.423" endtime="20201030 10:56:30.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.422" endtime="20201030 10:56:30.845"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.853" endtime="20201030 10:56:30.868"></status>
</kw>
<msg timestamp="20201030 10:56:30.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:30.852" endtime="20201030 10:56:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:30.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:30.869" endtime="20201030 10:56:30.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.872" endtime="20201030 10:56:30.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.849" endtime="20201030 10:56:30.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.847" endtime="20201030 10:56:30.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:30.881" endtime="20201030 10:56:31.202"></status>
</kw>
<msg timestamp="20201030 10:56:31.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.062104306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.062110278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:30.879" endtime="20201030 10:56:31.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.062104306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.062110278, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:31.207" endtime="20201030 10:56:31.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.217" endtime="20201030 10:56:31.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.877" endtime="20201030 10:56:31.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.875" endtime="20201030 10:56:31.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:31.225" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.764000000243243e-06}, {'diff': 4.209000000088281e-06}, {'diff': 7.222999999889623e-06}, {'diff': 1.0361000000180809e-05}, {'diff': 8.208000000564653e-06}, {'diff': 8.693999999...</msg>
<status status="PASS" starttime="20201030 10:56:31.221" endtime="20201030 10:56:31.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:31.230" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.764000000243243e-06, 4.209000000088281e-06, 7.222999999889623e-06, 1.0361000000180809e-05, 8.208000000564653e-06, 8.693999999920266e-06, 1.0458000000213019e-05, 8.236000000216848e-06, 6...</msg>
<status status="PASS" starttime="20201030 10:56:31.226" endtime="20201030 10:56:31.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.235" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:31.234" endtime="20201030 10:56:31.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.238" level="INFO">VALUE: [0, 7.764000000243243e-06, 4.209000000088281e-06, 7.222999999889623e-06, 1.0361000000180809e-05, 8.208000000564653e-06, 8.693999999920266e-06, 1.0458000000213019e-05, 8.236000000216848e-06, 6.458000000542086e-06, 9.291999999661016e-06, 7.833000000623258e-06, 1.0082999999383446e-05, 7.722000000320861e-06, 0.5944438189999994, 1.0944999999651372e-05, 7.43000000014149e-06, 1.0611000000437798e-05, 8.417000000093822e-06, 9.971999999969228e-06, 8.458000000821642e-06, 8.457999999933463e-06, 4.624999999869317e-06, 1.0291999999800794e-05, 7.944000000037477e-06, 4.985999999540525e-06, 8.763999999494843e-06, 1.0721999999852017e-05, 8.77799999976503e-06, 9.403000000851591e-06, 5.833999999538264e-06, 9.721999999712239e-06, 5.458000000402308e-06, 7.528000000256441e-06, 6.19400000001491e-06, 8.902999999449435e-06, 9.083999999326409e-06, 8.832999999874858e-06, 1.0333000000528614e-05, 0.40292915299999965, 6.875000000405862e-06, 5.332999999829724e-06, 8.638999999810437e-06, 9.152999999706424e-06, 4.901999999695761e-06, 8.707999999302274e-06, 1.0527999999787596e-05, 9.819000000632627e-06, 7.818999999464893e-06, 9.777999999904807e-06, 5.694999999583672e-06, 7.83299999973508e-06, 6.457999999653907e-06, 8.52799999950804e-06, 5.889000000536271e-06, 7.402999999683857e-06, 8.263999999869043e-06, 8.457999999933463e-06, 8.347999999713807e-06, 9.957999999699041e-06, 9.777999999904807e-06, 8.27700000005649e-06, 8.97199999982945e-06, 1.0152999999846202e-05]</msg>
<status status="PASS" starttime="20201030 10:56:31.236" endtime="20201030 10:56:31.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.232" endtime="20201030 10:56:31.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.846" endtime="20201030 10:56:31.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:30.846" endtime="20201030 10:56:31.239"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.247" endtime="20201030 10:56:31.261"></status>
</kw>
<msg timestamp="20201030 10:56:31.262" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:31.246" endtime="20201030 10:56:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:31.263" endtime="20201030 10:56:31.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.266" endtime="20201030 10:56:31.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.243" endtime="20201030 10:56:31.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.242" endtime="20201030 10:56:31.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.275" endtime="20201030 10:56:31.592"></status>
</kw>
<msg timestamp="20201030 10:56:31.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.656952917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.656960694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:31.273" endtime="20201030 10:56:31.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.656952917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.656960694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:31.597" endtime="20201030 10:56:31.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.607" endtime="20201030 10:56:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.271" endtime="20201030 10:56:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.269" endtime="20201030 10:56:31.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:31.615" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.763999999494843e-06}, {'diff': 1.0721999999852017e-05}, {'diff': 8.77799999976503e-06}, {'diff': 9.403000000851591e-06}, {'diff': 5.833999999538264e-06}, {'diff': 9.7219999997...</msg>
<status status="PASS" starttime="20201030 10:56:31.611" endtime="20201030 10:56:31.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:31.619" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.763999999494843e-06, 1.0721999999852017e-05, 8.77799999976503e-06, 9.403000000851591e-06, 5.833999999538264e-06, 9.721999999712239e-06, 5.458000000402308e-06, 7.528000000256441e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 10:56:31.616" endtime="20201030 10:56:31.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.624" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:31.623" endtime="20201030 10:56:31.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.627" level="INFO">VALUE: [0, 8.763999999494843e-06, 1.0721999999852017e-05, 8.77799999976503e-06, 9.403000000851591e-06, 5.833999999538264e-06, 9.721999999712239e-06, 5.458000000402308e-06, 7.528000000256441e-06, 6.19400000001491e-06, 8.902999999449435e-06, 9.083999999326409e-06, 8.832999999874858e-06, 1.0333000000528614e-05, 0.40292915299999965, 6.875000000405862e-06, 5.332999999829724e-06, 8.638999999810437e-06, 9.152999999706424e-06, 4.901999999695761e-06, 8.707999999302274e-06, 1.0527999999787596e-05, 9.819000000632627e-06, 7.818999999464893e-06, 9.777999999904807e-06, 5.694999999583672e-06, 7.83299999973508e-06, 6.457999999653907e-06, 8.52799999950804e-06, 5.889000000536271e-06, 7.402999999683857e-06, 8.263999999869043e-06, 8.457999999933463e-06, 8.347999999713807e-06, 9.957999999699041e-06, 9.777999999904807e-06, 8.27700000005649e-06, 8.97199999982945e-06, 1.0152999999846202e-05, 0.38269844499999994, 6.93000000051569e-06, 8.110999999644264e-06, 6.861000000135675e-06, 8.764000000383021e-06, 9.458000000073241e-06, 7.708000000050674e-06, 6.2080000002850966e-06, 9.431000000503786e-06, 1.0860999999806609e-05, 7.861999999470015e-06, 8.72199999957246e-06, 7.528000000256441e-06, 7.026999999659722e-06, 1.045799999932484e-05, 9.833000000014636e-06, 1.0278000000418785e-05, 5.65299999966129e-06, 6.152000000092528e-06, 6.1389999999050815e-06, 9.652999999332224e-06, 9.819000000632627e-06, 6.278000000747852e-06, 9.402999999963413e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201030 10:56:31.625" endtime="20201030 10:56:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.621" endtime="20201030 10:56:31.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.240" endtime="20201030 10:56:31.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.240" endtime="20201030 10:56:31.628"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.637" endtime="20201030 10:56:31.652"></status>
</kw>
<msg timestamp="20201030 10:56:31.652" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:31.635" endtime="20201030 10:56:31.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:31.653" endtime="20201030 10:56:31.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.656" endtime="20201030 10:56:31.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.632" endtime="20201030 10:56:31.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.630" endtime="20201030 10:56:31.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.665" endtime="20201030 10:56:31.980"></status>
</kw>
<msg timestamp="20201030 10:56:31.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.060286764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.060292556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:31.664" endtime="20201030 10:56:31.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:31.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.060286764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.060292556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:31.986" endtime="20201030 10:56:31.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:31.996" endtime="20201030 10:56:31.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.661" endtime="20201030 10:56:31.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.659" endtime="20201030 10:56:31.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:32.003" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.83299999973508e-06}, {'diff': 6.457999999653907e-06}, {'diff': 8.52799999950804e-06}, {'diff': 5.889000000536271e-06}, {'diff': 7.402999999683857e-06}, {'diff': 8.263999999869...</msg>
<status status="PASS" starttime="20201030 10:56:31.999" endtime="20201030 10:56:32.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:32.009" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.83299999973508e-06, 6.457999999653907e-06, 8.52799999950804e-06, 5.889000000536271e-06, 7.402999999683857e-06, 8.263999999869043e-06, 8.457999999933463e-06, 8.347999999713807e-06, 9.957...</msg>
<status status="PASS" starttime="20201030 10:56:32.004" endtime="20201030 10:56:32.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:32.012" endtime="20201030 10:56:32.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.016" level="INFO">VALUE: [0, 7.83299999973508e-06, 6.457999999653907e-06, 8.52799999950804e-06, 5.889000000536271e-06, 7.402999999683857e-06, 8.263999999869043e-06, 8.457999999933463e-06, 8.347999999713807e-06, 9.957999999699041e-06, 9.777999999904807e-06, 8.27700000005649e-06, 8.97199999982945e-06, 1.0152999999846202e-05, 0.38269844499999994, 6.93000000051569e-06, 8.110999999644264e-06, 6.861000000135675e-06, 8.764000000383021e-06, 9.458000000073241e-06, 7.708000000050674e-06, 6.2080000002850966e-06, 9.431000000503786e-06, 1.0860999999806609e-05, 7.861999999470015e-06, 8.72199999957246e-06, 7.528000000256441e-06, 7.026999999659722e-06, 1.045799999932484e-05, 9.833000000014636e-06, 1.0278000000418785e-05, 5.65299999966129e-06, 6.152000000092528e-06, 6.1389999999050815e-06, 9.652999999332224e-06, 9.819000000632627e-06, 6.278000000747852e-06, 9.402999999963413e-06, 6.903000000058057e-06, 0.3774802639999999, 9.499999999995623e-06, 9.47199999945525e-06, 9.90200000039465e-06, 8.055000000339874e-06, 6.471999999924094e-06, 6.2089999994796585e-06, 8.77799999976503e-06, 8.722000000460639e-06, 1.0292000000688972e-05, 1.0097000000541811e-05, 6.014000000220676e-06, 8.778000000653208e-06, 9.583999999840387e-06, 8.082999999992069e-06, 8.33299999936088e-06, 7.985999999959859e-06, 8.819999999687411e-06, 7.791999999895438e-06, 7.611000000018464e-06, 7.069999999664844e-06, 6.667000000071255e-06, 6.583000000226491e-06, 7.820000000435812e-06, 6.277999999859674e-06]</msg>
<status status="PASS" starttime="20201030 10:56:32.014" endtime="20201030 10:56:32.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.010" endtime="20201030 10:56:32.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.629" endtime="20201030 10:56:32.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:31.629" endtime="20201030 10:56:32.018"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.026" endtime="20201030 10:56:32.040"></status>
</kw>
<msg timestamp="20201030 10:56:32.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.024" endtime="20201030 10:56:32.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.043" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.041" endtime="20201030 10:56:32.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.044" endtime="20201030 10:56:32.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.021" endtime="20201030 10:56:32.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.020" endtime="20201030 10:56:32.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.053" endtime="20201030 10:56:32.367"></status>
</kw>
<msg timestamp="20201030 10:56:32.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443378986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443385875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:32.051" endtime="20201030 10:56:32.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443378986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443385875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:32.372" endtime="20201030 10:56:32.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.382" endtime="20201030 10:56:32.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.049" endtime="20201030 10:56:32.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.047" endtime="20201030 10:56:32.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:32.390" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.528000000256441e-06}, {'diff': 7.026999999659722e-06}, {'diff': 1.045799999932484e-05}, {'diff': 9.833000000014636e-06}, {'diff': 1.0278000000418785e-05}, {'diff': 5.652999999...</msg>
<status status="PASS" starttime="20201030 10:56:32.386" endtime="20201030 10:56:32.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:32.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.528000000256441e-06, 7.026999999659722e-06, 1.045799999932484e-05, 9.833000000014636e-06, 1.0278000000418785e-05, 5.65299999966129e-06, 6.152000000092528e-06, 6.1389999999050815e-06, 9....</msg>
<status status="PASS" starttime="20201030 10:56:32.391" endtime="20201030 10:56:32.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.400" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:32.399" endtime="20201030 10:56:32.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.403" level="INFO">VALUE: [0, 7.528000000256441e-06, 7.026999999659722e-06, 1.045799999932484e-05, 9.833000000014636e-06, 1.0278000000418785e-05, 5.65299999966129e-06, 6.152000000092528e-06, 6.1389999999050815e-06, 9.652999999332224e-06, 9.819000000632627e-06, 6.278000000747852e-06, 9.402999999963413e-06, 6.903000000058057e-06, 0.3774802639999999, 9.499999999995623e-06, 9.47199999945525e-06, 9.90200000039465e-06, 8.055000000339874e-06, 6.471999999924094e-06, 6.2089999994796585e-06, 8.77799999976503e-06, 8.722000000460639e-06, 1.0292000000688972e-05, 1.0097000000541811e-05, 6.014000000220676e-06, 8.778000000653208e-06, 9.583999999840387e-06, 8.082999999992069e-06, 8.33299999936088e-06, 7.985999999959859e-06, 8.819999999687411e-06, 7.791999999895438e-06, 7.611000000018464e-06, 7.069999999664844e-06, 6.667000000071255e-06, 6.583000000226491e-06, 7.820000000435812e-06, 6.277999999859674e-06, 0.37897912499999986, 6.5129999997637356e-06, 9.95800000058722e-06, 1.0028000000161796e-05, 6.584000000309231e-06, 6.83300000048348e-06, 9.791000000092254e-06, 9.013999999751832e-06, 7.83299999973508e-06, 9.013999999751832e-06, 9.083000000131847e-06, 6.6659999999885144e-06, 8.236000000216848e-06, 5.096999999842922e-06, 7.820000000435812e-06, 5.445000000214861e-06, 7.403000000572035e-06, 6.570000000039045e-06, 6.722000000181083e-06, 7.527999999368262e-06, 1.0528000000675775e-05, 8.347000000519245e-06, 8.165999999754092e-06, 6.430000000001712e-06, 6.8340000005662205e-06]</msg>
<status status="PASS" starttime="20201030 10:56:32.401" endtime="20201030 10:56:32.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.396" endtime="20201030 10:56:32.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.018" endtime="20201030 10:56:32.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.018" endtime="20201030 10:56:32.404"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.412" endtime="20201030 10:56:32.427"></status>
</kw>
<msg timestamp="20201030 10:56:32.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.411" endtime="20201030 10:56:32.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.429" endtime="20201030 10:56:32.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.431" endtime="20201030 10:56:32.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.408" endtime="20201030 10:56:32.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.406" endtime="20201030 10:56:32.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.442" endtime="20201030 10:56:32.754"></status>
</kw>
<msg timestamp="20201030 10:56:32.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.821247361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.821256264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:32.440" endtime="20201030 10:56:32.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.821247361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.821256264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:32.759" endtime="20201030 10:56:32.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.769" endtime="20201030 10:56:32.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.437" endtime="20201030 10:56:32.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.435" endtime="20201030 10:56:32.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:32.776" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.778000000653208e-06}, {'diff': 9.583999999840387e-06}, {'diff': 8.082999999992069e-06}, {'diff': 8.33299999936088e-06}, {'diff': 7.985999999959859e-06}, {'diff': 8.81999999968...</msg>
<status status="PASS" starttime="20201030 10:56:32.773" endtime="20201030 10:56:32.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:32.781" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.778000000653208e-06, 9.583999999840387e-06, 8.082999999992069e-06, 8.33299999936088e-06, 7.985999999959859e-06, 8.819999999687411e-06, 7.791999999895438e-06, 7.611000000018464e-06, 7.06...</msg>
<status status="PASS" starttime="20201030 10:56:32.777" endtime="20201030 10:56:32.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.786" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:32.785" endtime="20201030 10:56:32.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.789" level="INFO">VALUE: [0, 8.778000000653208e-06, 9.583999999840387e-06, 8.082999999992069e-06, 8.33299999936088e-06, 7.985999999959859e-06, 8.819999999687411e-06, 7.791999999895438e-06, 7.611000000018464e-06, 7.069999999664844e-06, 6.667000000071255e-06, 6.583000000226491e-06, 7.820000000435812e-06, 6.277999999859674e-06, 0.37897912499999986, 6.5129999997637356e-06, 9.95800000058722e-06, 1.0028000000161796e-05, 6.584000000309231e-06, 6.83300000048348e-06, 9.791000000092254e-06, 9.013999999751832e-06, 7.83299999973508e-06, 9.013999999751832e-06, 9.083000000131847e-06, 6.6659999999885144e-06, 8.236000000216848e-06, 5.096999999842922e-06, 7.820000000435812e-06, 5.445000000214861e-06, 7.403000000572035e-06, 6.570000000039045e-06, 6.722000000181083e-06, 7.527999999368262e-06, 1.0528000000675775e-05, 8.347000000519245e-06, 8.165999999754092e-06, 6.430000000001712e-06, 6.8340000005662205e-06, 0.3762770550000001, 9.37499999942304e-06, 9.598000000110574e-06, 7.958999999502225e-06, 6.819999999407855e-06, 6.012999999249757e-06, 8.263999999869043e-06, 9.291999999661016e-06, 1.1527999999927374e-05, 4.514000000455098e-06, 7.652000000746284e-06, 5.7770000001511335e-06, 1.1028000000301574e-05, 8.139000000184637e-06, 9.472000000343428e-06, 5.1389999997653035e-06, 5.387999999939552e-06, 8.18100000010702e-06, 8.291000000326676e-06, 1.04169999994852e-05, 6.1389999999050815e-06, 8.152999999566646e-06, 9.902999999589213e-06, 8.958000000447441e-06, 9.193999999546065e-06]</msg>
<status status="PASS" starttime="20201030 10:56:32.788" endtime="20201030 10:56:32.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.782" endtime="20201030 10:56:32.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.405" endtime="20201030 10:56:32.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.405" endtime="20201030 10:56:32.791"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.799" endtime="20201030 10:56:32.814"></status>
</kw>
<msg timestamp="20201030 10:56:32.814" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.797" endtime="20201030 10:56:32.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:32.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:32.815" endtime="20201030 10:56:32.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.818" endtime="20201030 10:56:32.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.794" endtime="20201030 10:56:32.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.793" endtime="20201030 10:56:32.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:32.827" endtime="20201030 10:56:33.140"></status>
</kw>
<msg timestamp="20201030 10:56:33.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.200624222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.200633347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:32.826" endtime="20201030 10:56:33.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.200624222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.200633347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:33.145" endtime="20201030 10:56:33.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.155" endtime="20201030 10:56:33.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.823" endtime="20201030 10:56:33.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.821" endtime="20201030 10:56:33.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:33.162" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.236000000216848e-06}, {'diff': 5.096999999842922e-06}, {'diff': 7.820000000435812e-06}, {'diff': 5.445000000214861e-06}, {'diff': 7.403000000572035e-06}, {'diff': 6.5700000000...</msg>
<status status="PASS" starttime="20201030 10:56:33.159" endtime="20201030 10:56:33.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:33.168" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.236000000216848e-06, 5.096999999842922e-06, 7.820000000435812e-06, 5.445000000214861e-06, 7.403000000572035e-06, 6.570000000039045e-06, 6.722000000181083e-06, 7.527999999368262e-06, 1.0...</msg>
<status status="PASS" starttime="20201030 10:56:33.163" endtime="20201030 10:56:33.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.173" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:33.172" endtime="20201030 10:56:33.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.175" level="INFO">VALUE: [0, 8.236000000216848e-06, 5.096999999842922e-06, 7.820000000435812e-06, 5.445000000214861e-06, 7.403000000572035e-06, 6.570000000039045e-06, 6.722000000181083e-06, 7.527999999368262e-06, 1.0528000000675775e-05, 8.347000000519245e-06, 8.165999999754092e-06, 6.430000000001712e-06, 6.8340000005662205e-06, 0.3762770550000001, 9.37499999942304e-06, 9.598000000110574e-06, 7.958999999502225e-06, 6.819999999407855e-06, 6.012999999249757e-06, 8.263999999869043e-06, 9.291999999661016e-06, 1.1527999999927374e-05, 4.514000000455098e-06, 7.652000000746284e-06, 5.7770000001511335e-06, 1.1028000000301574e-05, 8.139000000184637e-06, 9.472000000343428e-06, 5.1389999997653035e-06, 5.387999999939552e-06, 8.18100000010702e-06, 8.291000000326676e-06, 1.04169999994852e-05, 6.1389999999050815e-06, 8.152999999566646e-06, 9.902999999589213e-06, 8.958000000447441e-06, 9.193999999546065e-06, 0.37628587499999977, 7.402999999683857e-06, 7.985999999959859e-06, 8.62499999954025e-06, 8.76300000030028e-06, 7.763000000160503e-06, 8.792000000035216e-06, 6.833999999678042e-06, 8.152999999566646e-06, 8.082999999992069e-06, 9.625000000568207e-06, 7.375000000031662e-06, 7.749999999973056e-06, 8.082999999992069e-06, 1.0291999999800794e-05, 8.651999999997884e-06, 8.082999999992069e-06, 1.1209000000178548e-05, 5.596999999468721e-06, 9.695000000142784e-06, 7.791999999895438e-06, 8.082999999992069e-06, 9.083000000131847e-06, 7.472000000063872e-06, 6.473000000006834e-06]</msg>
<status status="PASS" starttime="20201030 10:56:33.174" endtime="20201030 10:56:33.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.169" endtime="20201030 10:56:33.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.792" endtime="20201030 10:56:33.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:32.791" endtime="20201030 10:56:33.177"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.185" endtime="20201030 10:56:33.199"></status>
</kw>
<msg timestamp="20201030 10:56:33.200" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.183" endtime="20201030 10:56:33.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.201" endtime="20201030 10:56:33.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.203" endtime="20201030 10:56:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.181" endtime="20201030 10:56:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.179" endtime="20201030 10:56:33.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.212" endtime="20201030 10:56:33.528"></status>
</kw>
<msg timestamp="20201030 10:56:33.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.577297208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.577302028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:33.211" endtime="20201030 10:56:33.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.577297208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.577302028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:33.533" endtime="20201030 10:56:33.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.543" endtime="20201030 10:56:33.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.208" endtime="20201030 10:56:33.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.206" endtime="20201030 10:56:33.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:33.550" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1028000000301574e-05}, {'diff': 8.139000000184637e-06}, {'diff': 9.472000000343428e-06}, {'diff': 5.1389999997653035e-06}, {'diff': 5.387999999939552e-06}, {'diff': 8.18100000...</msg>
<status status="PASS" starttime="20201030 10:56:33.546" endtime="20201030 10:56:33.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:33.555" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1028000000301574e-05, 8.139000000184637e-06, 9.472000000343428e-06, 5.1389999997653035e-06, 5.387999999939552e-06, 8.18100000010702e-06, 8.291000000326676e-06, 1.04169999994852e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 10:56:33.551" endtime="20201030 10:56:33.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.560" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:33.559" endtime="20201030 10:56:33.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.562" level="INFO">VALUE: [0, 1.1028000000301574e-05, 8.139000000184637e-06, 9.472000000343428e-06, 5.1389999997653035e-06, 5.387999999939552e-06, 8.18100000010702e-06, 8.291000000326676e-06, 1.04169999994852e-05, 6.1389999999050815e-06, 8.152999999566646e-06, 9.902999999589213e-06, 8.958000000447441e-06, 9.193999999546065e-06, 0.37628587499999977, 7.402999999683857e-06, 7.985999999959859e-06, 8.62499999954025e-06, 8.76300000030028e-06, 7.763000000160503e-06, 8.792000000035216e-06, 6.833999999678042e-06, 8.152999999566646e-06, 8.082999999992069e-06, 9.625000000568207e-06, 7.375000000031662e-06, 7.749999999973056e-06, 8.082999999992069e-06, 1.0291999999800794e-05, 8.651999999997884e-06, 8.082999999992069e-06, 1.1209000000178548e-05, 5.596999999468721e-06, 9.695000000142784e-06, 7.791999999895438e-06, 8.082999999992069e-06, 9.083000000131847e-06, 7.472000000063872e-06, 6.473000000006834e-06, 0.3757010000000003, 8.333000000249058e-06, 1.0027999999273618e-05, 7.709000000133415e-06, 7.3890000003018486e-06, 9.125000000054229e-06, 1.040300000010319e-05, 1.115299999998598e-05, 5.4720000006724945e-06, 8.334000000331798e-06, 1.0138999999576015e-05, 8.250000000487034e-06, 4.402999999264523e-06, 7.48599999944588e-06, 9.583000000645825e-06, 6.513999999846476e-06, 8.444999999746017e-06, 8.750000000112834e-06, 8.47200000020365e-06, 8.554999999965673e-06, 5.597999999551462e-06, 8.77799999976503e-06, 5.860999999995897e-06, 5.6530000005494685e-06, 7.87500000054564e-06]</msg>
<status status="PASS" starttime="20201030 10:56:33.561" endtime="20201030 10:56:33.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.556" endtime="20201030 10:56:33.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.178" endtime="20201030 10:56:33.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.177" endtime="20201030 10:56:33.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:25.723" endtime="20201030 10:56:33.564"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:25.647" endtime="20201030 10:56:33.565" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:33.575" endtime="20201030 10:56:33.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.573" endtime="20201030 10:56:33.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.612" endtime="20201030 10:56:33.633"></status>
</kw>
<msg timestamp="20201030 10:56:33.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.610" endtime="20201030 10:56:33.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.635" endtime="20201030 10:56:33.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:33.637" endtime="20201030 10:56:33.640"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:33.607" endtime="20201030 10:56:33.640"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:33.604" endtime="20201030 10:56:33.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.603" endtime="20201030 10:56:33.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:33.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:33.644" endtime="20201030 10:56:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.642" endtime="20201030 10:56:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.601" endtime="20201030 10:56:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.601" endtime="20201030 10:56:33.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.647" endtime="20201030 10:56:33.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.598" endtime="20201030 10:56:33.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.596" endtime="20201030 10:56:33.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.571" endtime="20201030 10:56:33.650"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.660" endtime="20201030 10:56:33.675"></status>
</kw>
<msg timestamp="20201030 10:56:33.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.658" endtime="20201030 10:56:33.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:33.676" endtime="20201030 10:56:33.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.679" endtime="20201030 10:56:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.656" endtime="20201030 10:56:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.654" endtime="20201030 10:56:33.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.690" endtime="20201030 10:56:33.971"></status>
</kw>
<msg timestamp="20201030 10:56:33.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074661972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07466375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:33.688" endtime="20201030 10:56:33.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074661972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07466375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:33.975" endtime="20201030 10:56:33.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:33.984" endtime="20201030 10:56:33.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.684" endtime="20201030 10:56:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.682" endtime="20201030 10:56:33.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:33.990" level="INFO">${RESULT} = [{'diff': 1.7780000000078289e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7359999999883025e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 10:56:33.987" endtime="20201030 10:56:33.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:33.995" level="INFO">${OVERHEAD} = {'diff': [1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 10:56:33.991" endtime="20201030 10:56:33.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:33.999" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:33.998" endtime="20201030 10:56:33.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.002" level="INFO">VALUE: [1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7359999999883025e-06, 1.7910000000009862e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7780000000078289e-06, 1.7370000000016539e-06, 1.736999999987776e-06, 1.7360000000021802e-06, 1.6810000000033742e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.736999999987776e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7230000000090229e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.736999999987776e-06, 1.722999999995145e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.777999999993951e-06, 1.7370000000016539e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 10:56:34.000" endtime="20201030 10:56:34.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.996" endtime="20201030 10:56:34.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.653" endtime="20201030 10:56:34.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.652" endtime="20201030 10:56:34.003"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.013" endtime="20201030 10:56:34.027"></status>
</kw>
<msg timestamp="20201030 10:56:34.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.010" endtime="20201030 10:56:34.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.029" endtime="20201030 10:56:34.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.032" endtime="20201030 10:56:34.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.008" endtime="20201030 10:56:34.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.006" endtime="20201030 10:56:34.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.041" endtime="20201030 10:56:34.349"></status>
</kw>
<msg timestamp="20201030 10:56:34.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074869264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:34.039" endtime="20201030 10:56:34.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074869264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:34.354" endtime="20201030 10:56:34.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.364" endtime="20201030 10:56:34.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.037" endtime="20201030 10:56:34.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.035" endtime="20201030 10:56:34.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:34.371" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.736999999987776e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7359999999883025e-06...</msg>
<status status="PASS" starttime="20201030 10:56:34.368" endtime="20201030 10:56:34.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:34.377" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.736999999987776e-06, 1.722999999995145e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.777999999993951e-06, 1.7370000000016539e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:56:34.372" endtime="20201030 10:56:34.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.381" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:34.380" endtime="20201030 10:56:34.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.384" level="INFO">VALUE: [1.7360000000021802e-06, 1.736999999987776e-06, 1.722999999995145e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7359999999883025e-06, 1.777999999993951e-06, 1.7370000000016539e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7359999999883025e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7220000000373048e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7499999999670557e-06, 1.6800000000039006e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7639999999596867e-06, 1.7359999999744247e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7779999999523177e-06, 1.7370000000016539e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7780000000078289e-06, 1.7370000000016539e-06, 1.7230000000090229e-06, 1.7779999999523177e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:34.382" endtime="20201030 10:56:34.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.378" endtime="20201030 10:56:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.004" endtime="20201030 10:56:34.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.004" endtime="20201030 10:56:34.386"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.394" endtime="20201030 10:56:34.409"></status>
</kw>
<msg timestamp="20201030 10:56:34.410" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.393" endtime="20201030 10:56:34.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.411" endtime="20201030 10:56:34.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.413" endtime="20201030 10:56:34.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.390" endtime="20201030 10:56:34.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.388" endtime="20201030 10:56:34.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.423" endtime="20201030 10:56:34.735"></status>
</kw>
<msg timestamp="20201030 10:56:34.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418441444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:34.421" endtime="20201030 10:56:34.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418441444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:34.740" endtime="20201030 10:56:34.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.750" endtime="20201030 10:56:34.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.418" endtime="20201030 10:56:34.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.416" endtime="20201030 10:56:34.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:34.757" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7779999999523177e-06}, {'diff': 1.7370000000016539e-...</msg>
<status status="PASS" starttime="20201030 10:56:34.754" endtime="20201030 10:56:34.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:34.765" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7779999999523177e-06, 1.7370000000016539e-06, 1.7359999999744247e-06, 1.7500000000225668e-06...</msg>
<status status="PASS" starttime="20201030 10:56:34.759" endtime="20201030 10:56:34.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:34.768" endtime="20201030 10:56:34.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.772" level="INFO">VALUE: [1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7779999999523177e-06, 1.7370000000016539e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7780000000078289e-06, 1.7370000000016539e-06, 1.7230000000090229e-06, 1.7779999999523177e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7219999999262825e-06, 1.805999999993091e-06, 1.764000000070709e-06, 1.7499999999115445e-06, 1.6950000000237608e-06, 1.736000000085447e-06, 1.736000000085447e-06, 1.7220000000373048e-06, 1.737000000057165e-06, 1.7780000000078289e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.6809999999756187e-06, 1.6800000000039006e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.8050000000213728e-06, 1.737000000057165e-06, 1.7780000000078289e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.6660000000667807e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.736000000085447e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:34.771" endtime="20201030 10:56:34.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.766" endtime="20201030 10:56:34.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.387" endtime="20201030 10:56:34.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.386" endtime="20201030 10:56:34.774"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.782" endtime="20201030 10:56:34.798"></status>
</kw>
<msg timestamp="20201030 10:56:34.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.781" endtime="20201030 10:56:34.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:34.801" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:34.800" endtime="20201030 10:56:34.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.802" endtime="20201030 10:56:34.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.778" endtime="20201030 10:56:34.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.776" endtime="20201030 10:56:34.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:34.811" endtime="20201030 10:56:35.101"></status>
</kw>
<msg timestamp="20201030 10:56:35.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790811333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790813069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:34.810" endtime="20201030 10:56:35.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790811333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790813069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.106" endtime="20201030 10:56:35.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.116" endtime="20201030 10:56:35.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.807" endtime="20201030 10:56:35.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.805" endtime="20201030 10:56:35.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:35.123" level="INFO">${RESULT} = [{'diff': 1.736000000085447e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.736000000085447e-06}, {'diff': 1.6940000000520428e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:35.119" endtime="20201030 10:56:35.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:35.128" level="INFO">${OVERHEAD} = {'diff': [1.736000000085447e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.736000000085447e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:35.124" endtime="20201030 10:56:35.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:35.131" endtime="20201030 10:56:35.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.135" level="INFO">VALUE: [1.736000000085447e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.736000000085447e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.736000000085447e-06, 1.7499999999115445e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7779999998968066e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7639999998486644e-06, 1.666000000177803e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.722000000148327e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:35.133" endtime="20201030 10:56:35.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.129" endtime="20201030 10:56:35.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.775" endtime="20201030 10:56:35.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:34.775" endtime="20201030 10:56:35.137"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.146" endtime="20201030 10:56:35.161"></status>
</kw>
<msg timestamp="20201030 10:56:35.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.144" endtime="20201030 10:56:35.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.162" endtime="20201030 10:56:35.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.165" endtime="20201030 10:56:35.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.141" endtime="20201030 10:56:35.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.139" endtime="20201030 10:56:35.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.174" endtime="20201030 10:56:35.482"></status>
</kw>
<msg timestamp="20201030 10:56:35.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.168157556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.168159292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.173" endtime="20201030 10:56:35.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.168157556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.168159292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.486" endtime="20201030 10:56:35.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.496" endtime="20201030 10:56:35.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.170" endtime="20201030 10:56:35.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.168" endtime="20201030 10:56:35.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:35.503" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7639999998486644e-06}, {'diff': 1.666000000177803e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.737000000057165e-06}, {'diff': 1.722000000148327e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:35.500" endtime="20201030 10:56:35.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:35.508" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7639999998486644e-06, 1.666000000177803e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.722000000148327e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:56:35.504" endtime="20201030 10:56:35.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.512" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:35.511" endtime="20201030 10:56:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.515" level="INFO">VALUE: [1.7359999999744247e-06, 1.7639999998486644e-06, 1.666000000177803e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.722000000148327e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.7780000001188512e-06, 1.6529999999903566e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.764000000070709e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.722000000148327e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.6949999999127385e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7909999998622084e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201030 10:56:35.513" endtime="20201030 10:56:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.509" endtime="20201030 10:56:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.138" endtime="20201030 10:56:35.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.137" endtime="20201030 10:56:35.517"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.525" endtime="20201030 10:56:35.540"></status>
</kw>
<msg timestamp="20201030 10:56:35.540" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.523" endtime="20201030 10:56:35.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.541" endtime="20201030 10:56:35.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.544" endtime="20201030 10:56:35.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.521" endtime="20201030 10:56:35.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.519" endtime="20201030 10:56:35.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.554" endtime="20201030 10:56:35.852"></status>
</kw>
<msg timestamp="20201030 10:56:35.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.521680125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.521681875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.552" endtime="20201030 10:56:35.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.521680125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.521681875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.857" endtime="20201030 10:56:35.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.867" endtime="20201030 10:56:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.549" endtime="20201030 10:56:35.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.547" endtime="20201030 10:56:35.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:35.874" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7780000001188512e-06}, {'diff': 1.7360000001964693e-...</msg>
<status status="PASS" starttime="20201030 10:56:35.871" endtime="20201030 10:56:35.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:35.880" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06...</msg>
<status status="PASS" starttime="20201030 10:56:35.876" endtime="20201030 10:56:35.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.885" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:35.884" endtime="20201030 10:56:35.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.887" level="INFO">VALUE: [1.7500000000225668e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.7359999999744247e-06, 1.7639999998486644e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.6670000000384988e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.6809999998645964e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.791000000084253e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201030 10:56:35.886" endtime="20201030 10:56:35.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.881" endtime="20201030 10:56:35.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.518" endtime="20201030 10:56:35.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.517" endtime="20201030 10:56:35.889"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.897" endtime="20201030 10:56:35.912"></status>
</kw>
<msg timestamp="20201030 10:56:35.913" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.896" endtime="20201030 10:56:35.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:35.914" endtime="20201030 10:56:35.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.917" endtime="20201030 10:56:35.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.893" endtime="20201030 10:56:35.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.891" endtime="20201030 10:56:35.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:35.927" endtime="20201030 10:56:36.254"></status>
</kw>
<msg timestamp="20201030 10:56:36.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890580139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:35.924" endtime="20201030 10:56:36.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890580139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:36.265" endtime="20201030 10:56:36.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.283" endtime="20201030 10:56:36.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.922" endtime="20201030 10:56:36.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.920" endtime="20201030 10:56:36.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:36.290" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.791000000084253e-06...</msg>
<status status="PASS" starttime="20201030 10:56:36.286" endtime="20201030 10:56:36.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:36.294" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.791000000084253e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:36.291" endtime="20201030 10:56:36.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.299" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:36.298" endtime="20201030 10:56:36.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.301" level="INFO">VALUE: [1.7360000001964693e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.791000000084253e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7370000002792096e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7499999995784776e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.7770000000361108e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.6950000003568277e-06, 1.7230000000090229e-06, 1.6669999998164542e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:36.300" endtime="20201030 10:56:36.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.295" endtime="20201030 10:56:36.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.890" endtime="20201030 10:56:36.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.890" endtime="20201030 10:56:36.303"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.312" endtime="20201030 10:56:36.328"></status>
</kw>
<msg timestamp="20201030 10:56:36.328" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.311" endtime="20201030 10:56:36.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.329" endtime="20201030 10:56:36.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.332" endtime="20201030 10:56:36.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.308" endtime="20201030 10:56:36.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.306" endtime="20201030 10:56:36.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.341" endtime="20201030 10:56:36.662"></status>
</kw>
<msg timestamp="20201030 10:56:36.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.252407542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.252409278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:36.340" endtime="20201030 10:56:36.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.252407542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.252409278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:36.667" endtime="20201030 10:56:36.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.677" endtime="20201030 10:56:36.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.337" endtime="20201030 10:56:36.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.335" endtime="20201030 10:56:36.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:36.684" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7500000000225668e-06...</msg>
<status status="PASS" starttime="20201030 10:56:36.681" endtime="20201030 10:56:36.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:36.690" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:36.686" endtime="20201030 10:56:36.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.695" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:36.693" endtime="20201030 10:56:36.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.697" level="INFO">VALUE: [1.7360000001964693e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.681000000086641e-06, 1.7640000002927536e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7220000003703717e-06, 1.7909999998622084e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7640000002927536e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201030 10:56:36.696" endtime="20201030 10:56:36.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.691" endtime="20201030 10:56:36.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.304" endtime="20201030 10:56:36.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.304" endtime="20201030 10:56:36.699"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.707" endtime="20201030 10:56:36.723"></status>
</kw>
<msg timestamp="20201030 10:56:36.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.706" endtime="20201030 10:56:36.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.725" endtime="20201030 10:56:36.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.727" endtime="20201030 10:56:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.703" endtime="20201030 10:56:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.701" endtime="20201030 10:56:36.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.737" endtime="20201030 10:56:37.037"></status>
</kw>
<msg timestamp="20201030 10:56:37.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.654728819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.654730528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:36.735" endtime="20201030 10:56:37.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.654728819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.654730528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.042" endtime="20201030 10:56:37.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.052" endtime="20201030 10:56:37.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.733" endtime="20201030 10:56:37.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.731" endtime="20201030 10:56:37.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:37.060" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:37.056" endtime="20201030 10:56:37.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:37.065" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7...</msg>
<status status="PASS" starttime="20201030 10:56:37.061" endtime="20201030 10:56:37.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.070" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:37.068" endtime="20201030 10:56:37.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.072" level="INFO">VALUE: [1.7090000001829253e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7220000003703717e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7079999996560957e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201030 10:56:37.071" endtime="20201030 10:56:37.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.066" endtime="20201030 10:56:37.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.700" endtime="20201030 10:56:37.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.700" endtime="20201030 10:56:37.074"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.083" endtime="20201030 10:56:37.098"></status>
</kw>
<msg timestamp="20201030 10:56:37.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.081" endtime="20201030 10:56:37.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.101" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.100" endtime="20201030 10:56:37.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.102" endtime="20201030 10:56:37.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.078" endtime="20201030 10:56:37.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.076" endtime="20201030 10:56:37.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.113" endtime="20201030 10:56:37.431"></status>
</kw>
<msg timestamp="20201030 10:56:37.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.037763597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.037765333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.111" endtime="20201030 10:56:37.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.037763597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.037765333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.436" endtime="20201030 10:56:37.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.446" endtime="20201030 10:56:37.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.108" endtime="20201030 10:56:37.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.106" endtime="20201030 10:56:37.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:37.453" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.73599999975238e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:37.450" endtime="20201030 10:56:37.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:37.458" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7079999996560957e-06, 1.7369...</msg>
<status status="PASS" starttime="20201030 10:56:37.454" endtime="20201030 10:56:37.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.463" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:37.461" endtime="20201030 10:56:37.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.466" level="INFO">VALUE: [1.73599999975238e-06, 1.7219999999262825e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7079999996560957e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6659999997337138e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6940000002740874e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7220000003703717e-06, 1.7770000000361108e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:37.464" endtime="20201030 10:56:37.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.459" endtime="20201030 10:56:37.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.075" endtime="20201030 10:56:37.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.075" endtime="20201030 10:56:37.468"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.477" endtime="20201030 10:56:37.492"></status>
</kw>
<msg timestamp="20201030 10:56:37.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.475" endtime="20201030 10:56:37.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.494" endtime="20201030 10:56:37.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.496" endtime="20201030 10:56:37.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.472" endtime="20201030 10:56:37.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.471" endtime="20201030 10:56:37.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.506" endtime="20201030 10:56:37.820"></status>
</kw>
<msg timestamp="20201030 10:56:37.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.403862833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.403864542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.504" endtime="20201030 10:56:37.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.403862833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.403864542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.825" endtime="20201030 10:56:37.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.835" endtime="20201030 10:56:37.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.501" endtime="20201030 10:56:37.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.500" endtime="20201030 10:56:37.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:37.842" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.6800000000039006e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7370000002792096e-06}, {'diff': 1.7220000003703717e-...</msg>
<status status="PASS" starttime="20201030 10:56:37.838" endtime="20201030 10:56:37.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:37.848" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7220000003703717e-06, 1.7770000000361108e-06, 1.73599999975238e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:37.843" endtime="20201030 10:56:37.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.852" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:37.851" endtime="20201030 10:56:37.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.855" level="INFO">VALUE: [1.7090000001829253e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7220000003703717e-06, 1.7770000000361108e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7370000002792096e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.6669999998164542e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000002792096e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201030 10:56:37.853" endtime="20201030 10:56:37.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.849" endtime="20201030 10:56:37.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.469" endtime="20201030 10:56:37.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.469" endtime="20201030 10:56:37.857"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.865" endtime="20201030 10:56:37.880"></status>
</kw>
<msg timestamp="20201030 10:56:37.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.863" endtime="20201030 10:56:37.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:37.882" endtime="20201030 10:56:37.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.884" endtime="20201030 10:56:37.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.861" endtime="20201030 10:56:37.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.859" endtime="20201030 10:56:37.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:37.894" endtime="20201030 10:56:38.209"></status>
</kw>
<msg timestamp="20201030 10:56:38.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.787032972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.787034708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:37.892" endtime="20201030 10:56:38.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.787032972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.787034708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.214" endtime="20201030 10:56:38.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.224" endtime="20201030 10:56:38.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.889" endtime="20201030 10:56:38.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.887" endtime="20201030 10:56:38.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:38.231" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7370000002792096e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:38.227" endtime="20201030 10:56:38.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:38.236" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000002792096e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.723...</msg>
<status status="PASS" starttime="20201030 10:56:38.232" endtime="20201030 10:56:38.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.240" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:38.239" endtime="20201030 10:56:38.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.243" level="INFO">VALUE: [1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000002792096e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.8060000002151355e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7089999992947469e-06, 1.7369999998351204e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7229999995649337e-06, 1.7769999995920216e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.6810000005307302e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201030 10:56:38.241" endtime="20201030 10:56:38.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.237" endtime="20201030 10:56:38.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.858" endtime="20201030 10:56:38.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.857" endtime="20201030 10:56:38.245"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.254" endtime="20201030 10:56:38.269"></status>
</kw>
<msg timestamp="20201030 10:56:38.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.251" endtime="20201030 10:56:38.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.271" endtime="20201030 10:56:38.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.273" endtime="20201030 10:56:38.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.249" endtime="20201030 10:56:38.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.247" endtime="20201030 10:56:38.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.283" endtime="20201030 10:56:38.601"></status>
</kw>
<msg timestamp="20201030 10:56:38.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.164547597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.164549333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.281" endtime="20201030 10:56:38.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.164547597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.164549333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.606" endtime="20201030 10:56:38.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.616" endtime="20201030 10:56:38.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.278" endtime="20201030 10:56:38.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.276" endtime="20201030 10:56:38.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:38.624" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7630000002100132e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.73599999975238e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:38.620" endtime="20201030 10:56:38.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:38.629" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.737...</msg>
<status status="PASS" starttime="20201030 10:56:38.625" endtime="20201030 10:56:38.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.633" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:38.632" endtime="20201030 10:56:38.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.636" level="INFO">VALUE: [1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.6810000005307302e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7370000007232989e-06, 1.6810000005307302e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6810000005307302e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7089999992947469e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.666000000177803e-06, 1.7500000000225668e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.723000000453112e-06]</msg>
<status status="PASS" starttime="20201030 10:56:38.634" endtime="20201030 10:56:38.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.630" endtime="20201030 10:56:38.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.246" endtime="20201030 10:56:38.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.245" endtime="20201030 10:56:38.638"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.646" endtime="20201030 10:56:38.662"></status>
</kw>
<msg timestamp="20201030 10:56:38.662" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.645" endtime="20201030 10:56:38.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.663" endtime="20201030 10:56:38.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.666" endtime="20201030 10:56:38.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.642" endtime="20201030 10:56:38.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.640" endtime="20201030 10:56:38.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.676" endtime="20201030 10:56:38.984"></status>
</kw>
<msg timestamp="20201030 10:56:38.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543414389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543416139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.674" endtime="20201030 10:56:38.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543414389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543416139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.989" endtime="20201030 10:56:38.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.000" endtime="20201030 10:56:39.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.671" endtime="20201030 10:56:39.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.670" endtime="20201030 10:56:39.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.007" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.7229999995649337e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:39.003" endtime="20201030 10:56:39.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.013" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:39.008" endtime="20201030 10:56:39.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.017" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:39.016" endtime="20201030 10:56:39.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.020" level="INFO">VALUE: [1.7500000000225668e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7640000002927536e-06, 1.7919999999449487e-06, 1.6940000007181766e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7910000007503868e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7780000005629404e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.666999999372365e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.6799999995598114e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7229999995649337e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06]</msg>
<status status="PASS" starttime="20201030 10:56:39.018" endtime="20201030 10:56:39.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.014" endtime="20201030 10:56:39.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.639" endtime="20201030 10:56:39.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.638" endtime="20201030 10:56:39.022"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.030" endtime="20201030 10:56:39.046"></status>
</kw>
<msg timestamp="20201030 10:56:39.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.028" endtime="20201030 10:56:39.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.047" endtime="20201030 10:56:39.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.050" endtime="20201030 10:56:39.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.026" endtime="20201030 10:56:39.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.024" endtime="20201030 10:56:39.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.059" endtime="20201030 10:56:39.373"></status>
</kw>
<msg timestamp="20201030 10:56:39.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.926193917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.926195667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.058" endtime="20201030 10:56:39.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.926193917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.926195667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.378" endtime="20201030 10:56:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.388" endtime="20201030 10:56:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.055" endtime="20201030 10:56:39.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.053" endtime="20201030 10:56:39.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.395" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:39.392" endtime="20201030 10:56:39.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.400" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:39.396" endtime="20201030 10:56:39.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.404" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:39.403" endtime="20201030 10:56:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.407" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7229999995649337e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7630000002100132e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.6809999996425518e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6800000004479898e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201030 10:56:39.406" endtime="20201030 10:56:39.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.401" endtime="20201030 10:56:39.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.023" endtime="20201030 10:56:39.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.022" endtime="20201030 10:56:39.409"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.418" endtime="20201030 10:56:39.433"></status>
</kw>
<msg timestamp="20201030 10:56:39.434" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.416" endtime="20201030 10:56:39.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.435" endtime="20201030 10:56:39.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.438" endtime="20201030 10:56:39.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.413" endtime="20201030 10:56:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.411" endtime="20201030 10:56:39.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.447" endtime="20201030 10:56:39.759"></status>
</kw>
<msg timestamp="20201030 10:56:39.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.300579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.30058075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:39.445" endtime="20201030 10:56:39.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.300579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.30058075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:39.764" endtime="20201030 10:56:39.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.774" endtime="20201030 10:56:39.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.443" endtime="20201030 10:56:39.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.441" endtime="20201030 10:56:39.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.781" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7369999998351204e-06...</msg>
<status status="PASS" starttime="20201030 10:56:39.777" endtime="20201030 10:56:39.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.787" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6800000004479898e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:39.782" endtime="20201030 10:56:39.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.791" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:39.790" endtime="20201030 10:56:39.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.794" level="INFO">VALUE: [1.73599999975238e-06, 1.7360000006405585e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6800000004479898e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6800000004479898e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6799999995598114e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201030 10:56:39.792" endtime="20201030 10:56:39.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.788" endtime="20201030 10:56:39.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.410" endtime="20201030 10:56:39.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.410" endtime="20201030 10:56:39.796"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.804" endtime="20201030 10:56:39.819"></status>
</kw>
<msg timestamp="20201030 10:56:39.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.802" endtime="20201030 10:56:39.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.820" endtime="20201030 10:56:39.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.823" endtime="20201030 10:56:39.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.800" endtime="20201030 10:56:39.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.798" endtime="20201030 10:56:39.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.832" endtime="20201030 10:56:40.150"></status>
</kw>
<msg timestamp="20201030 10:56:40.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.678880403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.678882139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.831" endtime="20201030 10:56:40.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.678880403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.678882139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.155" endtime="20201030 10:56:40.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.166" endtime="20201030 10:56:40.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.828" endtime="20201030 10:56:40.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.826" endtime="20201030 10:56:40.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:40.173" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7780000005629404e-06}, {'diff': 1.73599999975238e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:56:40.169" endtime="20201030 10:56:40.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:40.179" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.72200...</msg>
<status status="PASS" starttime="20201030 10:56:40.174" endtime="20201030 10:56:40.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.183" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:40.182" endtime="20201030 10:56:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.186" level="INFO">VALUE: [1.73599999975238e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7909999998622084e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7770000004802e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7770000004802e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 10:56:40.184" endtime="20201030 10:56:40.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.179" endtime="20201030 10:56:40.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.797" endtime="20201030 10:56:40.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.796" endtime="20201030 10:56:40.818"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.836" endtime="20201030 10:56:40.856"></status>
</kw>
<msg timestamp="20201030 10:56:40.857" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.832" endtime="20201030 10:56:40.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.860" endtime="20201030 10:56:40.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.865" endtime="20201030 10:56:40.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.826" endtime="20201030 10:56:40.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.822" endtime="20201030 10:56:40.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.888" endtime="20201030 10:56:41.213"></status>
</kw>
<msg timestamp="20201030 10:56:41.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.054469514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.05447125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:40.884" endtime="20201030 10:56:41.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.054469514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.05447125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:41.218" endtime="20201030 10:56:41.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.228" endtime="20201030 10:56:41.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.876" endtime="20201030 10:56:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.872" endtime="20201030 10:56:41.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:41.236" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7229999995649337e-06...</msg>
<status status="PASS" starttime="20201030 10:56:41.232" endtime="20201030 10:56:41.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:41.241" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:41.237" endtime="20201030 10:56:41.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:41.244" endtime="20201030 10:56:41.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.248" level="INFO">VALUE: [1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.777999999674762e-06]</msg>
<status status="PASS" starttime="20201030 10:56:41.246" endtime="20201030 10:56:41.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.241" endtime="20201030 10:56:41.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.819" endtime="20201030 10:56:41.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.819" endtime="20201030 10:56:41.250"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.258" endtime="20201030 10:56:41.274"></status>
</kw>
<msg timestamp="20201030 10:56:41.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.257" endtime="20201030 10:56:41.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.276" endtime="20201030 10:56:41.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.278" endtime="20201030 10:56:41.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.254" endtime="20201030 10:56:41.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.252" endtime="20201030 10:56:41.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.288" endtime="20201030 10:56:41.600"></status>
</kw>
<msg timestamp="20201030 10:56:41.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.078594694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.078596444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.286" endtime="20201030 10:56:41.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.078594694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.078596444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.605" endtime="20201030 10:56:41.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.615" endtime="20201030 10:56:41.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.284" endtime="20201030 10:56:41.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.282" endtime="20201030 10:56:41.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:41.622" level="INFO">${RESULT} = [{'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7780000005629404e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:41.619" endtime="20201030 10:56:41.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:41.628" level="INFO">${OVERHEAD} = {'diff': [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7359...</msg>
<status status="PASS" starttime="20201030 10:56:41.623" endtime="20201030 10:56:41.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.632" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:41.631" endtime="20201030 10:56:41.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.635" level="INFO">VALUE: [1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.7229999995649337e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7769999995920216e-06, 1.7640000002927536e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7369999998351204e-06]</msg>
<status status="PASS" starttime="20201030 10:56:41.633" endtime="20201030 10:56:41.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.629" endtime="20201030 10:56:41.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.251" endtime="20201030 10:56:41.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.251" endtime="20201030 10:56:41.637"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.645" endtime="20201030 10:56:41.661"></status>
</kw>
<msg timestamp="20201030 10:56:41.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.644" endtime="20201030 10:56:41.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.662" endtime="20201030 10:56:41.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.665" endtime="20201030 10:56:41.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.641" endtime="20201030 10:56:41.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.639" endtime="20201030 10:56:41.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.674" endtime="20201030 10:56:41.997"></status>
</kw>
<msg timestamp="20201030 10:56:42.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.489127722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.489129458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.673" endtime="20201030 10:56:42.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.489127722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.489129458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.002" endtime="20201030 10:56:42.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.013" endtime="20201030 10:56:42.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.670" endtime="20201030 10:56:42.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.668" endtime="20201030 10:56:42.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:42.020" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:56:42.016" endtime="20201030 10:56:42.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:42.025" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7089...</msg>
<status status="PASS" starttime="20201030 10:56:42.021" endtime="20201030 10:56:42.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.029" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:42.028" endtime="20201030 10:56:42.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.032" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7229999995649337e-06]</msg>
<status status="PASS" starttime="20201030 10:56:42.030" endtime="20201030 10:56:42.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.025" endtime="20201030 10:56:42.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.638" endtime="20201030 10:56:42.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.637" endtime="20201030 10:56:42.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:33.651" endtime="20201030 10:56:42.034"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:33.568" endtime="20201030 10:56:42.039" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:42.048" endtime="20201030 10:56:42.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.046" endtime="20201030 10:56:42.068"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.084" endtime="20201030 10:56:42.104"></status>
</kw>
<msg timestamp="20201030 10:56:42.104" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.083" endtime="20201030 10:56:42.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.106" endtime="20201030 10:56:42.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:42.108" endtime="20201030 10:56:42.111"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:42.080" endtime="20201030 10:56:42.111"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:42.077" endtime="20201030 10:56:42.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.076" endtime="20201030 10:56:42.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:42.116" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:42.115" endtime="20201030 10:56:42.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.113" endtime="20201030 10:56:42.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.075" endtime="20201030 10:56:42.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.074" endtime="20201030 10:56:42.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.118" endtime="20201030 10:56:42.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.070" endtime="20201030 10:56:42.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.069" endtime="20201030 10:56:42.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.045" endtime="20201030 10:56:42.121"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.130" endtime="20201030 10:56:42.152"></status>
</kw>
<msg timestamp="20201030 10:56:42.152" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.129" endtime="20201030 10:56:42.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.155" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.153" endtime="20201030 10:56:42.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.156" endtime="20201030 10:56:42.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.126" endtime="20201030 10:56:42.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.124" endtime="20201030 10:56:42.159"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.161" endtime="20201030 10:56:42.163"></status>
</kw>
<msg timestamp="20201030 10:56:42.164" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:42.160" endtime="20201030 10:56:42.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.168" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:42.167" endtime="20201030 10:56:42.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.171" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:42.169" endtime="20201030 10:56:42.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.164" endtime="20201030 10:56:42.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.176" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:42.175" endtime="20201030 10:56:42.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.178" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:42.177" endtime="20201030 10:56:42.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.173" endtime="20201030 10:56:42.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.186" endtime="20201030 10:56:42.470"></status>
</kw>
<msg timestamp="20201030 10:56:42.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072836347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072879139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.184" endtime="20201030 10:56:42.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072836347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072879139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.474" endtime="20201030 10:56:42.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.483" endtime="20201030 10:56:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.182" endtime="20201030 10:56:42.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.180" endtime="20201030 10:56:42.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:42.490" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 8.055999999992403e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.041999999999772e-06}, {'diff': 8.124999999997717e-06}, {'diff': 8.097999999998051e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:42.486" endtime="20201030 10:56:42.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:42.494" level="INFO">${OVERHEAD} = {'diff': [4.279199999999983e-05, 8.055999999992403e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.124999999997717e-06, 8.097999999998051e-06, 8.055999999992403e-06, 8.027999999993263e-06, 8.0560...</msg>
<status status="PASS" starttime="20201030 10:56:42.491" endtime="20201030 10:56:42.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.499" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:56:42.498" endtime="20201030 10:56:42.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.502" level="INFO">VALUE: [4.279199999999983e-05, 8.055999999992403e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.124999999997717e-06, 8.097999999998051e-06, 8.055999999992403e-06, 8.027999999993263e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.027999999993263e-06, 8.054999999992929e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.041000000000298e-06, 8.041000000000298e-06, 8.041999999999772e-06, 7.986000000001492e-06, 8.069999999998911e-06, 8.111000000005086e-06, 8.069999999998911e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.02800000000714e-06, 8.055000000006807e-06, 8.054999999992929e-06, 8.055000000006807e-06, 8.026999999993789e-06, 8.069999999998911e-06, 8.08400000000542e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.055999999992403e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.000000000008e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.111999999990682e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.068999999999438e-06]</msg>
<status status="PASS" starttime="20201030 10:56:42.500" endtime="20201030 10:56:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.495" endtime="20201030 10:56:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.122" endtime="20201030 10:56:42.504"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:42.042" endtime="20201030 10:56:42.505" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:42.514" endtime="20201030 10:56:42.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.512" endtime="20201030 10:56:42.534"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.548" endtime="20201030 10:56:42.569"></status>
</kw>
<msg timestamp="20201030 10:56:42.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.546" endtime="20201030 10:56:42.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.571" endtime="20201030 10:56:42.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.576" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:42.574" endtime="20201030 10:56:42.576"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:42.543" endtime="20201030 10:56:42.577"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:42.541" endtime="20201030 10:56:42.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.540" endtime="20201030 10:56:42.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:42.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:42.581" endtime="20201030 10:56:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.578" endtime="20201030 10:56:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.539" endtime="20201030 10:56:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.538" endtime="20201030 10:56:42.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.583" endtime="20201030 10:56:42.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.537" endtime="20201030 10:56:42.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.535" endtime="20201030 10:56:42.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.511" endtime="20201030 10:56:42.586"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.597" endtime="20201030 10:56:42.665"></status>
</kw>
<msg timestamp="20201030 10:56:42.666" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.594" endtime="20201030 10:56:42.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.669" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.667" endtime="20201030 10:56:42.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.670" endtime="20201030 10:56:42.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.592" endtime="20201030 10:56:42.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.589" endtime="20201030 10:56:42.672"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.675" endtime="20201030 10:56:42.677"></status>
</kw>
<msg timestamp="20201030 10:56:42.677" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:42.674" endtime="20201030 10:56:42.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.682" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:42.681" endtime="20201030 10:56:42.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.684" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:42.683" endtime="20201030 10:56:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.678" endtime="20201030 10:56:42.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.689" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:42.687" endtime="20201030 10:56:42.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.691" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:42.690" endtime="20201030 10:56:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.685" endtime="20201030 10:56:42.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.698" endtime="20201030 10:56:42.990"></status>
</kw>
<msg timestamp="20201030 10:56:42.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074489389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074523514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.697" endtime="20201030 10:56:42.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074489389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074523514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.994" endtime="20201030 10:56:43.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.002" endtime="20201030 10:56:43.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.694" endtime="20201030 10:56:43.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.692" endtime="20201030 10:56:43.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:43.009" level="INFO">${RESULT} = [{'diff': 3.4124999999995964e-05}, {'diff': 3.420799999999391e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.415199999999563e-05}, {'diff': 3.4180999999994244e-05}, {'diff': 3.416600000000214e-05},...</msg>
<status status="PASS" starttime="20201030 10:56:43.006" endtime="20201030 10:56:43.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:43.014" level="INFO">${OVERHEAD} = {'diff': [3.4124999999995964e-05, 3.420799999999391e-05, 3.422200000000042e-05, 3.415199999999563e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 10:56:43.010" endtime="20201030 10:56:43.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.019" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:56:43.018" endtime="20201030 10:56:43.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.021" level="INFO">VALUE: [3.4124999999995964e-05, 3.420799999999391e-05, 3.422200000000042e-05, 3.415199999999563e-05, 3.4180999999994244e-05, 3.416600000000214e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.418100000000812e-05, 3.420800000000779e-05, 3.420799999999391e-05, 3.419500000000075e-05, 3.418000000000865e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.419400000000128e-05, 3.4180999999994244e-05, 3.411100000000333e-05, 3.41939999999874e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.419400000000128e-05, 3.413900000000247e-05, 3.417999999999477e-05, 3.416700000000161e-05, 3.420799999999391e-05, 3.4180999999994244e-05, 3.4180999999994244e-05, 3.4152999999995104e-05, 3.415200000000951e-05, 3.419400000000128e-05, 3.416600000000214e-05, 3.417999999999477e-05, 3.419500000000075e-05, 3.413900000000247e-05, 3.419400000000128e-05, 3.416700000000161e-05, 3.420800000000779e-05, 3.416599999998826e-05, 3.419400000000128e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.418100000000812e-05]</msg>
<status status="PASS" starttime="20201030 10:56:43.020" endtime="20201030 10:56:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.015" endtime="20201030 10:56:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.587" endtime="20201030 10:56:43.023"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:42.508" endtime="20201030 10:56:43.024" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:43.034" endtime="20201030 10:56:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.032" endtime="20201030 10:56:43.054"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.068" endtime="20201030 10:56:43.089"></status>
</kw>
<msg timestamp="20201030 10:56:43.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.066" endtime="20201030 10:56:43.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.091" endtime="20201030 10:56:43.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.095" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:43.093" endtime="20201030 10:56:43.096"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:43.063" endtime="20201030 10:56:43.096"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:43.061" endtime="20201030 10:56:43.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.059" endtime="20201030 10:56:43.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:43.101" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:43.101" endtime="20201030 10:56:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.098" endtime="20201030 10:56:43.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.059" endtime="20201030 10:56:43.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.058" endtime="20201030 10:56:43.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.104" endtime="20201030 10:56:43.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.056" endtime="20201030 10:56:43.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.055" endtime="20201030 10:56:43.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.031" endtime="20201030 10:56:43.107"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.117" endtime="20201030 10:56:43.314"></status>
</kw>
<msg timestamp="20201030 10:56:43.314" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.115" endtime="20201030 10:56:43.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.317" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.315" endtime="20201030 10:56:43.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.318" endtime="20201030 10:56:43.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.112" endtime="20201030 10:56:43.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.110" endtime="20201030 10:56:43.321"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.323" endtime="20201030 10:56:43.325"></status>
</kw>
<msg timestamp="20201030 10:56:43.326" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:43.322" endtime="20201030 10:56:43.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.330" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:43.329" endtime="20201030 10:56:43.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.332" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:43.331" endtime="20201030 10:56:43.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.326" endtime="20201030 10:56:43.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.337" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:43.336" endtime="20201030 10:56:43.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.339" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:43.338" endtime="20201030 10:56:43.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.334" endtime="20201030 10:56:43.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.347" endtime="20201030 10:56:43.640"></status>
</kw>
<msg timestamp="20201030 10:56:43.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076188847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076253556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.345" endtime="20201030 10:56:43.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076188847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076253556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.644" endtime="20201030 10:56:43.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.652" endtime="20201030 10:56:43.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.342" endtime="20201030 10:56:43.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.341" endtime="20201030 10:56:43.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:43.659" level="INFO">${RESULT} = [{'diff': 6.470899999999613e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434700000000626e-05}, {'diff': 6.433399999999923e-05}, {'diff': 6.436099999999889e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:56:43.655" endtime="20201030 10:56:43.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:43.664" level="INFO">${OVERHEAD} = {'diff': [6.470899999999613e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.434699999999238e-05, 6.4332...</msg>
<status status="PASS" starttime="20201030 10:56:43.661" endtime="20201030 10:56:43.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.670" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:56:43.669" endtime="20201030 10:56:43.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.673" level="INFO">VALUE: [6.470899999999613e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.434800000000573e-05, 6.436099999999889e-05, 6.434699999999238e-05, 6.434799999999186e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.437499999997764e-05, 6.434700000002014e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.436100000001277e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.434800000001961e-05, 6.436100000001277e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.433399999999923e-05, 6.434700000002014e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.43750000000054e-05, 6.431899999997936e-05, 6.436100000001277e-05, 6.438899999999803e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.434699999999238e-05, 6.436099999998501e-05, 6.434700000002014e-05, 6.434699999999238e-05, 6.434800000001961e-05, 6.434700000002014e-05]</msg>
<status status="PASS" starttime="20201030 10:56:43.671" endtime="20201030 10:56:43.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.665" endtime="20201030 10:56:43.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.108" endtime="20201030 10:56:43.674"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:43.028" endtime="20201030 10:56:43.675" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:43.682" endtime="20201030 10:56:43.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.681" endtime="20201030 10:56:43.702"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.716" endtime="20201030 10:56:43.739"></status>
</kw>
<msg timestamp="20201030 10:56:43.740" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.714" endtime="20201030 10:56:43.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.743" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.741" endtime="20201030 10:56:43.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.746" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:43.744" endtime="20201030 10:56:43.746"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:43.711" endtime="20201030 10:56:43.747"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:43.709" endtime="20201030 10:56:43.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.707" endtime="20201030 10:56:43.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:43.752" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:43.751" endtime="20201030 10:56:43.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.749" endtime="20201030 10:56:43.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.707" endtime="20201030 10:56:43.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.706" endtime="20201030 10:56:43.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.754" endtime="20201030 10:56:43.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.705" endtime="20201030 10:56:43.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.703" endtime="20201030 10:56:43.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.680" endtime="20201030 10:56:43.757"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.766" endtime="20201030 10:56:43.791"></status>
</kw>
<msg timestamp="20201030 10:56:43.792" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.764" endtime="20201030 10:56:43.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.797" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.794" endtime="20201030 10:56:43.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.800" endtime="20201030 10:56:43.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.762" endtime="20201030 10:56:43.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.759" endtime="20201030 10:56:43.805"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.810" endtime="20201030 10:56:43.814"></status>
</kw>
<msg timestamp="20201030 10:56:43.815" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:43.807" endtime="20201030 10:56:43.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.823" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:43.821" endtime="20201030 10:56:43.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.827" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:43.825" endtime="20201030 10:56:43.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.816" endtime="20201030 10:56:43.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.837" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:43.835" endtime="20201030 10:56:43.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.842" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:43.839" endtime="20201030 10:56:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.830" endtime="20201030 10:56:43.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.859" endtime="20201030 10:56:44.145"></status>
</kw>
<msg timestamp="20201030 10:56:44.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073640514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.856" endtime="20201030 10:56:44.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073640514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.149" endtime="20201030 10:56:44.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.157" endtime="20201030 10:56:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.848" endtime="20201030 10:56:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.845" endtime="20201030 10:56:44.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:44.164" level="INFO">${RESULT} = [{'diff': 5.903000000001546e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5559999999997798e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:44.160" endtime="20201030 10:56:44.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:44.168" level="INFO">${OVERHEAD} = {'diff': [5.903000000001546e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:56:44.165" endtime="20201030 10:56:44.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.172" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:56:44.171" endtime="20201030 10:56:44.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.175" level="INFO">VALUE: [5.903000000001546e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.4579999999958515e-06, 1.541999999993271e-06, 1.5279999999867622e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.5409999999937973e-06, 1.5410000000076751e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.4860000000088691e-06, 1.5139999999941312e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.596999999992077e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5279999999867622e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201030 10:56:44.173" endtime="20201030 10:56:44.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.169" endtime="20201030 10:56:44.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.758" endtime="20201030 10:56:44.176"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:43.677" endtime="20201030 10:56:44.177" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:44.185" endtime="20201030 10:56:44.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.183" endtime="20201030 10:56:44.205"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.219" endtime="20201030 10:56:44.240"></status>
</kw>
<msg timestamp="20201030 10:56:44.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.217" endtime="20201030 10:56:44.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.242" endtime="20201030 10:56:44.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:44.244" endtime="20201030 10:56:44.246"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:44.214" endtime="20201030 10:56:44.247"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:44.212" endtime="20201030 10:56:44.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.211" endtime="20201030 10:56:44.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:44.252" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:44.251" endtime="20201030 10:56:44.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.249" endtime="20201030 10:56:44.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.210" endtime="20201030 10:56:44.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.209" endtime="20201030 10:56:44.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.253" endtime="20201030 10:56:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.208" endtime="20201030 10:56:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.205" endtime="20201030 10:56:44.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.182" endtime="20201030 10:56:44.256"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.265" endtime="20201030 10:56:44.335"></status>
</kw>
<msg timestamp="20201030 10:56:44.335" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.263" endtime="20201030 10:56:44.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.338" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.336" endtime="20201030 10:56:44.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.339" endtime="20201030 10:56:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.261" endtime="20201030 10:56:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.259" endtime="20201030 10:56:44.342"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.344" endtime="20201030 10:56:44.347"></status>
</kw>
<msg timestamp="20201030 10:56:44.347" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:44.342" endtime="20201030 10:56:44.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.351" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:44.350" endtime="20201030 10:56:44.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.353" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:44.352" endtime="20201030 10:56:44.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.348" endtime="20201030 10:56:44.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.358" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:44.357" endtime="20201030 10:56:44.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.360" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:44.359" endtime="20201030 10:56:44.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.355" endtime="20201030 10:56:44.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.367" endtime="20201030 10:56:44.658"></status>
</kw>
<msg timestamp="20201030 10:56:44.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071896722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071905625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.366" endtime="20201030 10:56:44.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071896722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071905625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.662" endtime="20201030 10:56:44.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.670" endtime="20201030 10:56:44.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.363" endtime="20201030 10:56:44.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.362" endtime="20201030 10:56:44.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:44.677" level="INFO">${RESULT} = [{'diff': 8.903000000004546e-06}, {'diff': 8.902999999990668e-06}, {'diff': 8.902999999990668e-06}, {'diff': 8.903000000004546e-06}, {'diff': 8.875000000005406e-06}, {'diff': 8.860999999998898e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:44.673" endtime="20201030 10:56:44.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:44.682" level="INFO">${OVERHEAD} = {'diff': [8.903000000004546e-06, 8.902999999990668e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.861000000012775e-06, 8.903000000004546e-06, 8.8889...</msg>
<status status="PASS" starttime="20201030 10:56:44.678" endtime="20201030 10:56:44.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.686" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:56:44.685" endtime="20201030 10:56:44.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.689" level="INFO">VALUE: [8.903000000004546e-06, 8.902999999990668e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.861000000012775e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.902999999990668e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.860999999998898e-06, 8.901999999991195e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.917000000011055e-06, 8.903000000004546e-06, 8.971999999995983e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.916999999997177e-06, 8.874999999991529e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.887999999998564e-06, 8.958000000003352e-06, 8.860999999998898e-06, 8.889000000011915e-06, 8.874999999991529e-06]</msg>
<status status="PASS" starttime="20201030 10:56:44.687" endtime="20201030 10:56:44.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.683" endtime="20201030 10:56:44.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.257" endtime="20201030 10:56:44.690"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:44.179" endtime="20201030 10:56:44.691" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:44.699" endtime="20201030 10:56:44.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.697" endtime="20201030 10:56:44.719"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.732" endtime="20201030 10:56:44.751"></status>
</kw>
<msg timestamp="20201030 10:56:44.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.730" endtime="20201030 10:56:44.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.753" endtime="20201030 10:56:44.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.758" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:44.756" endtime="20201030 10:56:44.758"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:44.728" endtime="20201030 10:56:44.759"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:44.725" endtime="20201030 10:56:44.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.724" endtime="20201030 10:56:44.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:44.764" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:44.764" endtime="20201030 10:56:44.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.761" endtime="20201030 10:56:44.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.723" endtime="20201030 10:56:44.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.723" endtime="20201030 10:56:44.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.766" endtime="20201030 10:56:44.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.721" endtime="20201030 10:56:44.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.720" endtime="20201030 10:56:44.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.696" endtime="20201030 10:56:44.769"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.782" endtime="20201030 10:56:44.980"></status>
</kw>
<msg timestamp="20201030 10:56:44.980" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.780" endtime="20201030 10:56:44.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.981" endtime="20201030 10:56:44.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.984" endtime="20201030 10:56:44.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.777" endtime="20201030 10:56:44.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.772" endtime="20201030 10:56:44.986"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.988" endtime="20201030 10:56:44.990"></status>
</kw>
<msg timestamp="20201030 10:56:44.991" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:44.987" endtime="20201030 10:56:44.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.995" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:44.994" endtime="20201030 10:56:44.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.997" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:44.996" endtime="20201030 10:56:44.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.992" endtime="20201030 10:56:44.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.002" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:45.001" endtime="20201030 10:56:45.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.004" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:45.003" endtime="20201030 10:56:45.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.998" endtime="20201030 10:56:45.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.011" endtime="20201030 10:56:45.309"></status>
</kw>
<msg timestamp="20201030 10:56:45.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076390181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076406583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.009" endtime="20201030 10:56:45.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076390181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076406583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.317" endtime="20201030 10:56:45.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.335" endtime="20201030 10:56:45.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.007" endtime="20201030 10:56:45.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.005" endtime="20201030 10:56:45.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:45.349" level="INFO">${RESULT} = [{'diff': 1.6401999999998695e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.637499999999903e-05}, {'diff': 1.636099999999252e-05}, {'diff': 1.6402000000012573e-05},...</msg>
<status status="PASS" starttime="20201030 10:56:45.342" endtime="20201030 10:56:45.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:45.360" level="INFO">${OVERHEAD} = {'diff': [1.6401999999998695e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.636099999999252e-05, 1.6402000000012573e-05, 1.6389000000005538e-05, 1.6387999999992187e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:56:45.351" endtime="20201030 10:56:45.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.369" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:56:45.367" endtime="20201030 10:56:45.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.374" level="INFO">VALUE: [1.6401999999998695e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.636099999999252e-05, 1.6402000000012573e-05, 1.6389000000005538e-05, 1.6387999999992187e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.640299999999817e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.6431000000011187e-05, 1.6332999999979503e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.634699999999989e-05, 1.6375000000012907e-05, 1.640299999999817e-05, 1.6388000000006064e-05, 1.6444000000004344e-05, 1.6388000000006064e-05, 1.6403000000025925e-05, 1.6388000000006064e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.6389000000005538e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.6388000000006064e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6388999999977782e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.6401999999998695e-05, 1.6375000000012907e-05]</msg>
<status status="PASS" starttime="20201030 10:56:45.372" endtime="20201030 10:56:45.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.362" endtime="20201030 10:56:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.770" endtime="20201030 10:56:45.377"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:44.693" endtime="20201030 10:56:45.379" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:46.507" endtime="20201030 10:56:46.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.504" endtime="20201030 10:56:46.530"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.557" endtime="20201030 10:56:46.584"></status>
</kw>
<msg timestamp="20201030 10:56:46.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.554" endtime="20201030 10:56:46.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.591" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.587" endtime="20201030 10:56:46.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.597" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:46.593" endtime="20201030 10:56:46.597"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:46.548" endtime="20201030 10:56:46.598"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:46.543" endtime="20201030 10:56:46.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.541" endtime="20201030 10:56:46.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:46.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:46.602" endtime="20201030 10:56:46.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.600" endtime="20201030 10:56:46.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.539" endtime="20201030 10:56:46.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.538" endtime="20201030 10:56:46.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.604" endtime="20201030 10:56:46.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.535" endtime="20201030 10:56:46.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.531" endtime="20201030 10:56:46.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.385" endtime="20201030 10:56:46.607"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.611" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:46.620" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:47.642" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:46.610" endtime="20201030 10:56:47.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.645" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:47.644" endtime="20201030 10:56:47.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.608" endtime="20201030 10:56:47.646"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:47.650" endtime="20201030 10:56:47.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.649" endtime="20201030 10:56:47.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.679" endtime="20201030 10:56:49.705"></status>
</kw>
<msg timestamp="20201030 10:56:49.706" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['\n', 'main(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; '], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 10:56:47.677" endtime="20201030 10:56:49.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.711" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['\n', 'main(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; '], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 10:56:49.708" endtime="20201030 10:56:49.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.719" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 10:56:49.714" endtime="20201030 10:56:49.720"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:47.674" endtime="20201030 10:56:49.721"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:47.672" endtime="20201030 10:56:49.722"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:47.671" endtime="20201030 10:56:49.723"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:47.648" endtime="20201030 10:56:49.724"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:47.647" endtime="20201030 10:56:49.724"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 10:56:45.382" endtime="20201030 10:56:49.726" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 10:56:24.240" endtime="20201030 10:56:49.746"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.831" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:49.839" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:50.807" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:49.829" endtime="20201030 10:56:50.808"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.810" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:50.809" endtime="20201030 10:56:50.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.828" endtime="20201030 10:56:50.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:50.813" endtime="20201030 10:56:50.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.812" endtime="20201030 10:56:50.998"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.011" endtime="20201030 10:56:51.035"></status>
</kw>
<msg timestamp="20201030 10:56:51.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.009" endtime="20201030 10:56:51.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.036" endtime="20201030 10:56:51.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.041" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:51.039" endtime="20201030 10:56:51.042"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.007" endtime="20201030 10:56:51.042"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.004" endtime="20201030 10:56:51.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.003" endtime="20201030 10:56:51.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:51.047" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:51.046" endtime="20201030 10:56:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.044" endtime="20201030 10:56:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.002" endtime="20201030 10:56:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.002" endtime="20201030 10:56:51.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.049" endtime="20201030 10:56:51.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.000" endtime="20201030 10:56:51.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.052" endtime="20201030 10:56:51.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.999" endtime="20201030 10:56:51.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.826" endtime="20201030 10:56:56.964"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:56.977" endtime="20201030 10:56:56.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.974" endtime="20201030 10:56:57.000"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.027" endtime="20201030 10:56:57.055"></status>
</kw>
<msg timestamp="20201030 10:56:57.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.024" endtime="20201030 10:56:57.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.059" endtime="20201030 10:56:57.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.069" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:57.064" endtime="20201030 10:56:57.069"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:57.018" endtime="20201030 10:56:57.071"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:57.013" endtime="20201030 10:56:57.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.011" endtime="20201030 10:56:57.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:57.078" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:57.077" endtime="20201030 10:56:57.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.074" endtime="20201030 10:56:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.009" endtime="20201030 10:56:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.008" endtime="20201030 10:56:57.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.080" endtime="20201030 10:56:57.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.005" endtime="20201030 10:56:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.001" endtime="20201030 10:56:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.971" endtime="20201030 10:56:57.083"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.093" endtime="20201030 10:56:57.110"></status>
</kw>
<msg timestamp="20201030 10:56:57.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.091" endtime="20201030 10:56:57.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.112" endtime="20201030 10:56:57.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.114" endtime="20201030 10:56:57.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.089" endtime="20201030 10:56:57.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.086" endtime="20201030 10:56:57.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.124" endtime="20201030 10:56:57.423"></status>
</kw>
<msg timestamp="20201030 10:56:57.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.105299972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.105341972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.122" endtime="20201030 10:56:57.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.105299972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.105341972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.427" endtime="20201030 10:56:57.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.435" endtime="20201030 10:56:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.119" endtime="20201030 10:56:57.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.117" endtime="20201030 10:56:57.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.442" level="INFO">${RESULT} = [{'diff': 4.200000000000037e-05}, {'diff': 3.2499999999963114e-06}, {'diff': 3.2779999999954512e-06}, {'diff': 2.7219999999966715e-06}, {'diff': 2.7080000000040405e-06}, {'diff': 2.7080000000040405e-0...</msg>
<status status="PASS" starttime="20201030 10:56:57.439" endtime="20201030 10:56:57.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:57.447" level="INFO">${ACCURACY} = {'diff': [4.200000000000037e-05, 3.2499999999963114e-06, 3.2779999999954512e-06, 2.7219999999966715e-06, 2.7080000000040405e-06, 2.7080000000040405e-06, 3.2219999999971716e-06, 2.7219999999966715e-06,...</msg>
<status status="PASS" starttime="20201030 10:56:57.443" endtime="20201030 10:56:57.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.452" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:56:57.451" endtime="20201030 10:56:57.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.454" level="INFO">VALUE: [4.200000000000037e-05, 3.2499999999963114e-06, 3.2779999999954512e-06, 2.7219999999966715e-06, 2.7080000000040405e-06, 2.7080000000040405e-06, 3.2219999999971716e-06, 2.7219999999966715e-06, 2.695000000010883e-06, 2.7639999999884424e-06, 3.2219999999971716e-06, 3.1949999999975054e-06, 2.7080000000040405e-06, 3.2079999999906628e-06, 3.2229999999966452e-06, 2.709000000003514e-06, 3.2629999999894688e-06, 2.7080000000040405e-06, 2.7219999999966715e-06, 3.2499999999963114e-06, 2.7219999999966715e-06, 3.2080000000045406e-06, 3.651999999992883e-06, 2.709000000003514e-06, 3.1669999999983656e-06, 3.1939999999980317e-06, 2.7080000000040405e-06, 3.2079999999906628e-06, 2.7080000000040405e-06, 2.6800000000049007e-06, 2.723000000010023e-06, 3.1939999999980317e-06, 3.2079999999906628e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 2.7089999999896364e-06, 3.209000000004014e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 2.709000000003514e-06, 2.709000000003514e-06, 2.7220000000105493e-06, 3.2080000000045406e-06, 2.7219999999966715e-06, 3.2229999999966452e-06, 3.665999999999392e-06, 2.7219999999966715e-06, 3.2080000000045406e-06, 2.7080000000040405e-06]</msg>
<status status="PASS" starttime="20201030 10:56:57.453" endtime="20201030 10:56:57.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.448" endtime="20201030 10:56:57.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:57.459" endtime="20201030 10:56:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.458" endtime="20201030 10:56:57.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.456" endtime="20201030 10:56:57.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.085" endtime="20201030 10:56:57.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.084" endtime="20201030 10:56:57.480"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.488" endtime="20201030 10:56:57.505"></status>
</kw>
<msg timestamp="20201030 10:56:57.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.487" endtime="20201030 10:56:57.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.507" endtime="20201030 10:56:57.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.509" endtime="20201030 10:56:57.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.484" endtime="20201030 10:56:57.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.482" endtime="20201030 10:56:57.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.519" endtime="20201030 10:56:57.807"></status>
</kw>
<msg timestamp="20201030 10:56:57.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.517" endtime="20201030 10:56:57.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.812" endtime="20201030 10:56:57.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.820" endtime="20201030 10:56:57.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.515" endtime="20201030 10:56:57.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.513" endtime="20201030 10:56:57.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.828" level="INFO">${RESULT} = [{'diff': 3.736000000000711e-06}, {'diff': 3.7219999999976716e-06}, {'diff': 4.207999999998602e-06}, {'diff': 3.6529999999992957e-06}, {'diff': 3.708000000001571e-06}, {'diff': 3.722000000001141e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:57.824" endtime="20201030 10:56:57.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:57.832" level="INFO">${ACCURACY} = {'diff': [3.736000000000711e-06, 3.7219999999976716e-06, 4.207999999998602e-06, 3.6529999999992957e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.7219999999976716e-06, 4....</msg>
<status status="PASS" starttime="20201030 10:56:57.829" endtime="20201030 10:56:57.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.836" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:56:57.835" endtime="20201030 10:56:57.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.839" level="INFO">VALUE: [3.736000000000711e-06, 3.7219999999976716e-06, 4.207999999998602e-06, 3.6529999999992957e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.7219999999976716e-06, 4.721999999998672e-06, 4.209000000001545e-06, 3.709000000001045e-06, 4.166999999999366e-06, 4.208000000002071e-06, 3.722000000001141e-06, 4.221999999998172e-06, 4.722999999998145e-06, 3.7079999999981017e-06, 3.750000000000281e-06, 4.207999999998602e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.7370000000001846e-06, 4.209000000001545e-06, 4.207999999998602e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 4.209000000001545e-06, 4.721999999998672e-06, 3.708000000001571e-06, 4.208999999998075e-06, 3.695000000001475e-06, 4.208999999998075e-06, 4.209000000001545e-06, 3.7079999999981017e-06, 3.722000000001141e-06, 4.222999999997645e-06, 3.763999999999851e-06, 3.709000000001045e-06, 4.209000000001545e-06, 4.208000000002071e-06, 4.181000000002405e-06, 4.152999999999796e-06, 3.708000000001571e-06, 4.195000000001975e-06, 3.681000000001905e-06, 4.139000000000226e-06, 4.250000000000781e-06, 4.139000000000226e-06, 4.208000000002071e-06]</msg>
<status status="PASS" starttime="20201030 10:56:57.837" endtime="20201030 10:56:57.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.833" endtime="20201030 10:56:57.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:57.843" endtime="20201030 10:56:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.842" endtime="20201030 10:56:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.841" endtime="20201030 10:56:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.481" endtime="20201030 10:56:57.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.480" endtime="20201030 10:56:57.864"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.873" endtime="20201030 10:56:57.891"></status>
</kw>
<msg timestamp="20201030 10:56:57.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.871" endtime="20201030 10:56:57.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.892" endtime="20201030 10:56:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.895" endtime="20201030 10:56:57.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.868" endtime="20201030 10:56:57.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.866" endtime="20201030 10:56:57.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.904" endtime="20201030 10:56:58.191"></status>
</kw>
<msg timestamp="20201030 10:56:58.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.903" endtime="20201030 10:56:58.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.196" endtime="20201030 10:56:58.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.204" endtime="20201030 10:56:58.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.900" endtime="20201030 10:56:58.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.898" endtime="20201030 10:56:58.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.211" level="INFO">${RESULT} = [{'diff': 5.1949999999995056e-06}, {'diff': 4.721999999998672e-06}, {'diff': 5.194000000000032e-06}, {'diff': 4.736000000001711e-06}, {'diff': 5.222999999998645e-06}, {'diff': 4.694000000003001e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:58.207" endtime="20201030 10:56:58.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:58.215" level="INFO">${ACCURACY} = {'diff': [5.1949999999995056e-06, 4.721999999998672e-06, 5.194000000000032e-06, 4.736000000001711e-06, 5.222999999998645e-06, 4.694000000003001e-06, 5.207999999999602e-06, 4.722000000002141e-06, 4.764...</msg>
<status status="PASS" starttime="20201030 10:56:58.212" endtime="20201030 10:56:58.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.219" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:56:58.218" endtime="20201030 10:56:58.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.222" level="INFO">VALUE: [5.1949999999995056e-06, 4.721999999998672e-06, 5.194000000000032e-06, 4.736000000001711e-06, 5.222999999998645e-06, 4.694000000003001e-06, 5.207999999999602e-06, 4.722000000002141e-06, 4.764000000000851e-06, 4.679999999999962e-06, 5.222999999998645e-06, 4.722000000002141e-06, 5.221999999999172e-06, 4.708000000002571e-06, 5.1949999999995056e-06, 5.209000000002545e-06, 5.235999999998742e-06, 4.707999999999102e-06, 5.208000000003071e-06, 5.2089999999990755e-06, 4.722000000002141e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.250000000001781e-06, 4.7089999999985754e-06, 4.721999999998672e-06, 5.2089999999990755e-06, 5.222000000002641e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.208000000003071e-06, 5.222999999998645e-06, 4.707999999999102e-06, 5.667000000000866e-06, 5.195000000002975e-06, 5.195000000002975e-06, 5.291999999997021e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.222999999998645e-06, 4.7089999999985754e-06, 5.222000000002641e-06, 4.736000000001711e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.721999999999672e-06, 4.721999999998672e-06, 4.722000000002141e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.220" endtime="20201030 10:56:58.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.216" endtime="20201030 10:56:58.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:58.227" endtime="20201030 10:56:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.226" endtime="20201030 10:56:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.224" endtime="20201030 10:56:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.865" endtime="20201030 10:56:58.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.864" endtime="20201030 10:56:58.248"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.257" endtime="20201030 10:56:58.275"></status>
</kw>
<msg timestamp="20201030 10:56:58.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.255" endtime="20201030 10:56:58.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.276" endtime="20201030 10:56:58.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.279" endtime="20201030 10:56:58.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.252" endtime="20201030 10:56:58.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.250" endtime="20201030 10:56:58.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.288" endtime="20201030 10:56:58.571"></status>
</kw>
<msg timestamp="20201030 10:56:58.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.286" endtime="20201030 10:56:58.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.575" endtime="20201030 10:56:58.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.583" endtime="20201030 10:56:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.284" endtime="20201030 10:56:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.282" endtime="20201030 10:56:58.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.590" level="INFO">${RESULT} = [{'diff': 5.695000000000006e-06}, {'diff': 6.763999999999382e-06}, {'diff': 5.667000000000866e-06}, {'diff': 5.708000000000102e-06}, {'diff': 6.764000000002851e-06}, {'diff': 6.222000000000172e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:58.586" endtime="20201030 10:56:58.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:58.595" level="INFO">${ACCURACY} = {'diff': [5.695000000000006e-06, 6.763999999999382e-06, 5.667000000000866e-06, 5.708000000000102e-06, 6.764000000002851e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.749999999998812e-06, 5.6940...</msg>
<status status="PASS" starttime="20201030 10:56:58.591" endtime="20201030 10:56:58.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.599" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:56:58.598" endtime="20201030 10:56:58.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.602" level="INFO">VALUE: [5.695000000000006e-06, 6.763999999999382e-06, 5.667000000000866e-06, 5.708000000000102e-06, 6.764000000002851e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.749999999998812e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 5.653000000001296e-06, 6.208000000000602e-06, 5.708000000000102e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 5.6939999999970625e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 6.208000000000602e-06, 6.208000000000602e-06, 5.7229999999991454e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.2090000000000756e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.735999999999242e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 5.7089999999995755e-06, 5.708000000000102e-06, 6.2079999999971325e-06, 5.7229999999991454e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 5.695000000000006e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 5.694000000000532e-06, 5.694000000000532e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.7079999999976325e-06, 6.151999999998853e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.600" endtime="20201030 10:56:58.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.596" endtime="20201030 10:56:58.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:58.606" endtime="20201030 10:56:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.605" endtime="20201030 10:56:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.604" endtime="20201030 10:56:58.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.249" endtime="20201030 10:56:58.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.248" endtime="20201030 10:56:58.627"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.636" endtime="20201030 10:56:58.654"></status>
</kw>
<msg timestamp="20201030 10:56:58.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.635" endtime="20201030 10:56:58.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.655" endtime="20201030 10:56:58.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.658" endtime="20201030 10:56:58.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.632" endtime="20201030 10:56:58.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.630" endtime="20201030 10:56:58.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.667" endtime="20201030 10:56:58.952"></status>
</kw>
<msg timestamp="20201030 10:56:58.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.665" endtime="20201030 10:56:58.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.956" endtime="20201030 10:56:58.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.964" endtime="20201030 10:56:58.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.663" endtime="20201030 10:56:58.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.661" endtime="20201030 10:56:58.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.971" level="INFO">${RESULT} = [{'diff': 7.208000000001602e-06}, {'diff': 7.707999999998633e-06}, {'diff': 6.708000000001102e-06}, {'diff': 7.2230000000006456e-06}, {'diff': 6.708000000001102e-06}, {'diff': 7.194000000002032e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:58.968" endtime="20201030 10:56:58.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:58.975" level="INFO">${ACCURACY} = {'diff': [7.208000000001602e-06, 7.707999999998633e-06, 6.708000000001102e-06, 7.2230000000006456e-06, 6.708000000001102e-06, 7.194000000002032e-06, 7.222000000001172e-06, 6.709000000000576e-06, 6.723...</msg>
<status status="PASS" starttime="20201030 10:56:58.972" endtime="20201030 10:56:58.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.980" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:56:58.979" endtime="20201030 10:56:58.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.982" level="INFO">VALUE: [7.208000000001602e-06, 7.707999999998633e-06, 6.708000000001102e-06, 7.2230000000006456e-06, 6.708000000001102e-06, 7.194000000002032e-06, 7.222000000001172e-06, 6.709000000000576e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 7.222000000001172e-06, 7.736000000001242e-06, 6.736000000000242e-06, 6.695000000001006e-06, 7.167000000002366e-06, 7.222000000001172e-06, 6.763999999999382e-06, 7.208000000001602e-06, 7.2230000000006456e-06, 6.694999999997536e-06, 6.7079999999976325e-06, 7.193999999998563e-06, 6.708000000001102e-06, 7.209000000001076e-06, 6.709000000000576e-06, 7.2219999999977025e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 7.208000000001602e-06, 6.7079999999976325e-06, 7.722000000001672e-06, 7.222000000001172e-06, 7.195000000001506e-06, 6.736000000000242e-06, 7.2219999999977025e-06, 7.209000000001076e-06, 6.695000000001006e-06, 6.722000000000672e-06, 7.2230000000006456e-06, 6.695000000001006e-06, 7.165999999999423e-06, 6.722999999996676e-06, 7.195000000001506e-06, 7.195000000001506e-06, 7.195000000001506e-06, 7.707999999998633e-06, 7.2079999999981326e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.981" endtime="20201030 10:56:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.976" endtime="20201030 10:56:58.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:58.986" endtime="20201030 10:56:59.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.985" endtime="20201030 10:56:59.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.984" endtime="20201030 10:56:59.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.628" endtime="20201030 10:56:59.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.627" endtime="20201030 10:56:59.008"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.016" endtime="20201030 10:56:59.035"></status>
</kw>
<msg timestamp="20201030 10:56:59.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.015" endtime="20201030 10:56:59.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.037" endtime="20201030 10:56:59.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.039" endtime="20201030 10:56:59.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.012" endtime="20201030 10:56:59.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.010" endtime="20201030 10:56:59.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.048" endtime="20201030 10:56:59.335"></status>
</kw>
<msg timestamp="20201030 10:56:59.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.047" endtime="20201030 10:56:59.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.340" endtime="20201030 10:56:59.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.348" endtime="20201030 10:56:59.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.044" endtime="20201030 10:56:59.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.042" endtime="20201030 10:56:59.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.354" level="INFO">${RESULT} = [{'diff': 8.208000000002602e-06}, {'diff': 8.223000000001646e-06}, {'diff': 8.152000000000853e-06}, {'diff': 7.749999999997342e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.208999999998606e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:59.351" endtime="20201030 10:56:59.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:59.359" level="INFO">${ACCURACY} = {'diff': [8.208000000002602e-06, 8.223000000001646e-06, 8.152000000000853e-06, 7.749999999997342e-06, 8.193999999999563e-06, 8.208999999998606e-06, 7.721999999998203e-06, 7.735999999997772e-06, 8.2359...</msg>
<status status="PASS" starttime="20201030 10:56:59.355" endtime="20201030 10:56:59.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.363" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:56:59.362" endtime="20201030 10:56:59.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.365" level="INFO">VALUE: [8.208000000002602e-06, 8.223000000001646e-06, 8.152000000000853e-06, 7.749999999997342e-06, 8.193999999999563e-06, 8.208999999998606e-06, 7.721999999998203e-06, 7.735999999997772e-06, 8.235999999998272e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.707999999998633e-06, 7.680000000002962e-06, 8.208999999998606e-06, 7.707999999998633e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.707999999999633e-06, 8.208999999998606e-06, 8.207999999999133e-06, 7.708000000002102e-06, 8.221999999998703e-06, 8.166999999999897e-06, 7.777999999999952e-06, 7.721999999998203e-06, 8.193999999999563e-06, 8.208000000002602e-06, 7.709000000001576e-06, 7.735999999997772e-06, 8.708999999999106e-06, 8.708999999999106e-06, 7.693999999999063e-06, 7.709000000001576e-06, 7.749999999997342e-06, 7.805999999999091e-06, 7.721999999998203e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.221999999998703e-06, 7.695000000002006e-06, 8.221999999998703e-06, 8.694999999999536e-06, 8.207999999999133e-06, 7.681000000002436e-06, 8.708999999999106e-06, 8.263999999997412e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.722000000002672e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 10:56:59.364" endtime="20201030 10:56:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.359" endtime="20201030 10:56:59.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:59.371" endtime="20201030 10:56:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.370" endtime="20201030 10:56:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.369" endtime="20201030 10:56:59.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.009" endtime="20201030 10:56:59.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.008" endtime="20201030 10:56:59.392"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.401" endtime="20201030 10:56:59.418"></status>
</kw>
<msg timestamp="20201030 10:56:59.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.399" endtime="20201030 10:56:59.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.419" endtime="20201030 10:56:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.422" endtime="20201030 10:56:59.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.396" endtime="20201030 10:56:59.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.394" endtime="20201030 10:56:59.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.431" endtime="20201030 10:56:59.718"></status>
</kw>
<msg timestamp="20201030 10:56:59.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.429" endtime="20201030 10:56:59.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.722" endtime="20201030 10:56:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.730" endtime="20201030 10:56:59.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.427" endtime="20201030 10:56:59.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.425" endtime="20201030 10:56:59.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.737" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.708999999999106e-06}, {'diff': 9.195000000000036e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.208000000000133e-06}, {'diff': 9.221999999999703e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:59.734" endtime="20201030 10:56:59.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:56:59.742" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.708999999999106e-06, 9.195000000000036e-06, 9.152999999997857e-06, 9.208000000000133e-06, 9.221999999999703e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.7089...</msg>
<status status="PASS" starttime="20201030 10:56:59.738" endtime="20201030 10:56:59.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.746" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:56:59.745" endtime="20201030 10:56:59.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.749" level="INFO">VALUE: [8.721999999999203e-06, 8.708999999999106e-06, 9.195000000000036e-06, 9.152999999997857e-06, 9.208000000000133e-06, 9.221999999999703e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.708000000003102e-06, 9.221999999999703e-06, 8.707999999999633e-06, 8.708000000003102e-06, 9.236000000002742e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.750000000001812e-06, 9.221999999999703e-06, 9.181000000000467e-06, 9.208999999999606e-06, 9.708000000000633e-06, 8.721999999999203e-06, 9.181000000000467e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.723000000002146e-06, 9.221999999999703e-06, 9.208000000000133e-06, 8.652999999997357e-06, 8.695000000003006e-06, 8.707999999999633e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.180000000000993e-06, 9.208000000000133e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.652000000001353e-06, 8.722000000002672e-06, 9.223000000002646e-06, 8.707999999999633e-06, 9.195000000000036e-06, 9.221999999999703e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 10:56:59.747" endtime="20201030 10:56:59.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.743" endtime="20201030 10:56:59.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:59.754" endtime="20201030 10:56:59.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.752" endtime="20201030 10:56:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.751" endtime="20201030 10:56:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.393" endtime="20201030 10:56:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.392" endtime="20201030 10:56:59.774"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.783" endtime="20201030 10:56:59.801"></status>
</kw>
<msg timestamp="20201030 10:56:59.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.782" endtime="20201030 10:56:59.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.802" endtime="20201030 10:56:59.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.805" endtime="20201030 10:56:59.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.779" endtime="20201030 10:56:59.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.777" endtime="20201030 10:56:59.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.814" endtime="20201030 10:57:00.100"></status>
</kw>
<msg timestamp="20201030 10:57:00.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.812" endtime="20201030 10:57:00.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.104" endtime="20201030 10:57:00.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.113" endtime="20201030 10:57:00.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.810" endtime="20201030 10:57:00.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.808" endtime="20201030 10:57:00.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.120" level="INFO">${RESULT} = [{'diff': 1.0708999999997637e-05}, {'diff': 9.722000000000203e-06}, {'diff': 1.0195000000001037e-05}, {'diff': 9.750000000002812e-06}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0195000000001037e-05...</msg>
<status status="PASS" starttime="20201030 10:57:00.117" endtime="20201030 10:57:00.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:00.124" level="INFO">${ACCURACY} = {'diff': [1.0708999999997637e-05, 9.722000000000203e-06, 1.0195000000001037e-05, 9.750000000002812e-06, 1.0236000000000273e-05, 1.0195000000001037e-05, 1.0223000000000176e-05, 1.0208999999997137e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:00.121" endtime="20201030 10:57:00.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.128" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:57:00.127" endtime="20201030 10:57:00.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.131" level="INFO">VALUE: [1.0708999999997637e-05, 9.722000000000203e-06, 1.0195000000001037e-05, 9.750000000002812e-06, 1.0236000000000273e-05, 1.0195000000001037e-05, 1.0223000000000176e-05, 1.0208999999997137e-05, 9.709000000000106e-06, 1.0222000000000703e-05, 9.708000000000633e-06, 9.722999999999676e-06, 1.0180000000001993e-05, 1.0221999999997233e-05, 9.694000000001063e-06, 1.0208000000001133e-05, 1.0166999999998427e-05, 1.0194999999997567e-05, 9.681000000000967e-06, 1.0194000000001563e-05, 1.0207999999997663e-05, 9.708000000000633e-06, 9.709000000000106e-06, 1.0208000000001133e-05, 9.722000000000203e-06, 1.0208000000001133e-05, 9.708000000000633e-06, 1.0235999999996803e-05, 9.709000000000106e-06, 9.722000000000203e-06, 1.0207999999997663e-05, 1.0263999999999412e-05, 9.694000000001063e-06, 9.709000000000106e-06, 1.0194999999997567e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 9.694000000001063e-06, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0179999999998524e-05, 9.681000000000967e-06, 9.722999999999676e-06, 9.722000000000203e-06, 1.0179999999998524e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.130" endtime="20201030 10:57:00.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.125" endtime="20201030 10:57:00.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.136" endtime="20201030 10:57:00.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.134" endtime="20201030 10:57:00.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.133" endtime="20201030 10:57:00.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.775" endtime="20201030 10:57:00.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.775" endtime="20201030 10:57:00.157"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.165" endtime="20201030 10:57:00.183"></status>
</kw>
<msg timestamp="20201030 10:57:00.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.164" endtime="20201030 10:57:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.185" endtime="20201030 10:57:00.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.187" endtime="20201030 10:57:00.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.161" endtime="20201030 10:57:00.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.159" endtime="20201030 10:57:00.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.196" endtime="20201030 10:57:00.481"></status>
</kw>
<msg timestamp="20201030 10:57:00.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.195" endtime="20201030 10:57:00.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.485" endtime="20201030 10:57:00.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.493" endtime="20201030 10:57:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.192" endtime="20201030 10:57:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.191" endtime="20201030 10:57:00.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.500" level="INFO">${RESULT} = [{'diff': 1.0707999999998163e-05}, {'diff': 1.0722000000001203e-05}, {'diff': 1.0736000000000773e-05}, {'diff': 1.0694999999998067e-05}, {'diff': 1.0708000000001633e-05}, {'diff': 1.1707999999999164e-...</msg>
<status status="PASS" starttime="20201030 10:57:00.496" endtime="20201030 10:57:00.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:00.504" level="INFO">${ACCURACY} = {'diff': [1.0707999999998163e-05, 1.0722000000001203e-05, 1.0736000000000773e-05, 1.0694999999998067e-05, 1.0708000000001633e-05, 1.1707999999999164e-05, 1.0708000000001633e-05, 1.1193999999999094e-05...</msg>
<status status="PASS" starttime="20201030 10:57:00.501" endtime="20201030 10:57:00.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.508" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:57:00.507" endtime="20201030 10:57:00.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.511" level="INFO">VALUE: [1.0707999999998163e-05, 1.0722000000001203e-05, 1.0736000000000773e-05, 1.0694999999998067e-05, 1.0708000000001633e-05, 1.1707999999999164e-05, 1.0708000000001633e-05, 1.1193999999999094e-05, 1.1207999999998663e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.0722000000001203e-05, 1.0709000000001107e-05, 1.1207999999998663e-05, 1.0652999999999357e-05, 1.1207999999998663e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0709000000001107e-05, 1.1194999999998567e-05, 1.0708000000001633e-05, 1.1208000000002133e-05, 1.1139000000000288e-05, 1.1166999999999427e-05, 1.1193999999999094e-05, 1.0721999999997733e-05, 1.0709000000001107e-05, 1.0693999999998594e-05, 1.0707999999998163e-05, 1.1208000000002133e-05, 1.0652999999999357e-05, 1.0721999999997733e-05, 1.0707999999998163e-05, 1.1221999999998233e-05, 1.1208000000002133e-05, 1.0708999999997637e-05, 1.1721999999998733e-05, 1.1208000000002133e-05, 1.1152999999999857e-05, 1.1152999999999857e-05, 1.1193999999999094e-05, 1.1693999999999594e-05, 1.1207999999998663e-05, 1.1208999999998137e-05, 1.0722000000001203e-05, 1.1208000000002133e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.0721999999997733e-05, 1.1194000000002563e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.510" endtime="20201030 10:57:00.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.505" endtime="20201030 10:57:00.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.517" endtime="20201030 10:57:00.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.515" endtime="20201030 10:57:00.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.514" endtime="20201030 10:57:00.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.158" endtime="20201030 10:57:00.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.157" endtime="20201030 10:57:00.537"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.546" endtime="20201030 10:57:00.564"></status>
</kw>
<msg timestamp="20201030 10:57:00.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.545" endtime="20201030 10:57:00.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.565" endtime="20201030 10:57:00.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.568" endtime="20201030 10:57:00.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.542" endtime="20201030 10:57:00.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.540" endtime="20201030 10:57:00.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.577" endtime="20201030 10:57:00.863"></status>
</kw>
<msg timestamp="20201030 10:57:00.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019541431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.575" endtime="20201030 10:57:00.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019541431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.867" endtime="20201030 10:57:00.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.875" endtime="20201030 10:57:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.573" endtime="20201030 10:57:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.571" endtime="20201030 10:57:00.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.882" level="INFO">${RESULT} = [{'diff': 1.2209000000002607e-05}, {'diff': 1.2222999999998707e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2208000000003133e-05}, {'diff': 1.1721999999998733e-05}, {'diff': 1.2221999999999233e-...</msg>
<status status="PASS" starttime="20201030 10:57:00.879" endtime="20201030 10:57:00.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:00.887" level="INFO">${ACCURACY} = {'diff': [1.2209000000002607e-05, 1.2222999999998707e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.2278000000000983e-05, 1.2207999999999664e-05...</msg>
<status status="PASS" starttime="20201030 10:57:00.883" endtime="20201030 10:57:00.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.891" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:57:00.890" endtime="20201030 10:57:00.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.894" level="INFO">VALUE: [1.2209000000002607e-05, 1.2222999999998707e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.2278000000000983e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2208000000003133e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.2166000000000954e-05, 1.2194000000000094e-05, 1.1735999999998303e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.2194000000000094e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.1722000000002203e-05, 1.2250000000001843e-05, 1.2721999999999734e-05, 1.1778000000000483e-05, 1.2208999999999137e-05, 1.2167000000000427e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2222000000002703e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.2792000000001053e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2277000000001509e-05, 1.2207999999999664e-05, 1.2166000000000954e-05, 1.2292000000000552e-05, 1.1749999999997873e-05, 1.1721999999998733e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.892" endtime="20201030 10:57:00.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.888" endtime="20201030 10:57:00.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.899" endtime="20201030 10:57:00.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.897" endtime="20201030 10:57:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.896" endtime="20201030 10:57:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.538" endtime="20201030 10:57:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.538" endtime="20201030 10:57:00.920"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.928" endtime="20201030 10:57:00.945"></status>
</kw>
<msg timestamp="20201030 10:57:00.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.927" endtime="20201030 10:57:00.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.947" endtime="20201030 10:57:00.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.949" endtime="20201030 10:57:00.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.924" endtime="20201030 10:57:00.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.922" endtime="20201030 10:57:00.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.958" endtime="20201030 10:57:01.245"></status>
</kw>
<msg timestamp="20201030 10:57:01.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019564167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.957" endtime="20201030 10:57:01.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019564167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.249" endtime="20201030 10:57:01.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.257" endtime="20201030 10:57:01.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.954" endtime="20201030 10:57:01.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.952" endtime="20201030 10:57:01.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.264" level="INFO">${RESULT} = [{'diff': 1.3195000000000567e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.3194000000001094e-...</msg>
<status status="PASS" starttime="20201030 10:57:01.260" endtime="20201030 10:57:01.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:01.268" level="INFO">${ACCURACY} = {'diff': [1.3195000000000567e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3208000000000664e-05...</msg>
<status status="PASS" starttime="20201030 10:57:01.265" endtime="20201030 10:57:01.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.272" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:57:01.271" endtime="20201030 10:57:01.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.275" level="INFO">VALUE: [1.3195000000000567e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3195000000000567e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.3207999999997194e-05, 1.2721999999999734e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3208000000000664e-05, 1.3180999999997528e-05, 1.3209000000000137e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.2735999999999303e-05, 1.3222999999999707e-05, 1.3195000000000567e-05, 1.3152000000002384e-05, 1.2639000000001788e-05, 1.2708000000000164e-05, 1.3209000000000137e-05, 1.3193999999997624e-05, 1.2735999999999303e-05, 1.3707999999997694e-05, 1.2694000000000594e-05, 1.3222999999999707e-05, 1.2721999999999734e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.3708000000001164e-05, 1.2749999999998873e-05, 1.3235999999999803e-05, 1.3179999999998054e-05, 1.2722999999999207e-05, 1.3235999999999803e-05, 1.2681000000000497e-05]</msg>
<status status="PASS" starttime="20201030 10:57:01.273" endtime="20201030 10:57:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.269" endtime="20201030 10:57:01.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:01.280" endtime="20201030 10:57:01.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.278" endtime="20201030 10:57:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.277" endtime="20201030 10:57:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.920" endtime="20201030 10:57:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.920" endtime="20201030 10:57:01.300"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.309" endtime="20201030 10:57:01.328"></status>
</kw>
<msg timestamp="20201030 10:57:01.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.307" endtime="20201030 10:57:01.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.329" endtime="20201030 10:57:01.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.332" endtime="20201030 10:57:01.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.305" endtime="20201030 10:57:01.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.303" endtime="20201030 10:57:01.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.341" endtime="20201030 10:57:01.627"></status>
</kw>
<msg timestamp="20201030 10:57:01.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.339" endtime="20201030 10:57:01.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.631" endtime="20201030 10:57:01.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.639" endtime="20201030 10:57:01.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.337" endtime="20201030 10:57:01.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.335" endtime="20201030 10:57:01.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.646" level="INFO">${RESULT} = [{'diff': 1.4222999999997238e-05}, {'diff': 1.4236000000000804e-05}, {'diff': 1.4208000000001664e-05}, {'diff': 1.3708000000001164e-05}, {'diff': 1.3637999999999845e-05}, {'diff': 1.4208999999997668e-...</msg>
<status status="PASS" starttime="20201030 10:57:01.643" endtime="20201030 10:57:01.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:01.650" level="INFO">${ACCURACY} = {'diff': [1.4222999999997238e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.3708000000001164e-05, 1.3637999999999845e-05, 1.4208999999997668e-05, 1.3722999999996738e-05, 1.4221999999997764e-05...</msg>
<status status="PASS" starttime="20201030 10:57:01.647" endtime="20201030 10:57:01.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.655" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:57:01.654" endtime="20201030 10:57:01.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.657" level="INFO">VALUE: [1.4222999999997238e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.3708000000001164e-05, 1.3637999999999845e-05, 1.4208999999997668e-05, 1.3722999999996738e-05, 1.4221999999997764e-05, 1.4181000000001998e-05, 1.3722000000000734e-05, 1.3721999999997264e-05, 1.3709000000000637e-05, 1.4764000000000443e-05, 1.3709000000000637e-05, 1.3722000000000734e-05, 1.3665999999998985e-05, 1.4181000000001998e-05, 1.4236000000000804e-05, 1.4180999999998528e-05, 1.4222000000001234e-05, 1.4235999999997334e-05, 1.3693999999998124e-05, 1.4195000000001567e-05, 1.4208999999997668e-05, 1.4223000000000707e-05, 1.3722000000000734e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.3708000000001164e-05, 1.3709000000000637e-05, 1.3721999999997264e-05, 1.4222000000001234e-05, 1.3722000000000734e-05, 1.4208999999997668e-05, 1.3777999999999013e-05, 1.3723000000000207e-05, 1.4166999999998958e-05, 1.4263999999999943e-05, 1.4207999999998194e-05, 1.4250000000000373e-05, 1.3653000000002358e-05, 1.4208000000001664e-05, 1.3707999999997694e-05, 1.3708000000001164e-05, 1.3693999999998124e-05, 1.3749999999999873e-05, 1.3721999999997264e-05, 1.3694000000001594e-05, 1.3722000000000734e-05, 1.4193999999998624e-05]</msg>
<status status="PASS" starttime="20201030 10:57:01.656" endtime="20201030 10:57:01.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.651" endtime="20201030 10:57:01.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:01.663" endtime="20201030 10:57:01.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.662" endtime="20201030 10:57:01.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.661" endtime="20201030 10:57:01.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.301" endtime="20201030 10:57:01.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.301" endtime="20201030 10:57:01.684"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.693" endtime="20201030 10:57:01.711"></status>
</kw>
<msg timestamp="20201030 10:57:01.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.691" endtime="20201030 10:57:01.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.712" endtime="20201030 10:57:01.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.715" endtime="20201030 10:57:01.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.689" endtime="20201030 10:57:01.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.686" endtime="20201030 10:57:01.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.724" endtime="20201030 10:57:02.010"></status>
</kw>
<msg timestamp="20201030 10:57:02.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.722" endtime="20201030 10:57:02.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.015" endtime="20201030 10:57:02.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.023" endtime="20201030 10:57:02.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.720" endtime="20201030 10:57:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.718" endtime="20201030 10:57:02.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.029" level="INFO">${RESULT} = [{'diff': 1.4694999999998598e-05}, {'diff': 1.5221999999998764e-05}, {'diff': 1.4721999999998264e-05}, {'diff': 1.5193999999999624e-05}, {'diff': 1.5193999999999624e-05}, {'diff': 1.5207999999999194e-...</msg>
<status status="PASS" starttime="20201030 10:57:02.026" endtime="20201030 10:57:02.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:02.035" level="INFO">${ACCURACY} = {'diff': [1.4694999999998598e-05, 1.5221999999998764e-05, 1.4721999999998264e-05, 1.5193999999999624e-05, 1.5193999999999624e-05, 1.5207999999999194e-05, 1.5194999999999098e-05, 1.5207999999999194e-05...</msg>
<status status="PASS" starttime="20201030 10:57:02.030" endtime="20201030 10:57:02.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.039" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:57:02.038" endtime="20201030 10:57:02.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.042" level="INFO">VALUE: [1.4694999999998598e-05, 1.5221999999998764e-05, 1.4721999999998264e-05, 1.5193999999999624e-05, 1.5193999999999624e-05, 1.5207999999999194e-05, 1.5194999999999098e-05, 1.5207999999999194e-05, 1.5208999999998668e-05, 1.5208999999998668e-05, 1.5193999999999624e-05, 1.4709000000001637e-05, 1.4707999999998694e-05, 1.5207999999999194e-05, 1.5235999999998334e-05, 1.5707999999999694e-05, 1.4722999999997738e-05, 1.4708000000002164e-05, 1.5209000000002137e-05, 1.5221999999998764e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5153000000000388e-05, 1.5235999999998334e-05, 1.5208000000002664e-05, 1.5207999999999194e-05, 1.565300000000089e-05, 1.4722000000001734e-05, 1.5208999999998668e-05, 1.4750000000000874e-05, 1.5207999999999194e-05, 1.5207999999999194e-05, 1.4639000000000318e-05, 1.4707999999998694e-05, 1.4721999999998264e-05, 1.4722000000001734e-05, 1.4694999999998598e-05, 1.5236000000001804e-05, 1.4679999999999555e-05, 1.4693999999999124e-05, 1.4736000000001304e-05, 1.5207999999999194e-05, 1.5249999999997904e-05, 1.5222000000002234e-05, 1.4723000000001207e-05, 1.4723000000001207e-05, 1.5193999999999624e-05, 1.4721999999998264e-05, 1.5193999999999624e-05, 1.5222000000002234e-05]</msg>
<status status="PASS" starttime="20201030 10:57:02.040" endtime="20201030 10:57:02.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.035" endtime="20201030 10:57:02.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.047" endtime="20201030 10:57:02.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.045" endtime="20201030 10:57:02.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.044" endtime="20201030 10:57:02.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.685" endtime="20201030 10:57:02.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.684" endtime="20201030 10:57:02.067"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.076" endtime="20201030 10:57:02.093"></status>
</kw>
<msg timestamp="20201030 10:57:02.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.074" endtime="20201030 10:57:02.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.095" endtime="20201030 10:57:02.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.097" endtime="20201030 10:57:02.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.072" endtime="20201030 10:57:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.070" endtime="20201030 10:57:02.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.106" endtime="20201030 10:57:02.396"></status>
</kw>
<msg timestamp="20201030 10:57:02.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.105" endtime="20201030 10:57:02.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.400" endtime="20201030 10:57:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.408" endtime="20201030 10:57:02.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.102" endtime="20201030 10:57:02.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.101" endtime="20201030 10:57:02.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.415" level="INFO">${RESULT} = [{'diff': 1.6249999999998904e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.5763999999997974e-05}, {'diff': 1.6709000000000168e-05}, {'diff': 1.6722000000000264e-05}, {'diff': 1.5694000000000125e-...</msg>
<status status="PASS" starttime="20201030 10:57:02.411" endtime="20201030 10:57:02.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:02.419" level="INFO">${ACCURACY} = {'diff': [1.6249999999998904e-05, 1.6749999999999404e-05, 1.5763999999997974e-05, 1.6709000000000168e-05, 1.6722000000000264e-05, 1.5694000000000125e-05, 1.5722000000002734e-05, 1.6208999999999668e-05...</msg>
<status status="PASS" starttime="20201030 10:57:02.416" endtime="20201030 10:57:02.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.423" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:57:02.422" endtime="20201030 10:57:02.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.426" level="INFO">VALUE: [1.6249999999998904e-05, 1.6749999999999404e-05, 1.5763999999997974e-05, 1.6709000000000168e-05, 1.6722000000000264e-05, 1.5694000000000125e-05, 1.5722000000002734e-05, 1.6208999999999668e-05, 1.5763999999997974e-05, 1.5721999999999264e-05, 1.5694000000000125e-05, 1.6694000000001125e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.5709000000002638e-05, 1.5736000000002304e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.6235999999999334e-05, 1.5708999999999168e-05, 1.6223000000002707e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.5694000000000125e-05, 1.6236999999998808e-05, 1.5721999999999264e-05, 1.6263999999998474e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.5722999999998738e-05, 1.6208000000000194e-05, 1.627699999999857e-05, 1.6221999999999764e-05, 1.5721999999999264e-05, 1.6208999999999668e-05, 1.5736000000002304e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6194000000000625e-05, 1.5709000000002638e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.5708000000003164e-05, 1.6708000000000695e-05, 1.6208999999999668e-05, 1.6195000000000098e-05, 1.6208999999999668e-05]</msg>
<status status="PASS" starttime="20201030 10:57:02.424" endtime="20201030 10:57:02.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.420" endtime="20201030 10:57:02.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.431" endtime="20201030 10:57:02.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.429" endtime="20201030 10:57:02.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.428" endtime="20201030 10:57:02.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.068" endtime="20201030 10:57:02.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.068" endtime="20201030 10:57:02.451"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.460" endtime="20201030 10:57:02.476"></status>
</kw>
<msg timestamp="20201030 10:57:02.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.458" endtime="20201030 10:57:02.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.478" endtime="20201030 10:57:02.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.481" endtime="20201030 10:57:02.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.456" endtime="20201030 10:57:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.454" endtime="20201030 10:57:02.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.490" endtime="20201030 10:57:02.776"></status>
</kw>
<msg timestamp="20201030 10:57:02.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02042175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:02.488" endtime="20201030 10:57:02.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02042175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:02.780" endtime="20201030 10:57:02.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.788" endtime="20201030 10:57:02.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.486" endtime="20201030 10:57:02.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.484" endtime="20201030 10:57:02.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.795" level="INFO">${RESULT} = [{'diff': 1.7193999999998155e-05}, {'diff': 1.6694000000001125e-05}, {'diff': 1.7278000000002514e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.6708000000000695e-...</msg>
<status status="PASS" starttime="20201030 10:57:02.792" endtime="20201030 10:57:02.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:02.799" level="INFO">${ACCURACY} = {'diff': [1.7193999999998155e-05, 1.6694000000001125e-05, 1.7278000000002514e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.7722000000001265e-05, 1.7209000000000668e-05...</msg>
<status status="PASS" starttime="20201030 10:57:02.796" endtime="20201030 10:57:02.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.803" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:57:02.802" endtime="20201030 10:57:02.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.806" level="INFO">VALUE: [1.7193999999998155e-05, 1.6694000000001125e-05, 1.7278000000002514e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.7722000000001265e-05, 1.7209000000000668e-05, 1.6693999999997655e-05, 1.718100000000153e-05, 1.6707999999997225e-05, 1.7221999999997295e-05, 1.7722000000001265e-05, 1.7208000000001195e-05, 1.7236999999999808e-05, 1.7223000000000238e-05, 1.6709000000000168e-05, 1.7222000000000764e-05, 1.6722000000000264e-05, 1.7209000000000668e-05, 1.7207999999997725e-05, 1.6709000000000168e-05, 1.7721999999997795e-05, 1.7707999999998225e-05, 1.7222000000000764e-05, 1.7207999999997725e-05, 1.6708000000000695e-05, 1.7209000000000668e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.7709000000001168e-05, 1.6723000000003208e-05, 1.7207999999997725e-05, 1.6735999999999834e-05, 1.7263999999999474e-05, 1.6750000000002874e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7236999999999808e-05, 1.6708000000000695e-05, 1.7207999999997725e-05, 1.7137999999999876e-05, 1.7207999999997725e-05, 1.7736000000000834e-05, 1.6805999999997684e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.6735999999999834e-05, 1.6709000000000168e-05]</msg>
<status status="PASS" starttime="20201030 10:57:02.804" endtime="20201030 10:57:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.800" endtime="20201030 10:57:02.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.811" endtime="20201030 10:57:02.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.810" endtime="20201030 10:57:02.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.809" endtime="20201030 10:57:02.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.452" endtime="20201030 10:57:02.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.452" endtime="20201030 10:57:02.832"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.841" endtime="20201030 10:57:02.858"></status>
</kw>
<msg timestamp="20201030 10:57:02.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.839" endtime="20201030 10:57:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.859" endtime="20201030 10:57:02.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.862" endtime="20201030 10:57:02.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.837" endtime="20201030 10:57:02.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.834" endtime="20201030 10:57:02.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.871" endtime="20201030 10:57:03.158"></status>
</kw>
<msg timestamp="20201030 10:57:03.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.869" endtime="20201030 10:57:03.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.162" endtime="20201030 10:57:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.171" endtime="20201030 10:57:03.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.867" endtime="20201030 10:57:03.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.865" endtime="20201030 10:57:03.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.178" level="INFO">${RESULT} = [{'diff': 1.8207999999998725e-05}, {'diff': 1.8223000000001238e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.8179999999999585e-05}, {'diff': 1.7778000000003014e-05}, {'diff': 1.8264000000000474e-05...</msg>
<status status="PASS" starttime="20201030 10:57:03.174" endtime="20201030 10:57:03.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:03.183" level="INFO">${ACCURACY} = {'diff': [1.8207999999998725e-05, 1.8223000000001238e-05, 1.77089999999977e-05, 1.8179999999999585e-05, 1.7778000000003014e-05, 1.8264000000000474e-05, 1.7707999999998225e-05, 1.7708000000001695e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.179" endtime="20201030 10:57:03.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.188" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:57:03.187" endtime="20201030 10:57:03.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.190" level="INFO">VALUE: [1.8207999999998725e-05, 1.8223000000001238e-05, 1.77089999999977e-05, 1.8179999999999585e-05, 1.7778000000003014e-05, 1.8264000000000474e-05, 1.7707999999998225e-05, 1.7708000000001695e-05, 1.8223000000001238e-05, 1.7693999999998655e-05, 1.7708000000001695e-05, 1.7722000000001265e-05, 1.8250000000000904e-05, 1.7737000000000308e-05, 1.7707999999998225e-05, 1.8221999999998295e-05, 1.8152000000000446e-05, 1.7736000000000834e-05, 1.76950000000016e-05, 1.8221999999998295e-05, 1.82089999999982e-05, 1.7721999999997795e-05, 1.7722000000001265e-05, 1.7722000000001265e-05, 1.77089999999977e-05, 1.81950000000021e-05, 1.8235999999997865e-05, 1.8209000000001668e-05, 1.7707999999998225e-05, 1.7722000000001265e-05, 1.7722000000001265e-05, 1.8223000000001238e-05, 1.8207999999998725e-05, 1.8236000000001334e-05, 1.8249999999997435e-05, 1.768100000000203e-05, 1.7723000000000738e-05, 1.7693999999998655e-05, 1.8208000000002195e-05, 1.7736000000000834e-05, 1.8208000000002195e-05, 1.8208000000002195e-05, 1.8179999999999585e-05, 1.768100000000203e-05, 1.816699999999949e-05, 1.7707999999998225e-05, 1.8151999999996976e-05, 1.8236000000001334e-05, 1.8221999999998295e-05, 1.8209000000001668e-05]</msg>
<status status="PASS" starttime="20201030 10:57:03.189" endtime="20201030 10:57:03.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.184" endtime="20201030 10:57:03.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.196" endtime="20201030 10:57:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.194" endtime="20201030 10:57:03.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.193" endtime="20201030 10:57:03.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.833" endtime="20201030 10:57:03.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.832" endtime="20201030 10:57:03.216"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.225" endtime="20201030 10:57:03.243"></status>
</kw>
<msg timestamp="20201030 10:57:03.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.224" endtime="20201030 10:57:03.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.245" endtime="20201030 10:57:03.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.247" endtime="20201030 10:57:03.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.221" endtime="20201030 10:57:03.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.219" endtime="20201030 10:57:03.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.257" endtime="20201030 10:57:03.562"></status>
</kw>
<msg timestamp="20201030 10:57:03.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.255" endtime="20201030 10:57:03.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.567" endtime="20201030 10:57:03.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.575" endtime="20201030 10:57:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.253" endtime="20201030 10:57:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.251" endtime="20201030 10:57:03.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.582" level="INFO">${RESULT} = [{'diff': 1.8723000000001738e-05}, {'diff': 1.8722000000002265e-05}, {'diff': 1.8707999999999225e-05}, {'diff': 1.8693999999999655e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.9708000000000225e-0...</msg>
<status status="PASS" starttime="20201030 10:57:03.579" endtime="20201030 10:57:03.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:03.587" level="INFO">${ACCURACY} = {'diff': [1.8723000000001738e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.919499999999963e-05, 1.9708000000000225e-05, 1.865300000000042e-05, 1.9222000000002765e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.583" endtime="20201030 10:57:03.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.591" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:57:03.590" endtime="20201030 10:57:03.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.594" level="INFO">VALUE: [1.8723000000001738e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.919499999999963e-05, 1.9708000000000225e-05, 1.865300000000042e-05, 1.9222000000002765e-05, 1.918100000000006e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.9264000000001474e-05, 1.8707999999999225e-05, 1.9221999999999295e-05, 1.9264000000001474e-05, 1.9207999999999725e-05, 1.8680000000000085e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.8707999999999225e-05, 1.8708000000002695e-05, 1.8736000000001835e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.8693999999999655e-05, 1.8708000000002695e-05, 1.97089999999997e-05, 1.9221999999999295e-05, 1.8736000000001835e-05, 1.8721999999998795e-05, 1.9222000000002765e-05, 1.9278000000001044e-05, 1.8722000000002265e-05, 1.92089999999992e-05, 1.9222000000002765e-05, 1.9194000000000155e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.92089999999992e-05, 1.8693999999999655e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.8721999999998795e-05, 1.916700000000049e-05, 1.8707999999999225e-05]</msg>
<status status="PASS" starttime="20201030 10:57:03.592" endtime="20201030 10:57:03.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.587" endtime="20201030 10:57:03.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.599" endtime="20201030 10:57:03.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.597" endtime="20201030 10:57:03.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.596" endtime="20201030 10:57:03.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.217" endtime="20201030 10:57:03.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.217" endtime="20201030 10:57:03.620"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.629" endtime="20201030 10:57:03.647"></status>
</kw>
<msg timestamp="20201030 10:57:03.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.627" endtime="20201030 10:57:03.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.649" endtime="20201030 10:57:03.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.651" endtime="20201030 10:57:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.624" endtime="20201030 10:57:03.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.622" endtime="20201030 10:57:03.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.661" endtime="20201030 10:57:03.945"></status>
</kw>
<msg timestamp="20201030 10:57:03.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.659" endtime="20201030 10:57:03.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.949" endtime="20201030 10:57:03.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.958" endtime="20201030 10:57:03.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.657" endtime="20201030 10:57:03.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.655" endtime="20201030 10:57:03.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.965" level="INFO">${RESULT} = [{'diff': 2.0193999999997686e-05}, {'diff': 2.0194000000001155e-05}, {'diff': 2.069500000000113e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 2.013900000000235e-05...</msg>
<status status="PASS" starttime="20201030 10:57:03.961" endtime="20201030 10:57:03.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:03.969" level="INFO">${ACCURACY} = {'diff': [2.0193999999997686e-05, 2.0194000000001155e-05, 2.069500000000113e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.013900000000235e-05, 1.9708000000000225e-05, 1.968100000000056e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:03.966" endtime="20201030 10:57:03.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.973" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:57:03.972" endtime="20201030 10:57:03.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.976" level="INFO">VALUE: [2.0193999999997686e-05, 2.0194000000001155e-05, 2.069500000000113e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.013900000000235e-05, 1.9708000000000225e-05, 1.968100000000056e-05, 1.969500000000013e-05, 2.0194000000001155e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 1.97089999999997e-05, 2.07090000000007e-05, 1.97089999999997e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 1.970900000000317e-05, 1.9708000000000225e-05, 2.0708000000001225e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 2.019500000000063e-05, 1.9680000000001086e-05, 1.97089999999997e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 2.0249999999999435e-05, 2.019500000000063e-05, 1.965299999999795e-05, 1.963900000000185e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.0693999999998186e-05, 2.0208000000000725e-05, 2.02090000000002e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.02090000000002e-05, 1.9708000000000225e-05, 2.018100000000106e-05, 1.97089999999997e-05, 2.0722000000000795e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 2.020899999999673e-05, 2.019500000000063e-05, 1.97089999999997e-05]</msg>
<status status="PASS" starttime="20201030 10:57:03.975" endtime="20201030 10:57:03.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.970" endtime="20201030 10:57:03.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.982" endtime="20201030 10:57:04.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.981" endtime="20201030 10:57:04.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.979" endtime="20201030 10:57:04.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.621" endtime="20201030 10:57:04.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.620" endtime="20201030 10:57:04.003"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.012" endtime="20201030 10:57:04.030"></status>
</kw>
<msg timestamp="20201030 10:57:04.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.010" endtime="20201030 10:57:04.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.032" endtime="20201030 10:57:04.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.034" endtime="20201030 10:57:04.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.008" endtime="20201030 10:57:04.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.005" endtime="20201030 10:57:04.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.044" endtime="20201030 10:57:04.329"></status>
</kw>
<msg timestamp="20201030 10:57:04.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.042" endtime="20201030 10:57:04.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.333" endtime="20201030 10:57:04.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.342" endtime="20201030 10:57:04.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.039" endtime="20201030 10:57:04.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.038" endtime="20201030 10:57:04.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.349" level="INFO">${RESULT} = [{'diff': 2.1721999999998326e-05}, {'diff': 2.0693999999998186e-05}, {'diff': 2.0721999999997326e-05}, {'diff': 2.0707999999997756e-05}, {'diff': 2.072300000000027e-05}, {'diff': 2.0722000000000795e-0...</msg>
<status status="PASS" starttime="20201030 10:57:04.345" endtime="20201030 10:57:04.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:04.354" level="INFO">${ACCURACY} = {'diff': [2.1721999999998326e-05, 2.0693999999998186e-05, 2.0721999999997326e-05, 2.0707999999997756e-05, 2.072300000000027e-05, 2.0722000000000795e-05, 2.069499999999766e-05, 2.0707999999997756e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:04.350" endtime="20201030 10:57:04.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.359" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:57:04.357" endtime="20201030 10:57:04.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.361" level="INFO">VALUE: [2.1721999999998326e-05, 2.0693999999998186e-05, 2.0721999999997326e-05, 2.0707999999997756e-05, 2.072300000000027e-05, 2.0722000000000795e-05, 2.069499999999766e-05, 2.0707999999997756e-05, 2.0708000000001225e-05, 2.122300000000077e-05, 2.1194000000002156e-05, 2.119500000000163e-05, 2.119500000000163e-05, 2.1264000000000005e-05, 2.1208000000001725e-05, 2.115299999999945e-05, 2.1222000000001295e-05, 2.1236000000000865e-05, 2.120899999999773e-05, 2.0694000000001656e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.119499999999816e-05, 2.1207999999998256e-05, 2.068100000000156e-05, 2.1165999999999546e-05, 2.0749999999999935e-05, 2.1208000000001725e-05, 2.120899999999773e-05, 2.1791999999999645e-05, 2.1222000000001295e-05, 2.1208000000001725e-05, 2.1264000000000005e-05, 2.0680000000002086e-05, 2.17229999999978e-05, 2.1194000000002156e-05, 2.0763999999999505e-05, 2.1222000000001295e-05, 2.1193999999998686e-05, 2.1208000000001725e-05, 2.12090000000012e-05, 2.172300000000127e-05, 2.1221999999997826e-05, 2.1207999999998256e-05, 2.0736000000000365e-05, 2.0721999999997326e-05, 2.122300000000077e-05, 2.1236000000000865e-05, 2.070899999999723e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201030 10:57:04.360" endtime="20201030 10:57:04.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.355" endtime="20201030 10:57:04.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:04.366" endtime="20201030 10:57:04.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.365" endtime="20201030 10:57:04.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.364" endtime="20201030 10:57:04.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.004" endtime="20201030 10:57:04.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.003" endtime="20201030 10:57:04.387"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.396" endtime="20201030 10:57:04.414"></status>
</kw>
<msg timestamp="20201030 10:57:04.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.395" endtime="20201030 10:57:04.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.415" endtime="20201030 10:57:04.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.418" endtime="20201030 10:57:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.392" endtime="20201030 10:57:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.390" endtime="20201030 10:57:04.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.428" endtime="20201030 10:57:04.713"></status>
</kw>
<msg timestamp="20201030 10:57:04.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.426" endtime="20201030 10:57:04.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.717" endtime="20201030 10:57:04.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.725" endtime="20201030 10:57:04.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.423" endtime="20201030 10:57:04.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.421" endtime="20201030 10:57:04.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.732" level="INFO">${RESULT} = [{'diff': 2.2221999999998826e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.1749999999997466e-05}, {'diff': 2.2222000000002295e-05}, {'diff': 2.168100000000256e-05}, {'diff': 2.176300000000103e-05...</msg>
<status status="PASS" starttime="20201030 10:57:04.729" endtime="20201030 10:57:04.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:04.737" level="INFO">${ACCURACY} = {'diff': [2.2221999999998826e-05, 2.2207999999999256e-05, 2.1749999999997466e-05, 2.2222000000002295e-05, 2.168100000000256e-05, 2.176300000000103e-05, 2.1694000000002656e-05, 2.2236000000001865e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:04.733" endtime="20201030 10:57:04.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.741" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:57:04.740" endtime="20201030 10:57:04.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.744" level="INFO">VALUE: [2.2221999999998826e-05, 2.2207999999999256e-05, 2.1749999999997466e-05, 2.2222000000002295e-05, 2.168100000000256e-05, 2.176300000000103e-05, 2.1694000000002656e-05, 2.2236000000001865e-05, 2.169499999999866e-05, 2.2722000000002796e-05, 2.166699999999952e-05, 2.2222000000002295e-05, 2.2250000000001435e-05, 2.1722000000001795e-05, 2.170899999999823e-05, 2.219499999999916e-05, 2.173700000000084e-05, 2.1722000000001795e-05, 2.2207999999999256e-05, 2.1750000000000935e-05, 2.2235999999998396e-05, 2.1749999999997466e-05, 2.1708000000002226e-05, 2.220899999999873e-05, 2.172300000000127e-05, 2.2208000000002726e-05, 2.2221999999998826e-05, 2.1693999999999186e-05, 2.17229999999978e-05, 2.168099999999909e-05, 2.2207999999999256e-05, 2.2278000000000575e-05, 2.1764000000000505e-05, 2.2250000000001435e-05, 2.2221999999998826e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.2208000000002726e-05, 2.2235999999998396e-05, 2.2193999999999686e-05, 2.1764000000000505e-05, 2.215299999999698e-05, 2.22090000000022e-05, 2.2221999999998826e-05, 2.2221999999998826e-05, 2.169500000000213e-05, 2.2222000000002295e-05, 2.1722000000001795e-05, 2.2236000000001865e-05, 2.172300000000127e-05]</msg>
<status status="PASS" starttime="20201030 10:57:04.742" endtime="20201030 10:57:04.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.738" endtime="20201030 10:57:04.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:04.749" endtime="20201030 10:57:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.748" endtime="20201030 10:57:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.746" endtime="20201030 10:57:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.388" endtime="20201030 10:57:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.388" endtime="20201030 10:57:04.770"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.779" endtime="20201030 10:57:04.798"></status>
</kw>
<msg timestamp="20201030 10:57:04.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.777" endtime="20201030 10:57:04.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.800" endtime="20201030 10:57:04.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.802" endtime="20201030 10:57:04.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.775" endtime="20201030 10:57:04.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.773" endtime="20201030 10:57:04.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.812" endtime="20201030 10:57:05.097"></status>
</kw>
<msg timestamp="20201030 10:57:05.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020997181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.810" endtime="20201030 10:57:05.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020997181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.101" endtime="20201030 10:57:05.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.110" endtime="20201030 10:57:05.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.807" endtime="20201030 10:57:05.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.805" endtime="20201030 10:57:05.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.117" level="INFO">${RESULT} = [{'diff': 2.2707999999999756e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.316699999999755e-05}, {'diff': 2.320899999999973e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3262999999999062e-05...</msg>
<status status="PASS" starttime="20201030 10:57:05.113" endtime="20201030 10:57:05.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:05.121" level="INFO">${ACCURACY} = {'diff': [2.2707999999999756e-05, 2.3221999999999826e-05, 2.316699999999755e-05, 2.320899999999973e-05, 2.3221999999999826e-05, 2.3262999999999062e-05, 2.3722000000000326e-05, 2.2721999999999326e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:05.118" endtime="20201030 10:57:05.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.126" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:57:05.125" endtime="20201030 10:57:05.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.128" level="INFO">VALUE: [2.2707999999999756e-05, 2.3221999999999826e-05, 2.316699999999755e-05, 2.320899999999973e-05, 2.3221999999999826e-05, 2.3262999999999062e-05, 2.3722000000000326e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.2694000000000186e-05, 2.318100000000059e-05, 2.32229999999993e-05, 2.263900000000138e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.265299999999748e-05, 2.315299999999798e-05, 2.37229999999998e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.263900000000138e-05, 2.270899999999923e-05, 2.269499999999966e-05, 2.373699999999937e-05, 2.3262999999999062e-05, 2.2750000000001935e-05, 2.2721999999999326e-05, 2.320899999999973e-05, 2.3249999999998966e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3194000000000686e-05, 2.32090000000032e-05, 2.2707999999999756e-05, 2.3264000000002005e-05, 2.312500000000231e-05, 2.2735999999998896e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.2735999999998896e-05, 2.3722000000000326e-05, 2.2776999999998132e-05, 2.320899999999973e-05, 2.3262999999999062e-05, 2.3194000000000686e-05, 2.2721999999999326e-05, 2.3208000000000256e-05, 2.3208000000000256e-05]</msg>
<status status="PASS" starttime="20201030 10:57:05.127" endtime="20201030 10:57:05.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.122" endtime="20201030 10:57:05.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.134" endtime="20201030 10:57:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.133" endtime="20201030 10:57:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.132" endtime="20201030 10:57:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.771" endtime="20201030 10:57:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.770" endtime="20201030 10:57:05.155"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.164" endtime="20201030 10:57:05.182"></status>
</kw>
<msg timestamp="20201030 10:57:05.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.163" endtime="20201030 10:57:05.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.184" endtime="20201030 10:57:05.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.187" endtime="20201030 10:57:05.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.160" endtime="20201030 10:57:05.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.158" endtime="20201030 10:57:05.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.197" endtime="20201030 10:57:05.482"></status>
</kw>
<msg timestamp="20201030 10:57:05.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.195" endtime="20201030 10:57:05.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.486" endtime="20201030 10:57:05.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.495" endtime="20201030 10:57:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.192" endtime="20201030 10:57:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.191" endtime="20201030 10:57:05.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.502" level="INFO">${RESULT} = [{'diff': 2.3722000000000326e-05}, {'diff': 2.3708000000000756e-05}, {'diff': 2.4222000000000826e-05}, {'diff': 2.369499999999719e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.37229999999998e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:05.498" endtime="20201030 10:57:05.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:05.507" level="INFO">${ACCURACY} = {'diff': [2.3722000000000326e-05, 2.3708000000000756e-05, 2.4222000000000826e-05, 2.369499999999719e-05, 2.3735999999999896e-05, 2.37229999999998e-05, 2.3777999999998606e-05, 2.4207999999997787e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:05.503" endtime="20201030 10:57:05.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.512" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:57:05.511" endtime="20201030 10:57:05.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.514" level="INFO">VALUE: [2.3722000000000326e-05, 2.3708000000000756e-05, 2.4222000000000826e-05, 2.369499999999719e-05, 2.3735999999999896e-05, 2.37229999999998e-05, 2.3777999999998606e-05, 2.4207999999997787e-05, 2.4208000000001256e-05, 2.365300000000195e-05, 2.3707999999997287e-05, 2.368100000000109e-05, 2.4749999999996997e-05, 2.42230000000003e-05, 2.4208000000001256e-05, 2.3708000000000756e-05, 2.4236000000000396e-05, 2.420900000000073e-05, 2.3694000000001186e-05, 2.370900000000023e-05, 2.3722000000000326e-05, 2.4208000000001256e-05, 2.4236000000000396e-05, 2.3722000000000326e-05, 2.4193999999998217e-05, 2.3708000000000756e-05, 2.3735999999999896e-05, 2.4263000000000062e-05, 2.3680000000001616e-05, 2.4222000000000826e-05, 2.370900000000023e-05, 2.3764000000002505e-05, 2.4221999999997357e-05, 2.4208000000001256e-05, 2.3708000000000756e-05, 2.369500000000066e-05, 2.419500000000116e-05, 2.423699999999987e-05, 2.4249999999999966e-05, 2.369500000000066e-05, 2.4194000000001686e-05, 2.4222000000000826e-05, 2.3722000000000326e-05, 2.370900000000023e-05, 2.3707999999997287e-05, 2.3722000000000326e-05, 2.362499999999934e-05, 2.4221999999997357e-05, 2.4236000000000396e-05, 2.419500000000116e-05]</msg>
<status status="PASS" starttime="20201030 10:57:05.513" endtime="20201030 10:57:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.508" endtime="20201030 10:57:05.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.519" endtime="20201030 10:57:05.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.518" endtime="20201030 10:57:05.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.517" endtime="20201030 10:57:05.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.156" endtime="20201030 10:57:05.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.156" endtime="20201030 10:57:05.540"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.549" endtime="20201030 10:57:05.567"></status>
</kw>
<msg timestamp="20201030 10:57:05.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.548" endtime="20201030 10:57:05.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.569" endtime="20201030 10:57:05.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.571" endtime="20201030 10:57:05.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.545" endtime="20201030 10:57:05.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.543" endtime="20201030 10:57:05.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.581" endtime="20201030 10:57:05.870"></status>
</kw>
<msg timestamp="20201030 10:57:05.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.579" endtime="20201030 10:57:05.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.874" endtime="20201030 10:57:05.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.883" endtime="20201030 10:57:05.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.577" endtime="20201030 10:57:05.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.575" endtime="20201030 10:57:05.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.890" level="INFO">${RESULT} = [{'diff': 2.470899999999776e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.4694000000002186e-05}, {'diff': 2.5221999999998357e-05}, {'diff': 2.5207999999998787e-05}, {'diff': 2.5221999999998357e-0...</msg>
<status status="PASS" starttime="20201030 10:57:05.886" endtime="20201030 10:57:05.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:05.894" level="INFO">${ACCURACY} = {'diff': [2.470899999999776e-05, 2.5235999999997927e-05, 2.4694000000002186e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.4722000000001326e-05, 2.519499999999869e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:05.891" endtime="20201030 10:57:05.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.899" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:57:05.897" endtime="20201030 10:57:05.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.901" level="INFO">VALUE: [2.470899999999776e-05, 2.5235999999997927e-05, 2.4694000000002186e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.4722000000001326e-05, 2.519499999999869e-05, 2.4791999999999176e-05, 2.5208000000002256e-05, 2.4707999999998287e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.5222000000001826e-05, 2.4736000000000896e-05, 2.522299999999783e-05, 2.512499999999737e-05, 2.5707999999999287e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.52230000000013e-05, 2.4694000000002186e-05, 2.4708000000001756e-05, 2.4708000000001756e-05, 2.4735999999997427e-05, 2.4749999999996997e-05, 2.5721999999998857e-05, 2.523700000000087e-05, 2.5236000000001396e-05, 2.4721999999997857e-05, 2.5207999999998787e-05, 2.5735999999998427e-05, 2.472299999999733e-05, 2.472299999999733e-05, 2.519499999999869e-05, 2.5236000000001396e-05, 2.4638000000000437e-05, 2.5222000000001826e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.520899999999826e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.4764000000000036e-05, 2.4722000000001326e-05, 2.5221999999998357e-05, 2.5222000000001826e-05, 2.4722000000001326e-05]</msg>
<status status="PASS" starttime="20201030 10:57:05.900" endtime="20201030 10:57:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.895" endtime="20201030 10:57:05.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.906" endtime="20201030 10:57:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.905" endtime="20201030 10:57:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.904" endtime="20201030 10:57:05.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.541" endtime="20201030 10:57:05.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.541" endtime="20201030 10:57:05.927"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.936" endtime="20201030 10:57:05.955"></status>
</kw>
<msg timestamp="20201030 10:57:05.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.935" endtime="20201030 10:57:05.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.956" endtime="20201030 10:57:05.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.959" endtime="20201030 10:57:05.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.932" endtime="20201030 10:57:05.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.930" endtime="20201030 10:57:05.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.969" endtime="20201030 10:57:06.254"></status>
</kw>
<msg timestamp="20201030 10:57:06.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:05.967" endtime="20201030 10:57:06.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:06.258" endtime="20201030 10:57:06.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.267" endtime="20201030 10:57:06.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.964" endtime="20201030 10:57:06.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.962" endtime="20201030 10:57:06.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.274" level="INFO">${RESULT} = [{'diff': 2.6207999999999787e-05}, {'diff': 2.5693999999999717e-05}, {'diff': 2.5778000000000606e-05}, {'diff': 2.6207999999999787e-05}, {'diff': 2.5722000000002326e-05}, {'diff': 2.6207999999999787e-...</msg>
<status status="PASS" starttime="20201030 10:57:06.270" endtime="20201030 10:57:06.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:06.278" level="INFO">${ACCURACY} = {'diff': [2.6207999999999787e-05, 2.5693999999999717e-05, 2.5778000000000606e-05, 2.6207999999999787e-05, 2.5722000000002326e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.5735999999998427e-05...</msg>
<status status="PASS" starttime="20201030 10:57:06.275" endtime="20201030 10:57:06.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.283" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:57:06.282" endtime="20201030 10:57:06.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.285" level="INFO">VALUE: [2.6207999999999787e-05, 2.5693999999999717e-05, 2.5778000000000606e-05, 2.6207999999999787e-05, 2.5722000000002326e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.570900000000223e-05, 2.6235999999998927e-05, 2.5708000000002756e-05, 2.5763999999997567e-05, 2.6194000000000217e-05, 2.620899999999926e-05, 2.6278000000001106e-05, 2.570900000000223e-05, 2.6221999999999357e-05, 2.5736000000001896e-05, 2.5735999999998427e-05, 2.57230000000018e-05, 2.5736000000001896e-05, 2.569499999999919e-05, 2.6180000000000647e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6222000000002826e-05, 2.6222000000002826e-05, 2.6277999999997637e-05, 2.6124999999998372e-05, 2.6207999999999787e-05, 2.5721999999998857e-05, 2.6708000000000287e-05, 2.6278000000001106e-05, 2.62230000000023e-05, 2.6236000000002396e-05, 2.570899999999876e-05, 2.5680000000000147e-05, 2.6235999999998927e-05, 2.670899999999976e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.5693999999999717e-05, 2.6708000000000287e-05, 2.6222000000002826e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.572299999999833e-05, 2.5665999999997108e-05, 2.570900000000223e-05, 2.6222000000002826e-05]</msg>
<status status="PASS" starttime="20201030 10:57:06.284" endtime="20201030 10:57:06.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.279" endtime="20201030 10:57:06.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:06.291" endtime="20201030 10:57:06.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.290" endtime="20201030 10:57:06.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.288" endtime="20201030 10:57:06.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.928" endtime="20201030 10:57:06.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.927" endtime="20201030 10:57:06.312"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.321" endtime="20201030 10:57:06.339"></status>
</kw>
<msg timestamp="20201030 10:57:06.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.320" endtime="20201030 10:57:06.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.341" endtime="20201030 10:57:06.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.343" endtime="20201030 10:57:06.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.317" endtime="20201030 10:57:06.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.315" endtime="20201030 10:57:06.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.353" endtime="20201030 10:57:06.639"></status>
</kw>
<msg timestamp="20201030 10:57:06.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.351" endtime="20201030 10:57:06.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.643" endtime="20201030 10:57:06.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.652" endtime="20201030 10:57:06.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.348" endtime="20201030 10:57:06.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.347" endtime="20201030 10:57:06.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.659" level="INFO">${RESULT} = [{'diff': 2.669499999999672e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.670899999999976e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.7194000000001217e-05...</msg>
<status status="PASS" starttime="20201030 10:57:06.655" endtime="20201030 10:57:06.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:06.664" level="INFO">${ACCURACY} = {'diff': [2.669499999999672e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.6708000000000287e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:06.660" endtime="20201030 10:57:06.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.669" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:57:06.667" endtime="20201030 10:57:06.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.671" level="INFO">VALUE: [2.669499999999672e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.6708000000000287e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.720900000000026e-05, 2.7222000000000357e-05, 2.6694000000000717e-05, 2.720900000000026e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.720900000000026e-05, 2.6735999999999427e-05, 2.722299999999983e-05, 2.7207999999997318e-05, 2.7208000000000787e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.72230000000033e-05, 2.670899999999976e-05, 2.7208000000000787e-05, 2.7721999999997388e-05, 2.7208000000000787e-05, 2.720900000000026e-05, 2.670899999999976e-05, 2.7235999999999927e-05, 2.6721999999999857e-05, 2.6735999999999427e-05, 2.7235999999999927e-05, 2.6624999999998872e-05, 2.7235999999999927e-05, 2.722299999999983e-05, 2.7222000000000357e-05, 2.670900000000323e-05, 2.7264000000002536e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.7222000000000357e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.7249999999999497e-05, 2.7207999999997318e-05, 2.6736000000002896e-05, 2.716700000000155e-05]</msg>
<status status="PASS" starttime="20201030 10:57:06.670" endtime="20201030 10:57:06.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.665" endtime="20201030 10:57:06.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:06.741" endtime="20201030 10:57:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.739" endtime="20201030 10:57:06.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.738" endtime="20201030 10:57:06.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.313" endtime="20201030 10:57:06.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.313" endtime="20201030 10:57:06.762"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.771" endtime="20201030 10:57:06.788"></status>
</kw>
<msg timestamp="20201030 10:57:06.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.769" endtime="20201030 10:57:06.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.790" endtime="20201030 10:57:06.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.793" endtime="20201030 10:57:06.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.766" endtime="20201030 10:57:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.764" endtime="20201030 10:57:06.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.802" endtime="20201030 10:57:07.098"></status>
</kw>
<msg timestamp="20201030 10:57:07.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.800" endtime="20201030 10:57:07.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.108" endtime="20201030 10:57:07.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.127" endtime="20201030 10:57:07.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.798" endtime="20201030 10:57:07.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.796" endtime="20201030 10:57:07.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.142" level="INFO">${RESULT} = [{'diff': 2.770899999999729e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.819500000000169e-05}, {'diff': 2.772300000000033e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:07.135" endtime="20201030 10:57:07.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:07.152" level="INFO">${ACCURACY} = {'diff': [2.770899999999729e-05, 2.7722000000000857e-05, 2.822300000000083e-05, 2.8193999999998748e-05, 2.819500000000169e-05, 2.772300000000033e-05, 2.772300000000033e-05, 2.769500000000119e-05, 2.77...</msg>
<status status="PASS" starttime="20201030 10:57:07.144" endtime="20201030 10:57:07.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.161" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:57:07.159" endtime="20201030 10:57:07.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.167" level="INFO">VALUE: [2.770899999999729e-05, 2.7722000000000857e-05, 2.822300000000083e-05, 2.8193999999998748e-05, 2.819500000000169e-05, 2.772300000000033e-05, 2.772300000000033e-05, 2.769500000000119e-05, 2.7707999999997818e-05, 2.7693999999998248e-05, 2.8194000000002217e-05, 2.819499999999822e-05, 2.820900000000126e-05, 2.772300000000033e-05, 2.772300000000033e-05, 2.8250000000000497e-05, 2.7736000000000427e-05, 2.819500000000169e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.8152999999999512e-05, 2.7722000000000857e-05, 2.8208000000001787e-05, 2.7694000000001717e-05, 2.8222000000001357e-05, 2.8207999999998318e-05, 2.869499999999872e-05, 2.8208000000001787e-05, 2.7652999999999012e-05, 2.8166000000003077e-05, 2.8235999999997458e-05, 2.816699999999908e-05, 2.8236000000000927e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.8222000000001357e-05, 2.7721999999997388e-05, 2.768099999999815e-05, 2.7722000000000857e-05, 2.8222000000001357e-05, 2.768100000000162e-05, 2.7708000000001287e-05, 2.7736000000000427e-05, 2.8208000000001787e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.822300000000083e-05, 2.7792000000002176e-05, 2.7708000000001287e-05, 2.7679999999998678e-05]</msg>
<status status="PASS" starttime="20201030 10:57:07.164" endtime="20201030 10:57:07.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.154" endtime="20201030 10:57:07.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:07.172" endtime="20201030 10:57:07.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.171" endtime="20201030 10:57:07.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.170" endtime="20201030 10:57:07.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.762" endtime="20201030 10:57:07.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.762" endtime="20201030 10:57:07.193"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.202" endtime="20201030 10:57:07.221"></status>
</kw>
<msg timestamp="20201030 10:57:07.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.201" endtime="20201030 10:57:07.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.222" endtime="20201030 10:57:07.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.225" endtime="20201030 10:57:07.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.198" endtime="20201030 10:57:07.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.196" endtime="20201030 10:57:07.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.234" endtime="20201030 10:57:07.522"></status>
</kw>
<msg timestamp="20201030 10:57:07.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021307292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.233" endtime="20201030 10:57:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021307292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.526" endtime="20201030 10:57:07.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.535" endtime="20201030 10:57:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.230" endtime="20201030 10:57:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.228" endtime="20201030 10:57:07.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.542" level="INFO">${RESULT} = [{'diff': 2.8735999999997958e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8666999999999582e-05}, {'diff': 2.9207999999999318e-05}, {'diff': 2.9235999999998458e-05}, {'diff': 2.922299999999836e-0...</msg>
<status status="PASS" starttime="20201030 10:57:07.538" endtime="20201030 10:57:07.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:07.546" level="INFO">${ACCURACY} = {'diff': [2.8735999999997958e-05, 2.8722000000001857e-05, 2.8666999999999582e-05, 2.9207999999999318e-05, 2.9235999999998458e-05, 2.922299999999836e-05, 2.9249999999998028e-05, 2.9207999999999318e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:07.543" endtime="20201030 10:57:07.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.551" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:57:07.550" endtime="20201030 10:57:07.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.554" level="INFO">VALUE: [2.8735999999997958e-05, 2.8722000000001857e-05, 2.8666999999999582e-05, 2.9207999999999318e-05, 2.9235999999998458e-05, 2.922299999999836e-05, 2.9249999999998028e-05, 2.9207999999999318e-05, 2.9208000000002787e-05, 2.8693999999999248e-05, 2.9236000000001927e-05, 2.9264000000001067e-05, 2.9207999999999318e-05, 2.8764000000000567e-05, 2.869499999999872e-05, 2.9221999999998888e-05, 2.8707999999998818e-05, 2.922300000000183e-05, 2.9221999999998888e-05, 2.9207999999999318e-05, 2.9235999999998458e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.8708000000002287e-05, 2.872300000000133e-05, 2.9222000000002357e-05, 2.9222000000002357e-05, 2.9221999999998888e-05, 2.8736000000001427e-05, 2.8791999999999707e-05, 2.918099999999965e-05, 2.870899999999829e-05, 2.922299999999836e-05, 2.8708000000002287e-05, 2.9208000000002787e-05, 2.9777000000001663e-05, 2.870899999999829e-05, 2.9707999999999818e-05, 2.9139000000000942e-05, 2.8693999999999248e-05, 2.8707999999998818e-05, 2.9222000000002357e-05, 2.8693999999999248e-05, 2.8679999999999678e-05, 2.9235999999998458e-05, 2.920900000000226e-05, 2.9222000000002357e-05, 2.9250000000001497e-05, 2.9207999999999318e-05, 2.9208000000002787e-05]</msg>
<status status="PASS" starttime="20201030 10:57:07.552" endtime="20201030 10:57:07.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.547" endtime="20201030 10:57:07.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:07.560" endtime="20201030 10:57:07.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.558" endtime="20201030 10:57:07.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.557" endtime="20201030 10:57:07.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.194" endtime="20201030 10:57:07.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.194" endtime="20201030 10:57:07.581"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.590" endtime="20201030 10:57:07.607"></status>
</kw>
<msg timestamp="20201030 10:57:07.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.588" endtime="20201030 10:57:07.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.609" endtime="20201030 10:57:07.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.611" endtime="20201030 10:57:07.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.585" endtime="20201030 10:57:07.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.583" endtime="20201030 10:57:07.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.621" endtime="20201030 10:57:07.906"></status>
</kw>
<msg timestamp="20201030 10:57:07.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:07.619" endtime="20201030 10:57:07.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:07.911" endtime="20201030 10:57:07.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.919" endtime="20201030 10:57:07.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.616" endtime="20201030 10:57:07.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.615" endtime="20201030 10:57:07.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.926" level="INFO">${RESULT} = [{'diff': 3.0208000000000318e-05}, {'diff': 3.0208000000000318e-05}, {'diff': 2.9721999999999388e-05}, {'diff': 2.972300000000233e-05}, {'diff': 2.9722000000002857e-05}, {'diff': 2.9722000000002857e-0...</msg>
<status status="PASS" starttime="20201030 10:57:07.923" endtime="20201030 10:57:07.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:07.931" level="INFO">${ACCURACY} = {'diff': [3.0208000000000318e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 2.972300000000233e-05, 2.9722000000002857e-05, 2.9722000000002857e-05, 3.0194000000000748e-05, 3.0235999999999458e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:07.927" endtime="20201030 10:57:07.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.936" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:57:07.935" endtime="20201030 10:57:07.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.939" level="INFO">VALUE: [3.0208000000000318e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 2.972300000000233e-05, 2.9722000000002857e-05, 2.9722000000002857e-05, 3.0194000000000748e-05, 3.0235999999999458e-05, 2.972299999999886e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 3.0181000000000652e-05, 2.9694000000000248e-05, 2.972299999999886e-05, 3.0221999999999888e-05, 3.063899999999897e-05, 3.019500000000022e-05, 3.0221999999999888e-05, 3.020899999999979e-05, 3.0221999999999888e-05, 2.969499999999972e-05, 2.970899999999929e-05, 2.972299999999886e-05, 3.0222000000003357e-05, 3.0208000000000318e-05, 3.019500000000022e-05, 3.0208000000000318e-05, 3.017999999999771e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9721999999999388e-05, 3.020899999999979e-05, 3.0181000000000652e-05, 3.0208000000000318e-05, 3.019500000000022e-05, 2.970899999999929e-05, 2.966599999999764e-05, 3.0235999999999458e-05, 2.9707999999999818e-05, 2.9667000000000582e-05, 3.023699999999893e-05, 2.9762999999998624e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 3.0235999999999458e-05, 2.9694000000000248e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201030 10:57:07.937" endtime="20201030 10:57:07.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.932" endtime="20201030 10:57:07.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:07.944" endtime="20201030 10:57:07.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.942" endtime="20201030 10:57:07.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.941" endtime="20201030 10:57:07.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.581" endtime="20201030 10:57:07.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.581" endtime="20201030 10:57:07.965"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.974" endtime="20201030 10:57:07.991"></status>
</kw>
<msg timestamp="20201030 10:57:07.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.972" endtime="20201030 10:57:07.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.993" endtime="20201030 10:57:07.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.995" endtime="20201030 10:57:07.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.969" endtime="20201030 10:57:07.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.967" endtime="20201030 10:57:07.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.005" endtime="20201030 10:57:08.293"></status>
</kw>
<msg timestamp="20201030 10:57:08.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.003" endtime="20201030 10:57:08.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.297" endtime="20201030 10:57:08.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.305" endtime="20201030 10:57:08.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.001" endtime="20201030 10:57:08.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.999" endtime="20201030 10:57:08.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.312" level="INFO">${RESULT} = [{'diff': 3.074999999999953e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.119400000000175e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.119500000000122e-05}, {'diff': 3.074999999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:08.309" endtime="20201030 10:57:08.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:08.317" level="INFO">${ACCURACY} = {'diff': [3.074999999999953e-05, 3.072200000000039e-05, 3.119400000000175e-05, 3.120799999999785e-05, 3.119500000000122e-05, 3.074999999999953e-05, 3.072299999999986e-05, 3.072200000000039e-05, 3.0735...</msg>
<status status="PASS" starttime="20201030 10:57:08.313" endtime="20201030 10:57:08.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.321" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:57:08.320" endtime="20201030 10:57:08.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.324" level="INFO">VALUE: [3.074999999999953e-05, 3.072200000000039e-05, 3.119400000000175e-05, 3.120799999999785e-05, 3.119500000000122e-05, 3.074999999999953e-05, 3.072299999999986e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.070800000000082e-05, 3.118099999999818e-05, 3.125000000000003e-05, 3.070900000000029e-05, 3.073599999999996e-05, 3.072200000000039e-05, 3.070900000000029e-05, 3.070800000000082e-05, 3.119500000000122e-05, 3.120799999999785e-05, 3.122199999999742e-05, 3.069400000000125e-05, 3.123600000000046e-05, 3.072200000000039e-05, 3.072200000000039e-05, 3.07639999999991e-05, 3.127799999999917e-05, 3.070800000000082e-05, 3.072200000000039e-05, 3.12639999999996e-05, 3.120800000000132e-05, 3.066600000000211e-05, 3.122199999999742e-05, 3.070799999999735e-05, 3.122200000000089e-05, 3.120800000000132e-05, 3.119400000000175e-05, 3.120799999999785e-05, 3.070900000000029e-05, 3.122200000000089e-05, 3.115299999999904e-05, 3.120899999999732e-05, 3.070800000000082e-05, 3.123600000000046e-05, 3.072200000000039e-05, 3.116699999999861e-05, 3.070900000000029e-05, 3.072200000000039e-05, 3.123600000000046e-05, 3.070799999999735e-05, 3.070800000000082e-05]</msg>
<status status="PASS" starttime="20201030 10:57:08.322" endtime="20201030 10:57:08.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.317" endtime="20201030 10:57:08.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.329" endtime="20201030 10:57:08.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.327" endtime="20201030 10:57:08.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.326" endtime="20201030 10:57:08.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.966" endtime="20201030 10:57:08.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.965" endtime="20201030 10:57:08.350"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.359" endtime="20201030 10:57:08.378"></status>
</kw>
<msg timestamp="20201030 10:57:08.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.357" endtime="20201030 10:57:08.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.379" endtime="20201030 10:57:08.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.382" endtime="20201030 10:57:08.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.355" endtime="20201030 10:57:08.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.352" endtime="20201030 10:57:08.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.391" endtime="20201030 10:57:08.676"></status>
</kw>
<msg timestamp="20201030 10:57:08.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.390" endtime="20201030 10:57:08.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.681" endtime="20201030 10:57:08.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.689" endtime="20201030 10:57:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.387" endtime="20201030 10:57:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.385" endtime="20201030 10:57:08.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.696" level="INFO">${RESULT} = [{'diff': 8.422199999999838e-05}, {'diff': 4.394400000000062e-05}, {'diff': 3.945800000000263e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.927800000000023e-05}, {'diff': 3.9596999999998855e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:08.693" endtime="20201030 10:57:08.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:08.701" level="INFO">${ACCURACY} = {'diff': [8.422199999999838e-05, 4.394400000000062e-05, 3.945800000000263e-05, 3.9096999999998355e-05, 3.927800000000023e-05, 3.9596999999998855e-05, 3.898600000000127e-05, 3.9167000000003144e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 10:57:08.697" endtime="20201030 10:57:08.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.705" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:57:08.704" endtime="20201030 10:57:08.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.708" level="INFO">VALUE: [8.422199999999838e-05, 4.394400000000062e-05, 3.945800000000263e-05, 3.9096999999998355e-05, 3.927800000000023e-05, 3.9596999999998855e-05, 3.898600000000127e-05, 3.9167000000003144e-05, 3.9596999999998855e-05, 3.9667000000000174e-05, 3.959799999999833e-05, 3.951399999999744e-05, 3.904200000000302e-05, 3.902799999999998e-05, 3.9583000000002755e-05, 3.9666999999996705e-05, 4.034799999999908e-05, 3.905599999999912e-05, 4.034800000000255e-05, 3.909799999999783e-05, 3.9138999999997065e-05, 3.9277000000000756e-05, 3.9555000000000146e-05, 3.991600000000095e-05, 3.9125000000000965e-05, 3.951399999999744e-05, 3.923599999999805e-05, 3.9847000000002575e-05, 3.945800000000263e-05, 3.927800000000023e-05, 3.9096999999998355e-05, 3.926400000000066e-05, 3.9846999999999105e-05, 3.977800000000073e-05, 3.9388999999997315e-05, 4.033399999999951e-05, 3.9916999999996955e-05, 3.983399999999901e-05, 3.9861000000002145e-05, 3.9875000000001715e-05, 3.91119999999974e-05, 3.9458999999998634e-05, 3.9139000000000534e-05, 3.8930999999998994e-05, 3.9582999999999285e-05, 3.9125000000000965e-05, 3.8931000000002464e-05, 3.973600000000202e-05, 3.9832999999999535e-05, 3.941600000000045e-05]</msg>
<status status="PASS" starttime="20201030 10:57:08.706" endtime="20201030 10:57:08.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.701" endtime="20201030 10:57:08.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.714" endtime="20201030 10:57:08.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.712" endtime="20201030 10:57:08.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.711" endtime="20201030 10:57:08.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.351" endtime="20201030 10:57:08.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.350" endtime="20201030 10:57:08.734"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.743" endtime="20201030 10:57:08.763"></status>
</kw>
<msg timestamp="20201030 10:57:08.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.742" endtime="20201030 10:57:08.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.765" endtime="20201030 10:57:08.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.767" endtime="20201030 10:57:08.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.739" endtime="20201030 10:57:08.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.737" endtime="20201030 10:57:08.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.777" endtime="20201030 10:57:09.063"></status>
</kw>
<msg timestamp="20201030 10:57:09.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:08.775" endtime="20201030 10:57:09.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:09.067" endtime="20201030 10:57:09.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.075" endtime="20201030 10:57:09.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.772" endtime="20201030 10:57:09.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.771" endtime="20201030 10:57:09.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.082" level="INFO">${RESULT} = [{'diff': 4.429199999999786e-05}, {'diff': 4.4431000000001025e-05}, {'diff': 4.0417000000000924e-05}, {'diff': 4.0527000000002006e-05}, {'diff': 4.0819000000000966e-05}, {'diff': 4.083400000000001e-05...</msg>
<status status="PASS" starttime="20201030 10:57:09.079" endtime="20201030 10:57:09.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:09.087" level="INFO">${ACCURACY} = {'diff': [4.429199999999786e-05, 4.4431000000001025e-05, 4.0417000000000924e-05, 4.0527000000002006e-05, 4.0819000000000966e-05, 4.083400000000001e-05, 4.016599999999773e-05, 4.1361000000000175e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:57:09.083" endtime="20201030 10:57:09.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.092" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:57:09.091" endtime="20201030 10:57:09.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.095" level="INFO">VALUE: [4.429199999999786e-05, 4.4431000000001025e-05, 4.0417000000000924e-05, 4.0527000000002006e-05, 4.0819000000000966e-05, 4.083400000000001e-05, 4.016599999999773e-05, 4.1361000000000175e-05, 4.022199999999948e-05, 4.072199999999998e-05, 4.045799999999669e-05, 4.004200000000055e-05, 4.0041000000001076e-05, 4.016599999999773e-05, 4.005600000000012e-05, 4.0374999999998745e-05, 4.047199999999973e-05, 3.995799999999966e-05, 4.074999999999912e-05, 4.002799999999751e-05, 4.0526999999998536e-05, 4.0167000000000674e-05, 4.0805000000001396e-05, 4.0526999999998536e-05, 4.008399999999926e-05, 4.0360999999999175e-05, 4.004199999999708e-05, 3.99859999999988e-05, 4.0223000000002423e-05, 4.0541000000001576e-05, 4.016599999999773e-05, 4.022199999999948e-05, 4.0041000000001076e-05, 4.072199999999998e-05, 4.0388999999998315e-05, 4.041599999999798e-05, 4.022199999999948e-05, 4.0403000000001354e-05, 4.0417000000000924e-05, 3.997199999999923e-05, 4.0916999999997955e-05, 4.058399999999976e-05, 4.0653000000001605e-05, 4.031999999999994e-05, 4.0639000000002035e-05, 4.0653000000001605e-05, 4.050000000000234e-05, 3.9944999999999564e-05, 4.030600000000037e-05, 4.0903000000001855e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.093" endtime="20201030 10:57:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.088" endtime="20201030 10:57:09.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.100" endtime="20201030 10:57:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.098" endtime="20201030 10:57:09.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.097" endtime="20201030 10:57:09.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.735" endtime="20201030 10:57:09.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.735" endtime="20201030 10:57:09.121"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.130" endtime="20201030 10:57:09.148"></status>
</kw>
<msg timestamp="20201030 10:57:09.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.128" endtime="20201030 10:57:09.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.150" endtime="20201030 10:57:09.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.153" endtime="20201030 10:57:09.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.125" endtime="20201030 10:57:09.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.123" endtime="20201030 10:57:09.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.162" endtime="20201030 10:57:09.451"></status>
</kw>
<msg timestamp="20201030 10:57:09.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.161" endtime="20201030 10:57:09.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.455" endtime="20201030 10:57:09.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.464" endtime="20201030 10:57:09.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.158" endtime="20201030 10:57:09.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.156" endtime="20201030 10:57:09.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.471" level="INFO">${RESULT} = [{'diff': 4.709699999999942e-05}, {'diff': 4.60000000000009e-05}, {'diff': 4.12920000000018e-05}, {'diff': 4.234800000000108e-05}, {'diff': 4.186200000000015e-05}, {'diff': 4.141599999999898e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:09.467" endtime="20201030 10:57:09.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:09.475" level="INFO">${ACCURACY} = {'diff': [4.709699999999942e-05, 4.60000000000009e-05, 4.12920000000018e-05, 4.234800000000108e-05, 4.186200000000015e-05, 4.141599999999898e-05, 4.147200000000073e-05, 4.124999999999962e-05, 4.184699...</msg>
<status status="PASS" starttime="20201030 10:57:09.472" endtime="20201030 10:57:09.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.480" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:57:09.479" endtime="20201030 10:57:09.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.482" level="INFO">VALUE: [4.709699999999942e-05, 4.60000000000009e-05, 4.12920000000018e-05, 4.234800000000108e-05, 4.186200000000015e-05, 4.141599999999898e-05, 4.147200000000073e-05, 4.124999999999962e-05, 4.1846999999997636e-05, 4.118000000000177e-05, 4.1526999999999537e-05, 4.1152999999998635e-05, 4.1875000000000245e-05, 4.147200000000073e-05, 4.149999999999987e-05, 4.097200000000023e-05, 4.1846999999997636e-05, 4.09859999999998e-05, 4.1138999999999065e-05, 4.152800000000248e-05, 4.100000000000284e-05, 4.1167000000001674e-05, 4.09859999999998e-05, 4.1902999999999385e-05, 4.1153000000002105e-05, 4.1875000000000245e-05, 4.149999999999987e-05, 4.1361000000000175e-05, 4.101400000000241e-05, 4.166599999999923e-05, 4.1291000000002326e-05, 4.100000000000284e-05, 4.1526999999999537e-05, 4.1568999999998246e-05, 4.172199999999751e-05, 4.1110999999999925e-05, 4.099999999999937e-05, 4.1860999999997206e-05, 4.151399999999944e-05, 4.2332999999998566e-05, 4.1431000000001494e-05, 4.147200000000073e-05, 4.1638999999999565e-05, 4.1931000000001994e-05, 4.2361000000001175e-05, 4.1473000000000204e-05, 4.1222999999999954e-05, 4.1361000000000175e-05, 4.1888999999999815e-05, 4.1709000000000884e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.481" endtime="20201030 10:57:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.476" endtime="20201030 10:57:09.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.487" endtime="20201030 10:57:09.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.486" endtime="20201030 10:57:09.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.485" endtime="20201030 10:57:09.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.122" endtime="20201030 10:57:09.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.121" endtime="20201030 10:57:09.508"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.517" endtime="20201030 10:57:09.538"></status>
</kw>
<msg timestamp="20201030 10:57:09.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.515" endtime="20201030 10:57:09.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.539" endtime="20201030 10:57:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.542" endtime="20201030 10:57:09.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.513" endtime="20201030 10:57:09.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.511" endtime="20201030 10:57:09.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.551" endtime="20201030 10:57:09.837"></status>
</kw>
<msg timestamp="20201030 10:57:09.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.550" endtime="20201030 10:57:09.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.841" endtime="20201030 10:57:09.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.850" endtime="20201030 10:57:09.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.547" endtime="20201030 10:57:09.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.545" endtime="20201030 10:57:09.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.857" level="INFO">${RESULT} = [{'diff': 4.7153000000001166e-05}, {'diff': 4.716699999999727e-05}, {'diff': 4.222199999999801e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.252800000000001e-05}, {'diff': 4.279199999999983e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:09.853" endtime="20201030 10:57:09.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:09.861" level="INFO">${ACCURACY} = {'diff': [4.7153000000001166e-05, 4.716699999999727e-05, 4.222199999999801e-05, 4.2916999999999955e-05, 4.252800000000001e-05, 4.279199999999983e-05, 4.2722999999997985e-05, 4.273600000000155e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 10:57:09.858" endtime="20201030 10:57:09.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.866" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:57:09.865" endtime="20201030 10:57:09.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.868" level="INFO">VALUE: [4.7153000000001166e-05, 4.716699999999727e-05, 4.222199999999801e-05, 4.2916999999999955e-05, 4.252800000000001e-05, 4.279199999999983e-05, 4.2722999999997985e-05, 4.273600000000155e-05, 4.226400000000019e-05, 4.250000000000087e-05, 4.2597000000001856e-05, 4.241599999999998e-05, 4.245800000000216e-05, 4.2097000000001356e-05, 4.293000000000005e-05, 4.269399999999937e-05, 4.2596999999998386e-05, 4.2625000000000995e-05, 4.252800000000001e-05, 4.2832999999999066e-05, 4.224999999999715e-05, 4.276399999999722e-05, 4.3388999999997846e-05, 4.279199999999983e-05, 4.245800000000216e-05, 4.3361000000002176e-05, 4.2195000000001814e-05, 4.276400000000069e-05, 4.2166999999999205e-05, 4.2167000000002675e-05, 4.269399999999937e-05, 4.2110999999997456e-05, 4.2166999999999205e-05, 4.2305000000002896e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.2597000000001856e-05, 4.226400000000019e-05, 4.2861000000001676e-05, 4.225000000000062e-05, 4.2639000000000565e-05, 4.205599999999865e-05, 4.2416999999999455e-05, 4.248599999999783e-05, 4.2916999999999955e-05, 4.2625000000000995e-05, 4.222199999999801e-05, 4.276300000000122e-05, 4.1973000000000704e-05, 4.227799999999976e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.867" endtime="20201030 10:57:09.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.862" endtime="20201030 10:57:09.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.874" endtime="20201030 10:57:09.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.873" endtime="20201030 10:57:09.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.872" endtime="20201030 10:57:09.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.509" endtime="20201030 10:57:09.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.508" endtime="20201030 10:57:09.895"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.904" endtime="20201030 10:57:09.924"></status>
</kw>
<msg timestamp="20201030 10:57:09.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.903" endtime="20201030 10:57:09.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.926" endtime="20201030 10:57:09.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.928" endtime="20201030 10:57:09.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.900" endtime="20201030 10:57:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.898" endtime="20201030 10:57:09.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.938" endtime="20201030 10:57:10.223"></status>
</kw>
<msg timestamp="20201030 10:57:10.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.936" endtime="20201030 10:57:10.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.227" endtime="20201030 10:57:10.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.236" endtime="20201030 10:57:10.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.933" endtime="20201030 10:57:10.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.932" endtime="20201030 10:57:10.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.243" level="INFO">${RESULT} = [{'diff': 4.754199999999764e-05}, {'diff': 4.772200000000004e-05}, {'diff': 4.2874999999997776e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.3389000000001315e-05}, {'diff': 4.302800000000051e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:10.239" endtime="20201030 10:57:10.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:10.248" level="INFO">${ACCURACY} = {'diff': [4.754199999999764e-05, 4.772200000000004e-05, 4.2874999999997776e-05, 4.352800000000101e-05, 4.3389000000001315e-05, 4.302800000000051e-05, 4.308399999999879e-05, 4.3708999999999415e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 10:57:10.244" endtime="20201030 10:57:10.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.253" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:57:10.252" endtime="20201030 10:57:10.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.256" level="INFO">VALUE: [4.754199999999764e-05, 4.772200000000004e-05, 4.2874999999997776e-05, 4.352800000000101e-05, 4.3389000000001315e-05, 4.302800000000051e-05, 4.308399999999879e-05, 4.3708999999999415e-05, 4.4347000000000136e-05, 4.325000000000162e-05, 4.329200000000033e-05, 4.325000000000162e-05, 4.379200000000083e-05, 4.379099999999789e-05, 4.377800000000126e-05, 4.348599999999883e-05, 4.3055000000000176e-05, 4.3846999999999636e-05, 4.3555000000000677e-05, 4.3096999999998886e-05, 4.3819000000000496e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.329200000000033e-05, 4.3180999999999775e-05, 4.429199999999786e-05, 4.347199999999926e-05, 4.3417000000000455e-05, 4.3152999999997166e-05, 4.326299999999825e-05, 4.2972999999998235e-05, 4.3653000000001135e-05, 4.3917000000000955e-05, 4.373599999999908e-05, 4.351400000000144e-05, 4.352799999999754e-05, 4.345799999999969e-05, 4.4388999999998846e-05, 4.3846999999999636e-05, 4.3096999999998886e-05, 4.43329999999971e-05, 4.3110999999998456e-05, 4.372199999999951e-05, 4.3667000000000705e-05, 4.3402999999997416e-05, 4.369400000000037e-05, 4.302800000000051e-05, 4.373600000000255e-05, 4.370799999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:57:10.254" endtime="20201030 10:57:10.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.249" endtime="20201030 10:57:10.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.262" endtime="20201030 10:57:10.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.260" endtime="20201030 10:57:10.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.259" endtime="20201030 10:57:10.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.896" endtime="20201030 10:57:10.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.895" endtime="20201030 10:57:10.283"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.292" endtime="20201030 10:57:10.311"></status>
</kw>
<msg timestamp="20201030 10:57:10.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.290" endtime="20201030 10:57:10.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.312" endtime="20201030 10:57:10.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.315" endtime="20201030 10:57:10.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.288" endtime="20201030 10:57:10.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.285" endtime="20201030 10:57:10.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.324" endtime="20201030 10:57:10.611"></status>
</kw>
<msg timestamp="20201030 10:57:10.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.323" endtime="20201030 10:57:10.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.615" endtime="20201030 10:57:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.624" endtime="20201030 10:57:10.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.320" endtime="20201030 10:57:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.318" endtime="20201030 10:57:10.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.631" level="INFO">${RESULT} = [{'diff': 4.923600000000111e-05}, {'diff': 4.894400000000215e-05}, {'diff': 4.404199999999761e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.465200000000266e-05}, {'diff': 4.4833000000001066e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:10.627" endtime="20201030 10:57:10.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:10.635" level="INFO">${ACCURACY} = {'diff': [4.923600000000111e-05, 4.894400000000215e-05, 4.404199999999761e-05, 4.4874999999999776e-05, 4.465200000000266e-05, 4.4833000000001066e-05, 4.4096999999999886e-05, 4.4305000000001427e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:57:10.632" endtime="20201030 10:57:10.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.639" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:57:10.638" endtime="20201030 10:57:10.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.642" level="INFO">VALUE: [4.923600000000111e-05, 4.894400000000215e-05, 4.404199999999761e-05, 4.4874999999999776e-05, 4.465200000000266e-05, 4.4833000000001066e-05, 4.4096999999999886e-05, 4.4305000000001427e-05, 4.4069000000000746e-05, 4.467999999999833e-05, 4.4069000000000746e-05, 4.4111000000002926e-05, 4.4916999999998486e-05, 4.4847000000000636e-05, 4.479199999999836e-05, 4.4652999999998666e-05, 4.452800000000201e-05, 4.4153000000001635e-05, 4.48199999999975e-05, 4.398599999999933e-05, 4.482000000000097e-05, 4.3959000000003134e-05, 4.477699999999932e-05, 4.425000000000262e-05, 4.4417000000001455e-05, 4.423599999999958e-05, 4.4888999999999346e-05, 4.447200000000026e-05, 4.419400000000087e-05, 4.479100000000236e-05, 4.474999999999965e-05, 4.4333000000000566e-05, 4.402799999999804e-05, 4.448599999999983e-05, 4.4903000000002385e-05, 4.4388999999998846e-05, 4.398599999999933e-05, 4.4681000000001275e-05, 4.395800000000019e-05, 4.4472999999999735e-05, 4.4889000000002816e-05, 4.483400000000054e-05, 4.477800000000226e-05, 4.459799999999986e-05, 4.452699999999907e-05, 4.452700000000254e-05, 4.45129999999995e-05, 4.420800000000044e-05, 4.466599999999876e-05, 4.486099999999674e-05]</msg>
<status status="PASS" starttime="20201030 10:57:10.641" endtime="20201030 10:57:10.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.636" endtime="20201030 10:57:10.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.647" endtime="20201030 10:57:10.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.646" endtime="20201030 10:57:10.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.644" endtime="20201030 10:57:10.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.284" endtime="20201030 10:57:10.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.283" endtime="20201030 10:57:10.672"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.681" endtime="20201030 10:57:10.700"></status>
</kw>
<msg timestamp="20201030 10:57:10.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.679" endtime="20201030 10:57:10.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.701" endtime="20201030 10:57:10.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.704" endtime="20201030 10:57:10.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.676" endtime="20201030 10:57:10.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.674" endtime="20201030 10:57:10.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.713" endtime="20201030 10:57:10.999"></status>
</kw>
<msg timestamp="20201030 10:57:11.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.712" endtime="20201030 10:57:11.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.004" endtime="20201030 10:57:11.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.012" endtime="20201030 10:57:11.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.709" endtime="20201030 10:57:11.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.707" endtime="20201030 10:57:11.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.019" level="INFO">${RESULT} = [{'diff': 4.950000000000093e-05}, {'diff': 5.025000000000168e-05}, {'diff': 4.551399999999997e-05}, {'diff': 4.558299999999835e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.5195000000001345e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:11.016" endtime="20201030 10:57:11.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:11.023" level="INFO">${ACCURACY} = {'diff': [4.950000000000093e-05, 5.025000000000168e-05, 4.551399999999997e-05, 4.558299999999835e-05, 4.5875000000000776e-05, 4.5195000000001345e-05, 4.5347000000001136e-05, 4.566599999999976e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 10:57:11.020" endtime="20201030 10:57:11.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.028" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:57:11.027" endtime="20201030 10:57:11.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.030" level="INFO">VALUE: [4.950000000000093e-05, 5.025000000000168e-05, 4.551399999999997e-05, 4.558299999999835e-05, 4.5875000000000776e-05, 4.5195000000001345e-05, 4.5347000000001136e-05, 4.566599999999976e-05, 4.5916999999999486e-05, 4.577700000000032e-05, 4.504099999999914e-05, 4.502799999999904e-05, 4.5902999999999916e-05, 4.502800000000251e-05, 4.552700000000007e-05, 4.55130000000005e-05, 4.501399999999947e-05, 4.520799999999797e-05, 4.570800000000194e-05, 4.567999999999933e-05, 4.570800000000194e-05, 4.5667000000002705e-05, 4.507000000000122e-05, 4.5847000000001636e-05, 4.570799999999847e-05, 4.5083000000001316e-05, 4.5402999999999416e-05, 4.634799999999814e-05, 4.5902999999999916e-05, 4.529200000000233e-05, 4.551399999999997e-05, 4.576400000000022e-05, 4.5237000000000055e-05, 4.566599999999976e-05, 4.5181000000001775e-05, 4.541599999999951e-05, 4.55269999999966e-05, 4.505600000000165e-05, 4.5111000000000456e-05, 4.516600000000273e-05, 4.5639000000000096e-05, 4.629100000000039e-05, 4.5666999999999236e-05, 4.5125000000000026e-05, 4.522200000000101e-05, 4.53060000000019e-05, 4.5459000000001165e-05, 4.53060000000019e-05, 4.5166999999998736e-05, 4.572200000000151e-05]</msg>
<status status="PASS" starttime="20201030 10:57:11.029" endtime="20201030 10:57:11.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.024" endtime="20201030 10:57:11.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.036" endtime="20201030 10:57:11.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.035" endtime="20201030 10:57:11.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.034" endtime="20201030 10:57:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.673" endtime="20201030 10:57:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.672" endtime="20201030 10:57:11.057"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.066" endtime="20201030 10:57:11.085"></status>
</kw>
<msg timestamp="20201030 10:57:11.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.065" endtime="20201030 10:57:11.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.086" endtime="20201030 10:57:11.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.089" endtime="20201030 10:57:11.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.062" endtime="20201030 10:57:11.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.060" endtime="20201030 10:57:11.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.098" endtime="20201030 10:57:11.384"></status>
</kw>
<msg timestamp="20201030 10:57:11.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.097" endtime="20201030 10:57:11.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.388" endtime="20201030 10:57:11.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.397" endtime="20201030 10:57:11.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.094" endtime="20201030 10:57:11.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.092" endtime="20201030 10:57:11.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.404" level="INFO">${RESULT} = [{'diff': 5.087500000000231e-05}, {'diff': 5.122299999999955e-05}, {'diff': 4.6166999999999736e-05}, {'diff': 4.6625000000001526e-05}, {'diff': 4.6903000000000916e-05}, {'diff': 4.675000000000165e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:11.400" endtime="20201030 10:57:11.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:11.409" level="INFO">${ACCURACY} = {'diff': [5.087500000000231e-05, 5.122299999999955e-05, 4.6166999999999736e-05, 4.6625000000001526e-05, 4.6903000000000916e-05, 4.675000000000165e-05, 4.65000000000014e-05, 4.677699999999785e-05, 4.62...</msg>
<status status="PASS" starttime="20201030 10:57:11.405" endtime="20201030 10:57:11.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.414" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:57:11.413" endtime="20201030 10:57:11.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.416" level="INFO">VALUE: [5.087500000000231e-05, 5.122299999999955e-05, 4.6166999999999736e-05, 4.6625000000001526e-05, 4.6903000000000916e-05, 4.675000000000165e-05, 4.65000000000014e-05, 4.677699999999785e-05, 4.627700000000082e-05, 4.629100000000039e-05, 4.684699999999917e-05, 4.68329999999996e-05, 4.651400000000097e-05, 4.622200000000201e-05, 4.598600000000133e-05, 4.681900000000003e-05, 4.736099999999924e-05, 4.604199999999961e-05, 4.594399999999915e-05, 4.6639000000001096e-05, 4.658399999999882e-05, 4.691600000000101e-05, 4.6153000000000166e-05, 4.658399999999882e-05, 4.654200000000011e-05, 4.680599999999993e-05, 4.5987000000000805e-05, 4.5945000000002095e-05, 4.616599999999679e-05, 4.670799999999947e-05, 4.645800000000269e-05, 4.680499999999699e-05, 4.601400000000047e-05, 4.656999999999925e-05, 4.6416999999999986e-05, 4.6653000000000666e-05, 4.627800000000029e-05, 4.598599999999786e-05, 4.630599999999943e-05, 4.622199999999854e-05, 4.605599999999918e-05, 4.6125000000001026e-05, 4.6153000000000166e-05, 4.6472999999998266e-05, 4.625000000000115e-05, 4.656899999999978e-05, 4.6153000000000166e-05, 4.605600000000265e-05, 4.7389000000001846e-05, 4.60000000000009e-05]</msg>
<status status="PASS" starttime="20201030 10:57:11.415" endtime="20201030 10:57:11.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.410" endtime="20201030 10:57:11.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.421" endtime="20201030 10:57:11.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.420" endtime="20201030 10:57:11.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.419" endtime="20201030 10:57:11.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.058" endtime="20201030 10:57:11.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.058" endtime="20201030 10:57:11.442"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.451" endtime="20201030 10:57:11.470"></status>
</kw>
<msg timestamp="20201030 10:57:11.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.450" endtime="20201030 10:57:11.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.472" endtime="20201030 10:57:11.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.474" endtime="20201030 10:57:11.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.447" endtime="20201030 10:57:11.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.445" endtime="20201030 10:57:11.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.484" endtime="20201030 10:57:11.772"></status>
</kw>
<msg timestamp="20201030 10:57:11.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.482" endtime="20201030 10:57:11.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.776" endtime="20201030 10:57:11.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.784" endtime="20201030 10:57:11.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.480" endtime="20201030 10:57:11.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.478" endtime="20201030 10:57:11.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.791" level="INFO">${RESULT} = [{'diff': 5.308299999999891e-05}, {'diff': 5.13470000000002e-05}, {'diff': 4.759799999999939e-05}, {'diff': 4.752800000000154e-05}, {'diff': 4.770800000000047e-05}, {'diff': 4.723599999999911e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:11.788" endtime="20201030 10:57:11.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:11.795" level="INFO">${ACCURACY} = {'diff': [5.308299999999891e-05, 5.13470000000002e-05, 4.759799999999939e-05, 4.752800000000154e-05, 4.770800000000047e-05, 4.723599999999911e-05, 4.7403000000001416e-05, 4.7667000000001236e-05, 4.745...</msg>
<status status="PASS" starttime="20201030 10:57:11.792" endtime="20201030 10:57:11.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.799" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:57:11.798" endtime="20201030 10:57:11.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.802" level="INFO">VALUE: [5.308299999999891e-05, 5.13470000000002e-05, 4.759799999999939e-05, 4.752800000000154e-05, 4.770800000000047e-05, 4.723599999999911e-05, 4.7403000000001416e-05, 4.7667000000001236e-05, 4.745800000000022e-05, 4.6931000000000056e-05, 4.7403000000001416e-05, 4.781999999999703e-05, 4.749999999999893e-05, 4.727699999999835e-05, 4.758399999999982e-05, 4.7013999999998e-05, 4.697199999999929e-05, 4.727800000000129e-05, 4.747200000000326e-05, 4.787499999999931e-05, 4.770800000000047e-05, 4.770800000000047e-05, 4.759699999999992e-05, 4.784700000000017e-05, 4.837499999999981e-05, 4.723600000000258e-05, 4.7167000000000736e-05, 4.777800000000179e-05, 4.702799999999757e-05, 4.786099999999974e-05, 4.7417000000000986e-05, 4.754199999999764e-05, 4.729200000000086e-05, 4.691600000000101e-05, 4.697199999999929e-05, 4.772200000000004e-05, 4.794400000000115e-05, 4.770800000000047e-05, 4.716600000000126e-05, 4.720799999999997e-05, 4.787499999999931e-05, 4.7667000000001236e-05, 4.779200000000136e-05, 4.826399999999925e-05, 4.777799999999832e-05, 4.774999999999918e-05, 4.777800000000179e-05, 4.705500000000071e-05, 4.7903000000001916e-05, 4.698600000000233e-05]</msg>
<status status="PASS" starttime="20201030 10:57:11.800" endtime="20201030 10:57:11.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.796" endtime="20201030 10:57:11.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.807" endtime="20201030 10:57:11.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.805" endtime="20201030 10:57:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.804" endtime="20201030 10:57:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.443" endtime="20201030 10:57:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.443" endtime="20201030 10:57:11.828"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.836" endtime="20201030 10:57:11.855"></status>
</kw>
<msg timestamp="20201030 10:57:11.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.835" endtime="20201030 10:57:11.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.857" endtime="20201030 10:57:11.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.859" endtime="20201030 10:57:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.832" endtime="20201030 10:57:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.830" endtime="20201030 10:57:11.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.868" endtime="20201030 10:57:12.166"></status>
</kw>
<msg timestamp="20201030 10:57:12.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.867" endtime="20201030 10:57:12.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.176" endtime="20201030 10:57:12.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.194" endtime="20201030 10:57:12.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.864" endtime="20201030 10:57:12.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.862" endtime="20201030 10:57:12.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:12.208" level="INFO">${RESULT} = [{'diff': 5.261100000000102e-05}, {'diff': 5.306999999999881e-05}, {'diff': 4.827799999999882e-05}, {'diff': 4.823600000000011e-05}, {'diff': 4.934800000000114e-05}, {'diff': 4.8473000000000266e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:12.201" endtime="20201030 10:57:12.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:12.213" level="INFO">${ACCURACY} = {'diff': [5.261100000000102e-05, 5.306999999999881e-05, 4.827799999999882e-05, 4.823600000000011e-05, 4.934800000000114e-05, 4.8473000000000266e-05, 4.804099999999867e-05, 4.831900000000153e-05, 4.858...</msg>
<status status="PASS" starttime="20201030 10:57:12.210" endtime="20201030 10:57:12.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.218" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:57:12.217" endtime="20201030 10:57:12.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.220" level="INFO">VALUE: [5.261100000000102e-05, 5.306999999999881e-05, 4.827799999999882e-05, 4.823600000000011e-05, 4.934800000000114e-05, 4.8473000000000266e-05, 4.804099999999867e-05, 4.831900000000153e-05, 4.858299999999788e-05, 4.875000000000018e-05, 4.798599999999986e-05, 4.822200000000054e-05, 4.804200000000161e-05, 4.824999999999968e-05, 4.809700000000042e-05, 4.877799999999932e-05, 4.877800000000279e-05, 4.8667000000002236e-05, 4.804199999999814e-05, 4.8639000000003096e-05, 4.822200000000054e-05, 4.8417000000001986e-05, 4.8195000000000876e-05, 4.8417000000001986e-05, 4.809799999999989e-05, 4.879200000000236e-05, 4.824999999999968e-05, 4.795799999999725e-05, 4.887500000000031e-05, 4.854099999999917e-05, 4.823600000000011e-05, 4.856899999999831e-05, 4.893099999999859e-05, 4.879199999999889e-05, 4.877799999999932e-05, 4.877799999999932e-05, 4.893099999999859e-05, 4.823600000000011e-05, 4.797200000000029e-05, 4.936100000000124e-05, 4.854200000000211e-05, 4.863899999999963e-05, 4.83330000000011e-05, 4.852799999999907e-05, 4.812499999999956e-05, 4.86940000000019e-05, 4.798599999999986e-05, 4.888899999999988e-05, 4.877699999999985e-05, 4.804200000000161e-05]</msg>
<status status="PASS" starttime="20201030 10:57:12.219" endtime="20201030 10:57:12.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.214" endtime="20201030 10:57:12.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:12.226" endtime="20201030 10:57:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.224" endtime="20201030 10:57:12.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.223" endtime="20201030 10:57:12.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.828" endtime="20201030 10:57:12.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.828" endtime="20201030 10:57:12.247"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.255" endtime="20201030 10:57:12.274"></status>
</kw>
<msg timestamp="20201030 10:57:12.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.254" endtime="20201030 10:57:12.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.276" endtime="20201030 10:57:12.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.279" endtime="20201030 10:57:12.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.251" endtime="20201030 10:57:12.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.249" endtime="20201030 10:57:12.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.289" endtime="20201030 10:57:12.574"></status>
</kw>
<msg timestamp="20201030 10:57:12.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.287" endtime="20201030 10:57:12.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019558792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.578" endtime="20201030 10:57:12.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.586" endtime="20201030 10:57:12.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.284" endtime="20201030 10:57:12.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.282" endtime="20201030 10:57:12.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:12.593" level="INFO">${RESULT} = [{'diff': 5.497299999999983e-05}, {'diff': 5.34869999999979e-05}, {'diff': 4.988899999999741e-05}, {'diff': 4.911100000000099e-05}, {'diff': 4.991700000000002e-05}, {'diff': 4.898600000000086e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:12.590" endtime="20201030 10:57:12.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:12.598" level="INFO">${ACCURACY} = {'diff': [5.497299999999983e-05, 5.34869999999979e-05, 4.988899999999741e-05, 4.911100000000099e-05, 4.991700000000002e-05, 4.898600000000086e-05, 4.941600000000004e-05, 4.934800000000114e-05, 5.03190...</msg>
<status status="PASS" starttime="20201030 10:57:12.594" endtime="20201030 10:57:12.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.603" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:57:12.601" endtime="20201030 10:57:12.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.605" level="INFO">VALUE: [5.497299999999983e-05, 5.34869999999979e-05, 4.988899999999741e-05, 4.911100000000099e-05, 4.991700000000002e-05, 4.898600000000086e-05, 4.941600000000004e-05, 4.934800000000114e-05, 5.031900000000006e-05, 4.955600000000268e-05, 4.983299999999913e-05, 4.952800000000007e-05, 4.898599999999739e-05, 4.95270000000006e-05, 4.902799999999957e-05, 4.9431000000002556e-05, 4.986100000000174e-05, 5.034800000000214e-05, 5.000000000000143e-05, 4.919499999999841e-05, 4.909700000000142e-05, 4.904099999999967e-05, 4.940200000000047e-05, 4.916599999999979e-05, 4.983299999999913e-05, 4.920800000000197e-05, 4.919399999999893e-05, 4.948600000000136e-05, 4.941699999999952e-05, 4.986100000000174e-05, 4.95140000000005e-05, 4.968099999999934e-05, 4.922199999999807e-05, 4.895800000000172e-05, 4.922199999999807e-05, 4.9181000000002306e-05, 4.91529999999997e-05, 4.972199999999857e-05, 4.9487000000000836e-05, 4.988900000000088e-05, 4.95140000000005e-05, 4.904099999999967e-05, 4.917999999999936e-05, 4.898599999999739e-05, 4.90270000000001e-05, 4.940299999999995e-05, 4.952699999999713e-05, 4.975000000000118e-05, 4.9972999999998297e-05, 4.979199999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:57:12.604" endtime="20201030 10:57:12.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.599" endtime="20201030 10:57:12.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:12.610" endtime="20201030 10:57:12.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.609" endtime="20201030 10:57:12.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.607" endtime="20201030 10:57:12.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.247" endtime="20201030 10:57:12.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.247" endtime="20201030 10:57:12.631"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.639" endtime="20201030 10:57:12.658"></status>
</kw>
<msg timestamp="20201030 10:57:12.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.638" endtime="20201030 10:57:12.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.660" endtime="20201030 10:57:12.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.662" endtime="20201030 10:57:12.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.635" endtime="20201030 10:57:12.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.633" endtime="20201030 10:57:12.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.671" endtime="20201030 10:57:12.971"></status>
</kw>
<msg timestamp="20201030 10:57:12.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01954925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:12.670" endtime="20201030 10:57:12.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01954925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:12.981" endtime="20201030 10:57:12.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.999" endtime="20201030 10:57:13.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.667" endtime="20201030 10:57:13.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.665" endtime="20201030 10:57:13.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.013" level="INFO">${RESULT} = [{'diff': 5.4708000000000534e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.012499999999809e-05}, {'diff': 5.056900000000031e-05}, {'diff': 5.005599999999971e-05}, {'diff': 5.026399999999778e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:13.006" endtime="20201030 10:57:13.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:13.021" level="INFO">${ACCURACY} = {'diff': [5.4708000000000534e-05, 5.4499999999998994e-05, 5.012499999999809e-05, 5.056900000000031e-05, 5.005599999999971e-05, 5.026399999999778e-05, 5.083300000000013e-05, 5.054199999999717e-05, 5.01...</msg>
<status status="PASS" starttime="20201030 10:57:13.015" endtime="20201030 10:57:13.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.026" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:57:13.025" endtime="20201030 10:57:13.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.028" level="INFO">VALUE: [5.4708000000000534e-05, 5.4499999999998994e-05, 5.012499999999809e-05, 5.056900000000031e-05, 5.005599999999971e-05, 5.026399999999778e-05, 5.083300000000013e-05, 5.054199999999717e-05, 5.016700000000027e-05, 5.011099999999852e-05, 5.074999999999871e-05, 5.029200000000039e-05, 5.090299999999798e-05, 5.016600000000079e-05, 5.045899999999923e-05, 5.0651999999998254e-05, 5.026400000000125e-05, 5.136099999999977e-05, 5.009700000000242e-05, 5.083300000000013e-05, 5.0651999999998254e-05, 5.0429999999997144e-05, 5.090300000000145e-05, 5.006899999999981e-05, 5.0723000000002516e-05, 5.008299999999938e-05, 5.061099999999902e-05, 5.045799999999975e-05, 5.01530000000007e-05, 5.06530000000012e-05, 4.995800000000272e-05, 5.082000000000003e-05, 5.044499999999966e-05, 5.069400000000043e-05, 5.0223000000002016e-05, 5.0915999999998074e-05, 5.054100000000117e-05, 5.133300000000063e-05, 5.0138000000001653e-05, 5.087499999999884e-05, 5.027699999999788e-05, 5.023599999999864e-05, 5.072199999999957e-05, 5.06530000000012e-05, 5.080499999999752e-05, 5.05279999999976e-05, 5.056900000000031e-05, 5.062499999999859e-05, 5.008299999999938e-05, 5.068100000000034e-05]</msg>
<status status="PASS" starttime="20201030 10:57:13.027" endtime="20201030 10:57:13.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.022" endtime="20201030 10:57:13.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.033" endtime="20201030 10:57:13.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.032" endtime="20201030 10:57:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.030" endtime="20201030 10:57:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.632" endtime="20201030 10:57:13.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.631" endtime="20201030 10:57:13.054"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.062" endtime="20201030 10:57:13.082"></status>
</kw>
<msg timestamp="20201030 10:57:13.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.061" endtime="20201030 10:57:13.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.084" endtime="20201030 10:57:13.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.086" endtime="20201030 10:57:13.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.058" endtime="20201030 10:57:13.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.056" endtime="20201030 10:57:13.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.095" endtime="20201030 10:57:13.380"></status>
</kw>
<msg timestamp="20201030 10:57:13.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.094" endtime="20201030 10:57:13.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.384" endtime="20201030 10:57:13.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.393" endtime="20201030 10:57:13.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.091" endtime="20201030 10:57:13.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.090" endtime="20201030 10:57:13.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.399" level="INFO">${RESULT} = [{'diff': 5.5707999999998065e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.179200000000189e-05}, {'diff': 5.183300000000113e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.166700000000177e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:13.396" endtime="20201030 10:57:13.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:13.403" level="INFO">${ACCURACY} = {'diff': [5.5707999999998065e-05, 5.558299999999794e-05, 5.179200000000189e-05, 5.183300000000113e-05, 5.098599999999939e-05, 5.166700000000177e-05, 5.13340000000001e-05, 5.177800000000232e-05, 5.1110...</msg>
<status status="PASS" starttime="20201030 10:57:13.400" endtime="20201030 10:57:13.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.408" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:57:13.407" endtime="20201030 10:57:13.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.410" level="INFO">VALUE: [5.5707999999998065e-05, 5.558299999999794e-05, 5.179200000000189e-05, 5.183300000000113e-05, 5.098599999999939e-05, 5.166700000000177e-05, 5.13340000000001e-05, 5.177800000000232e-05, 5.111099999999952e-05, 5.0986999999998867e-05, 5.140299999999848e-05, 5.237500000000034e-05, 5.143000000000161e-05, 5.097199999999982e-05, 5.161100000000002e-05, 5.125000000000268e-05, 5.234699999999773e-05, 5.148599999999989e-05, 5.187499999999984e-05, 5.107000000000028e-05, 5.190300000000245e-05, 5.1707999999997534e-05, 5.102800000000157e-05, 5.1708000000001e-05, 5.170900000000048e-05, 5.187499999999984e-05, 5.154200000000164e-05, 5.116700000000127e-05, 5.158400000000035e-05, 5.09729999999993e-05, 5.147200000000032e-05, 5.120899999999998e-05, 5.112499999999909e-05, 5.122200000000007e-05, 5.234699999999773e-05, 5.166700000000177e-05, 5.191699999999855e-05, 5.13470000000002e-05, 5.116700000000127e-05, 5.18609999999968e-05, 5.140300000000195e-05, 5.138899999999891e-05, 5.154200000000164e-05, 5.118100000000084e-05, 5.109699999999995e-05, 5.165299999999873e-05, 5.179199999999842e-05, 5.109799999999942e-05, 5.130500000000149e-05, 5.191699999999855e-05]</msg>
<status status="PASS" starttime="20201030 10:57:13.409" endtime="20201030 10:57:13.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.404" endtime="20201030 10:57:13.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.416" endtime="20201030 10:57:13.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.415" endtime="20201030 10:57:13.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.413" endtime="20201030 10:57:13.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.055" endtime="20201030 10:57:13.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.054" endtime="20201030 10:57:13.437"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.445" endtime="20201030 10:57:13.464"></status>
</kw>
<msg timestamp="20201030 10:57:13.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.444" endtime="20201030 10:57:13.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.465" endtime="20201030 10:57:13.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.468" endtime="20201030 10:57:13.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.441" endtime="20201030 10:57:13.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.439" endtime="20201030 10:57:13.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.477" endtime="20201030 10:57:13.763"></status>
</kw>
<msg timestamp="20201030 10:57:13.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.475" endtime="20201030 10:57:13.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.767" endtime="20201030 10:57:13.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.775" endtime="20201030 10:57:13.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.473" endtime="20201030 10:57:13.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.471" endtime="20201030 10:57:13.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.782" level="INFO">${RESULT} = [{'diff': 5.6528000000000134e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.254200000000264e-05}, {'diff': 5.230600000000196e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:13.779" endtime="20201030 10:57:13.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:13.787" level="INFO">${ACCURACY} = {'diff': [5.6528000000000134e-05, 5.6528000000000134e-05, 5.198600000000039e-05, 5.211100000000052e-05, 5.254200000000264e-05, 5.230600000000196e-05, 5.256999999999831e-05, 5.212500000000009e-05, 5.25...</msg>
<status status="PASS" starttime="20201030 10:57:13.783" endtime="20201030 10:57:13.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.791" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:57:13.790" endtime="20201030 10:57:13.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.794" level="INFO">VALUE: [5.6528000000000134e-05, 5.6528000000000134e-05, 5.198600000000039e-05, 5.211100000000052e-05, 5.254200000000264e-05, 5.230600000000196e-05, 5.256999999999831e-05, 5.212500000000009e-05, 5.254199999999917e-05, 5.254199999999917e-05, 5.211199999999999e-05, 5.245800000000175e-05, 5.269400000000243e-05, 5.227699999999988e-05, 5.272200000000157e-05, 5.255499999999927e-05, 5.290299999999998e-05, 5.208300000000138e-05, 5.2485999999997424e-05, 5.265299999999973e-05, 5.241699999999905e-05, 5.250000000000046e-05, 5.291699999999955e-05, 5.227800000000282e-05, 5.223600000000064e-05, 5.256899999999884e-05, 5.243099999999862e-05, 5.209700000000095e-05, 5.251300000000056e-05, 5.216700000000227e-05, 5.225000000000021e-05, 5.202699999999963e-05, 5.258299999999841e-05, 5.208300000000138e-05, 5.248600000000089e-05, 5.261099999999755e-05, 5.276400000000028e-05, 5.226399999999978e-05, 5.2735999999997674e-05, 5.290299999999998e-05, 5.194400000000168e-05, 5.273600000000114e-05, 5.227799999999935e-05, 5.262499999999712e-05, 5.197200000000082e-05, 5.197200000000082e-05, 5.287499999999737e-05, 5.290299999999998e-05, 5.268099999999887e-05, 5.208400000000085e-05]</msg>
<status status="PASS" starttime="20201030 10:57:13.792" endtime="20201030 10:57:13.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.788" endtime="20201030 10:57:13.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.799" endtime="20201030 10:57:13.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.797" endtime="20201030 10:57:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.796" endtime="20201030 10:57:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.438" endtime="20201030 10:57:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.437" endtime="20201030 10:57:13.819"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.828" endtime="20201030 10:57:13.848"></status>
</kw>
<msg timestamp="20201030 10:57:13.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.827" endtime="20201030 10:57:13.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.849" endtime="20201030 10:57:13.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.852" endtime="20201030 10:57:13.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.824" endtime="20201030 10:57:13.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.822" endtime="20201030 10:57:13.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.861" endtime="20201030 10:57:14.148"></status>
</kw>
<msg timestamp="20201030 10:57:14.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.859" endtime="20201030 10:57:14.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.152" endtime="20201030 10:57:14.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.160" endtime="20201030 10:57:14.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.857" endtime="20201030 10:57:14.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.855" endtime="20201030 10:57:14.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.167" level="INFO">${RESULT} = [{'diff': 5.7735999999999205e-05}, {'diff': 5.780499999999758e-05}, {'diff': 5.305499999999977e-05}, {'diff': 5.3527999999997133e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.31669999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:14.164" endtime="20201030 10:57:14.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:14.171" level="INFO">${ACCURACY} = {'diff': [5.7735999999999205e-05, 5.780499999999758e-05, 5.305499999999977e-05, 5.3527999999997133e-05, 5.36670000000003e-05, 5.31669999999998e-05, 5.2985999999997924e-05, 5.297200000000182e-05, 5.337...</msg>
<status status="PASS" starttime="20201030 10:57:14.168" endtime="20201030 10:57:14.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.175" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:57:14.174" endtime="20201030 10:57:14.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.178" level="INFO">VALUE: [5.7735999999999205e-05, 5.780499999999758e-05, 5.305499999999977e-05, 5.3527999999997133e-05, 5.36670000000003e-05, 5.31669999999998e-05, 5.2985999999997924e-05, 5.297200000000182e-05, 5.337499999999787e-05, 5.327800000000035e-05, 5.2985999999997924e-05, 5.336100000000177e-05, 5.391700000000055e-05, 5.440300000000148e-05, 5.311200000000099e-05, 5.386100000000227e-05, 5.438899999999844e-05, 5.433300000000016e-05, 5.3930000000000644e-05, 5.3207999999999034e-05, 5.316700000000327e-05, 5.340300000000048e-05, 5.329199999999992e-05, 5.30280000000001e-05, 5.327800000000035e-05, 5.43609999999993e-05, 5.359699999999898e-05, 5.312500000000109e-05, 5.313899999999719e-05, 5.318099999999937e-05, 5.30280000000001e-05, 5.312500000000109e-05, 5.327800000000035e-05, 5.30280000000001e-05, 5.3721999999999104e-05, 5.434699999999973e-05, 5.330500000000002e-05, 5.3179999999999894e-05, 5.2985999999997924e-05, 5.384699999999923e-05, 5.3235999999998174e-05, 5.2971999999998354e-05, 5.377800000000085e-05, 5.379200000000042e-05, 5.344499999999919e-05, 5.3221999999998604e-05, 5.298600000000139e-05, 5.368099999999987e-05, 5.344499999999919e-05, 5.432000000000006e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.177" endtime="20201030 10:57:14.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.172" endtime="20201030 10:57:14.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.183" endtime="20201030 10:57:14.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.181" endtime="20201030 10:57:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.180" endtime="20201030 10:57:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.820" endtime="20201030 10:57:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.820" endtime="20201030 10:57:14.204"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.212" endtime="20201030 10:57:14.232"></status>
</kw>
<msg timestamp="20201030 10:57:14.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.211" endtime="20201030 10:57:14.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.233" endtime="20201030 10:57:14.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.236" endtime="20201030 10:57:14.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.208" endtime="20201030 10:57:14.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.206" endtime="20201030 10:57:14.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.245" endtime="20201030 10:57:14.531"></status>
</kw>
<msg timestamp="20201030 10:57:14.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.243" endtime="20201030 10:57:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.535" endtime="20201030 10:57:14.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.544" endtime="20201030 10:57:14.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.241" endtime="20201030 10:57:14.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.239" endtime="20201030 10:57:14.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.550" level="INFO">${RESULT} = [{'diff': 5.886099999999686e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.438899999999844e-05}, {'diff': 5.537499999999987e-05}, {'diff': 5.479099999999848e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:14.547" endtime="20201030 10:57:14.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:14.554" level="INFO">${ACCURACY} = {'diff': [5.886099999999686e-05, 5.916699999999886e-05, 5.401400000000153e-05, 5.438899999999844e-05, 5.537499999999987e-05, 5.479099999999848e-05, 5.425000000000221e-05, 5.4444000000000714e-05, 5.452...</msg>
<status status="PASS" starttime="20201030 10:57:14.551" endtime="20201030 10:57:14.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.559" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:57:14.558" endtime="20201030 10:57:14.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.561" level="INFO">VALUE: [5.886099999999686e-05, 5.916699999999886e-05, 5.401400000000153e-05, 5.438899999999844e-05, 5.537499999999987e-05, 5.479099999999848e-05, 5.425000000000221e-05, 5.4444000000000714e-05, 5.4527999999998134e-05, 5.408299999999991e-05, 5.537499999999987e-05, 5.405600000000024e-05, 5.409699999999948e-05, 5.398600000000239e-05, 5.4027999999997633e-05, 5.537499999999987e-05, 5.46670000000013e-05, 5.411100000000252e-05, 5.463899999999869e-05, 5.4221999999999604e-05, 5.391700000000055e-05, 5.472300000000305e-05, 5.534700000000073e-05, 5.402699999999816e-05, 5.4415999999998105e-05, 5.3971999999999354e-05, 5.4165999999997855e-05, 5.430500000000102e-05, 5.44730000000028e-05, 5.3971999999999354e-05, 5.490299999999851e-05, 5.4749999999999244e-05, 5.4513999999998564e-05, 5.4499999999998994e-05, 5.41670000000008e-05, 5.441700000000105e-05, 5.483300000000066e-05, 5.461099999999955e-05, 5.3985999999998924e-05, 5.430499999999755e-05, 5.48609999999998e-05, 5.4402000000002004e-05, 5.4763999999998814e-05, 5.458299999999694e-05, 5.48609999999998e-05, 5.484700000000023e-05, 5.4944000000001214e-05, 5.4249999999998744e-05, 5.419499999999994e-05, 5.422299999999908e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.560" endtime="20201030 10:57:14.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.555" endtime="20201030 10:57:14.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.567" endtime="20201030 10:57:14.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.566" endtime="20201030 10:57:14.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.565" endtime="20201030 10:57:14.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.204" endtime="20201030 10:57:14.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.204" endtime="20201030 10:57:14.588"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.597" endtime="20201030 10:57:14.616"></status>
</kw>
<msg timestamp="20201030 10:57:14.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.595" endtime="20201030 10:57:14.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.617" endtime="20201030 10:57:14.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.620" endtime="20201030 10:57:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.592" endtime="20201030 10:57:14.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.590" endtime="20201030 10:57:14.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.629" endtime="20201030 10:57:14.914"></status>
</kw>
<msg timestamp="20201030 10:57:14.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01957075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:14.627" endtime="20201030 10:57:14.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01957075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:14.918" endtime="20201030 10:57:14.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.926" endtime="20201030 10:57:14.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.625" endtime="20201030 10:57:14.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.623" endtime="20201030 10:57:14.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.933" level="INFO">${RESULT} = [{'diff': 5.959699999999804e-05}, {'diff': 5.963900000000022e-05}, {'diff': 5.50280000000021e-05}, {'diff': 5.509700000000048e-05}, {'diff': 5.515300000000223e-05}, {'diff': 5.5513999999999564e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:14.930" endtime="20201030 10:57:14.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:14.938" level="INFO">${ACCURACY} = {'diff': [5.959699999999804e-05, 5.963900000000022e-05, 5.50280000000021e-05, 5.509700000000048e-05, 5.515300000000223e-05, 5.5513999999999564e-05, 5.56670000000023e-05, 5.6319999999998593e-05, 5.5042...</msg>
<status status="PASS" starttime="20201030 10:57:14.934" endtime="20201030 10:57:14.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.942" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:57:14.941" endtime="20201030 10:57:14.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.945" level="INFO">VALUE: [5.959699999999804e-05, 5.963900000000022e-05, 5.50280000000021e-05, 5.509700000000048e-05, 5.515300000000223e-05, 5.5513999999999564e-05, 5.56670000000023e-05, 5.6319999999998593e-05, 5.504200000000167e-05, 5.540299999999901e-05, 5.588899999999994e-05, 5.516699999999833e-05, 5.5555999999998273e-05, 5.552699999999966e-05, 5.5236000000000174e-05, 5.5902000000000035e-05, 5.5499999999999994e-05, 5.5708000000001534e-05, 5.540299999999901e-05, 5.56809999999984e-05, 5.5486000000000424e-05, 5.51809999999979e-05, 5.5513999999999564e-05, 5.515299999999876e-05, 5.5527999999999134e-05, 5.5291999999998453e-05, 5.5179999999998425e-05, 5.513899999999919e-05, 5.58480000000007e-05, 5.58480000000007e-05, 5.5179999999998425e-05, 5.631900000000259e-05, 5.55549999999988e-05, 5.5415999999999105e-05, 5.5401999999999535e-05, 5.5401999999999535e-05, 5.559700000000098e-05, 5.634699999999826e-05, 5.634699999999826e-05, 5.572299999999711e-05, 5.5236000000000174e-05, 5.5291999999998453e-05, 5.5486000000000424e-05, 5.56809999999984e-05, 5.566699999999883e-05, 5.518100000000137e-05, 5.590299999999951e-05, 5.512499999999962e-05, 5.5777999999999384e-05, 5.559700000000098e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.944" endtime="20201030 10:57:14.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.939" endtime="20201030 10:57:14.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.950" endtime="20201030 10:57:14.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.948" endtime="20201030 10:57:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.947" endtime="20201030 10:57:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.589" endtime="20201030 10:57:14.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.588" endtime="20201030 10:57:14.971"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.979" endtime="20201030 10:57:14.999"></status>
</kw>
<msg timestamp="20201030 10:57:14.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.978" endtime="20201030 10:57:14.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.000" endtime="20201030 10:57:15.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.003" endtime="20201030 10:57:15.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.975" endtime="20201030 10:57:15.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.973" endtime="20201030 10:57:15.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.012" endtime="20201030 10:57:15.298"></status>
</kw>
<msg timestamp="20201030 10:57:15.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.010" endtime="20201030 10:57:15.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.302" endtime="20201030 10:57:15.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.310" endtime="20201030 10:57:15.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.008" endtime="20201030 10:57:15.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.006" endtime="20201030 10:57:15.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.317" level="INFO">${RESULT} = [{'diff': 6.0735999999998735e-05}, {'diff': 6.0777999999997445e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.6986000000001924e-05}, {'diff': 5.594499999999822e-05}, {'diff': 5.672300000000158e-05...</msg>
<status status="PASS" starttime="20201030 10:57:15.314" endtime="20201030 10:57:15.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:15.321" level="INFO">${ACCURACY} = {'diff': [6.0735999999998735e-05, 6.0777999999997445e-05, 5.5986000000000924e-05, 5.6986000000001924e-05, 5.594499999999822e-05, 5.672300000000158e-05, 5.661200000000102e-05, 5.607000000000181e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:57:15.318" endtime="20201030 10:57:15.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.326" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:57:15.325" endtime="20201030 10:57:15.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.329" level="INFO">VALUE: [6.0735999999998735e-05, 6.0777999999997445e-05, 5.5986000000000924e-05, 5.6986000000001924e-05, 5.594499999999822e-05, 5.672300000000158e-05, 5.661200000000102e-05, 5.607000000000181e-05, 5.73749999999984e-05, 5.6458000000002284e-05, 5.6693999999999495e-05, 5.6264000000000314e-05, 5.665300000000026e-05, 5.606999999999834e-05, 5.6735999999998205e-05, 5.68480000000017e-05, 5.663900000000069e-05, 5.6707999999999065e-05, 5.6721999999998635e-05, 5.6555999999999274e-05, 5.5972000000001354e-05, 5.632000000000206e-05, 5.68480000000017e-05, 5.691700000000008e-05, 5.688900000000094e-05, 5.6778000000000384e-05, 5.6888000000001465e-05, 5.608300000000191e-05, 5.6679999999999925e-05, 5.6902000000001035e-05, 5.666699999999983e-05, 5.6222000000001604e-05, 5.61809999999989e-05, 5.661100000000155e-05, 5.733300000000316e-05, 5.691700000000008e-05, 5.615299999999976e-05, 5.6569999999998843e-05, 5.691700000000008e-05, 5.615299999999976e-05, 5.641699999999958e-05, 5.6014000000000064e-05, 5.690300000000051e-05, 5.645899999999829e-05, 5.620899999999804e-05, 5.683400000000213e-05, 5.606899999999887e-05, 5.6736000000001674e-05, 5.609700000000148e-05, 5.609699999999801e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.327" endtime="20201030 10:57:15.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.322" endtime="20201030 10:57:15.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.335" endtime="20201030 10:57:15.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.333" endtime="20201030 10:57:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.332" endtime="20201030 10:57:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.972" endtime="20201030 10:57:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.971" endtime="20201030 10:57:15.355"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.364" endtime="20201030 10:57:15.384"></status>
</kw>
<msg timestamp="20201030 10:57:15.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.363" endtime="20201030 10:57:15.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.385" endtime="20201030 10:57:15.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.388" endtime="20201030 10:57:15.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.360" endtime="20201030 10:57:15.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.358" endtime="20201030 10:57:15.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.397" endtime="20201030 10:57:15.682"></status>
</kw>
<msg timestamp="20201030 10:57:15.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.395" endtime="20201030 10:57:15.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.687" endtime="20201030 10:57:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.695" endtime="20201030 10:57:15.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.393" endtime="20201030 10:57:15.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.391" endtime="20201030 10:57:15.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.702" level="INFO">${RESULT} = [{'diff': 6.194400000000128e-05}, {'diff': 6.159700000000004e-05}, {'diff': 5.7735999999999205e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.7777999999997914e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:15.698" endtime="20201030 10:57:15.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:15.706" level="INFO">${ACCURACY} = {'diff': [6.194400000000128e-05, 6.159700000000004e-05, 5.7735999999999205e-05, 5.786099999999933e-05, 5.7792000000000954e-05, 5.7777999999997914e-05, 5.711100000000205e-05, 5.8334000000000163e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:57:15.703" endtime="20201030 10:57:15.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.710" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:57:15.709" endtime="20201030 10:57:15.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.713" level="INFO">VALUE: [6.194400000000128e-05, 6.159700000000004e-05, 5.7735999999999205e-05, 5.786099999999933e-05, 5.7792000000000954e-05, 5.7777999999997914e-05, 5.711100000000205e-05, 5.8334000000000163e-05, 5.7138000000001715e-05, 5.695899999999879e-05, 5.709699999999901e-05, 5.759699999999951e-05, 5.786099999999933e-05, 5.752700000000166e-05, 5.7666000000001355e-05, 5.709700000000248e-05, 5.711100000000205e-05, 5.7207999999999565e-05, 5.716700000000033e-05, 5.758299999999994e-05, 5.694499999999922e-05, 5.836099999999983e-05, 5.7556000000000274e-05, 5.7708000000000065e-05, 5.758400000000288e-05, 5.7471999999999385e-05, 5.836099999999983e-05, 5.74870000000019e-05, 5.730500000000055e-05, 5.7749999999998775e-05, 5.6985999999998455e-05, 5.708299999999944e-05, 5.7651999999998316e-05, 5.6986000000001924e-05, 5.78749999999989e-05, 5.790299999999804e-05, 5.6986000000001924e-05, 5.7708000000000065e-05, 5.7777999999997914e-05, 5.7792000000000954e-05, 5.7569999999999844e-05, 5.745900000000276e-05, 5.6986000000001924e-05, 5.748699999999843e-05, 5.7528000000001134e-05, 5.730500000000055e-05, 5.790299999999804e-05, 5.8320000000000594e-05, 5.7042000000000204e-05, 5.779100000000148e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.711" endtime="20201030 10:57:15.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.707" endtime="20201030 10:57:15.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.719" endtime="20201030 10:57:15.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.717" endtime="20201030 10:57:15.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.716" endtime="20201030 10:57:15.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.356" endtime="20201030 10:57:15.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.356" endtime="20201030 10:57:15.739"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.748" endtime="20201030 10:57:15.767"></status>
</kw>
<msg timestamp="20201030 10:57:15.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.746" endtime="20201030 10:57:15.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.768" endtime="20201030 10:57:15.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.771" endtime="20201030 10:57:15.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.744" endtime="20201030 10:57:15.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.742" endtime="20201030 10:57:15.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.780" endtime="20201030 10:57:16.064"></status>
</kw>
<msg timestamp="20201030 10:57:16.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.778" endtime="20201030 10:57:16.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.068" endtime="20201030 10:57:16.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.076" endtime="20201030 10:57:16.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.775" endtime="20201030 10:57:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.774" endtime="20201030 10:57:16.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.083" level="INFO">${RESULT} = [{'diff': 6.237499999999993e-05}, {'diff': 6.237499999999993e-05}, {'diff': 5.8722000000000635e-05}, {'diff': 5.801299999999912e-05}, {'diff': 5.8249999999999275e-05}, {'diff': 5.7971999999999885e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:16.080" endtime="20201030 10:57:16.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:16.088" level="INFO">${ACCURACY} = {'diff': [6.237499999999993e-05, 6.237499999999993e-05, 5.8722000000000635e-05, 5.801299999999912e-05, 5.8249999999999275e-05, 5.7971999999999885e-05, 5.866699999999836e-05, 5.809700000000001e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 10:57:16.084" endtime="20201030 10:57:16.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.093" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:57:16.092" endtime="20201030 10:57:16.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.095" level="INFO">VALUE: [6.237499999999993e-05, 6.237499999999993e-05, 5.8722000000000635e-05, 5.801299999999912e-05, 5.8249999999999275e-05, 5.7971999999999885e-05, 5.866699999999836e-05, 5.809700000000001e-05, 5.816700000000133e-05, 5.8721999999997165e-05, 5.861100000000008e-05, 5.7958000000000315e-05, 5.813900000000219e-05, 5.8042000000001204e-05, 5.8485999999999955e-05, 5.8056000000000774e-05, 5.845900000000029e-05, 5.8306000000001024e-05, 5.884700000000076e-05, 5.859700000000051e-05, 5.8041999999997734e-05, 5.809700000000001e-05, 5.8499999999999525e-05, 5.8485999999999955e-05, 5.93750000000004e-05, 5.822299999999961e-05, 5.938899999999997e-05, 5.870900000000054e-05, 5.8806000000001524e-05, 5.8513999999999095e-05, 5.819500000000047e-05, 5.795899999999979e-05, 5.7999999999999025e-05, 5.8848000000000233e-05, 5.845900000000029e-05, 5.7999999999999025e-05, 5.8042000000001204e-05, 5.936100000000083e-05, 5.7943999999997275e-05, 5.833300000000069e-05, 5.808300000000044e-05, 5.8013999999998594e-05, 5.8791999999998484e-05, 5.8278000000001884e-05, 5.8763999999999345e-05, 5.8277999999998414e-05, 5.8485999999999955e-05, 5.8541999999998234e-05, 5.8235999999999705e-05, 5.9333999999997694e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.094" endtime="20201030 10:57:16.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.089" endtime="20201030 10:57:16.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.100" endtime="20201030 10:57:16.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.099" endtime="20201030 10:57:16.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.098" endtime="20201030 10:57:16.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.740" endtime="20201030 10:57:16.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.740" endtime="20201030 10:57:16.121"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.130" endtime="20201030 10:57:16.149"></status>
</kw>
<msg timestamp="20201030 10:57:16.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.128" endtime="20201030 10:57:16.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.151" endtime="20201030 10:57:16.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.153" endtime="20201030 10:57:16.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.125" endtime="20201030 10:57:16.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.123" endtime="20201030 10:57:16.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.163" endtime="20201030 10:57:16.452"></status>
</kw>
<msg timestamp="20201030 10:57:16.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.161" endtime="20201030 10:57:16.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.456" endtime="20201030 10:57:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.464" endtime="20201030 10:57:16.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.158" endtime="20201030 10:57:16.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.157" endtime="20201030 10:57:16.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.471" level="INFO">${RESULT} = [{'diff': 6.420799999999963e-05}, {'diff': 6.334699999999832e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 5.9472000000001385e-05}, {'diff': 5.916700000000233e-05}, {'diff': 5.9278000000002884e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:16.468" endtime="20201030 10:57:16.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:16.475" level="INFO">${ACCURACY} = {'diff': [6.420799999999963e-05, 6.334699999999832e-05, 5.9777999999999915e-05, 5.9472000000001385e-05, 5.916700000000233e-05, 5.9278000000002884e-05, 5.9583999999997944e-05, 5.943100000000215e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:57:16.472" endtime="20201030 10:57:16.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.479" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:57:16.478" endtime="20201030 10:57:16.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.482" level="INFO">VALUE: [6.420799999999963e-05, 6.334699999999832e-05, 5.9777999999999915e-05, 5.9472000000001385e-05, 5.916700000000233e-05, 5.9278000000002884e-05, 5.9583999999997944e-05, 5.943100000000215e-05, 5.9916000000000136e-05, 5.961100000000108e-05, 5.909700000000101e-05, 5.9235999999997235e-05, 5.933299999999822e-05, 5.95689999999989e-05, 5.991699999999961e-05, 5.8943999999998276e-05, 5.943099999999868e-05, 5.959700000000151e-05, 5.9722000000001635e-05, 5.9693999999999026e-05, 5.9736000000001205e-05, 5.9805999999999054e-05, 5.9485999999997485e-05, 5.9042000000002204e-05, 5.916699999999886e-05, 5.9013999999999595e-05, 5.8986000000000455e-05, 5.920899999999757e-05, 5.963900000000022e-05, 5.961099999999761e-05, 5.9777999999999915e-05, 5.9278000000002884e-05, 5.911100000000058e-05, 5.9443999999998776e-05, 5.9722000000001635e-05, 5.9791999999999484e-05, 5.9735999999997735e-05, 5.9041999999998734e-05, 5.9486000000000955e-05, 5.986100000000133e-05, 5.894500000000122e-05, 5.9777999999999915e-05, 5.966700000000283e-05, 5.986100000000133e-05, 5.990300000000004e-05, 5.929099999999951e-05, 5.9277999999999414e-05, 5.9221999999997665e-05, 5.9471999999997915e-05, 5.9777999999999915e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.480" endtime="20201030 10:57:16.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.476" endtime="20201030 10:57:16.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.487" endtime="20201030 10:57:16.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.485" endtime="20201030 10:57:16.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.484" endtime="20201030 10:57:16.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.122" endtime="20201030 10:57:16.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.121" endtime="20201030 10:57:16.507"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.516" endtime="20201030 10:57:16.536"></status>
</kw>
<msg timestamp="20201030 10:57:16.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.515" endtime="20201030 10:57:16.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.537" endtime="20201030 10:57:16.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.540" endtime="20201030 10:57:16.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.512" endtime="20201030 10:57:16.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.510" endtime="20201030 10:57:16.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.549" endtime="20201030 10:57:16.835"></status>
</kw>
<msg timestamp="20201030 10:57:16.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02067975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:16.547" endtime="20201030 10:57:16.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02067975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:16.840" endtime="20201030 10:57:16.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.848" endtime="20201030 10:57:16.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.545" endtime="20201030 10:57:16.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.543" endtime="20201030 10:57:16.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.854" level="INFO">${RESULT} = [{'diff': 6.498599999999952e-05}, {'diff': 6.516699999999792e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.0500000000001525e-05}, {'diff': 6.061100000000208e-05}, {'diff': 6.0528000000000665e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:16.851" endtime="20201030 10:57:16.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:16.858" level="INFO">${ACCURACY} = {'diff': [6.498599999999952e-05, 6.516699999999792e-05, 6.062499999999818e-05, 6.0500000000001525e-05, 6.061100000000208e-05, 6.0528000000000665e-05, 6.0264000000000845e-05, 6.0750000000001775e-05, 6....</msg>
<status status="PASS" starttime="20201030 10:57:16.855" endtime="20201030 10:57:16.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.863" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:57:16.862" endtime="20201030 10:57:16.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.865" level="INFO">VALUE: [6.498599999999952e-05, 6.516699999999792e-05, 6.062499999999818e-05, 6.0500000000001525e-05, 6.061100000000208e-05, 6.0528000000000665e-05, 6.0264000000000845e-05, 6.0750000000001775e-05, 6.0736000000002205e-05, 6.081900000000015e-05, 6.087499999999843e-05, 6.0443999999999776e-05, 6.0514000000001095e-05, 6.134699999999979e-05, 6.0264000000000845e-05, 6.065300000000079e-05, 6.0070000000002344e-05, 6.015299999999682e-05, 6.0221999999998665e-05, 6.0792000000000485e-05, 6.065300000000079e-05, 6.091700000000061e-05, 6.041700000000011e-05, 6.027699999999747e-05, 6.091700000000061e-05, 5.9986000000001455e-05, 6.0249999999997805e-05, 6.0235999999998235e-05, 6.026300000000137e-05, 6.055500000000033e-05, 6.0735999999998735e-05, 6.0028000000000165e-05, 6.015300000000029e-05, 6.0041999999999734e-05, 5.9957999999998846e-05, 6.0888999999998e-05, 5.9999999999997555e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.087499999999843e-05, 6.0778000000000915e-05, 6.0250000000001275e-05, 6.0735999999998735e-05, 6.009700000000201e-05, 5.9971999999998415e-05, 6.004100000000026e-05, 6.0930000000000706e-05, 6.0792000000000485e-05, 6.01810000000029e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.864" endtime="20201030 10:57:16.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.859" endtime="20201030 10:57:16.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.871" endtime="20201030 10:57:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.870" endtime="20201030 10:57:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.869" endtime="20201030 10:57:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.508" endtime="20201030 10:57:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.508" endtime="20201030 10:57:16.892"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.901" endtime="20201030 10:57:16.920"></status>
</kw>
<msg timestamp="20201030 10:57:16.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.899" endtime="20201030 10:57:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.921" endtime="20201030 10:57:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.924" endtime="20201030 10:57:16.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.896" endtime="20201030 10:57:16.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.894" endtime="20201030 10:57:16.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.933" endtime="20201030 10:57:17.218"></status>
</kw>
<msg timestamp="20201030 10:57:17.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.931" endtime="20201030 10:57:17.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.223" endtime="20201030 10:57:17.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.231" endtime="20201030 10:57:17.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.929" endtime="20201030 10:57:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.927" endtime="20201030 10:57:17.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.237" level="INFO">${RESULT} = [{'diff': 6.613899999999978e-05}, {'diff': 6.60700000000014e-05}, {'diff': 6.109699999999954e-05}, {'diff': 6.236199999999983e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.111199999999858e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:17.234" endtime="20201030 10:57:17.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:17.242" level="INFO">${ACCURACY} = {'diff': [6.613899999999978e-05, 6.60700000000014e-05, 6.109699999999954e-05, 6.236199999999983e-05, 6.152800000000166e-05, 6.111199999999858e-05, 6.1195e-05, 6.17499999999993e-05, 6.155499999999786e-...</msg>
<status status="PASS" starttime="20201030 10:57:17.238" endtime="20201030 10:57:17.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.247" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:57:17.246" endtime="20201030 10:57:17.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.249" level="INFO">VALUE: [6.613899999999978e-05, 6.60700000000014e-05, 6.109699999999954e-05, 6.236199999999983e-05, 6.152800000000166e-05, 6.111199999999858e-05, 6.1195e-05, 6.17499999999993e-05, 6.155499999999786e-05, 6.0971999999999416e-05, 6.0971999999999416e-05, 6.231900000000165e-05, 6.105499999999736e-05, 6.1028000000001165e-05, 6.159700000000004e-05, 6.172200000000017e-05, 6.169400000000103e-05, 6.109699999999954e-05, 6.147199999999992e-05, 6.115300000000129e-05, 6.109800000000248e-05, 6.095900000000279e-05, 6.180600000000105e-05, 6.147300000000286e-05, 6.105500000000083e-05, 6.1014000000001595e-05, 6.236100000000036e-05, 6.144400000000078e-05, 6.183300000000072e-05, 6.172200000000017e-05, 6.187499999999943e-05, 6.134799999999926e-05, 6.181900000000115e-05, 6.191700000000161e-05, 6.148599999999949e-05, 6.187499999999943e-05, 6.109699999999954e-05, 6.122299999999914e-05, 6.173700000000268e-05, 6.1888999999999e-05, 6.15279999999982e-05, 6.176400000000234e-05, 6.158399999999994e-05, 6.186099999999986e-05, 6.119399999999706e-05, 6.104099999999779e-05, 6.176400000000234e-05, 6.111099999999911e-05, 6.179200000000148e-05, 6.145800000000035e-05]</msg>
<status status="PASS" starttime="20201030 10:57:17.248" endtime="20201030 10:57:17.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.243" endtime="20201030 10:57:17.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.254" endtime="20201030 10:57:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.253" endtime="20201030 10:57:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.252" endtime="20201030 10:57:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.893" endtime="20201030 10:57:17.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.892" endtime="20201030 10:57:17.275"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.284" endtime="20201030 10:57:17.303"></status>
</kw>
<msg timestamp="20201030 10:57:17.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.282" endtime="20201030 10:57:17.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.304" endtime="20201030 10:57:17.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.307" endtime="20201030 10:57:17.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.280" endtime="20201030 10:57:17.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.277" endtime="20201030 10:57:17.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.316" endtime="20201030 10:57:17.603"></status>
</kw>
<msg timestamp="20201030 10:57:17.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.314" endtime="20201030 10:57:17.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.607" endtime="20201030 10:57:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.615" endtime="20201030 10:57:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.312" endtime="20201030 10:57:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.310" endtime="20201030 10:57:17.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.622" level="INFO">${RESULT} = [{'diff': 6.695899999999838e-05}, {'diff': 6.630599999999862e-05}, {'diff': 6.223600000000024e-05}, {'diff': 6.241599999999917e-05}, {'diff': 6.25690000000019e-05}, {'diff': 6.215200000000282e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:17.619" endtime="20201030 10:57:17.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:17.626" level="INFO">${ACCURACY} = {'diff': [6.695899999999838e-05, 6.630599999999862e-05, 6.223600000000024e-05, 6.241599999999917e-05, 6.25690000000019e-05, 6.215200000000282e-05, 6.27219999999977e-05, 6.336100000000136e-05, 6.199999...</msg>
<status status="PASS" starttime="20201030 10:57:17.623" endtime="20201030 10:57:17.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.630" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:57:17.629" endtime="20201030 10:57:17.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.633" level="INFO">VALUE: [6.695899999999838e-05, 6.630599999999862e-05, 6.223600000000024e-05, 6.241599999999917e-05, 6.25690000000019e-05, 6.215200000000282e-05, 6.27219999999977e-05, 6.336100000000136e-05, 6.199999999999956e-05, 6.280600000000205e-05, 6.24439999999983e-05, 6.198599999999999e-05, 6.248599999999702e-05, 6.262500000000018e-05, 6.241699999999864e-05, 6.197200000000042e-05, 6.259800000000051e-05, 6.222300000000014e-05, 6.273600000000074e-05, 6.251300000000015e-05, 6.199999999999956e-05, 6.286100000000086e-05, 6.286100000000086e-05, 6.29300000000027e-05, 6.227799999999895e-05, 6.294400000000228e-05, 6.254199999999877e-05, 6.240300000000254e-05, 6.252800000000266e-05, 6.254099999999929e-05, 6.294500000000175e-05, 6.272200000000117e-05, 6.334800000000126e-05, 6.261100000000061e-05, 6.290299999999957e-05, 6.252699999999972e-05, 6.215199999999935e-05, 6.229199999999852e-05, 6.215199999999935e-05, 6.209700000000054e-05, 6.25279999999992e-05, 6.254199999999877e-05, 6.223600000000024e-05, 6.27500000000003e-05, 6.268099999999846e-05, 6.280599999999859e-05, 6.266699999999889e-05, 6.254199999999877e-05, 6.265200000000332e-05, 6.222300000000014e-05]</msg>
<status status="PASS" starttime="20201030 10:57:17.631" endtime="20201030 10:57:17.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.627" endtime="20201030 10:57:17.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.638" endtime="20201030 10:57:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.636" endtime="20201030 10:57:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.635" endtime="20201030 10:57:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.276" endtime="20201030 10:57:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.275" endtime="20201030 10:57:17.659"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.667" endtime="20201030 10:57:17.688"></status>
</kw>
<msg timestamp="20201030 10:57:17.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.666" endtime="20201030 10:57:17.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.689" endtime="20201030 10:57:17.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.692" endtime="20201030 10:57:17.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.663" endtime="20201030 10:57:17.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.661" endtime="20201030 10:57:17.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.701" endtime="20201030 10:57:17.986"></status>
</kw>
<msg timestamp="20201030 10:57:17.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.700" endtime="20201030 10:57:17.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.990" endtime="20201030 10:57:17.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.998" endtime="20201030 10:57:18.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.697" endtime="20201030 10:57:18.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.695" endtime="20201030 10:57:18.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.005" level="INFO">${RESULT} = [{'diff': 6.812500000000221e-05}, {'diff': 6.74030000000006e-05}, {'diff': 6.308400000000144e-05}, {'diff': 6.434800000000226e-05}, {'diff': 6.373700000000121e-05}, {'diff': 6.386100000000186e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:18.002" endtime="20201030 10:57:18.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:18.009" level="INFO">${ACCURACY} = {'diff': [6.812500000000221e-05, 6.74030000000006e-05, 6.308400000000144e-05, 6.434800000000226e-05, 6.373700000000121e-05, 6.386100000000186e-05, 6.32630000000009e-05, 6.434699999999932e-05, 6.331900...</msg>
<status status="PASS" starttime="20201030 10:57:18.006" endtime="20201030 10:57:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.014" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:57:18.012" endtime="20201030 10:57:18.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.016" level="INFO">VALUE: [6.812500000000221e-05, 6.74030000000006e-05, 6.308400000000144e-05, 6.434800000000226e-05, 6.373700000000121e-05, 6.386100000000186e-05, 6.32630000000009e-05, 6.434699999999932e-05, 6.331900000000265e-05, 6.34439999999993e-05, 6.35280000000002e-05, 6.35699999999989e-05, 6.330599999999909e-05, 6.383300000000272e-05, 6.341699999999964e-05, 6.377800000000045e-05, 6.433299999999975e-05, 6.393099999999971e-05, 6.365300000000032e-05, 6.393099999999971e-05, 6.359800000000151e-05, 6.373599999999827e-05, 6.295800000000185e-05, 6.352700000000072e-05, 6.309700000000154e-05, 6.367999999999999e-05, 6.366600000000042e-05, 6.309700000000154e-05, 6.312500000000068e-05, 6.327799999999995e-05, 6.354199999999977e-05, 6.386099999999839e-05, 6.311100000000111e-05, 6.43340000000027e-05, 6.372200000000217e-05, 6.300000000000056e-05, 6.322299999999767e-05, 6.43340000000027e-05, 6.326400000000038e-05, 6.30279999999997e-05, 6.34020000000006e-05, 6.352700000000072e-05, 6.315299999999982e-05, 6.351400000000063e-05, 6.359699999999857e-05, 6.436100000000236e-05, 6.365300000000032e-05, 6.366600000000042e-05, 6.358400000000194e-05, 6.300000000000056e-05]</msg>
<status status="PASS" starttime="20201030 10:57:18.015" endtime="20201030 10:57:18.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.010" endtime="20201030 10:57:18.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.022" endtime="20201030 10:57:18.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.020" endtime="20201030 10:57:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.019" endtime="20201030 10:57:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.659" endtime="20201030 10:57:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.659" endtime="20201030 10:57:18.042"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.051" endtime="20201030 10:57:18.071"></status>
</kw>
<msg timestamp="20201030 10:57:18.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.050" endtime="20201030 10:57:18.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.072" endtime="20201030 10:57:18.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.075" endtime="20201030 10:57:18.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.047" endtime="20201030 10:57:18.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.045" endtime="20201030 10:57:18.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.084" endtime="20201030 10:57:18.370"></status>
</kw>
<msg timestamp="20201030 10:57:18.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.082" endtime="20201030 10:57:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.375" endtime="20201030 10:57:18.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.383" endtime="20201030 10:57:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.080" endtime="20201030 10:57:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.078" endtime="20201030 10:57:18.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.390" level="INFO">${RESULT} = [{'diff': 6.899999999999962e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.411100000000211e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.416699999999692e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:18.386" endtime="20201030 10:57:18.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:18.395" level="INFO">${ACCURACY} = {'diff': [6.899999999999962e-05, 6.911100000000017e-05, 6.440300000000107e-05, 6.411100000000211e-05, 6.537499999999946e-05, 6.416699999999692e-05, 6.445799999999988e-05, 6.484699999999982e-05, 6.4778...</msg>
<status status="PASS" starttime="20201030 10:57:18.391" endtime="20201030 10:57:18.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.399" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:57:18.398" endtime="20201030 10:57:18.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.402" level="INFO">VALUE: [6.899999999999962e-05, 6.911100000000017e-05, 6.440300000000107e-05, 6.411100000000211e-05, 6.537499999999946e-05, 6.416699999999692e-05, 6.445799999999988e-05, 6.484699999999982e-05, 6.477800000000145e-05, 6.393099999999971e-05, 6.402799999999723e-05, 6.441700000000064e-05, 6.415300000000082e-05, 6.394500000000275e-05, 6.441700000000064e-05, 6.473599999999927e-05, 6.418000000000049e-05, 6.443000000000074e-05, 6.448599999999902e-05, 6.45280000000012e-05, 6.418000000000049e-05, 6.487500000000243e-05, 6.397199999999895e-05, 6.486099999999939e-05, 6.447200000000292e-05, 6.418099999999996e-05, 6.449999999999859e-05, 6.474999999999884e-05, 6.533300000000075e-05, 6.408400000000244e-05, 6.53890000000025e-05, 6.429100000000104e-05, 6.416600000000092e-05, 6.49159999999982e-05, 6.427700000000147e-05, 6.462500000000218e-05, 6.441700000000064e-05, 6.447299999999892e-05, 6.440300000000107e-05, 6.416700000000039e-05, 6.447199999999945e-05, 6.42500000000018e-05, 6.47219999999997e-05, 6.44029999999976e-05, 6.537499999999946e-05, 6.477700000000197e-05, 6.454100000000129e-05, 6.454099999999782e-05, 6.481900000000068e-05, 6.486099999999939e-05]</msg>
<status status="PASS" starttime="20201030 10:57:18.400" endtime="20201030 10:57:18.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.396" endtime="20201030 10:57:18.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.407" endtime="20201030 10:57:18.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.405" endtime="20201030 10:57:18.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.404" endtime="20201030 10:57:18.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.043" endtime="20201030 10:57:18.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.043" endtime="20201030 10:57:18.427"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.436" endtime="20201030 10:57:18.456"></status>
</kw>
<msg timestamp="20201030 10:57:18.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.435" endtime="20201030 10:57:18.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.457" endtime="20201030 10:57:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.460" endtime="20201030 10:57:18.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.432" endtime="20201030 10:57:18.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.430" endtime="20201030 10:57:18.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.469" endtime="20201030 10:57:18.755"></status>
</kw>
<msg timestamp="20201030 10:57:18.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:18.468" endtime="20201030 10:57:18.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:18.759" endtime="20201030 10:57:18.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.767" endtime="20201030 10:57:18.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.465" endtime="20201030 10:57:18.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.463" endtime="20201030 10:57:18.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.774" level="INFO">${RESULT} = [{'diff': 6.988900000000006e-05}, {'diff': 6.967999999999905e-05}, {'diff': 6.523700000000271e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.568000000000199e-05}, {'diff': 6.548600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:18.771" endtime="20201030 10:57:18.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:18.778" level="INFO">${ACCURACY} = {'diff': [6.988900000000006e-05, 6.967999999999905e-05, 6.523700000000271e-05, 6.502799999999823e-05, 6.568000000000199e-05, 6.548600000000002e-05, 6.590199999999963e-05, 6.502699999999875e-05, 6.5901...</msg>
<status status="PASS" starttime="20201030 10:57:18.775" endtime="20201030 10:57:18.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.783" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:57:18.782" endtime="20201030 10:57:18.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.785" level="INFO">VALUE: [6.988900000000006e-05, 6.967999999999905e-05, 6.523700000000271e-05, 6.502799999999823e-05, 6.568000000000199e-05, 6.548600000000002e-05, 6.590199999999963e-05, 6.502699999999875e-05, 6.590199999999963e-05, 6.586100000000039e-05, 6.552799999999873e-05, 6.509700000000007e-05, 6.577799999999898e-05, 6.551399999999916e-05, 6.584700000000082e-05, 6.501399999999866e-05, 6.511099999999964e-05, 6.540300000000207e-05, 6.50280000000017e-05, 6.572300000000017e-05, 6.558400000000048e-05, 6.566599999999895e-05, 6.518000000000149e-05, 6.540199999999913e-05, 6.529200000000152e-05, 6.579099999999907e-05, 6.499999999999909e-05, 6.552799999999873e-05, 6.591699999999867e-05, 6.524999999999934e-05, 6.515299999999835e-05, 6.586100000000039e-05, 6.502799999999823e-05, 6.55969999999971e-05, 6.590300000000257e-05, 6.50700000000004e-05, 6.509799999999955e-05, 6.569499999999756e-05, 6.558299999999753e-05, 6.583300000000125e-05, 6.509700000000007e-05, 6.566599999999895e-05, 6.497199999999995e-05, 6.577799999999898e-05, 6.594500000000128e-05, 6.569400000000156e-05, 6.580600000000159e-05, 6.515300000000182e-05, 6.520800000000063e-05, 6.630599999999862e-05]</msg>
<status status="PASS" starttime="20201030 10:57:18.784" endtime="20201030 10:57:18.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.779" endtime="20201030 10:57:18.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.790" endtime="20201030 10:57:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.789" endtime="20201030 10:57:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.787" endtime="20201030 10:57:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.428" endtime="20201030 10:57:18.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.428" endtime="20201030 10:57:18.811"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.819" endtime="20201030 10:57:18.840"></status>
</kw>
<msg timestamp="20201030 10:57:18.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.818" endtime="20201030 10:57:18.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.841" endtime="20201030 10:57:18.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.844" endtime="20201030 10:57:18.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.815" endtime="20201030 10:57:18.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.813" endtime="20201030 10:57:18.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.853" endtime="20201030 10:57:19.138"></status>
</kw>
<msg timestamp="20201030 10:57:19.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020643875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.851" endtime="20201030 10:57:19.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020643875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.142" endtime="20201030 10:57:19.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.151" endtime="20201030 10:57:19.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.849" endtime="20201030 10:57:19.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.847" endtime="20201030 10:57:19.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.157" level="INFO">${RESULT} = [{'diff': 7.036100000000142e-05}, {'diff': 7.100000000000162e-05}, {'diff': 6.687499999999749e-05}, {'diff': 6.60419999999988e-05}, {'diff': 6.67090000000016e-05}, {'diff': 6.616699999999892e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:19.154" endtime="20201030 10:57:19.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:19.161" level="INFO">${ACCURACY} = {'diff': [7.036100000000142e-05, 7.100000000000162e-05, 6.687499999999749e-05, 6.60419999999988e-05, 6.67090000000016e-05, 6.616699999999892e-05, 6.611099999999717e-05, 6.595800000000138e-05, 6.608400...</msg>
<status status="PASS" starttime="20201030 10:57:19.158" endtime="20201030 10:57:19.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.166" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:57:19.165" endtime="20201030 10:57:19.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.168" level="INFO">VALUE: [7.036100000000142e-05, 7.100000000000162e-05, 6.687499999999749e-05, 6.60419999999988e-05, 6.67090000000016e-05, 6.616699999999892e-05, 6.611099999999717e-05, 6.595800000000138e-05, 6.608400000000098e-05, 6.667999999999952e-05, 6.608299999999803e-05, 6.64159999999997e-05, 6.60969999999976e-05, 6.691699999999967e-05, 6.666699999999942e-05, 6.626400000000338e-05, 6.670899999999813e-05, 6.655600000000234e-05, 6.684700000000182e-05, 6.662499999999724e-05, 6.601399999999966e-05, 6.629200000000252e-05, 6.648700000000049e-05, 6.655600000000234e-05, 6.680499999999964e-05, 6.620800000000163e-05, 6.734699999999885e-05, 6.669399999999909e-05, 6.688900000000053e-05, 6.683299999999878e-05, 6.60419999999988e-05, 6.65419999999993e-05, 6.616699999999892e-05, 6.616699999999892e-05, 6.661100000000114e-05, 6.59029999999991e-05, 6.645899999999788e-05, 6.598600000000052e-05, 6.691699999999967e-05, 6.736099999999842e-05, 6.634700000000132e-05, 6.663900000000028e-05, 6.691699999999967e-05, 6.686100000000139e-05, 6.677799999999998e-05, 6.64159999999997e-05, 6.675000000000084e-05, 6.669399999999909e-05, 6.618100000000196e-05, 6.736099999999842e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.167" endtime="20201030 10:57:19.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.162" endtime="20201030 10:57:19.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.174" endtime="20201030 10:57:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.173" endtime="20201030 10:57:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.171" endtime="20201030 10:57:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.812" endtime="20201030 10:57:19.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.811" endtime="20201030 10:57:19.195"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.203" endtime="20201030 10:57:19.223"></status>
</kw>
<msg timestamp="20201030 10:57:19.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.202" endtime="20201030 10:57:19.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.224" endtime="20201030 10:57:19.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.227" endtime="20201030 10:57:19.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.199" endtime="20201030 10:57:19.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.197" endtime="20201030 10:57:19.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.236" endtime="20201030 10:57:19.522"></status>
</kw>
<msg timestamp="20201030 10:57:19.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.234" endtime="20201030 10:57:19.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.526" endtime="20201030 10:57:19.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.534" endtime="20201030 10:57:19.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.232" endtime="20201030 10:57:19.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.230" endtime="20201030 10:57:19.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.541" level="INFO">${RESULT} = [{'diff': 7.129200000000058e-05}, {'diff': 7.180500000000117e-05}, {'diff': 6.761100000000214e-05}, {'diff': 6.766600000000095e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.759700000000257e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:19.537" endtime="20201030 10:57:19.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:19.546" level="INFO">${ACCURACY} = {'diff': [7.129200000000058e-05, 7.180500000000117e-05, 6.761100000000214e-05, 6.766600000000095e-05, 6.718000000000002e-05, 6.759700000000257e-05, 6.729100000000057e-05, 6.791700000000067e-05, 6.7528...</msg>
<status status="PASS" starttime="20201030 10:57:19.542" endtime="20201030 10:57:19.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.550" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:57:19.549" endtime="20201030 10:57:19.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.553" level="INFO">VALUE: [7.129200000000058e-05, 7.180500000000117e-05, 6.761100000000214e-05, 6.766600000000095e-05, 6.718000000000002e-05, 6.759700000000257e-05, 6.729100000000057e-05, 6.791700000000067e-05, 6.752800000000073e-05, 6.831899999999724e-05, 6.744499999999931e-05, 6.72640000000009e-05, 6.698599999999805e-05, 6.701400000000066e-05, 6.787499999999849e-05, 6.697299999999795e-05, 6.787499999999849e-05, 6.77220000000027e-05, 6.790199999999816e-05, 6.751400000000116e-05, 6.716699999999992e-05, 6.697199999999848e-05, 6.748599999999855e-05, 6.834699999999985e-05, 6.766700000000042e-05, 6.698599999999805e-05, 6.748600000000202e-05, 6.77229999999987e-05, 6.765299999999738e-05, 6.715300000000035e-05, 6.768000000000052e-05, 6.730500000000014e-05, 6.715200000000088e-05, 6.790199999999816e-05, 6.79160000000012e-05, 6.747200000000245e-05, 6.779100000000107e-05, 6.780500000000064e-05, 6.711100000000164e-05, 6.752800000000073e-05, 6.711100000000164e-05, 6.700000000000109e-05, 6.730599999999962e-05, 6.75969999999991e-05, 6.701400000000066e-05, 6.715299999999688e-05, 6.748699999999802e-05, 6.790199999999816e-05, 6.706899999999946e-05, 6.786099999999892e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.551" endtime="20201030 10:57:19.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.547" endtime="20201030 10:57:19.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.558" endtime="20201030 10:57:19.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.556" endtime="20201030 10:57:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.555" endtime="20201030 10:57:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.196" endtime="20201030 10:57:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.195" endtime="20201030 10:57:19.578"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.587" endtime="20201030 10:57:19.607"></status>
</kw>
<msg timestamp="20201030 10:57:19.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.586" endtime="20201030 10:57:19.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.608" endtime="20201030 10:57:19.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.611" endtime="20201030 10:57:19.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.583" endtime="20201030 10:57:19.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.581" endtime="20201030 10:57:19.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.620" endtime="20201030 10:57:19.909"></status>
</kw>
<msg timestamp="20201030 10:57:19.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.619" endtime="20201030 10:57:19.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.913" endtime="20201030 10:57:19.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.922" endtime="20201030 10:57:19.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.616" endtime="20201030 10:57:19.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.614" endtime="20201030 10:57:19.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.928" level="INFO">${RESULT} = [{'diff': 7.240300000000213e-05}, {'diff': 7.263899999999934e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.888899999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:19.925" endtime="20201030 10:57:19.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:19.932" level="INFO">${ACCURACY} = {'diff': [7.240300000000213e-05, 7.263899999999934e-05, 6.876399999999894e-05, 6.84030000000016e-05, 6.862499999999924e-05, 6.888899999999906e-05, 6.888799999999959e-05, 6.865200000000238e-05, 6.79019...</msg>
<status status="PASS" starttime="20201030 10:57:19.929" endtime="20201030 10:57:19.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.937" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:57:19.936" endtime="20201030 10:57:19.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.939" level="INFO">VALUE: [7.240300000000213e-05, 7.263899999999934e-05, 6.876399999999894e-05, 6.84030000000016e-05, 6.862499999999924e-05, 6.888899999999906e-05, 6.888799999999959e-05, 6.865200000000238e-05, 6.790199999999816e-05, 6.865300000000185e-05, 6.938899999999956e-05, 6.879200000000155e-05, 6.825000000000234e-05, 6.812500000000221e-05, 6.802800000000123e-05, 6.847199999999998e-05, 6.890299999999863e-05, 6.866700000000142e-05, 6.891700000000167e-05, 6.880600000000112e-05, 6.891700000000167e-05, 6.89030000000021e-05, 6.858300000000053e-05, 6.867999999999805e-05, 6.847199999999998e-05, 6.874999999999937e-05, 6.819399999999712e-05, 6.884700000000035e-05, 6.865299999999838e-05, 6.857000000000044e-05, 6.872199999999676e-05, 6.879200000000155e-05, 6.829200000000105e-05, 6.870799999999719e-05, 6.795799999999991e-05, 6.887500000000296e-05, 6.85559999999974e-05, 6.89030000000021e-05, 6.854100000000182e-05, 6.881899999999774e-05, 6.876299999999946e-05, 6.879100000000207e-05, 6.891700000000167e-05, 6.819400000000059e-05, 6.891700000000167e-05, 6.826399999999844e-05, 6.795799999999991e-05, 6.888899999999906e-05, 6.929199999999858e-05, 6.87359999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.938" endtime="20201030 10:57:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.933" endtime="20201030 10:57:19.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.944" endtime="20201030 10:57:19.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.943" endtime="20201030 10:57:19.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.941" endtime="20201030 10:57:19.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.579" endtime="20201030 10:57:19.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.579" endtime="20201030 10:57:19.965"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.973" endtime="20201030 10:57:19.993"></status>
</kw>
<msg timestamp="20201030 10:57:19.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.972" endtime="20201030 10:57:19.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.995" endtime="20201030 10:57:19.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.997" endtime="20201030 10:57:19.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.969" endtime="20201030 10:57:20.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.967" endtime="20201030 10:57:20.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.007" endtime="20201030 10:57:20.292"></status>
</kw>
<msg timestamp="20201030 10:57:20.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.005" endtime="20201030 10:57:20.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.297" endtime="20201030 10:57:20.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.305" endtime="20201030 10:57:20.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.002" endtime="20201030 10:57:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.001" endtime="20201030 10:57:20.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.311" level="INFO">${RESULT} = [{'diff': 7.504099999999791e-05}, {'diff': 7.400000000000115e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.968100000000199e-05}, {'diff': 6.929199999999858e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:20.308" endtime="20201030 10:57:20.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:20.316" level="INFO">${ACCURACY} = {'diff': [7.504099999999791e-05, 7.400000000000115e-05, 6.926399999999944e-05, 6.897200000000048e-05, 6.968100000000199e-05, 6.929199999999858e-05, 6.950000000000012e-05, 6.977799999999951e-05, 6.8959...</msg>
<status status="PASS" starttime="20201030 10:57:20.312" endtime="20201030 10:57:20.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.320" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:57:20.319" endtime="20201030 10:57:20.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.323" level="INFO">VALUE: [7.504099999999791e-05, 7.400000000000115e-05, 6.926399999999944e-05, 6.897200000000048e-05, 6.968100000000199e-05, 6.929199999999858e-05, 6.950000000000012e-05, 6.977799999999951e-05, 6.895900000000038e-05, 6.952800000000273e-05, 6.981899999999874e-05, 6.898600000000005e-05, 6.917999999999855e-05, 6.940199999999966e-05, 6.977799999999951e-05, 6.902800000000223e-05, 6.982000000000169e-05, 6.966599999999948e-05, 6.911100000000017e-05, 6.929199999999858e-05, 6.952799999999926e-05, 6.927799999999901e-05, 6.950000000000012e-05, 6.94169999999987e-05, 6.977799999999951e-05, 6.947300000000045e-05, 6.92230000000002e-05, 6.951399999999969e-05, 6.980500000000264e-05, 6.997199999999801e-05, 6.915300000000235e-05, 6.961100000000067e-05, 6.918100000000149e-05, 6.918100000000149e-05, 6.99169999999992e-05, 6.94169999999987e-05, 6.959699999999763e-05, 6.993099999999877e-05, 6.901399999999919e-05, 7.034800000000133e-05, 6.902800000000223e-05, 6.906900000000146e-05, 6.916599999999898e-05, 6.916600000000245e-05, 6.993099999999877e-05, 6.94160000000027e-05, 7.033300000000228e-05, 6.924999999999987e-05, 6.947200000000098e-05, 6.956899999999849e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.321" endtime="20201030 10:57:20.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.316" endtime="20201030 10:57:20.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.328" endtime="20201030 10:57:20.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.327" endtime="20201030 10:57:20.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.326" endtime="20201030 10:57:20.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.966" endtime="20201030 10:57:20.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.965" endtime="20201030 10:57:20.349"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.358" endtime="20201030 10:57:20.378"></status>
</kw>
<msg timestamp="20201030 10:57:20.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.356" endtime="20201030 10:57:20.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.379" endtime="20201030 10:57:20.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.382" endtime="20201030 10:57:20.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.354" endtime="20201030 10:57:20.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.352" endtime="20201030 10:57:20.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.391" endtime="20201030 10:57:20.677"></status>
</kw>
<msg timestamp="20201030 10:57:20.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.389" endtime="20201030 10:57:20.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.681" endtime="20201030 10:57:20.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.689" endtime="20201030 10:57:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.386" endtime="20201030 10:57:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.385" endtime="20201030 10:57:20.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.696" level="INFO">${RESULT} = [{'diff': 7.481900000000027e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.030600000000262e-05}, {'diff': 7.090300000000063e-05}, {'diff': 7.026400000000044e-05}, {'diff': 7.063899999999734e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:20.692" endtime="20201030 10:57:20.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:20.701" level="INFO">${ACCURACY} = {'diff': [7.481900000000027e-05, 7.44439999999999e-05, 7.030600000000262e-05, 7.090300000000063e-05, 7.026400000000044e-05, 7.063899999999734e-05, 7.026400000000044e-05, 7.040300000000013e-05, 6.99730...</msg>
<status status="PASS" starttime="20201030 10:57:20.697" endtime="20201030 10:57:20.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.705" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:57:20.704" endtime="20201030 10:57:20.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.708" level="INFO">VALUE: [7.481900000000027e-05, 7.44439999999999e-05, 7.030600000000262e-05, 7.090300000000063e-05, 7.026400000000044e-05, 7.063899999999734e-05, 7.026400000000044e-05, 7.040300000000013e-05, 6.997300000000095e-05, 7.012500000000074e-05, 7.076300000000146e-05, 7.068000000000005e-05, 7.022200000000173e-05, 7.044399999999937e-05, 7.000000000000062e-05, 7.016699999999945e-05, 7.134699999999938e-05, 7.002799999999976e-05, 7.013900000000031e-05, 7.073599999999833e-05, 7.137500000000199e-05, 7.027800000000001e-05, 7.004199999999933e-05, 7.062500000000124e-05, 7.001400000000019e-05, 7.001400000000019e-05, 7.013900000000031e-05, 7.048599999999808e-05, 7.05970000000021e-05, 6.995800000000191e-05, 7.005600000000237e-05, 7.054199999999983e-05, 7.023599999999783e-05, 7.052800000000026e-05, 7.073599999999833e-05, 7.088899999999759e-05, 7.061199999999768e-05, 7.133399999999929e-05, 7.048599999999808e-05, 7.080500000000017e-05, 7.002700000000028e-05, 7.133299999999981e-05, 7.07360000000018e-05, 7.077800000000051e-05, 7.048599999999808e-05, 7.015299999999988e-05, 7.086100000000192e-05, 7.086100000000192e-05, 7.087499999999802e-05, 7.023599999999783e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.706" endtime="20201030 10:57:20.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.702" endtime="20201030 10:57:20.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.713" endtime="20201030 10:57:20.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.711" endtime="20201030 10:57:20.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.710" endtime="20201030 10:57:20.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.350" endtime="20201030 10:57:20.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.350" endtime="20201030 10:57:20.733"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.742" endtime="20201030 10:57:20.761"></status>
</kw>
<msg timestamp="20201030 10:57:20.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.740" endtime="20201030 10:57:20.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.763" endtime="20201030 10:57:20.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.765" endtime="20201030 10:57:20.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.738" endtime="20201030 10:57:20.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.736" endtime="20201030 10:57:20.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.775" endtime="20201030 10:57:21.060"></status>
</kw>
<msg timestamp="20201030 10:57:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.773" endtime="20201030 10:57:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.065" endtime="20201030 10:57:21.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.073" endtime="20201030 10:57:21.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.771" endtime="20201030 10:57:21.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.769" endtime="20201030 10:57:21.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.079" level="INFO">${RESULT} = [{'diff': 7.551399999999875e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.106999999999947e-05}, {'diff': 7.159800000000258e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.111100000000217e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:21.076" endtime="20201030 10:57:21.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:21.084" level="INFO">${ACCURACY} = {'diff': [7.551399999999875e-05, 7.624999999999993e-05, 7.106999999999947e-05, 7.159800000000258e-05, 7.234700000000038e-05, 7.111100000000217e-05, 7.122299999999873e-05, 7.236099999999995e-05, 7.1055...</msg>
<status status="PASS" starttime="20201030 10:57:21.080" endtime="20201030 10:57:21.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.088" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:57:21.087" endtime="20201030 10:57:21.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.091" level="INFO">VALUE: [7.551399999999875e-05, 7.624999999999993e-05, 7.106999999999947e-05, 7.159800000000258e-05, 7.234700000000038e-05, 7.111100000000217e-05, 7.122299999999873e-05, 7.236099999999995e-05, 7.105500000000042e-05, 7.116600000000098e-05, 7.177699999999856e-05, 7.101400000000119e-05, 7.165299999999791e-05, 7.138900000000156e-05, 7.147200000000298e-05, 7.234700000000038e-05, 7.129200000000058e-05, 7.140300000000113e-05, 7.108399999999904e-05, 7.180600000000065e-05, 7.159699999999963e-05, 7.166700000000095e-05, 7.233400000000029e-05, 7.09300000000003e-05, 7.101299999999824e-05, 7.122199999999926e-05, 7.149999999999865e-05, 7.098599999999858e-05, 7.168100000000052e-05, 7.152800000000126e-05, 7.158300000000006e-05, 7.148599999999908e-05, 7.143100000000027e-05, 7.120899999999916e-05, 7.180599999999718e-05, 7.097299999999848e-05, 7.190299999999816e-05, 7.166699999999748e-05, 7.140300000000113e-05, 7.099999999999815e-05, 7.102700000000128e-05, 7.100000000000162e-05, 7.10970000000026e-05, 7.109699999999913e-05, 7.111100000000217e-05, 7.159699999999963e-05, 7.190299999999816e-05, 7.186100000000292e-05, 7.186099999999945e-05, 7.168100000000052e-05]</msg>
<status status="PASS" starttime="20201030 10:57:21.089" endtime="20201030 10:57:21.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.084" endtime="20201030 10:57:21.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.095" endtime="20201030 10:57:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.094" endtime="20201030 10:57:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.093" endtime="20201030 10:57:21.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.734" endtime="20201030 10:57:21.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.734" endtime="20201030 10:57:21.116"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.125" endtime="20201030 10:57:21.145"></status>
</kw>
<msg timestamp="20201030 10:57:21.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.123" endtime="20201030 10:57:21.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.147" endtime="20201030 10:57:21.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.150" endtime="20201030 10:57:21.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.121" endtime="20201030 10:57:21.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.119" endtime="20201030 10:57:21.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.159" endtime="20201030 10:57:21.445"></status>
</kw>
<msg timestamp="20201030 10:57:21.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.157" endtime="20201030 10:57:21.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.449" endtime="20201030 10:57:21.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.457" endtime="20201030 10:57:21.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.155" endtime="20201030 10:57:21.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.153" endtime="20201030 10:57:21.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.463" level="INFO">${RESULT} = [{'diff': 7.637500000000005e-05}, {'diff': 7.66250000000003e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.198700000000252e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.198599999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:21.460" endtime="20201030 10:57:21.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:21.468" level="INFO">${ACCURACY} = {'diff': [7.637500000000005e-05, 7.66250000000003e-05, 7.212499999999927e-05, 7.198700000000252e-05, 7.263899999999934e-05, 7.198599999999958e-05, 7.236099999999995e-05, 7.197200000000001e-05, 7.25419...</msg>
<status status="PASS" starttime="20201030 10:57:21.464" endtime="20201030 10:57:21.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.472" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:57:21.471" endtime="20201030 10:57:21.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.474" level="INFO">VALUE: [7.637500000000005e-05, 7.66250000000003e-05, 7.212499999999927e-05, 7.198700000000252e-05, 7.263899999999934e-05, 7.198599999999958e-05, 7.236099999999995e-05, 7.197200000000001e-05, 7.254199999999836e-05, 7.2069000000001e-05, 7.222200000000026e-05, 7.209700000000013e-05, 7.204200000000133e-05, 7.270800000000119e-05, 7.286100000000045e-05, 7.212499999999927e-05, 7.251400000000269e-05, 7.247200000000051e-05, 7.266600000000248e-05, 7.270799999999772e-05, 7.245799999999747e-05, 7.255500000000192e-05, 7.287500000000002e-05, 7.243100000000127e-05, 7.272200000000076e-05, 7.216699999999798e-05, 7.215299999999841e-05, 7.266699999999848e-05, 7.227799999999854e-05, 7.251299999999974e-05, 7.20560000000009e-05, 7.263899999999934e-05, 7.229199999999811e-05, 7.254099999999888e-05, 7.195800000000044e-05, 7.281899999999827e-05, 7.237499999999952e-05, 7.287500000000002e-05, 7.270800000000119e-05, 7.263899999999934e-05, 7.227800000000201e-05, 7.25560000000014e-05, 7.212499999999927e-05, 7.252799999999879e-05, 7.270899999999719e-05, 7.245900000000041e-05, 7.268100000000152e-05, 7.290199999999969e-05, 7.28049999999987e-05, 7.208300000000056e-05]</msg>
<status status="PASS" starttime="20201030 10:57:21.473" endtime="20201030 10:57:21.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.468" endtime="20201030 10:57:21.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.480" endtime="20201030 10:57:21.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.479" endtime="20201030 10:57:21.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.478" endtime="20201030 10:57:21.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.117" endtime="20201030 10:57:21.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.116" endtime="20201030 10:57:21.501"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.510" endtime="20201030 10:57:21.530"></status>
</kw>
<msg timestamp="20201030 10:57:21.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.508" endtime="20201030 10:57:21.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.531" endtime="20201030 10:57:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.534" endtime="20201030 10:57:21.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.506" endtime="20201030 10:57:21.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.504" endtime="20201030 10:57:21.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.543" endtime="20201030 10:57:21.828"></status>
</kw>
<msg timestamp="20201030 10:57:21.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.541" endtime="20201030 10:57:21.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.832" endtime="20201030 10:57:21.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.840" endtime="20201030 10:57:21.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.539" endtime="20201030 10:57:21.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.537" endtime="20201030 10:57:21.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.846" level="INFO">${RESULT} = [{'diff': 7.766700000000001e-05}, {'diff': 7.823600000000236e-05}, {'diff': 7.320900000000116e-05}, {'diff': 7.358399999999807e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.302799999999929e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:21.843" endtime="20201030 10:57:21.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:21.851" level="INFO">${ACCURACY} = {'diff': [7.766700000000001e-05, 7.823600000000236e-05, 7.320900000000116e-05, 7.358399999999807e-05, 7.32500000000004e-05, 7.302799999999929e-05, 7.370799999999872e-05, 7.304099999999938e-05, 7.33890...</msg>
<status status="PASS" starttime="20201030 10:57:21.847" endtime="20201030 10:57:21.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.856" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:57:21.855" endtime="20201030 10:57:21.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.858" level="INFO">VALUE: [7.766700000000001e-05, 7.823600000000236e-05, 7.320900000000116e-05, 7.358399999999807e-05, 7.32500000000004e-05, 7.302799999999929e-05, 7.370799999999872e-05, 7.304099999999938e-05, 7.338900000000009e-05, 7.395800000000244e-05, 7.319500000000159e-05, 7.312500000000027e-05, 7.351399999999675e-05, 7.359700000000163e-05, 7.368099999999905e-05, 7.397199999999854e-05, 7.32500000000004e-05, 7.344499999999837e-05, 7.386200000000093e-05, 7.354199999999936e-05, 7.358400000000154e-05, 7.354099999999988e-05, 7.390300000000016e-05, 7.390199999999722e-05, 7.383300000000231e-05, 7.320800000000169e-05, 7.315299999999941e-05, 7.318099999999855e-05, 7.322200000000126e-05, 7.302799999999929e-05, 7.301399999999972e-05, 7.386099999999798e-05, 7.348700000000055e-05, 7.390300000000016e-05, 7.302799999999929e-05, 7.366600000000001e-05, 7.301300000000024e-05, 7.322200000000126e-05, 7.345799999999847e-05, 7.322200000000126e-05, 7.347200000000151e-05, 7.386099999999798e-05, 7.368099999999905e-05, 7.320800000000169e-05, 7.372199999999829e-05, 7.329199999999911e-05, 7.316699999999898e-05, 7.34170000000027e-05, 7.348600000000108e-05, 7.391600000000026e-05]</msg>
<status status="PASS" starttime="20201030 10:57:21.857" endtime="20201030 10:57:21.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.852" endtime="20201030 10:57:21.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.921" endtime="20201030 10:57:21.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.920" endtime="20201030 10:57:21.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.919" endtime="20201030 10:57:21.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.502" endtime="20201030 10:57:21.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.501" endtime="20201030 10:57:21.942"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.952" endtime="20201030 10:57:21.971"></status>
</kw>
<msg timestamp="20201030 10:57:21.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.950" endtime="20201030 10:57:21.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.973" endtime="20201030 10:57:21.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.975" endtime="20201030 10:57:21.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.946" endtime="20201030 10:57:21.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.944" endtime="20201030 10:57:21.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.984" endtime="20201030 10:57:22.291"></status>
</kw>
<msg timestamp="20201030 10:57:22.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.983" endtime="20201030 10:57:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.301" endtime="20201030 10:57:22.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.313" endtime="20201030 10:57:22.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.980" endtime="20201030 10:57:22.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.978" endtime="20201030 10:57:22.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.320" level="INFO">${RESULT} = [{'diff': 8.005499999999902e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.459700000000263e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.399999999999768e-05}, {'diff': 7.463900000000134e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:22.316" endtime="20201030 10:57:22.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:22.324" level="INFO">${ACCURACY} = {'diff': [8.005499999999902e-05, 7.8764000000002e-05, 7.459700000000263e-05, 7.534699999999991e-05, 7.399999999999768e-05, 7.463900000000134e-05, 7.46249999999983e-05, 7.536199999999896e-05, 7.4790999...</msg>
<status status="PASS" starttime="20201030 10:57:22.321" endtime="20201030 10:57:22.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.329" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:57:22.328" endtime="20201030 10:57:22.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.331" level="INFO">VALUE: [8.005499999999902e-05, 7.8764000000002e-05, 7.459700000000263e-05, 7.534699999999991e-05, 7.399999999999768e-05, 7.463900000000134e-05, 7.46249999999983e-05, 7.536199999999896e-05, 7.479099999999766e-05, 7.454200000000036e-05, 7.397300000000148e-05, 7.537499999999905e-05, 7.477800000000104e-05, 7.438899999999762e-05, 7.405499999999995e-05, 7.422199999999879e-05, 7.448599999999861e-05, 7.416699999999998e-05, 7.472199999999929e-05, 7.466699999999701e-05, 7.466700000000048e-05, 7.427800000000054e-05, 7.445799999999947e-05, 7.49029999999977e-05, 7.47500000000019e-05, 7.441600000000076e-05, 7.398600000000158e-05, 7.473600000000233e-05, 7.438900000000109e-05, 7.42500000000014e-05, 7.491700000000073e-05, 7.40829999999991e-05, 7.454200000000036e-05, 7.419499999999912e-05, 7.429200000000011e-05, 7.465299999999744e-05, 7.405599999999943e-05, 7.47500000000019e-05, 7.488899999999812e-05, 7.491599999999779e-05, 7.476400000000147e-05, 7.41110000000017e-05, 7.476400000000147e-05, 7.462500000000177e-05, 7.534699999999991e-05, 7.404199999999986e-05, 7.461099999999873e-05, 7.477799999999757e-05, 7.41110000000017e-05, 7.452800000000079e-05]</msg>
<status status="PASS" starttime="20201030 10:57:22.330" endtime="20201030 10:57:22.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.325" endtime="20201030 10:57:22.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.337" endtime="20201030 10:57:22.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.335" endtime="20201030 10:57:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.334" endtime="20201030 10:57:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.943" endtime="20201030 10:57:22.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.942" endtime="20201030 10:57:22.357"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.366" endtime="20201030 10:57:22.388"></status>
</kw>
<msg timestamp="20201030 10:57:22.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.365" endtime="20201030 10:57:22.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.389" endtime="20201030 10:57:22.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.392" endtime="20201030 10:57:22.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.362" endtime="20201030 10:57:22.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.360" endtime="20201030 10:57:22.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.401" endtime="20201030 10:57:22.688"></status>
</kw>
<msg timestamp="20201030 10:57:22.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021050694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021130347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.400" endtime="20201030 10:57:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021050694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021130347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.693" endtime="20201030 10:57:22.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.701" endtime="20201030 10:57:22.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.397" endtime="20201030 10:57:22.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.395" endtime="20201030 10:57:22.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.708" level="INFO">${RESULT} = [{'diff': 7.965300000000244e-05}, {'diff': 8.01389999999999e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.509699999999966e-05}, {'diff': 7.523600000000283e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:22.705" endtime="20201030 10:57:22.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:22.712" level="INFO">${ACCURACY} = {'diff': [7.965300000000244e-05, 8.01389999999999e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.509699999999966e-05, 7.523600000000283e-05, 7.505599999999696e-05, 7.559700000000016e-05, 7.63469...</msg>
<status status="PASS" starttime="20201030 10:57:22.709" endtime="20201030 10:57:22.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.717" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:57:22.716" endtime="20201030 10:57:22.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.719" level="INFO">VALUE: [7.965300000000244e-05, 8.01389999999999e-05, 7.530600000000068e-05, 7.534699999999991e-05, 7.509699999999966e-05, 7.523600000000283e-05, 7.505599999999696e-05, 7.559700000000016e-05, 7.634699999999744e-05, 7.630499999999873e-05, 7.505600000000043e-05, 7.509699999999966e-05, 7.547200000000004e-05, 7.59029999999987e-05, 7.548599999999961e-05, 7.561099999999973e-05, 7.574999999999943e-05, 7.531900000000077e-05, 7.62769999999996e-05, 7.522199999999979e-05, 7.540200000000219e-05, 7.590300000000216e-05, 7.552699999999885e-05, 7.591700000000173e-05, 7.576400000000247e-05, 7.552799999999832e-05, 7.588899999999912e-05, 7.579200000000161e-05, 7.544500000000037e-05, 7.529200000000111e-05, 7.555599999999746e-05, 7.540300000000166e-05, 7.579199999999814e-05, 7.565299999999844e-05, 7.505500000000095e-05, 7.572200000000029e-05, 7.520800000000022e-05, 7.5763999999999e-05, 7.527799999999807e-05, 7.574999999999943e-05, 7.572200000000029e-05, 7.593099999999783e-05, 7.529200000000111e-05, 7.554200000000136e-05, 7.551399999999875e-05, 7.515299999999794e-05, 7.570900000000019e-05, 7.529100000000163e-05, 7.520800000000022e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 10:57:22.718" endtime="20201030 10:57:22.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.713" endtime="20201030 10:57:22.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.726" endtime="20201030 10:57:22.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.724" endtime="20201030 10:57:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.723" endtime="20201030 10:57:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.358" endtime="20201030 10:57:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.358" endtime="20201030 10:57:22.746"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.755" endtime="20201030 10:57:22.775"></status>
</kw>
<msg timestamp="20201030 10:57:22.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.754" endtime="20201030 10:57:22.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.777" endtime="20201030 10:57:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.780" endtime="20201030 10:57:22.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.751" endtime="20201030 10:57:22.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.749" endtime="20201030 10:57:22.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.789" endtime="20201030 10:57:23.075"></status>
</kw>
<msg timestamp="20201030 10:57:23.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.787" endtime="20201030 10:57:23.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.079" endtime="20201030 10:57:23.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.088" endtime="20201030 10:57:23.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.785" endtime="20201030 10:57:23.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.783" endtime="20201030 10:57:23.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.094" level="INFO">${RESULT} = [{'diff': 8.091600000000032e-05}, {'diff': 8.109699999999873e-05}, {'diff': 7.616699999999851e-05}, {'diff': 7.641700000000223e-05}, {'diff': 7.60969999999972e-05}, {'diff': 7.661100000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:23.091" endtime="20201030 10:57:23.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:23.100" level="INFO">${ACCURACY} = {'diff': [8.091600000000032e-05, 8.109699999999873e-05, 7.616699999999851e-05, 7.641700000000223e-05, 7.60969999999972e-05, 7.661100000000073e-05, 7.6764e-05, 7.633300000000134e-05, 7.645899999999747e...</msg>
<status status="PASS" starttime="20201030 10:57:23.095" endtime="20201030 10:57:23.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.104" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:57:23.103" endtime="20201030 10:57:23.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.107" level="INFO">VALUE: [8.091600000000032e-05, 8.109699999999873e-05, 7.616699999999851e-05, 7.641700000000223e-05, 7.60969999999972e-05, 7.661100000000073e-05, 7.6764e-05, 7.633300000000134e-05, 7.645899999999747e-05, 7.598699999999958e-05, 7.691699999999926e-05, 7.692999999999936e-05, 7.684699999999794e-05, 7.661100000000073e-05, 7.667999999999911e-05, 7.624999999999993e-05, 7.600000000000315e-05, 7.686100000000098e-05, 7.624999999999993e-05, 7.6764e-05, 7.629199999999864e-05, 7.627799999999907e-05, 7.598600000000011e-05, 7.62769999999996e-05, 7.661100000000073e-05, 7.644500000000137e-05, 7.651399999999975e-05, 7.6764e-05, 7.597200000000054e-05, 7.598600000000011e-05, 7.618000000000208e-05, 7.652799999999932e-05, 7.661100000000073e-05, 7.624999999999993e-05, 7.738900000000062e-05, 7.647200000000104e-05, 7.622200000000079e-05, 7.659800000000064e-05, 7.666599999999954e-05, 7.673600000000086e-05, 7.618000000000208e-05, 7.691599999999979e-05, 7.683299999999837e-05, 7.655599999999846e-05, 7.615300000000241e-05, 7.632000000000125e-05, 7.655600000000193e-05, 7.605600000000143e-05, 7.605599999999796e-05, 7.597200000000054e-05]</msg>
<status status="PASS" starttime="20201030 10:57:23.105" endtime="20201030 10:57:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.101" endtime="20201030 10:57:23.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.112" endtime="20201030 10:57:23.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.110" endtime="20201030 10:57:23.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.109" endtime="20201030 10:57:23.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.747" endtime="20201030 10:57:23.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.747" endtime="20201030 10:57:23.133"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.142" endtime="20201030 10:57:23.162"></status>
</kw>
<msg timestamp="20201030 10:57:23.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.140" endtime="20201030 10:57:23.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.164" endtime="20201030 10:57:23.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.166" endtime="20201030 10:57:23.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.137" endtime="20201030 10:57:23.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.135" endtime="20201030 10:57:23.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.176" endtime="20201030 10:57:23.465"></status>
</kw>
<msg timestamp="20201030 10:57:23.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.174" endtime="20201030 10:57:23.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.470" endtime="20201030 10:57:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.478" endtime="20201030 10:57:23.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.171" endtime="20201030 10:57:23.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.169" endtime="20201030 10:57:23.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.485" level="INFO">${RESULT} = [{'diff': 8.154199999999695e-05}, {'diff': 8.136099999999855e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.832000000000325e-05}, {'diff': 7.774999999999796e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:23.482" endtime="20201030 10:57:23.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:23.489" level="INFO">${ACCURACY} = {'diff': [8.154199999999695e-05, 8.136099999999855e-05, 7.763900000000087e-05, 7.704199999999939e-05, 7.832000000000325e-05, 7.774999999999796e-05, 7.719399999999918e-05, 7.783399999999885e-05, 7.7888...</msg>
<status status="PASS" starttime="20201030 10:57:23.486" endtime="20201030 10:57:23.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.494" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:57:23.493" endtime="20201030 10:57:23.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.496" level="INFO">VALUE: [8.154199999999695e-05, 8.136099999999855e-05, 7.763900000000087e-05, 7.704199999999939e-05, 7.832000000000325e-05, 7.774999999999796e-05, 7.719399999999918e-05, 7.783399999999885e-05, 7.788899999999765e-05, 7.729100000000017e-05, 7.751300000000128e-05, 7.73189999999993e-05, 7.83190000000003e-05, 7.786099999999851e-05, 7.7764000000001e-05, 7.745800000000247e-05, 7.74030000000002e-05, 7.765300000000044e-05, 7.748600000000161e-05, 7.730600000000268e-05, 7.719400000000265e-05, 7.711099999999776e-05, 7.699999999999721e-05, 7.786099999999851e-05, 7.697200000000154e-05, 7.742999999999986e-05, 7.701400000000025e-05, 7.751400000000075e-05, 7.755599999999946e-05, 7.748600000000161e-05, 7.71250000000008e-05, 7.836100000000248e-05, 7.719499999999865e-05, 7.791600000000079e-05, 7.702799999999982e-05, 7.752800000000032e-05, 7.715200000000047e-05, 7.834799999999892e-05, 7.748600000000161e-05, 7.71250000000008e-05, 7.725000000000093e-05, 7.79030000000007e-05, 7.791700000000026e-05, 7.725000000000093e-05, 7.836099999999901e-05, 7.72640000000005e-05, 7.711100000000123e-05, 7.769399999999968e-05, 7.70969999999982e-05, 7.736199999999749e-05]</msg>
<status status="PASS" starttime="20201030 10:57:23.495" endtime="20201030 10:57:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.490" endtime="20201030 10:57:23.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.502" endtime="20201030 10:57:23.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.500" endtime="20201030 10:57:23.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.499" endtime="20201030 10:57:23.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.134" endtime="20201030 10:57:23.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.133" endtime="20201030 10:57:23.522"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.532" endtime="20201030 10:57:23.552"></status>
</kw>
<msg timestamp="20201030 10:57:23.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.530" endtime="20201030 10:57:23.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.554" endtime="20201030 10:57:23.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.556" endtime="20201030 10:57:23.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.527" endtime="20201030 10:57:23.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.525" endtime="20201030 10:57:23.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.566" endtime="20201030 10:57:23.851"></status>
</kw>
<msg timestamp="20201030 10:57:23.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021222236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.564" endtime="20201030 10:57:23.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021222236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.855" endtime="20201030 10:57:23.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.864" endtime="20201030 10:57:23.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.562" endtime="20201030 10:57:23.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.560" endtime="20201030 10:57:23.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.871" level="INFO">${RESULT} = [{'diff': 8.277799999999863e-05}, {'diff': 8.318099999999815e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.873599999999939e-05}, {'diff': 7.829200000000064e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:23.867" endtime="20201030 10:57:23.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:23.875" level="INFO">${ACCURACY} = {'diff': [8.277799999999863e-05, 8.318099999999815e-05, 7.802800000000082e-05, 7.861099999999926e-05, 7.873599999999939e-05, 7.829200000000064e-05, 7.854200000000089e-05, 7.8458e-05, 7.822199999999932...</msg>
<status status="PASS" starttime="20201030 10:57:23.872" endtime="20201030 10:57:23.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.880" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:57:23.879" endtime="20201030 10:57:23.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.882" level="INFO">VALUE: [8.277799999999863e-05, 8.318099999999815e-05, 7.802800000000082e-05, 7.861099999999926e-05, 7.873599999999939e-05, 7.829200000000064e-05, 7.854200000000089e-05, 7.8458e-05, 7.822199999999932e-05, 7.802800000000082e-05, 7.806900000000006e-05, 7.823599999999889e-05, 7.843000000000086e-05, 7.820799999999975e-05, 7.844400000000043e-05, 7.822199999999932e-05, 7.874999999999896e-05, 7.887500000000255e-05, 7.827800000000107e-05, 7.811200000000171e-05, 7.845899999999947e-05, 7.869400000000068e-05, 7.883300000000037e-05, 7.886100000000298e-05, 7.806900000000006e-05, 7.83190000000003e-05, 7.934700000000044e-05, 7.92779999999986e-05, 7.855600000000046e-05, 7.879200000000114e-05, 7.869400000000068e-05, 7.829200000000064e-05, 7.84449999999999e-05, 7.805599999999996e-05, 7.880500000000124e-05, 7.805500000000049e-05, 7.858300000000012e-05, 7.8458e-05, 7.88190000000008e-05, 7.851399999999828e-05, 7.795800000000297e-05, 7.816699999999704e-05, 7.937499999999958e-05, 7.85969999999997e-05, 7.89030000000017e-05, 7.934699999999698e-05, 7.845899999999947e-05, 7.830499999999727e-05, 7.82640000000015e-05, 7.855500000000099e-05]</msg>
<status status="PASS" starttime="20201030 10:57:23.881" endtime="20201030 10:57:23.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.876" endtime="20201030 10:57:23.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.888" endtime="20201030 10:57:23.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.887" endtime="20201030 10:57:23.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.885" endtime="20201030 10:57:23.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.523" endtime="20201030 10:57:23.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.523" endtime="20201030 10:57:23.909"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.918" endtime="20201030 10:57:23.939"></status>
</kw>
<msg timestamp="20201030 10:57:23.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.916" endtime="20201030 10:57:23.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.940" endtime="20201030 10:57:23.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.943" endtime="20201030 10:57:23.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.914" endtime="20201030 10:57:23.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.911" endtime="20201030 10:57:23.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.952" endtime="20201030 10:57:24.238"></status>
</kw>
<msg timestamp="20201030 10:57:24.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020059306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.951" endtime="20201030 10:57:24.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020059306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.242" endtime="20201030 10:57:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.251" endtime="20201030 10:57:24.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.948" endtime="20201030 10:57:24.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.946" endtime="20201030 10:57:24.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.258" level="INFO">${RESULT} = [{'diff': 8.387500000000062e-05}, {'diff': 8.388900000000019e-05}, {'diff': 7.916599999999857e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.977699999999963e-05}, {'diff': 7.976399999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:24.254" endtime="20201030 10:57:24.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:24.263" level="INFO">${ACCURACY} = {'diff': [8.387500000000062e-05, 8.388900000000019e-05, 7.916599999999857e-05, 7.911099999999976e-05, 7.977699999999963e-05, 7.976399999999953e-05, 7.994400000000193e-05, 7.898599999999964e-05, 7.9263...</msg>
<status status="PASS" starttime="20201030 10:57:24.259" endtime="20201030 10:57:24.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.267" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:57:24.266" endtime="20201030 10:57:24.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.270" level="INFO">VALUE: [8.387500000000062e-05, 8.388900000000019e-05, 7.916599999999857e-05, 7.911099999999976e-05, 7.977699999999963e-05, 7.976399999999953e-05, 7.994400000000193e-05, 7.898599999999964e-05, 7.926399999999903e-05, 7.918099999999761e-05, 7.959699999999723e-05, 7.923599999999989e-05, 8.033400000000135e-05, 7.907000000000053e-05, 7.97779999999991e-05, 7.954099999999895e-05, 7.947300000000004e-05, 7.968000000000211e-05, 7.902700000000235e-05, 7.990299999999922e-05, 7.906899999999759e-05, 7.930600000000121e-05, 7.958299999999766e-05, 7.986100000000051e-05, 8.036100000000101e-05, 7.988899999999965e-05, 8.034800000000092e-05, 7.970900000000072e-05, 7.97230000000003e-05, 7.965200000000297e-05, 7.984700000000094e-05, 7.90970000000002e-05, 7.984700000000094e-05, 7.92779999999986e-05, 7.923599999999989e-05, 7.968100000000158e-05, 8.03329999999984e-05, 7.980600000000171e-05, 7.918099999999761e-05, 7.952799999999885e-05, 8.033400000000135e-05, 7.984800000000042e-05, 7.924999999999946e-05, 7.959800000000017e-05, 7.961100000000026e-05, 7.966599999999907e-05, 7.91389999999989e-05, 7.965300000000244e-05, 7.902799999999835e-05, 7.922200000000032e-05]</msg>
<status status="PASS" starttime="20201030 10:57:24.269" endtime="20201030 10:57:24.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.264" endtime="20201030 10:57:24.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.275" endtime="20201030 10:57:24.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.274" endtime="20201030 10:57:24.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.273" endtime="20201030 10:57:24.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.910" endtime="20201030 10:57:24.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.909" endtime="20201030 10:57:24.296"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.305" endtime="20201030 10:57:24.325"></status>
</kw>
<msg timestamp="20201030 10:57:24.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.304" endtime="20201030 10:57:24.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.327" endtime="20201030 10:57:24.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.330" endtime="20201030 10:57:24.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.301" endtime="20201030 10:57:24.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.299" endtime="20201030 10:57:24.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.339" endtime="20201030 10:57:24.626"></status>
</kw>
<msg timestamp="20201030 10:57:24.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.337" endtime="20201030 10:57:24.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.630" endtime="20201030 10:57:24.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.639" endtime="20201030 10:57:24.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.335" endtime="20201030 10:57:24.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.333" endtime="20201030 10:57:24.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.646" level="INFO">${RESULT} = [{'diff': 8.448600000000167e-05}, {'diff': 8.452800000000038e-05}, {'diff': 8.054199999999942e-05}, {'diff': 8.090199999999728e-05}, {'diff': 8.056899999999909e-05}, {'diff': 8.087500000000108e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:24.642" endtime="20201030 10:57:24.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:24.650" level="INFO">${ACCURACY} = {'diff': [8.448600000000167e-05, 8.452800000000038e-05, 8.054199999999942e-05, 8.090199999999728e-05, 8.056899999999909e-05, 8.087500000000108e-05, 8.047200000000157e-05, 8.086100000000151e-05, 8.0180...</msg>
<status status="PASS" starttime="20201030 10:57:24.647" endtime="20201030 10:57:24.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.655" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:57:24.653" endtime="20201030 10:57:24.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.657" level="INFO">VALUE: [8.448600000000167e-05, 8.452800000000038e-05, 8.054199999999942e-05, 8.090199999999728e-05, 8.056899999999909e-05, 8.087500000000108e-05, 8.047200000000157e-05, 8.086100000000151e-05, 8.018099999999861e-05, 8.09169999999998e-05, 8.055600000000246e-05, 8.008300000000163e-05, 8.018100000000208e-05, 8.073599999999792e-05, 8.008399999999763e-05, 8.004199999999892e-05, 8.073600000000139e-05, 8.017999999999914e-05, 8.052700000000038e-05, 8.079099999999673e-05, 8.004100000000292e-05, 8.062500000000083e-05, 8.04450000000019e-05, 8.056899999999909e-05, 8.073600000000139e-05, 8.008299999999816e-05, 8.048599999999767e-05, 8.015299999999947e-05, 8.005599999999849e-05, 8.084800000000142e-05, 8.084800000000142e-05, 8.023599999999742e-05, 8.086100000000151e-05, 8.023600000000089e-05, 8.008300000000163e-05, 7.998600000000064e-05, 8.029199999999917e-05, 8.081899999999934e-05, 8.029199999999917e-05, 8.066699999999954e-05, 8.066699999999954e-05, 8.016700000000251e-05, 8.07369999999974e-05, 8.079199999999967e-05, 8.054099999999995e-05, 8.091600000000032e-05, 8.043000000000286e-05, 8.137500000000158e-05, 8.04169999999993e-05, 8.083300000000238e-05]</msg>
<status status="PASS" starttime="20201030 10:57:24.656" endtime="20201030 10:57:24.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.651" endtime="20201030 10:57:24.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.662" endtime="20201030 10:57:24.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.661" endtime="20201030 10:57:24.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.660" endtime="20201030 10:57:24.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.297" endtime="20201030 10:57:24.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.297" endtime="20201030 10:57:24.683"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.692" endtime="20201030 10:57:24.713"></status>
</kw>
<msg timestamp="20201030 10:57:24.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.691" endtime="20201030 10:57:24.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.715" endtime="20201030 10:57:24.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.717" endtime="20201030 10:57:24.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.688" endtime="20201030 10:57:24.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.686" endtime="20201030 10:57:24.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.727" endtime="20201030 10:57:25.014"></status>
</kw>
<msg timestamp="20201030 10:57:25.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.725" endtime="20201030 10:57:25.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.018" endtime="20201030 10:57:25.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.026" endtime="20201030 10:57:25.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.723" endtime="20201030 10:57:25.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.721" endtime="20201030 10:57:25.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.033" level="INFO">${RESULT} = [{'diff': 8.54310000000004e-05}, {'diff': 8.670900000000079e-05}, {'diff': 8.168000000000064e-05}, {'diff': 8.099999999999774e-05}, {'diff': 8.177699999999816e-05}, {'diff': 8.15970000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:25.030" endtime="20201030 10:57:25.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:25.037" level="INFO">${ACCURACY} = {'diff': [8.54310000000004e-05, 8.670900000000079e-05, 8.168000000000064e-05, 8.099999999999774e-05, 8.177699999999816e-05, 8.15970000000027e-05, 8.154100000000095e-05, 8.104199999999992e-05, 8.186100...</msg>
<status status="PASS" starttime="20201030 10:57:25.034" endtime="20201030 10:57:25.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.042" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:57:25.041" endtime="20201030 10:57:25.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.045" level="INFO">VALUE: [8.54310000000004e-05, 8.670900000000079e-05, 8.168000000000064e-05, 8.099999999999774e-05, 8.177699999999816e-05, 8.15970000000027e-05, 8.154100000000095e-05, 8.104199999999992e-05, 8.186100000000252e-05, 8.148600000000214e-05, 8.166700000000054e-05, 8.113799999999796e-05, 8.163899999999794e-05, 8.119500000000265e-05, 8.101399999999731e-05, 8.176400000000153e-05, 8.161200000000174e-05, 8.11659999999971e-05, 8.134700000000245e-05, 8.180500000000077e-05, 8.14719999999991e-05, 8.10970000000022e-05, 8.236099999999955e-05, 8.234699999999998e-05, 8.10970000000022e-05, 8.161100000000227e-05, 8.104199999999992e-05, 8.172199999999935e-05, 8.15979999999987e-05, 8.143099999999986e-05, 8.158299999999966e-05, 8.169399999999674e-05, 8.198599999999917e-05, 8.12910000000007e-05, 8.140300000000072e-05, 8.108299999999916e-05, 8.11390000000009e-05, 8.106999999999906e-05, 8.172200000000282e-05, 8.123600000000189e-05, 8.234699999999998e-05, 8.155599999999999e-05, 8.148599999999867e-05, 8.104100000000045e-05, 8.162500000000183e-05, 8.190300000000122e-05, 8.104199999999992e-05, 8.098599999999817e-05, 8.138900000000115e-05, 8.106999999999906e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.043" endtime="20201030 10:57:25.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.038" endtime="20201030 10:57:25.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.051" endtime="20201030 10:57:25.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.049" endtime="20201030 10:57:25.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.048" endtime="20201030 10:57:25.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.684" endtime="20201030 10:57:25.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.683" endtime="20201030 10:57:25.071"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.080" endtime="20201030 10:57:25.101"></status>
</kw>
<msg timestamp="20201030 10:57:25.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.079" endtime="20201030 10:57:25.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.103" endtime="20201030 10:57:25.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.105" endtime="20201030 10:57:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.076" endtime="20201030 10:57:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.074" endtime="20201030 10:57:25.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.114" endtime="20201030 10:57:25.400"></status>
</kw>
<msg timestamp="20201030 10:57:25.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.113" endtime="20201030 10:57:25.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.404" endtime="20201030 10:57:25.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.412" endtime="20201030 10:57:25.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.110" endtime="20201030 10:57:25.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.108" endtime="20201030 10:57:25.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.419" level="INFO">${RESULT} = [{'diff': 8.700000000000027e-05}, {'diff': 8.665299999999904e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.213899999999844e-05}, {'diff': 8.24720000000001e-05}, {'diff': 8.336099999999708e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:25.416" endtime="20201030 10:57:25.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:25.424" level="INFO">${ACCURACY} = {'diff': [8.700000000000027e-05, 8.665299999999904e-05, 8.273599999999992e-05, 8.213899999999844e-05, 8.24720000000001e-05, 8.336099999999708e-05, 8.341699999999883e-05, 8.294500000000093e-05, 8.24440...</msg>
<status status="PASS" starttime="20201030 10:57:25.420" endtime="20201030 10:57:25.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.429" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:57:25.428" endtime="20201030 10:57:25.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.431" level="INFO">VALUE: [8.700000000000027e-05, 8.665299999999904e-05, 8.273599999999992e-05, 8.213899999999844e-05, 8.24720000000001e-05, 8.336099999999708e-05, 8.341699999999883e-05, 8.294500000000093e-05, 8.244400000000096e-05, 8.212499999999887e-05, 8.216700000000104e-05, 8.222199999999985e-05, 8.265300000000197e-05, 8.212499999999887e-05, 8.212499999999887e-05, 8.287499999999962e-05, 8.255500000000152e-05, 8.226399999999856e-05, 8.272199999999688e-05, 8.281899999999787e-05, 8.195800000000003e-05, 8.282000000000081e-05, 8.205600000000049e-05, 8.201400000000178e-05, 8.254099999999848e-05, 8.216700000000104e-05, 8.212499999999887e-05, 8.219500000000018e-05, 8.337500000000012e-05, 8.204100000000145e-05, 8.290299999999876e-05, 8.293000000000189e-05, 8.24720000000001e-05, 8.233399999999988e-05, 8.272200000000035e-05, 8.26529999999985e-05, 8.197200000000307e-05, 8.336100000000055e-05, 8.336100000000055e-05, 8.24170000000013e-05, 8.19719999999996e-05, 8.205600000000049e-05, 8.270900000000025e-05, 8.298600000000017e-05, 8.276299999999959e-05, 8.251399999999881e-05, 8.254100000000195e-05, 8.24170000000013e-05, 8.280600000000124e-05, 8.282000000000081e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.430" endtime="20201030 10:57:25.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.425" endtime="20201030 10:57:25.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.437" endtime="20201030 10:57:25.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.435" endtime="20201030 10:57:25.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.434" endtime="20201030 10:57:25.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.072" endtime="20201030 10:57:25.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.072" endtime="20201030 10:57:25.457"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.466" endtime="20201030 10:57:25.488"></status>
</kw>
<msg timestamp="20201030 10:57:25.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.465" endtime="20201030 10:57:25.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.489" endtime="20201030 10:57:25.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.492" endtime="20201030 10:57:25.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.462" endtime="20201030 10:57:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.460" endtime="20201030 10:57:25.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.501" endtime="20201030 10:57:25.789"></status>
</kw>
<msg timestamp="20201030 10:57:25.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.500" endtime="20201030 10:57:25.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020364236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.793" endtime="20201030 10:57:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.802" endtime="20201030 10:57:25.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.497" endtime="20201030 10:57:25.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.495" endtime="20201030 10:57:25.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.808" level="INFO">${RESULT} = [{'diff': 8.754199999999948e-05}, {'diff': 8.794399999999952e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.37919999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:25.805" endtime="20201030 10:57:25.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:25.813" level="INFO">${ACCURACY} = {'diff': [8.754199999999948e-05, 8.794399999999952e-05, 8.436099999999808e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.37919999999992e-05, 8.319400000000171e-05, 8.358400000000113e-05, 8.348600...</msg>
<status status="PASS" starttime="20201030 10:57:25.810" endtime="20201030 10:57:25.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.817" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:57:25.816" endtime="20201030 10:57:25.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.820" level="INFO">VALUE: [8.754199999999948e-05, 8.794399999999952e-05, 8.436099999999808e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.37919999999992e-05, 8.319400000000171e-05, 8.358400000000113e-05, 8.348600000000067e-05, 8.299999999999974e-05, 8.358299999999819e-05, 8.338899999999969e-05, 8.322199999999738e-05, 8.352799999999938e-05, 8.368099999999865e-05, 8.372199999999788e-05, 8.372200000000135e-05, 8.376400000000006e-05, 8.356999999999809e-05, 8.322300000000032e-05, 8.433400000000188e-05, 8.375000000000049e-05, 8.317999999999867e-05, 8.29720000000006e-05, 8.323600000000042e-05, 8.379099999999973e-05, 8.343000000000239e-05, 8.36110000000008e-05, 8.359699999999776e-05, 8.322199999999738e-05, 8.352800000000285e-05, 8.348700000000014e-05, 8.32919999999987e-05, 8.372299999999736e-05, 8.356999999999809e-05, 8.39720000000016e-05, 8.390199999999681e-05, 8.369399999999874e-05, 8.323600000000042e-05, 8.32780000000026e-05, 8.318100000000161e-05, 8.32919999999987e-05, 8.34170000000023e-05, 8.355499999999905e-05, 8.302800000000235e-05, 8.370900000000125e-05, 8.349999999999677e-05, 8.387500000000062e-05, 8.301399999999931e-05, 8.319400000000171e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.818" endtime="20201030 10:57:25.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.814" endtime="20201030 10:57:25.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.825" endtime="20201030 10:57:25.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.824" endtime="20201030 10:57:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.822" endtime="20201030 10:57:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.458" endtime="20201030 10:57:25.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.458" endtime="20201030 10:57:25.846"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.855" endtime="20201030 10:57:25.876"></status>
</kw>
<msg timestamp="20201030 10:57:25.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.853" endtime="20201030 10:57:25.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.878" endtime="20201030 10:57:25.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.881" endtime="20201030 10:57:25.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.851" endtime="20201030 10:57:25.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.848" endtime="20201030 10:57:25.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.890" endtime="20201030 10:57:26.174"></status>
</kw>
<msg timestamp="20201030 10:57:26.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02101375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021102903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:25.888" endtime="20201030 10:57:26.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02101375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021102903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:26.178" endtime="20201030 10:57:26.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.187" endtime="20201030 10:57:26.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.886" endtime="20201030 10:57:26.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.884" endtime="20201030 10:57:26.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.194" level="INFO">${RESULT} = [{'diff': 8.915299999999807e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.400000000000074e-05}, {'diff': 8.529100000000123e-05}, {'diff': 8.465200000000103e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:26.190" endtime="20201030 10:57:26.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.198" level="INFO">${ACCURACY} = {'diff': [8.915299999999807e-05, 8.973599999999998e-05, 8.401400000000031e-05, 8.400000000000074e-05, 8.529100000000123e-05, 8.465200000000103e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.4750...</msg>
<status status="PASS" starttime="20201030 10:57:26.194" endtime="20201030 10:57:26.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.202" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.201" endtime="20201030 10:57:26.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.205" level="INFO">VALUE: [8.915299999999807e-05, 8.973599999999998e-05, 8.401400000000031e-05, 8.400000000000074e-05, 8.529100000000123e-05, 8.465200000000103e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.475000000000149e-05, 8.468100000000311e-05, 8.416699999999958e-05, 8.448600000000167e-05, 8.538799999999874e-05, 8.466700000000008e-05, 8.536199999999855e-05, 8.454199999999995e-05, 8.397300000000107e-05, 8.451399999999734e-05, 8.473600000000192e-05, 8.405499999999955e-05, 8.418000000000314e-05, 8.537499999999865e-05, 8.4846999999999e-05, 8.419399999999924e-05, 8.473599999999845e-05, 8.418099999999915e-05, 8.491700000000033e-05, 8.411099999999783e-05, 8.454099999999701e-05, 8.472199999999888e-05, 8.53469999999995e-05, 8.423599999999795e-05, 8.490200000000128e-05, 8.437500000000112e-05, 8.404099999999998e-05, 8.494399999999999e-05, 8.45980000000017e-05, 8.484700000000248e-05, 8.481999999999934e-05, 8.53469999999995e-05, 8.534799999999898e-05, 8.455600000000299e-05, 8.483299999999944e-05, 8.53469999999995e-05, 8.452800000000038e-05, 8.494399999999999e-05, 8.409700000000173e-05, 8.41660000000001e-05, 8.450000000000124e-05, 8.405599999999902e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.204" endtime="20201030 10:57:26.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.199" endtime="20201030 10:57:26.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.211" endtime="20201030 10:57:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.209" endtime="20201030 10:57:26.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.208" endtime="20201030 10:57:26.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.847" endtime="20201030 10:57:26.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.846" endtime="20201030 10:57:26.232"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.241" endtime="20201030 10:57:26.262"></status>
</kw>
<msg timestamp="20201030 10:57:26.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.239" endtime="20201030 10:57:26.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.263" endtime="20201030 10:57:26.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.266" endtime="20201030 10:57:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.236" endtime="20201030 10:57:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.234" endtime="20201030 10:57:26.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.275" endtime="20201030 10:57:26.561"></status>
</kw>
<msg timestamp="20201030 10:57:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.274" endtime="20201030 10:57:26.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.565" endtime="20201030 10:57:26.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.574" endtime="20201030 10:57:26.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.271" endtime="20201030 10:57:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.269" endtime="20201030 10:57:26.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.580" level="INFO">${RESULT} = [{'diff': 8.947200000000016e-05}, {'diff': 8.983300000000097e-05}, {'diff': 8.570799999999684e-05}, {'diff': 8.54859999999992e-05}, {'diff': 8.552799999999791e-05}, {'diff': 8.52920000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:26.577" endtime="20201030 10:57:26.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.586" level="INFO">${ACCURACY} = {'diff': [8.947200000000016e-05, 8.983300000000097e-05, 8.570799999999684e-05, 8.54859999999992e-05, 8.552799999999791e-05, 8.52920000000007e-05, 8.522199999999938e-05, 8.541700000000083e-05, 8.547199...</msg>
<status status="PASS" starttime="20201030 10:57:26.582" endtime="20201030 10:57:26.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.590" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.589" endtime="20201030 10:57:26.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.593" level="INFO">VALUE: [8.947200000000016e-05, 8.983300000000097e-05, 8.570799999999684e-05, 8.54859999999992e-05, 8.552799999999791e-05, 8.52920000000007e-05, 8.522199999999938e-05, 8.541700000000083e-05, 8.547199999999963e-05, 8.527799999999766e-05, 8.502800000000088e-05, 8.509700000000273e-05, 8.563900000000194e-05, 8.544400000000049e-05, 8.499999999999827e-05, 8.63189999999979e-05, 8.541700000000083e-05, 8.590300000000176e-05, 8.513900000000144e-05, 8.636100000000008e-05, 8.56530000000015e-05, 8.508299999999969e-05, 8.588899999999872e-05, 8.516700000000058e-05, 8.538900000000169e-05, 8.565200000000203e-05, 8.522199999999938e-05, 8.529099999999776e-05, 8.573599999999945e-05, 8.536200000000202e-05, 8.511099999999883e-05, 8.56530000000015e-05, 8.523600000000242e-05, 8.554100000000148e-05, 8.49859999999987e-05, 8.568100000000065e-05, 8.548699999999868e-05, 8.570899999999979e-05, 8.522300000000232e-05, 8.551300000000234e-05, 8.51249999999984e-05, 8.518000000000067e-05, 8.587499999999915e-05, 8.63470000000005e-05, 8.504200000000045e-05, 8.566700000000108e-05, 8.53059999999968e-05, 8.558300000000019e-05, 8.63470000000005e-05, 8.558300000000019e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.592" endtime="20201030 10:57:26.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.587" endtime="20201030 10:57:26.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.598" endtime="20201030 10:57:26.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.597" endtime="20201030 10:57:26.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.595" endtime="20201030 10:57:26.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.233" endtime="20201030 10:57:26.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.232" endtime="20201030 10:57:26.619"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.628" endtime="20201030 10:57:26.648"></status>
</kw>
<msg timestamp="20201030 10:57:26.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.626" endtime="20201030 10:57:26.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.650" endtime="20201030 10:57:26.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.652" endtime="20201030 10:57:26.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.624" endtime="20201030 10:57:26.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.622" endtime="20201030 10:57:26.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.662" endtime="20201030 10:57:26.951"></status>
</kw>
<msg timestamp="20201030 10:57:26.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02014425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:26.660" endtime="20201030 10:57:26.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02014425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:26.956" endtime="20201030 10:57:26.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.964" endtime="20201030 10:57:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.658" endtime="20201030 10:57:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.656" endtime="20201030 10:57:26.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.971" level="INFO">${RESULT} = [{'diff': 9.0332999999998e-05}, {'diff': 9.095900000000157e-05}, {'diff': 8.59729999999996e-05}, {'diff': 8.599999999999927e-05}, {'diff': 8.649999999999977e-05}, {'diff': 8.623599999999995e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:26.967" endtime="20201030 10:57:26.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.975" level="INFO">${ACCURACY} = {'diff': [9.0332999999998e-05, 9.095900000000157e-05, 8.59729999999996e-05, 8.599999999999927e-05, 8.649999999999977e-05, 8.623599999999995e-05, 8.676300000000012e-05, 8.66249999999999e-05, 8.73189999...</msg>
<status status="PASS" starttime="20201030 10:57:26.972" endtime="20201030 10:57:26.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.980" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.979" endtime="20201030 10:57:26.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.982" level="INFO">VALUE: [9.0332999999998e-05, 9.095900000000157e-05, 8.59729999999996e-05, 8.599999999999927e-05, 8.649999999999977e-05, 8.623599999999995e-05, 8.676300000000012e-05, 8.66249999999999e-05, 8.73189999999989e-05, 8.622200000000038e-05, 8.673600000000045e-05, 8.659700000000076e-05, 8.690300000000276e-05, 8.641700000000183e-05, 8.611099999999983e-05, 8.619499999999725e-05, 8.645800000000106e-05, 8.658399999999719e-05, 8.665199999999956e-05, 8.613799999999949e-05, 8.611099999999983e-05, 8.68059999999983e-05, 8.656900000000162e-05, 8.687500000000015e-05, 8.622200000000038e-05, 8.684699999999754e-05, 8.661100000000033e-05, 8.687500000000015e-05, 8.683300000000144e-05, 8.68189999999984e-05, 8.641700000000183e-05, 8.66799999999987e-05, 8.594400000000099e-05, 8.670800000000131e-05, 8.597200000000013e-05, 8.661100000000033e-05, 8.726400000000009e-05, 8.615199999999906e-05, 8.633400000000041e-05, 8.688899999999972e-05, 8.66249999999999e-05, 8.59859999999997e-05, 8.691699999999886e-05, 8.672199999999741e-05, 8.608300000000069e-05, 8.73470000000015e-05, 8.66249999999999e-05, 8.690299999999929e-05, 8.597199999999666e-05, 8.655600000000152e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.981" endtime="20201030 10:57:28.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.976" endtime="20201030 10:57:28.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.860" endtime="20201030 10:57:28.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.857" endtime="20201030 10:57:28.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.854" endtime="20201030 10:57:28.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.620" endtime="20201030 10:57:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.619" endtime="20201030 10:57:28.885"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.904" endtime="20201030 10:57:28.933"></status>
</kw>
<msg timestamp="20201030 10:57:28.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.901" endtime="20201030 10:57:28.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.936" endtime="20201030 10:57:28.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.942" endtime="20201030 10:57:28.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.895" endtime="20201030 10:57:28.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.891" endtime="20201030 10:57:28.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.962" endtime="20201030 10:57:29.249"></status>
</kw>
<msg timestamp="20201030 10:57:29.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037315542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.958" endtime="20201030 10:57:29.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037315542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.254" endtime="20201030 10:57:29.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.262" endtime="20201030 10:57:29.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.953" endtime="20201030 10:57:29.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.949" endtime="20201030 10:57:29.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.269" level="INFO">${RESULT} = [{'diff': 9.305500000000161e-05}, {'diff': 9.219399999999683e-05}, {'diff': 8.718099999999868e-05}, {'diff': 8.834700000000251e-05}, {'diff': 8.78199999999954e-05}, {'diff': 8.761100000000133e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:29.266" endtime="20201030 10:57:29.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:29.273" level="INFO">${ACCURACY} = {'diff': [9.305500000000161e-05, 9.219399999999683e-05, 8.718099999999868e-05, 8.834700000000251e-05, 8.78199999999954e-05, 8.761100000000133e-05, 8.788900000000072e-05, 8.69999999999968e-05, 8.729200...</msg>
<status status="PASS" starttime="20201030 10:57:29.270" endtime="20201030 10:57:29.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.278" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:57:29.277" endtime="20201030 10:57:29.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.280" level="INFO">VALUE: [9.305500000000161e-05, 9.219399999999683e-05, 8.718099999999868e-05, 8.834700000000251e-05, 8.78199999999954e-05, 8.761100000000133e-05, 8.788900000000072e-05, 8.69999999999968e-05, 8.72920000000027e-05, 8.698600000000417e-05, 8.773599999999798e-05, 8.744399999999902e-05, 8.770799999999884e-05, 8.776400000000406e-05, 8.706900000000212e-05, 8.69720000000046e-05, 8.704199999999551e-05, 8.777799999999669e-05, 8.720799999999834e-05, 8.72920000000027e-05, 8.750000000000424e-05, 8.716700000000605e-05, 8.751399999999687e-05, 8.76799999999997e-05, 8.779099999999679e-05, 8.723600000000442e-05, 8.723600000000442e-05, 8.709700000000126e-05, 8.71250000000004e-05, 8.786100000000158e-05, 8.705600000000202e-05, 8.765300000000004e-05, 8.69999999999968e-05, 8.71120000000003e-05, 8.779100000000373e-05, 8.766600000000013e-05, 8.836099999999514e-05, 8.766600000000013e-05, 8.705500000000255e-05, 8.704199999999551e-05, 8.787500000000115e-05, 8.740299999999979e-05, 8.722200000000485e-05, 8.765300000000004e-05, 8.720799999999834e-05, 8.76669999999996e-05, 8.773599999999798e-05, 8.700000000000374e-05, 8.697199999999766e-05, 8.766600000000013e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.279" endtime="20201030 10:57:29.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.274" endtime="20201030 10:57:29.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.286" endtime="20201030 10:57:29.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.285" endtime="20201030 10:57:29.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.284" endtime="20201030 10:57:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.887" endtime="20201030 10:57:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.886" endtime="20201030 10:57:29.307"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.316" endtime="20201030 10:57:29.336"></status>
</kw>
<msg timestamp="20201030 10:57:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.315" endtime="20201030 10:57:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.338" endtime="20201030 10:57:29.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.340" endtime="20201030 10:57:29.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.312" endtime="20201030 10:57:29.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.310" endtime="20201030 10:57:29.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.350" endtime="20201030 10:57:29.636"></status>
</kw>
<msg timestamp="20201030 10:57:29.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.348" endtime="20201030 10:57:29.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.640" endtime="20201030 10:57:29.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.648" endtime="20201030 10:57:29.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.346" endtime="20201030 10:57:29.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.344" endtime="20201030 10:57:29.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.655" level="INFO">${RESULT} = [{'diff': 9.259799999999929e-05}, {'diff': 9.277699999999875e-05}, {'diff': 8.874999999999855e-05}, {'diff': 8.872199999999941e-05}, {'diff': 8.827800000000066e-05}, {'diff': 8.854200000000048e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:29.652" endtime="20201030 10:57:29.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:29.660" level="INFO">${ACCURACY} = {'diff': [9.259799999999929e-05, 9.277699999999875e-05, 8.874999999999855e-05, 8.872199999999941e-05, 8.827800000000066e-05, 8.854200000000048e-05, 8.934700000000004e-05, 8.826400000000109e-05, 8.8417...</msg>
<status status="PASS" starttime="20201030 10:57:29.656" endtime="20201030 10:57:29.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.665" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:57:29.664" endtime="20201030 10:57:29.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.667" level="INFO">VALUE: [9.259799999999929e-05, 9.277699999999875e-05, 8.874999999999855e-05, 8.872199999999941e-05, 8.827800000000066e-05, 8.854200000000048e-05, 8.934700000000004e-05, 8.826400000000109e-05, 8.841700000000036e-05, 8.81670000000001e-05, 8.802800000000041e-05, 8.797299999999814e-05, 8.886100000000258e-05, 8.811099999999836e-05, 8.879199999999726e-05, 8.805500000000008e-05, 8.830500000000033e-05, 8.841700000000036e-05, 8.854200000000048e-05, 8.8945e-05, 8.859699999999929e-05, 8.850000000000177e-05, 8.86670000000006e-05, 8.831999999999937e-05, 8.815300000000054e-05, 8.936099999999961e-05, 8.876299999999865e-05, 8.795799999999909e-05, 8.887499999999868e-05, 8.894400000000052e-05, 8.815300000000054e-05, 8.797200000000213e-05, 8.937500000000265e-05, 8.84999999999983e-05, 8.852800000000091e-05, 8.815300000000054e-05, 8.876299999999865e-05, 8.827800000000066e-05, 8.81670000000001e-05, 8.806899999999965e-05, 8.86519999999981e-05, 8.854099999999754e-05, 8.800000000000127e-05, 8.83189999999999e-05, 8.820799999999934e-05, 8.81250000000014e-05, 8.88060000000003e-05, 8.881999999999987e-05, 8.808399999999869e-05, 8.841700000000036e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.666" endtime="20201030 10:57:29.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.661" endtime="20201030 10:57:29.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.673" endtime="20201030 10:57:29.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.671" endtime="20201030 10:57:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.670" endtime="20201030 10:57:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.308" endtime="20201030 10:57:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.308" endtime="20201030 10:57:29.694"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.703" endtime="20201030 10:57:29.724"></status>
</kw>
<msg timestamp="20201030 10:57:29.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.701" endtime="20201030 10:57:29.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.726" endtime="20201030 10:57:29.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.728" endtime="20201030 10:57:29.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.698" endtime="20201030 10:57:29.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.696" endtime="20201030 10:57:29.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.738" endtime="20201030 10:57:30.025"></status>
</kw>
<msg timestamp="20201030 10:57:30.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020348736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.736" endtime="20201030 10:57:30.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020348736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.030" endtime="20201030 10:57:30.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.039" endtime="20201030 10:57:30.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.734" endtime="20201030 10:57:30.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.732" endtime="20201030 10:57:30.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.045" level="INFO">${RESULT} = [{'diff': 9.419399999999883e-05}, {'diff': 9.41529999999996e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.91250000000024e-05}, {'diff': 8.94999999999993e-05}, {'diff': 8.973599999999998e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:30.042" endtime="20201030 10:57:30.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:30.050" level="INFO">${ACCURACY} = {'diff': [9.419399999999883e-05, 9.41529999999996e-05, 8.934700000000004e-05, 8.91250000000024e-05, 8.94999999999993e-05, 8.973599999999998e-05, 8.997200000000066e-05, 8.954100000000201e-05, 8.9776999...</msg>
<status status="PASS" starttime="20201030 10:57:30.046" endtime="20201030 10:57:30.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.054" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:57:30.053" endtime="20201030 10:57:30.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.057" level="INFO">VALUE: [9.419399999999883e-05, 9.41529999999996e-05, 8.934700000000004e-05, 8.91250000000024e-05, 8.94999999999993e-05, 8.973599999999998e-05, 8.997200000000066e-05, 8.954100000000201e-05, 8.977699999999922e-05, 8.908300000000022e-05, 8.909699999999979e-05, 8.916699999999764e-05, 8.920799999999687e-05, 8.911099999999936e-05, 8.923599999999948e-05, 8.96670000000016e-05, 8.923599999999948e-05, 9.033400000000094e-05, 8.911099999999936e-05, 8.909699999999979e-05, 8.91519999999986e-05, 8.955500000000158e-05, 8.984699999999707e-05, 8.897200000000313e-05, 8.918100000000068e-05, 9.034700000000104e-05, 8.94450000000005e-05, 8.961099999999986e-05, 8.968100000000118e-05, 8.918100000000068e-05, 8.911099999999936e-05, 8.970900000000032e-05, 8.961099999999986e-05, 8.987499999999968e-05, 8.965299999999857e-05, 8.988899999999925e-05, 8.922199999999991e-05, 8.954200000000148e-05, 8.904199999999751e-05, 8.958300000000072e-05, 8.897199999999966e-05, 8.909700000000326e-05, 8.924999999999905e-05, 8.926400000000209e-05, 8.948599999999973e-05, 8.956900000000115e-05, 8.955500000000158e-05, 8.948599999999973e-05, 8.969400000000127e-05, 8.961099999999986e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.055" endtime="20201030 10:57:30.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.050" endtime="20201030 10:57:30.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.062" endtime="20201030 10:57:30.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.060" endtime="20201030 10:57:30.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.059" endtime="20201030 10:57:30.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.694" endtime="20201030 10:57:30.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.694" endtime="20201030 10:57:30.083"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.092" endtime="20201030 10:57:30.113"></status>
</kw>
<msg timestamp="20201030 10:57:30.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.090" endtime="20201030 10:57:30.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.115" endtime="20201030 10:57:30.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.117" endtime="20201030 10:57:30.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.088" endtime="20201030 10:57:30.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.085" endtime="20201030 10:57:30.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.127" endtime="20201030 10:57:30.413"></status>
</kw>
<msg timestamp="20201030 10:57:30.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021014069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.125" endtime="20201030 10:57:30.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021014069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.417" endtime="20201030 10:57:30.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.425" endtime="20201030 10:57:30.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.122" endtime="20201030 10:57:30.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.120" endtime="20201030 10:57:30.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.432" level="INFO">${RESULT} = [{'diff': 9.43200000000019e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.134800000000151e-05}, {'diff': 9.015299999999907e-05}, {'diff': 9.087499999999721e-05}, {'diff': 9.023600000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:30.429" endtime="20201030 10:57:30.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:30.437" level="INFO">${ACCURACY} = {'diff': [9.43200000000019e-05, 9.502800000000047e-05, 9.134800000000151e-05, 9.015299999999907e-05, 9.087499999999721e-05, 9.023600000000048e-05, 9.072200000000141e-05, 9.084700000000154e-05, 9.13469...</msg>
<status status="PASS" starttime="20201030 10:57:30.433" endtime="20201030 10:57:30.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.441" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:57:30.440" endtime="20201030 10:57:30.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.444" level="INFO">VALUE: [9.43200000000019e-05, 9.502800000000047e-05, 9.134800000000151e-05, 9.015299999999907e-05, 9.087499999999721e-05, 9.023600000000048e-05, 9.072200000000141e-05, 9.084700000000154e-05, 9.134699999999857e-05, 9.047199999999769e-05, 9.058400000000119e-05, 9.032000000000137e-05, 9.090299999999982e-05, 9.001399999999937e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.03190000000019e-05, 8.99999999999998e-05, 9.054100000000301e-05, 8.995799999999762e-05, 9.047200000000116e-05, 9.061100000000086e-05, 9.002800000000241e-05, 8.993099999999796e-05, 9.072199999999794e-05, 9.077799999999969e-05, 9.084699999999807e-05, 9.012499999999993e-05, 9.056999999999815e-05, 9.094400000000252e-05, 9.009699999999732e-05, 9.073600000000098e-05, 9.002800000000241e-05, 9.047200000000116e-05, 9.005500000000208e-05, 9.004199999999851e-05, 9.0639e-05, 9.091700000000286e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.133400000000194e-05, 9.080499999999936e-05, 9.134699999999857e-05, 9.026300000000015e-05, 9.043000000000245e-05, 9.061100000000086e-05, 9.048600000000073e-05, 9.08329999999985e-05, 9.086099999999764e-05, 9.036100000000061e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.442" endtime="20201030 10:57:30.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.438" endtime="20201030 10:57:30.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.450" endtime="20201030 10:57:30.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.449" endtime="20201030 10:57:30.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.447" endtime="20201030 10:57:30.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.084" endtime="20201030 10:57:30.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.083" endtime="20201030 10:57:30.471"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.480" endtime="20201030 10:57:30.501"></status>
</kw>
<msg timestamp="20201030 10:57:30.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.478" endtime="20201030 10:57:30.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.502" endtime="20201030 10:57:30.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.505" endtime="20201030 10:57:30.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.476" endtime="20201030 10:57:30.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.473" endtime="20201030 10:57:30.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.514" endtime="20201030 10:57:30.802"></status>
</kw>
<msg timestamp="20201030 10:57:30.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.513" endtime="20201030 10:57:30.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.806" endtime="20201030 10:57:30.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.814" endtime="20201030 10:57:30.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.510" endtime="20201030 10:57:30.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.508" endtime="20201030 10:57:30.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.821" level="INFO">${RESULT} = [{'diff': 9.538900000000128e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.148600000000173e-05}, {'diff': 9.15000000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:30.818" endtime="20201030 10:57:30.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:30.826" level="INFO">${ACCURACY} = {'diff': [9.538900000000128e-05, 9.587499999999874e-05, 9.115300000000007e-05, 9.187499999999821e-05, 9.148600000000173e-05, 9.15000000000013e-05, 9.112500000000093e-05, 9.108399999999822e-05, 9.14999...</msg>
<status status="PASS" starttime="20201030 10:57:30.822" endtime="20201030 10:57:30.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.831" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:57:30.830" endtime="20201030 10:57:30.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.834" level="INFO">VALUE: [9.538900000000128e-05, 9.587499999999874e-05, 9.115300000000007e-05, 9.187499999999821e-05, 9.148600000000173e-05, 9.15000000000013e-05, 9.112500000000093e-05, 9.108399999999822e-05, 9.149999999999783e-05, 9.187500000000168e-05, 9.191600000000091e-05, 9.109699999999832e-05, 9.234699999999957e-05, 9.102799999999994e-05, 9.159699999999882e-05, 9.165300000000057e-05, 9.14589999999986e-05, 9.098600000000123e-05, 9.177800000000069e-05, 9.129200000000323e-05, 9.155500000000011e-05, 9.179100000000079e-05, 9.125000000000105e-05, 9.097199999999819e-05, 9.13199999999989e-05, 9.236100000000261e-05, 9.179200000000026e-05, 9.143100000000293e-05, 9.116699999999964e-05, 9.148600000000173e-05, 9.143099999999946e-05, 9.188900000000125e-05, 9.129199999999976e-05, 9.112499999999746e-05, 9.2333e-05, 9.176400000000112e-05, 9.112500000000093e-05, 9.092999999999948e-05, 9.109699999999832e-05, 9.11390000000005e-05, 9.165300000000057e-05, 9.138900000000075e-05, 9.177800000000069e-05, 9.166700000000014e-05, 9.127800000000019e-05, 9.142999999999998e-05, 9.173599999999851e-05, 9.141600000000041e-05, 9.148600000000173e-05, 9.172200000000241e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.832" endtime="20201030 10:57:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.827" endtime="20201030 10:57:30.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.839" endtime="20201030 10:57:30.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.837" endtime="20201030 10:57:30.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.836" endtime="20201030 10:57:30.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.472" endtime="20201030 10:57:30.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.471" endtime="20201030 10:57:30.860"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.869" endtime="20201030 10:57:30.890"></status>
</kw>
<msg timestamp="20201030 10:57:30.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.867" endtime="20201030 10:57:30.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.891" endtime="20201030 10:57:30.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.894" endtime="20201030 10:57:30.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.864" endtime="20201030 10:57:30.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.862" endtime="20201030 10:57:30.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.903" endtime="20201030 10:57:31.189"></status>
</kw>
<msg timestamp="20201030 10:57:31.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.902" endtime="20201030 10:57:31.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.194" endtime="20201030 10:57:31.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.202" endtime="20201030 10:57:31.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.899" endtime="20201030 10:57:31.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.897" endtime="20201030 10:57:31.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.209" level="INFO">${RESULT} = [{'diff': 9.693000000000201e-05}, {'diff': 9.77080000000019e-05}, {'diff': 9.240300000000132e-05}, {'diff': 9.280499999999789e-05}, {'diff': 9.225000000000205e-05}, {'diff': 9.21390000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:31.206" endtime="20201030 10:57:31.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:31.213" level="INFO">${ACCURACY} = {'diff': [9.693000000000201e-05, 9.77080000000019e-05, 9.240300000000132e-05, 9.280499999999789e-05, 9.225000000000205e-05, 9.21390000000015e-05, 9.229200000000076e-05, 9.279200000000126e-05, 9.283399...</msg>
<status status="PASS" starttime="20201030 10:57:31.210" endtime="20201030 10:57:31.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.218" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:57:31.217" endtime="20201030 10:57:31.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.220" level="INFO">VALUE: [9.693000000000201e-05, 9.77080000000019e-05, 9.240300000000132e-05, 9.280499999999789e-05, 9.225000000000205e-05, 9.21390000000015e-05, 9.229200000000076e-05, 9.279200000000126e-05, 9.283399999999997e-05, 9.222299999999892e-05, 9.258399999999972e-05, 9.243000000000098e-05, 9.224999999999858e-05, 9.290199999999887e-05, 9.230500000000086e-05, 9.241600000000141e-05, 9.272199999999994e-05, 9.241700000000089e-05, 9.240300000000132e-05, 9.336100000000014e-05, 9.211099999999889e-05, 9.290299999999835e-05, 9.19870000000017e-05, 9.198600000000223e-05, 9.340299999999885e-05, 9.266600000000166e-05, 9.230499999999739e-05, 9.280499999999789e-05, 9.224999999999858e-05, 9.290299999999835e-05, 9.273599999999951e-05, 9.277799999999822e-05, 9.269499999999681e-05, 9.208399999999922e-05, 9.270899999999985e-05, 9.24719999999997e-05, 9.273599999999951e-05, 9.211099999999889e-05, 9.286099999999964e-05, 9.202800000000094e-05, 9.272199999999994e-05, 9.25139999999984e-05, 9.20139999999979e-05, 9.254200000000101e-05, 9.216700000000064e-05, 9.291700000000139e-05, 9.291599999999844e-05, 9.227699999999825e-05, 9.218000000000073e-05, 9.2026999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:57:31.219" endtime="20201030 10:57:31.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.214" endtime="20201030 10:57:31.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.226" endtime="20201030 10:57:31.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.224" endtime="20201030 10:57:31.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.223" endtime="20201030 10:57:31.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.861" endtime="20201030 10:57:31.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.860" endtime="20201030 10:57:31.246"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.255" endtime="20201030 10:57:31.277"></status>
</kw>
<msg timestamp="20201030 10:57:31.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.254" endtime="20201030 10:57:31.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.279" endtime="20201030 10:57:31.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.282" endtime="20201030 10:57:31.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.251" endtime="20201030 10:57:31.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.249" endtime="20201030 10:57:31.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.291" endtime="20201030 10:57:31.579"></status>
</kw>
<msg timestamp="20201030 10:57:31.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021028514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021126306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.290" endtime="20201030 10:57:31.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021028514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021126306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.583" endtime="20201030 10:57:31.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.592" endtime="20201030 10:57:31.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.287" endtime="20201030 10:57:31.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.285" endtime="20201030 10:57:31.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.599" level="INFO">${RESULT} = [{'diff': 9.779199999999932e-05}, {'diff': 9.73470000000011e-05}, {'diff': 9.31659999999987e-05}, {'diff': 9.304199999999804e-05}, {'diff': 9.370800000000137e-05}, {'diff': 9.3639000000003e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 10:57:31.595" endtime="20201030 10:57:31.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:31.603" level="INFO">${ACCURACY} = {'diff': [9.779199999999932e-05, 9.73470000000011e-05, 9.31659999999987e-05, 9.304199999999804e-05, 9.370800000000137e-05, 9.3639000000003e-05, 9.322200000000044e-05, 9.316700000000164e-05, 9.32220000...</msg>
<status status="PASS" starttime="20201030 10:57:31.600" endtime="20201030 10:57:31.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.608" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:57:31.607" endtime="20201030 10:57:31.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.610" level="INFO">VALUE: [9.779199999999932e-05, 9.73470000000011e-05, 9.31659999999987e-05, 9.304199999999804e-05, 9.370800000000137e-05, 9.3639000000003e-05, 9.322200000000044e-05, 9.316700000000164e-05, 9.322200000000044e-05, 9.387499999999674e-05, 9.36529999999991e-05, 9.391599999999944e-05, 9.329099999999882e-05, 9.377699999999975e-05, 9.354100000000254e-05, 9.333299999999753e-05, 9.354199999999854e-05, 9.323600000000001e-05, 9.379199999999879e-05, 9.324999999999958e-05, 9.298599999999976e-05, 9.352799999999897e-05, 9.366600000000266e-05, 9.361100000000039e-05, 9.298599999999976e-05, 9.349999999999983e-05, 9.325000000000305e-05, 9.358300000000125e-05, 9.299999999999933e-05, 9.309700000000032e-05, 9.361100000000039e-05, 9.309700000000032e-05, 9.291700000000139e-05, 9.434800000000104e-05, 9.348600000000026e-05, 9.387500000000021e-05, 9.347300000000017e-05, 9.386100000000064e-05, 9.384700000000107e-05, 9.347199999999722e-05, 9.373600000000051e-05, 9.386100000000064e-05, 9.304200000000151e-05, 9.35139999999994e-05, 9.377799999999922e-05, 9.315300000000207e-05, 9.322299999999992e-05, 9.348600000000026e-05, 9.376399999999965e-05, 9.355499999999864e-05]</msg>
<status status="PASS" starttime="20201030 10:57:31.609" endtime="20201030 10:57:31.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.604" endtime="20201030 10:57:31.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.616" endtime="20201030 10:57:31.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.615" endtime="20201030 10:57:31.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.614" endtime="20201030 10:57:31.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.247" endtime="20201030 10:57:31.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.247" endtime="20201030 10:57:31.637"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.646" endtime="20201030 10:57:31.667"></status>
</kw>
<msg timestamp="20201030 10:57:31.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.644" endtime="20201030 10:57:31.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.668" endtime="20201030 10:57:31.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.671" endtime="20201030 10:57:31.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.641" endtime="20201030 10:57:31.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.639" endtime="20201030 10:57:31.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.680" endtime="20201030 10:57:31.978"></status>
</kw>
<msg timestamp="20201030 10:57:31.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.678" endtime="20201030 10:57:31.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.982" endtime="20201030 10:57:31.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.990" endtime="20201030 10:57:31.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.676" endtime="20201030 10:57:31.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.674" endtime="20201030 10:57:31.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.997" level="INFO">${RESULT} = [{'diff': 9.859699999999888e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.53469999999991e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.477799999999675e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:31.993" endtime="20201030 10:57:31.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.002" level="INFO">${ACCURACY} = {'diff': [9.859699999999888e-05, 9.851400000000093e-05, 9.53469999999991e-05, 9.416699999999917e-05, 9.533299999999953e-05, 9.477799999999675e-05, 9.477800000000022e-05, 9.429199999999929e-05, 9.44170...</msg>
<status status="PASS" starttime="20201030 10:57:31.997" endtime="20201030 10:57:32.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.006" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.005" endtime="20201030 10:57:32.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.009" level="INFO">VALUE: [9.859699999999888e-05, 9.851400000000093e-05, 9.53469999999991e-05, 9.416699999999917e-05, 9.533299999999953e-05, 9.477799999999675e-05, 9.477800000000022e-05, 9.429199999999929e-05, 9.441700000000289e-05, 9.479100000000032e-05, 9.476400000000065e-05, 9.467999999999976e-05, 9.533299999999953e-05, 9.448600000000126e-05, 9.418100000000221e-05, 9.534700000000257e-05, 9.46530000000001e-05, 9.430599999999886e-05, 9.53469999999991e-05, 9.534799999999857e-05, 9.427799999999972e-05, 9.401300000000043e-05, 9.481999999999893e-05, 9.39720000000012e-05, 9.472200000000194e-05, 9.455499999999964e-05, 9.438900000000028e-05, 9.416700000000264e-05, 9.493099999999949e-05, 9.395800000000162e-05, 9.441699999999942e-05, 9.398699999999677e-05, 9.444500000000203e-05, 9.477700000000075e-05, 9.455499999999964e-05, 9.461100000000139e-05, 9.411099999999742e-05, 9.445800000000212e-05, 9.452799999999997e-05, 9.454199999999954e-05, 9.45140000000004e-05, 9.475000000000108e-05, 9.5333000000003e-05, 9.529199999999682e-05, 9.491699999999992e-05, 9.445899999999813e-05, 9.481899999999946e-05, 9.429099999999982e-05, 9.476400000000065e-05, 9.475000000000108e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.007" endtime="20201030 10:57:32.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.002" endtime="20201030 10:57:32.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.081" endtime="20201030 10:57:32.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.080" endtime="20201030 10:57:32.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.079" endtime="20201030 10:57:32.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.638" endtime="20201030 10:57:32.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.637" endtime="20201030 10:57:32.102"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.111" endtime="20201030 10:57:32.132"></status>
</kw>
<msg timestamp="20201030 10:57:32.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.109" endtime="20201030 10:57:32.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.133" endtime="20201030 10:57:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.136" endtime="20201030 10:57:32.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.106" endtime="20201030 10:57:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.104" endtime="20201030 10:57:32.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.145" endtime="20201030 10:57:32.434"></status>
</kw>
<msg timestamp="20201030 10:57:32.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.143" endtime="20201030 10:57:32.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.438" endtime="20201030 10:57:32.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.446" endtime="20201030 10:57:32.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.141" endtime="20201030 10:57:32.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.139" endtime="20201030 10:57:32.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.452" level="INFO">${RESULT} = [{'diff': 9.96809999999973e-05}, {'diff': 9.94999999999989e-05}, {'diff': 9.561199999999839e-05}, {'diff': 9.520899999999888e-05}, {'diff': 9.54019999999979e-05}, {'diff': 9.54859999999988e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 10:57:32.449" endtime="20201030 10:57:32.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.457" level="INFO">${ACCURACY} = {'diff': [9.96809999999973e-05, 9.94999999999989e-05, 9.561199999999839e-05, 9.520899999999888e-05, 9.54019999999979e-05, 9.54859999999988e-05, 9.638900000000228e-05, 9.586099999999917e-05, 9.50420000...</msg>
<status status="PASS" starttime="20201030 10:57:32.453" endtime="20201030 10:57:32.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.461" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.460" endtime="20201030 10:57:32.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.463" level="INFO">VALUE: [9.96809999999973e-05, 9.94999999999989e-05, 9.561199999999839e-05, 9.520899999999888e-05, 9.54019999999979e-05, 9.54859999999988e-05, 9.638900000000228e-05, 9.586099999999917e-05, 9.504200000000004e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.569499999999981e-05, 9.552800000000097e-05, 9.590299999999788e-05, 9.544400000000008e-05, 9.548700000000174e-05, 9.579100000000132e-05, 9.543000000000051e-05, 9.530599999999986e-05, 9.591700000000092e-05, 9.518099999999974e-05, 9.56530000000011e-05, 9.570899999999938e-05, 9.557000000000315e-05, 9.580499999999742e-05, 9.588900000000178e-05, 9.537499999999824e-05, 9.502800000000047e-05, 9.551300000000193e-05, 9.54859999999988e-05, 9.49859999999983e-05, 9.520800000000287e-05, 9.499999999999786e-05, 9.52079999999994e-05, 9.541700000000042e-05, 9.527800000000072e-05, 9.55279999999975e-05, 9.520899999999888e-05, 9.518000000000026e-05, 9.512500000000146e-05, 9.540200000000137e-05, 9.49720000000022e-05, 9.565299999999763e-05, 9.548600000000226e-05, 9.56530000000011e-05, 9.586100000000264e-05, 9.56669999999972e-05, 9.63470000000001e-05, 9.523700000000149e-05, 9.590299999999788e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.462" endtime="20201030 10:57:32.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.457" endtime="20201030 10:57:32.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.468" endtime="20201030 10:57:32.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.467" endtime="20201030 10:57:32.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.466" endtime="20201030 10:57:32.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.103" endtime="20201030 10:57:32.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.102" endtime="20201030 10:57:32.489"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.498" endtime="20201030 10:57:32.520"></status>
</kw>
<msg timestamp="20201030 10:57:32.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.496" endtime="20201030 10:57:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.521" endtime="20201030 10:57:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.524" endtime="20201030 10:57:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.493" endtime="20201030 10:57:32.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.491" endtime="20201030 10:57:32.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.533" endtime="20201030 10:57:32.830"></status>
</kw>
<msg timestamp="20201030 10:57:32.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.531" endtime="20201030 10:57:32.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.834" endtime="20201030 10:57:32.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.842" endtime="20201030 10:57:32.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.528" endtime="20201030 10:57:32.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.527" endtime="20201030 10:57:32.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.849" level="INFO">${RESULT} = [{'diff': 0.00010208299999999934}, {'diff': 0.00010101399999999996}, {'diff': 9.674999999999961e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.627799999999825e-05}, {'diff': 9.641700000000142e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:32.845" endtime="20201030 10:57:32.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.853" level="INFO">${ACCURACY} = {'diff': [0.00010208299999999934, 0.00010101399999999996, 9.674999999999961e-05, 9.597199999999972e-05, 9.627799999999825e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.740200000000337e-05, 9.68...</msg>
<status status="PASS" starttime="20201030 10:57:32.850" endtime="20201030 10:57:32.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.857" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.856" endtime="20201030 10:57:32.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.860" level="INFO">VALUE: [0.00010208299999999934, 0.00010101399999999996, 9.674999999999961e-05, 9.597199999999972e-05, 9.627799999999825e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.740200000000337e-05, 9.686100000000017e-05, 9.611200000000236e-05, 9.663900000000253e-05, 9.733299999999806e-05, 9.68470000000006e-05, 9.655500000000164e-05, 9.623599999999954e-05, 9.668100000000124e-05, 9.691700000000192e-05, 9.597199999999972e-05, 9.597199999999972e-05, 9.619500000000031e-05, 9.658299999999731e-05, 9.681900000000146e-05, 9.663799999999959e-05, 9.606899999999724e-05, 9.737500000000024e-05, 9.6721999999997e-05, 9.618100000000074e-05, 9.623599999999954e-05, 9.66530000000021e-05, 9.643100000000099e-05, 9.601399999999843e-05, 9.662499999999949e-05, 9.604200000000104e-05, 9.640299999999838e-05, 9.615299999999813e-05, 9.650000000000283e-05, 9.691600000000244e-05, 9.657000000000068e-05, 9.676399999999918e-05, 9.658400000000025e-05, 9.669500000000081e-05, 9.68470000000006e-05, 9.61669999999977e-05, 9.682000000000093e-05, 9.616700000000117e-05, 9.66799999999983e-05, 9.658300000000078e-05, 9.619399999999736e-05, 9.679199999999832e-05, 9.691700000000192e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.858" endtime="20201030 10:57:32.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.854" endtime="20201030 10:57:32.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.865" endtime="20201030 10:57:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.864" endtime="20201030 10:57:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.863" endtime="20201030 10:57:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.490" endtime="20201030 10:57:32.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.489" endtime="20201030 10:57:32.886"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.894" endtime="20201030 10:57:32.916"></status>
</kw>
<msg timestamp="20201030 10:57:32.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.893" endtime="20201030 10:57:32.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.918" endtime="20201030 10:57:32.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.920" endtime="20201030 10:57:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.890" endtime="20201030 10:57:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.888" endtime="20201030 10:57:32.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.929" endtime="20201030 10:57:33.213"></status>
</kw>
<msg timestamp="20201030 10:57:33.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.927" endtime="20201030 10:57:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.218" endtime="20201030 10:57:33.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.226" endtime="20201030 10:57:33.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.925" endtime="20201030 10:57:33.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.923" endtime="20201030 10:57:33.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.232" level="INFO">${RESULT} = [{'diff': 0.00010195799999999922}, {'diff': 0.0001015419999999996}, {'diff': 9.776400000000018e-05}, {'diff': 9.792999999999955e-05}, {'diff': 9.715299999999913e-05}, {'diff': 9.772200000000147e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:33.229" endtime="20201030 10:57:33.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:33.237" level="INFO">${ACCURACY} = {'diff': [0.00010195799999999922, 0.0001015419999999996, 9.776400000000018e-05, 9.792999999999955e-05, 9.715299999999913e-05, 9.772200000000147e-05, 9.787499999999727e-05, 9.758400000000125e-05, 9.775...</msg>
<status status="PASS" starttime="20201030 10:57:33.233" endtime="20201030 10:57:33.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.242" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:57:33.241" endtime="20201030 10:57:33.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.244" level="INFO">VALUE: [0.00010195799999999922, 0.0001015419999999996, 9.776400000000018e-05, 9.792999999999955e-05, 9.715299999999913e-05, 9.772200000000147e-05, 9.787499999999727e-05, 9.758400000000125e-05, 9.775000000000061e-05, 9.761200000000039e-05, 9.750000000000036e-05, 9.741600000000294e-05, 9.76799999999993e-05, 9.775000000000061e-05, 9.770799999999843e-05, 9.730600000000186e-05, 9.7721999999998e-05, 9.722200000000097e-05, 9.722200000000097e-05, 9.787500000000074e-05, 9.837499999999777e-05, 9.74730000000007e-05, 9.773700000000052e-05, 9.730500000000239e-05, 9.722200000000097e-05, 9.756899999999874e-05, 9.77080000000019e-05, 9.76669999999992e-05, 9.744500000000156e-05, 9.773600000000104e-05, 9.76669999999992e-05, 9.699999999999986e-05, 9.784800000000107e-05, 9.750000000000036e-05, 9.834699999999863e-05, 9.709800000000032e-05, 9.75409999999996e-05, 9.712499999999999e-05, 9.790299999999988e-05, 9.792999999999955e-05, 9.712499999999999e-05, 9.701399999999943e-05, 9.7721999999998e-05, 9.693099999999802e-05, 9.705499999999867e-05, 9.72920000000023e-05, 9.773600000000104e-05, 9.766599999999973e-05, 9.78609999999977e-05, 9.779099999999985e-05]</msg>
<status status="PASS" starttime="20201030 10:57:33.243" endtime="20201030 10:57:33.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.238" endtime="20201030 10:57:33.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.249" endtime="20201030 10:57:33.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.248" endtime="20201030 10:57:33.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.246" endtime="20201030 10:57:33.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.887" endtime="20201030 10:57:33.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.886" endtime="20201030 10:57:33.270"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.278" endtime="20201030 10:57:33.299"></status>
</kw>
<msg timestamp="20201030 10:57:33.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.277" endtime="20201030 10:57:33.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.300" endtime="20201030 10:57:33.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.303" endtime="20201030 10:57:33.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.274" endtime="20201030 10:57:33.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.272" endtime="20201030 10:57:33.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.312" endtime="20201030 10:57:33.599"></status>
</kw>
<msg timestamp="20201030 10:57:33.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.310" endtime="20201030 10:57:33.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.604" endtime="20201030 10:57:33.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.612" endtime="20201030 10:57:33.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.308" endtime="20201030 10:57:33.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.306" endtime="20201030 10:57:33.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.619" level="INFO">${RESULT} = [{'diff': 0.00010265300000000116}, {'diff': 0.00010247199999999929}, {'diff': 9.811099999999795e-05}, {'diff': 9.880499999999695e-05}, {'diff': 9.826399999999721e-05}, {'diff': 9.863900000000106e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:33.616" endtime="20201030 10:57:33.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:33.623" level="INFO">${ACCURACY} = {'diff': [0.00010265300000000116, 0.00010247199999999929, 9.811099999999795e-05, 9.880499999999695e-05, 9.826399999999721e-05, 9.863900000000106e-05, 9.822200000000197e-05, 9.862500000000149e-05, 9.87...</msg>
<status status="PASS" starttime="20201030 10:57:33.620" endtime="20201030 10:57:33.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.628" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:57:33.627" endtime="20201030 10:57:33.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.631" level="INFO">VALUE: [0.00010265300000000116, 0.00010247199999999929, 9.811099999999795e-05, 9.880499999999695e-05, 9.826399999999721e-05, 9.863900000000106e-05, 9.822200000000197e-05, 9.862500000000149e-05, 9.8721999999999e-05, 9.890300000000088e-05, 9.808400000000175e-05, 9.881899999999999e-05, 9.863800000000159e-05, 9.795799999999869e-05, 9.85280000000005e-05, 9.891700000000045e-05, 9.858299999999931e-05, 9.894499999999959e-05, 9.811099999999795e-05, 9.79860000000013e-05, 9.858399999999878e-05, 9.886200000000164e-05, 9.887500000000174e-05, 9.86800000000003e-05, 9.874999999999814e-05, 9.858299999999931e-05, 9.93609999999992e-05, 9.841699999999995e-05, 9.890300000000088e-05, 9.879200000000032e-05, 9.937499999999877e-05, 9.887500000000174e-05, 9.841699999999995e-05, 9.811200000000089e-05, 9.84860000000018e-05, 9.823599999999807e-05, 9.802700000000053e-05, 9.883299999999956e-05, 9.894400000000012e-05, 9.88479999999986e-05, 9.863900000000106e-05, 9.868099999999977e-05, 9.872200000000247e-05, 9.854200000000007e-05, 9.795900000000163e-05, 9.88479999999986e-05, 9.823699999999755e-05, 9.861099999999845e-05, 9.856899999999974e-05, 9.893000000000055e-05]</msg>
<status status="PASS" starttime="20201030 10:57:33.629" endtime="20201030 10:57:33.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.624" endtime="20201030 10:57:33.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.636" endtime="20201030 10:57:33.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.635" endtime="20201030 10:57:33.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.633" endtime="20201030 10:57:33.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.271" endtime="20201030 10:57:33.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.270" endtime="20201030 10:57:33.657"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.666" endtime="20201030 10:57:33.688"></status>
</kw>
<msg timestamp="20201030 10:57:33.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.664" endtime="20201030 10:57:33.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.689" endtime="20201030 10:57:33.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.692" endtime="20201030 10:57:33.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.662" endtime="20201030 10:57:33.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.660" endtime="20201030 10:57:33.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.701" endtime="20201030 10:57:33.986"></status>
</kw>
<msg timestamp="20201030 10:57:33.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.700" endtime="20201030 10:57:33.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.991" endtime="20201030 10:57:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.999" endtime="20201030 10:57:34.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.697" endtime="20201030 10:57:34.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.695" endtime="20201030 10:57:34.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.005" level="INFO">${RESULT} = [{'diff': 0.00010386100000000023}, {'diff': 0.00010394400000000165}, {'diff': 9.947199999999976e-05}, {'diff': 9.979200000000132e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.96670000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:34.002" endtime="20201030 10:57:34.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.009" level="INFO">${ACCURACY} = {'diff': [0.00010386100000000023, 0.00010394400000000165, 9.947199999999976e-05, 9.979200000000132e-05, 9.93609999999992e-05, 9.96670000000012e-05, 9.955600000000064e-05, 9.941699999999748e-05, 9.9708...</msg>
<status status="PASS" starttime="20201030 10:57:34.006" endtime="20201030 10:57:34.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.014" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.013" endtime="20201030 10:57:34.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.016" level="INFO">VALUE: [0.00010386100000000023, 0.00010394400000000165, 9.947199999999976e-05, 9.979200000000132e-05, 9.93609999999992e-05, 9.96670000000012e-05, 9.955600000000064e-05, 9.941699999999748e-05, 9.970800000000044e-05, 9.922200000000297e-05, 9.89860000000023e-05, 9.94860000000028e-05, 9.95410000000016e-05, 9.898599999999882e-05, 9.952700000000203e-05, 9.948599999999932e-05, 9.954200000000107e-05, 9.936100000000267e-05, 9.95280000000015e-05, 9.9722e-05, 9.89860000000023e-05, 9.970899999999991e-05, 9.96800000000013e-05, 9.9722e-05, 0.00010027699999999931, 9.923599999999907e-05, 9.961100000000292e-05, 9.92219999999995e-05, 9.941700000000095e-05, 9.900000000000186e-05, 9.970800000000044e-05, 9.93060000000004e-05, 9.973599999999957e-05, 9.919400000000037e-05, 9.965200000000216e-05, 9.9722e-05, 9.986100000000317e-05, 9.909699999999938e-05, 9.958299999999684e-05, 9.96800000000013e-05, 9.947199999999976e-05, 0.00010034700000000063, 9.968100000000077e-05, 0.0001003610000000002, 9.911099999999895e-05, 9.91670000000007e-05, 9.95410000000016e-05, 9.983300000000056e-05, 9.891600000000098e-05, 9.9722e-05]</msg>
<status status="PASS" starttime="20201030 10:57:34.015" endtime="20201030 10:57:34.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.010" endtime="20201030 10:57:34.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.022" endtime="20201030 10:57:34.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.021" endtime="20201030 10:57:34.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.019" endtime="20201030 10:57:34.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.658" endtime="20201030 10:57:34.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.657" endtime="20201030 10:57:34.043"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.051" endtime="20201030 10:57:34.072"></status>
</kw>
<msg timestamp="20201030 10:57:34.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.050" endtime="20201030 10:57:34.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.073" endtime="20201030 10:57:34.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.076" endtime="20201030 10:57:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.047" endtime="20201030 10:57:34.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.045" endtime="20201030 10:57:34.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.085" endtime="20201030 10:57:34.371"></status>
</kw>
<msg timestamp="20201030 10:57:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019494431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.083" endtime="20201030 10:57:34.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019494431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.375" endtime="20201030 10:57:34.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.383" endtime="20201030 10:57:34.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.081" endtime="20201030 10:57:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.079" endtime="20201030 10:57:34.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.389" level="INFO">${RESULT} = [{'diff': 0.00010429199999999889}, {'diff': 0.000105207999999999}, {'diff': 0.00010080500000000242}, {'diff': 0.00010006900000000124}, {'diff': 0.00010080499999999895}, {'diff': 0.00010091699999999898...</msg>
<status status="PASS" starttime="20201030 10:57:34.386" endtime="20201030 10:57:34.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.394" level="INFO">${ACCURACY} = {'diff': [0.00010429199999999889, 0.000105207999999999, 0.00010080500000000242, 0.00010006900000000124, 0.00010080499999999895, 0.00010091699999999898, 0.0001001670000000017, 0.00010047199999999729, 0...</msg>
<status status="PASS" starttime="20201030 10:57:34.390" endtime="20201030 10:57:34.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.399" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.398" endtime="20201030 10:57:34.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.401" level="INFO">VALUE: [0.00010429199999999889, 0.000105207999999999, 0.00010080500000000242, 0.00010006900000000124, 0.00010080499999999895, 0.00010091699999999898, 0.0001001670000000017, 0.00010047199999999729, 0.00010063899999999959, 0.00010057000000000121, 0.00010016699999999823, 0.00010075000000000014, 0.00010083299999999809, 0.00010029099999999888, 0.00010006899999999777, 0.00010030499999999845, 0.00010057000000000121, 0.00010041699999999848, 0.00010082000000000146, 0.00010058299999999784, 0.00010001399999999896, 0.0001004999999999999, 0.00010055599999999817, 0.00010034799999999663, 9.997200000000026e-05, 0.00010136099999999773, 0.00010061100000000045, 0.00010052799999999903, 0.00010019499999999737, 0.00010058400000000078, 9.995800000000069e-05, 0.00010073600000000058, 0.00010080599999999842, 0.00010051399999999946, 0.00010005600000000114, 0.00010004200000000157, 0.00010080499999999895, 0.00010008299999999734, 0.00010140299999999991, 0.00010019500000000084, 0.0001003060000000014, 0.00010052799999999903, 0.00010019500000000084, 9.997200000000026e-05, 0.00010023600000000008, 0.0001001800000000018, 0.0001008480000000006, 0.00010020799999999747, 0.00010083300000000156, 0.00010029199999999835]</msg>
<status status="PASS" starttime="20201030 10:57:34.400" endtime="20201030 10:57:34.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.395" endtime="20201030 10:57:34.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.406" endtime="20201030 10:57:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.405" endtime="20201030 10:57:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.403" endtime="20201030 10:57:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.044" endtime="20201030 10:57:34.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.043" endtime="20201030 10:57:34.427"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.435" endtime="20201030 10:57:34.457"></status>
</kw>
<msg timestamp="20201030 10:57:34.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.434" endtime="20201030 10:57:34.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.459" endtime="20201030 10:57:34.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.461" endtime="20201030 10:57:34.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.431" endtime="20201030 10:57:34.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.429" endtime="20201030 10:57:34.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.470" endtime="20201030 10:57:34.756"></status>
</kw>
<msg timestamp="20201030 10:57:34.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.468" endtime="20201030 10:57:34.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.760" endtime="20201030 10:57:34.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.768" endtime="20201030 10:57:34.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.466" endtime="20201030 10:57:34.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.464" endtime="20201030 10:57:34.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.775" level="INFO">${RESULT} = [{'diff': 0.00010547200000000229}, {'diff': 0.00010550000000000143}, {'diff': 0.00010098600000000083}, {'diff': 0.00010191699999999998}, {'diff': 0.00010152800000000003}, {'diff': 0.000101096999999997...</msg>
<status status="PASS" starttime="20201030 10:57:34.772" endtime="20201030 10:57:34.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.779" level="INFO">${ACCURACY} = {'diff': [0.00010547200000000229, 0.00010550000000000143, 0.00010098600000000083, 0.00010191699999999998, 0.00010152800000000003, 0.00010109699999999791, 0.00010190300000000041, 0.00010097300000000073...</msg>
<status status="PASS" starttime="20201030 10:57:34.776" endtime="20201030 10:57:34.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.783" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.782" endtime="20201030 10:57:34.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.786" level="INFO">VALUE: [0.00010547200000000229, 0.00010550000000000143, 0.00010098600000000083, 0.00010191699999999998, 0.00010152800000000003, 0.00010109699999999791, 0.00010190300000000041, 0.00010097300000000073, 0.00010126400000000021, 0.00010180499999999995, 0.0001010549999999992, 0.0001015549999999997, 0.00010145800000000219, 0.0001018610000000017, 0.0001010419999999991, 0.0001016809999999993, 0.00010101399999999996, 0.00010161099999999798, 0.0001018610000000017, 0.00010152800000000003, 0.0001018610000000017, 0.00010167999999999983, 0.00010104099999999963, 0.00010129199999999935, 0.00010141700000000295, 0.00010101399999999996, 0.00010148600000000133, 0.0001017359999999981, 0.00010123600000000108, 0.0001015419999999996, 0.0001015419999999996, 0.00010165300000000016, 0.00010116599999999976, 0.00010187500000000127, 0.00010102700000000006, 0.00010234700000000263, 0.00010105600000000214, 0.00010190300000000041, 0.00010105600000000214, 0.00010182000000000246, 0.0001012220000000015, 0.00010122300000000098, 0.00010236200000000167, 0.00010112500000000052, 0.00010241699999999701, 0.00010109700000000138, 0.00010111099999999748, 0.00010165300000000016, 0.00010152800000000003, 0.00010098600000000083]</msg>
<status status="PASS" starttime="20201030 10:57:34.784" endtime="20201030 10:57:34.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.780" endtime="20201030 10:57:34.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.791" endtime="20201030 10:57:34.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.789" endtime="20201030 10:57:34.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.788" endtime="20201030 10:57:34.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.428" endtime="20201030 10:57:34.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.427" endtime="20201030 10:57:34.811"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.820" endtime="20201030 10:57:34.842"></status>
</kw>
<msg timestamp="20201030 10:57:34.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.818" endtime="20201030 10:57:34.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.844" endtime="20201030 10:57:34.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.846" endtime="20201030 10:57:34.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.816" endtime="20201030 10:57:34.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.814" endtime="20201030 10:57:34.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.855" endtime="20201030 10:57:35.141"></status>
</kw>
<msg timestamp="20201030 10:57:35.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.854" endtime="20201030 10:57:35.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.145" endtime="20201030 10:57:35.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.153" endtime="20201030 10:57:35.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.851" endtime="20201030 10:57:35.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.849" endtime="20201030 10:57:35.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.159" level="INFO">${RESULT} = [{'diff': 0.00010718000000000186}, {'diff': 0.00010649999999999896}, {'diff': 0.00010223600000000208}, {'diff': 0.0001025420000000006}, {'diff': 0.00010336099999999973}, {'diff': 0.0001025690000000002...</msg>
<status status="PASS" starttime="20201030 10:57:35.156" endtime="20201030 10:57:35.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.164" level="INFO">${ACCURACY} = {'diff': [0.00010718000000000186, 0.00010649999999999896, 0.00010223600000000208, 0.0001025420000000006, 0.00010336099999999973, 0.00010256900000000027, 0.00010291699999999751, 0.00010245899999999919,...</msg>
<status status="PASS" starttime="20201030 10:57:35.160" endtime="20201030 10:57:35.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.168" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.167" endtime="20201030 10:57:35.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.170" level="INFO">VALUE: [0.00010718000000000186, 0.00010649999999999896, 0.00010223600000000208, 0.0001025420000000006, 0.00010336099999999973, 0.00010256900000000027, 0.00010291699999999751, 0.00010245899999999919, 0.00010262499999999855, 0.00010258299999999984, 0.000102513999999998, 0.0001027359999999991, 0.00010252800000000103, 0.0001025420000000006, 0.0001033749999999993, 0.00010209700000000238, 0.00010206999999999924, 0.00010248599999999886, 0.00010266700000000073, 0.00010236099999999873, 0.00010334700000000016, 0.00010209700000000238, 0.00010336099999999973, 0.00010286099999999923, 0.00010284799999999913, 0.00010216700000000023, 0.0001025420000000006, 0.00010243100000000005, 0.00010240300000000091, 0.0001033749999999993, 0.00010279099999999791, 0.000102513999999998, 0.00010247199999999929, 0.00010222199999999904, 0.00010340300000000191, 0.00010229200000000035, 0.00010336099999999973, 0.00010227799999999732, 0.00010333400000000006, 0.00010261099999999898, 0.00010208399999999881, 0.00010293000000000108, 0.00010291599999999804, 0.000102513999999998, 0.00010252800000000103, 0.00010277800000000128, 0.00010255600000000017, 0.00010291700000000098, 0.00010258299999999984, 0.0001028749999999988]</msg>
<status status="PASS" starttime="20201030 10:57:35.169" endtime="20201030 10:57:35.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.164" endtime="20201030 10:57:35.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.176" endtime="20201030 10:57:35.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.175" endtime="20201030 10:57:35.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.173" endtime="20201030 10:57:35.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.812" endtime="20201030 10:57:35.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.812" endtime="20201030 10:57:35.197"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.205" endtime="20201030 10:57:35.226"></status>
</kw>
<msg timestamp="20201030 10:57:35.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.204" endtime="20201030 10:57:35.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.228" endtime="20201030 10:57:35.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.230" endtime="20201030 10:57:35.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.201" endtime="20201030 10:57:35.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.199" endtime="20201030 10:57:35.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.239" endtime="20201030 10:57:35.526"></status>
</kw>
<msg timestamp="20201030 10:57:35.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.238" endtime="20201030 10:57:35.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.530" endtime="20201030 10:57:35.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.538" endtime="20201030 10:57:35.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.235" endtime="20201030 10:57:35.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.233" endtime="20201030 10:57:35.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.545" level="INFO">${RESULT} = [{'diff': 0.00010743099999999811}, {'diff': 0.00010730600000000146}, {'diff': 0.00010313800000000262}, {'diff': 0.00010309799999999938}, {'diff': 0.000103416000000002}, {'diff': 0.00010317999999999786...</msg>
<status status="PASS" starttime="20201030 10:57:35.542" endtime="20201030 10:57:35.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.550" level="INFO">${ACCURACY} = {'diff': [0.00010743099999999811, 0.00010730600000000146, 0.00010313800000000262, 0.00010309799999999938, 0.000103416000000002, 0.00010317999999999786, 0.00010383300000000109, 0.00010349999999999943, ...</msg>
<status status="PASS" starttime="20201030 10:57:35.546" endtime="20201030 10:57:35.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.554" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.553" endtime="20201030 10:57:35.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.556" level="INFO">VALUE: [0.00010743099999999811, 0.00010730600000000146, 0.00010313800000000262, 0.00010309799999999938, 0.000103416000000002, 0.00010317999999999786, 0.00010383300000000109, 0.00010349999999999943, 0.00010370899999999697, 0.00010386100000000023, 0.00010376399999999925, 0.00010361099999999998, 0.0001033200000000005, 0.00010352800000000204, 0.00010315299999999819, 0.00010291599999999804, 0.00010341599999999854, 0.00010372200000000054, 0.00010329099999999841, 0.00010338899999999887, 0.00010298599999999936, 0.00010330600000000092, 0.00010362499999999955, 0.0001031810000000008, 0.0001043200000000015, 0.00010301299999999902, 0.00010390300000000241, 0.00010367999999999836, 0.00010352799999999857, 0.00010384700000000066, 0.00010368099999999783, 0.0001035000000000029, 0.00010379199999999839, 0.00010309699999999991, 0.0001030139999999985, 0.00010434700000000116, 0.0001037079999999975, 0.00010329199999999789, 0.00010394399999999818, 0.00010374999999999968, 0.0001037360000000001, 0.00010393100000000155, 0.00010373699999999958, 0.0001037360000000001, 0.00010358299999999737, 0.00010305600000000067, 0.00010434799999999717, 0.00010295899999999969, 0.00010380500000000195, 0.00010362499999999955]</msg>
<status status="PASS" starttime="20201030 10:57:35.555" endtime="20201030 10:57:35.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.551" endtime="20201030 10:57:35.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.561" endtime="20201030 10:57:35.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.560" endtime="20201030 10:57:35.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.559" endtime="20201030 10:57:35.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.198" endtime="20201030 10:57:35.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.197" endtime="20201030 10:57:35.582"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.591" endtime="20201030 10:57:35.611"></status>
</kw>
<msg timestamp="20201030 10:57:35.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.589" endtime="20201030 10:57:35.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.613" endtime="20201030 10:57:35.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.615" endtime="20201030 10:57:35.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.586" endtime="20201030 10:57:35.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.584" endtime="20201030 10:57:35.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.624" endtime="20201030 10:57:35.914"></status>
</kw>
<msg timestamp="20201030 10:57:35.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019418056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.623" endtime="20201030 10:57:35.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019418056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.918" endtime="20201030 10:57:35.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.926" endtime="20201030 10:57:35.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.620" endtime="20201030 10:57:35.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.619" endtime="20201030 10:57:35.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.932" level="INFO">${RESULT} = [{'diff': 0.00010859700000000194}, {'diff': 0.00010909699999999897}, {'diff': 0.00010536100000000173}, {'diff': 0.00010484699999999819}, {'diff': 0.00010402799999999907}, {'diff': 0.000105375000000001...</msg>
<status status="PASS" starttime="20201030 10:57:35.929" endtime="20201030 10:57:35.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.936" level="INFO">${ACCURACY} = {'diff': [0.00010859700000000194, 0.00010909699999999897, 0.00010536100000000173, 0.00010484699999999819, 0.00010402799999999907, 0.0001053750000000013, 0.00010426399999999975, 0.00010440299999999944,...</msg>
<status status="PASS" starttime="20201030 10:57:35.933" endtime="20201030 10:57:35.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.941" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.940" endtime="20201030 10:57:35.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.943" level="INFO">VALUE: [0.00010859700000000194, 0.00010909699999999897, 0.00010536100000000173, 0.00010484699999999819, 0.00010402799999999907, 0.0001053750000000013, 0.00010426399999999975, 0.00010440299999999944, 0.00010418099999999833, 0.000104514, 0.00010491699999999951, 0.00010476400000000025, 0.00010467999999999936, 0.00010452799999999957, 0.0001045550000000027, 0.00010480499999999948, 0.00010429199999999889, 0.00010430600000000192, 0.00010473599999999764, 0.00010398600000000036, 0.00010402799999999907, 0.00010447200000000129, 0.00010419399999999843, 0.00010445800000000172, 0.00010534700000000216, 0.00010480499999999948, 0.00010479199999999939, 0.00010397200000000079, 0.00010450000000000043, 0.00010536100000000173, 0.0001042360000000006, 0.00010466699999999926, 0.00010412500000000005, 0.00010441699999999901, 0.00010536099999999826, 0.00010479099999999991, 0.00010413899999999962, 0.00010531899999999955, 0.00010465299999999969, 0.0001048750000000008, 0.00010411100000000048, 0.0001053750000000013, 0.00010420900000000094, 0.00010479199999999939, 0.00010423700000000008, 0.00010472200000000154, 0.00010486100000000123, 0.00010484700000000166, 0.00010477799999999982, 0.00010399999999999993]</msg>
<status status="PASS" starttime="20201030 10:57:35.942" endtime="20201030 10:57:35.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.937" endtime="20201030 10:57:35.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.948" endtime="20201030 10:57:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.946" endtime="20201030 10:57:35.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.945" endtime="20201030 10:57:35.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.583" endtime="20201030 10:57:35.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.582" endtime="20201030 10:57:35.969"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.977" endtime="20201030 10:57:35.999"></status>
</kw>
<msg timestamp="20201030 10:57:36.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.976" endtime="20201030 10:57:36.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.001" endtime="20201030 10:57:36.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.003" endtime="20201030 10:57:36.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.973" endtime="20201030 10:57:36.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.971" endtime="20201030 10:57:36.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.012" endtime="20201030 10:57:36.298"></status>
</kw>
<msg timestamp="20201030 10:57:36.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.011" endtime="20201030 10:57:36.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.302" endtime="20201030 10:57:36.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.310" endtime="20201030 10:57:36.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.008" endtime="20201030 10:57:36.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.007" endtime="20201030 10:57:36.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.316" level="INFO">${RESULT} = [{'diff': 0.0001093890000000014}, {'diff': 0.000109902999999998}, {'diff': 0.0001050140000000005}, {'diff': 0.00010541599999999707}, {'diff': 0.00010540200000000097}, {'diff': 0.00010502800000000007},...</msg>
<status status="PASS" starttime="20201030 10:57:36.313" endtime="20201030 10:57:36.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.320" level="INFO">${ACCURACY} = {'diff': [0.0001093890000000014, 0.000109902999999998, 0.0001050140000000005, 0.00010541599999999707, 0.00010540200000000097, 0.00010502800000000007, 0.00010511099999999801, 0.00010581900000000005, 0....</msg>
<status status="PASS" starttime="20201030 10:57:36.317" endtime="20201030 10:57:36.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.325" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.324" endtime="20201030 10:57:36.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.327" level="INFO">VALUE: [0.0001093890000000014, 0.000109902999999998, 0.0001050140000000005, 0.00010541599999999707, 0.00010540200000000097, 0.00010502800000000007, 0.00010511099999999801, 0.00010581900000000005, 0.00010516699999999976, 0.00010584700000000266, 0.00010540300000000044, 0.00010558400000000231, 0.00010529199999999989, 0.00010590200000000147, 0.00010527700000000084, 0.00010517999999999986, 0.00010527800000000032, 0.00010566700000000026, 0.0001051949999999989, 0.00010569500000000287, 0.00010587499999999833, 0.00010529199999999989, 0.00010540300000000044, 0.0001050420000000031, 0.00010590200000000147, 0.00010520800000000247, 0.00010577700000000134, 0.0001055279999999971, 0.00010593100000000008, 0.0001057079999999995, 0.00010522199999999857, 0.00010498599999999789, 0.00010502800000000007, 0.00010516699999999976, 0.00010516600000000029, 0.00010516699999999976, 0.0001054019999999975, 0.00010556999999999928, 0.00010630500000000098, 0.00010530599999999946, 0.00010550000000000143, 0.00010561099999999851, 0.00010568099999999983, 0.0001050559999999992, 0.00010504199999999964, 0.00010504100000000016, 0.00010572199999999907, 0.00010534699999999869, 0.00010502700000000059, 0.00010583299999999962]</msg>
<status status="PASS" starttime="20201030 10:57:36.326" endtime="20201030 10:57:36.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.321" endtime="20201030 10:57:36.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.333" endtime="20201030 10:57:36.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.331" endtime="20201030 10:57:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.330" endtime="20201030 10:57:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.970" endtime="20201030 10:57:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.969" endtime="20201030 10:57:36.353"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.362" endtime="20201030 10:57:36.383"></status>
</kw>
<msg timestamp="20201030 10:57:36.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.360" endtime="20201030 10:57:36.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.385" endtime="20201030 10:57:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.387" endtime="20201030 10:57:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.358" endtime="20201030 10:57:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.356" endtime="20201030 10:57:36.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.396" endtime="20201030 10:57:36.681"></status>
</kw>
<msg timestamp="20201030 10:57:36.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:36.395" endtime="20201030 10:57:36.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:36.685" endtime="20201030 10:57:36.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.693" endtime="20201030 10:57:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.392" endtime="20201030 10:57:36.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.391" endtime="20201030 10:57:36.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.700" level="INFO">${RESULT} = [{'diff': 0.0001112220000000011}, {'diff': 0.00011080599999999802}, {'diff': 0.00010634799999999917}, {'diff': 0.00010666699999999779}, {'diff': 0.00010691700000000151}, {'diff': 0.0001067639999999987...</msg>
<status status="PASS" starttime="20201030 10:57:36.697" endtime="20201030 10:57:36.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.705" level="INFO">${ACCURACY} = {'diff': [0.0001112220000000011, 0.00011080599999999802, 0.00010634799999999917, 0.00010666699999999779, 0.00010691700000000151, 0.00010676399999999878, 0.00010673599999999964, 0.00010647199999999982,...</msg>
<status status="PASS" starttime="20201030 10:57:36.701" endtime="20201030 10:57:36.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.709" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.708" endtime="20201030 10:57:36.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.712" level="INFO">VALUE: [0.0001112220000000011, 0.00011080599999999802, 0.00010634799999999917, 0.00010666699999999779, 0.00010691700000000151, 0.00010676399999999878, 0.00010673599999999964, 0.00010647199999999982, 0.00010676399999999878, 0.00010661099999999951, 0.00010654200000000114, 0.00010734700000000069, 0.00010608299999999987, 0.00010645800000000025, 0.00010632000000000003, 0.0001068340000000001, 0.00010691599999999857, 0.00010645899999999972, 0.00010692999999999814, 0.00010609699999999944, 0.00010616600000000129, 0.00010641599999999807, 0.00010643100000000058, 0.00010677800000000182, 0.00010649999999999896, 0.00010693100000000108, 0.00010734800000000017, 0.00010662500000000255, 0.00010597299999999879, 0.00010681900000000105, 0.00010684700000000019, 0.0001065560000000007, 0.00010672200000000007, 0.00010676400000000225, 0.00010687499999999933, 0.00010690299999999847, 0.0001060690000000003, 0.00010604200000000064, 0.00010629200000000089, 0.00010612500000000205, 0.00010591600000000104, 0.00010629100000000141, 0.00010695900000000022, 0.00010597199999999932, 0.00010629199999999742, 0.00010679199999999792, 0.00010686099999999976, 0.00010659799999999942, 0.0001068889999999989, 0.00010620899999999947]</msg>
<status status="PASS" starttime="20201030 10:57:36.710" endtime="20201030 10:57:36.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.706" endtime="20201030 10:57:36.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.717" endtime="20201030 10:57:36.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.715" endtime="20201030 10:57:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.714" endtime="20201030 10:57:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.354" endtime="20201030 10:57:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.354" endtime="20201030 10:57:36.737"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.746" endtime="20201030 10:57:36.767"></status>
</kw>
<msg timestamp="20201030 10:57:36.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.744" endtime="20201030 10:57:36.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.769" endtime="20201030 10:57:36.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.771" endtime="20201030 10:57:36.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.742" endtime="20201030 10:57:36.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.740" endtime="20201030 10:57:36.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.780" endtime="20201030 10:57:37.067"></status>
</kw>
<msg timestamp="20201030 10:57:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.779" endtime="20201030 10:57:37.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.071" endtime="20201030 10:57:37.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.079" endtime="20201030 10:57:37.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.776" endtime="20201030 10:57:37.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.774" endtime="20201030 10:57:37.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.086" level="INFO">${RESULT} = [{'diff': 0.00011144399999999874}, {'diff': 0.00011148600000000092}, {'diff': 0.00010726399999999928}, {'diff': 0.00010729200000000189}, {'diff': 0.00010780499999999901}, {'diff': 0.000107277999999998...</msg>
<status status="PASS" starttime="20201030 10:57:37.083" endtime="20201030 10:57:37.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.090" level="INFO">${ACCURACY} = {'diff': [0.00011144399999999874, 0.00011148600000000092, 0.00010726399999999928, 0.00010729200000000189, 0.00010780499999999901, 0.00010727799999999885, 0.00010791599999999957, 0.000107902, 0.0001072...</msg>
<status status="PASS" starttime="20201030 10:57:37.087" endtime="20201030 10:57:37.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.094" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.093" endtime="20201030 10:57:37.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.096" level="INFO">VALUE: [0.00011144399999999874, 0.00011148600000000092, 0.00010726399999999928, 0.00010729200000000189, 0.00010780499999999901, 0.00010727799999999885, 0.00010791599999999957, 0.000107902, 0.00010722200000000057, 0.00010729200000000189, 0.00010776399999999978, 0.00010711100000000001, 0.00010762500000000008, 0.00010749999999999996, 0.00010711100000000001, 0.00010834800000000117, 0.00010729099999999894, 0.0001075690000000018, 0.00010730499999999851, 0.0001070279999999986, 0.00010834700000000169, 0.0001070560000000012, 0.00010759700000000094, 0.00010759700000000094, 0.00010708400000000035, 0.0001078340000000011, 0.00010709699999999697, 0.00010783300000000162, 0.00010716599999999882, 0.0001077500000000002, 0.00010718099999999786, 0.00010697200000000032, 0.00010727799999999885, 0.00010786100000000076, 0.00010790299999999947, 0.00010758400000000085, 0.00010725000000000318, 0.00010790299999999947, 0.00010745800000000125, 0.00010743000000000211, 0.00010761100000000051, 0.00010731899999999808, 0.00010833299999999865, 0.00010757000000000128, 0.00010834700000000169, 0.00010768099999999836, 0.00010836100000000126, 0.00010762500000000008, 0.00010791699999999904, 0.00010694400000000118]</msg>
<status status="PASS" starttime="20201030 10:57:37.095" endtime="20201030 10:57:37.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.090" endtime="20201030 10:57:37.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.159" endtime="20201030 10:57:37.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.158" endtime="20201030 10:57:37.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.157" endtime="20201030 10:57:37.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.738" endtime="20201030 10:57:37.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.738" endtime="20201030 10:57:37.180"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.189" endtime="20201030 10:57:37.211"></status>
</kw>
<msg timestamp="20201030 10:57:37.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.187" endtime="20201030 10:57:37.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.213" endtime="20201030 10:57:37.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.215" endtime="20201030 10:57:37.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.185" endtime="20201030 10:57:37.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.183" endtime="20201030 10:57:37.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.224" endtime="20201030 10:57:37.510"></status>
</kw>
<msg timestamp="20201030 10:57:37.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.223" endtime="20201030 10:57:37.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.514" endtime="20201030 10:57:37.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.522" endtime="20201030 10:57:37.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.220" endtime="20201030 10:57:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.219" endtime="20201030 10:57:37.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.528" level="INFO">${RESULT} = [{'diff': 0.00011405600000000127}, {'diff': 0.00011276400000000131}, {'diff': 0.00010887500000000133}, {'diff': 0.00010848600000000139}, {'diff': 0.00010865300000000022}, {'diff': 0.000108277999999999...</msg>
<status status="PASS" starttime="20201030 10:57:37.525" endtime="20201030 10:57:37.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.532" level="INFO">${ACCURACY} = {'diff': [0.00011405600000000127, 0.00011276400000000131, 0.00010887500000000133, 0.00010848600000000139, 0.00010865300000000022, 0.00010827799999999985, 0.00010806899999999883, 0.00010800000000000046...</msg>
<status status="PASS" starttime="20201030 10:57:37.529" endtime="20201030 10:57:37.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.536" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.535" endtime="20201030 10:57:37.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.539" level="INFO">VALUE: [0.00011405600000000127, 0.00011276400000000131, 0.00010887500000000133, 0.00010848600000000139, 0.00010865300000000022, 0.00010827799999999985, 0.00010806899999999883, 0.00010800000000000046, 0.00010829199999999942, 0.00010816699999999929, 0.00010808300000000187, 0.00010882000000000253, 0.00010866600000000032, 0.00010865200000000075, 0.00010873600000000164, 0.00010880599999999949, 0.00010841699999999954, 0.00010884700000000219, 0.00010879199999999992, 0.00010891700000000004, 0.00010798700000000036, 0.00010840299999999997, 0.00010856899999999933, 0.00010867999999999989, 0.0001080829999999984, 0.00010855499999999976, 0.00010816599999999982, 0.00010845899999999825, 0.00010823600000000114, 0.00010867999999999989, 0.00010891700000000004, 0.0001080699999999983, 0.00010863800000000118, 0.00010841600000000007, 0.00010869399999999946, 0.00010811100000000101, 0.0001080279999999996, 0.00010887500000000133, 0.00010848599999999792, 0.00010797200000000132, 0.00010805599999999874, 0.00010895899999999875, 0.00010873700000000111, 0.00010866600000000032, 0.00010870799999999903, 0.0001085690000000028, 0.00010823600000000114, 0.00010855499999999976, 0.00010823600000000114, 0.00010851400000000053]</msg>
<status status="PASS" starttime="20201030 10:57:37.537" endtime="20201030 10:57:37.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.533" endtime="20201030 10:57:37.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.545" endtime="20201030 10:57:37.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.543" endtime="20201030 10:57:37.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.542" endtime="20201030 10:57:37.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.181" endtime="20201030 10:57:37.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.180" endtime="20201030 10:57:37.565"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.574" endtime="20201030 10:57:37.594"></status>
</kw>
<msg timestamp="20201030 10:57:37.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.572" endtime="20201030 10:57:37.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.596" endtime="20201030 10:57:37.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.598" endtime="20201030 10:57:37.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.570" endtime="20201030 10:57:37.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.568" endtime="20201030 10:57:37.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.607" endtime="20201030 10:57:37.907"></status>
</kw>
<msg timestamp="20201030 10:57:37.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:37.606" endtime="20201030 10:57:37.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:37.911" endtime="20201030 10:57:37.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.919" endtime="20201030 10:57:37.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.603" endtime="20201030 10:57:37.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.602" endtime="20201030 10:57:37.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.925" level="INFO">${RESULT} = [{'diff': 0.00011338899999999846}, {'diff': 0.00011399999999999952}, {'diff': 0.00010993100000000061}, {'diff': 0.00010898700000000136}, {'diff': 0.00010927700000000137}, {'diff': 0.000109583999999999...</msg>
<status status="PASS" starttime="20201030 10:57:37.922" endtime="20201030 10:57:37.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.930" level="INFO">${ACCURACY} = {'diff': [0.00011338899999999846, 0.00011399999999999952, 0.00010993100000000061, 0.00010898700000000136, 0.00010927700000000137, 0.00010958399999999938, 0.0001092769999999979, 0.00010948599999999892,...</msg>
<status status="PASS" starttime="20201030 10:57:37.926" endtime="20201030 10:57:37.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.935" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.934" endtime="20201030 10:57:37.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.937" level="INFO">VALUE: [0.00011338899999999846, 0.00011399999999999952, 0.00010993100000000061, 0.00010898700000000136, 0.00010927700000000137, 0.00010958399999999938, 0.0001092769999999979, 0.00010948599999999892, 0.00010926399999999781, 0.00010948600000000239, 0.00010898599999999842, 0.00010895799999999928, 0.000109902999999998, 0.00010923599999999867, 0.00010986199999999877, 0.00010893000000000014, 0.00010993000000000114, 0.00010981899999999711, 0.00010956900000000033, 0.00010918099999999986, 0.00011036099999999979, 0.00010961099999999904, 0.00010968100000000036, 0.00010908399999999888, 0.00010947199999999935, 0.00010959799999999895, 0.0001097089999999995, 0.0001097219999999996, 0.00010986099999999929, 0.00010930500000000051, 0.00010959699999999947, 0.00010980600000000049, 0.0001090280000000006, 0.00010986099999999929, 0.00010949999999999849, 0.00010919399999999996, 0.00010972200000000307, 0.00010961099999999904, 0.00010898599999999842, 0.00010898600000000189, 0.00010959699999999947, 0.00010895799999999928, 0.00010959699999999947, 0.00010991700000000104, 0.00010913899999999768, 0.00010993100000000061, 0.00010980600000000049, 0.0001090280000000006, 0.00010988799999999896, 0.00010959699999999947]</msg>
<status status="PASS" starttime="20201030 10:57:37.936" endtime="20201030 10:57:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.931" endtime="20201030 10:57:37.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.942" endtime="20201030 10:57:37.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.941" endtime="20201030 10:57:37.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.940" endtime="20201030 10:57:37.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.566" endtime="20201030 10:57:37.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.566" endtime="20201030 10:57:37.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.083" endtime="20201030 10:57:37.963"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:56.965" endtime="20201030 10:57:37.964" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.972" endtime="20201030 10:57:37.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.971" endtime="20201030 10:57:37.992"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.005" endtime="20201030 10:57:38.027"></status>
</kw>
<msg timestamp="20201030 10:57:38.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.004" endtime="20201030 10:57:38.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.030" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.028" endtime="20201030 10:57:38.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:38.031" endtime="20201030 10:57:38.033"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:38.001" endtime="20201030 10:57:38.034"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:37.999" endtime="20201030 10:57:38.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.998" endtime="20201030 10:57:38.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:38.038" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:38.037" endtime="20201030 10:57:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.035" endtime="20201030 10:57:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.997" endtime="20201030 10:57:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.996" endtime="20201030 10:57:38.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.040" endtime="20201030 10:57:38.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.995" endtime="20201030 10:57:38.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.993" endtime="20201030 10:57:38.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.969" endtime="20201030 10:57:38.043"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.053" endtime="20201030 10:57:38.070"></status>
</kw>
<msg timestamp="20201030 10:57:38.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.051" endtime="20201030 10:57:38.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.071" endtime="20201030 10:57:38.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.074" endtime="20201030 10:57:38.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.049" endtime="20201030 10:57:38.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.047" endtime="20201030 10:57:38.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.083" endtime="20201030 10:57:38.369"></status>
</kw>
<msg timestamp="20201030 10:57:38.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070658708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.082" endtime="20201030 10:57:38.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070658708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.373" endtime="20201030 10:57:38.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.381" endtime="20201030 10:57:38.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.079" endtime="20201030 10:57:38.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.078" endtime="20201030 10:57:38.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.388" level="INFO">${RESULT} = [{'diff': 3.168000000000615e-05}, {'diff': 6.582999999990569e-06}, {'diff': 6.555000000005307e-06}, {'diff': 5.541999999997271e-06}, {'diff': 6.527000000006167e-06}, {'diff': 5.55600000000378e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:38.385" endtime="20201030 10:57:38.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.393" level="INFO">${ACCURACY} = {'diff': [3.168000000000615e-05, 6.582999999990569e-06, 6.555000000005307e-06, 5.541999999997271e-06, 6.527000000006167e-06, 5.55600000000378e-06, 6.069999999996911e-06, 6.0410000000121755e-06, 6.0549...</msg>
<status status="PASS" starttime="20201030 10:57:38.389" endtime="20201030 10:57:38.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.397" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.396" endtime="20201030 10:57:38.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.400" level="INFO">VALUE: [3.168000000000615e-05, 6.582999999990569e-06, 6.555000000005307e-06, 5.541999999997271e-06, 6.527000000006167e-06, 5.55600000000378e-06, 6.069999999996911e-06, 6.0410000000121755e-06, 6.054999999990929e-06, 6.05600000000428e-06, 5.5410000000116755e-06, 6.054999999990929e-06, 5.541999999997271e-06, 6.041999999997771e-06, 5.540999999997798e-06, 6.0689999999974376e-06, 5.5279999999907625e-06, 6.0550000000048065e-06, 6.070000000010789e-06, 6.040999999998298e-06, 5.55600000000378e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 5.555999999989902e-06, 6.069999999996911e-06, 5.541999999997271e-06, 6.05600000000428e-06, 6.083000000003946e-06, 5.542000000011149e-06, 6.041999999997771e-06, 5.541999999997271e-06, 6.569999999997411e-06, 5.58400000000292e-06, 5.55600000000378e-06, 5.5550000000043065e-06, 5.542000000011149e-06, 5.570000000010289e-06, 6.0000000000060005e-06, 5.541999999997271e-06, 5.55600000000378e-06, 5.486999999998465e-06, 6.070000000010789e-06, 5.55600000000378e-06, 5.52800000000464e-06, 6.05600000000428e-06, 5.52800000000464e-06, 6.02800000000514e-06, 5.554999999990429e-06, 6.069000000011315e-06, 6.55600000000478e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.399" endtime="20201030 10:57:38.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.394" endtime="20201030 10:57:38.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.404" endtime="20201030 10:57:38.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.403" endtime="20201030 10:57:38.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.402" endtime="20201030 10:57:38.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.045" endtime="20201030 10:57:38.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.044" endtime="20201030 10:57:38.425"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.434" endtime="20201030 10:57:38.451"></status>
</kw>
<msg timestamp="20201030 10:57:38.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.432" endtime="20201030 10:57:38.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.453" endtime="20201030 10:57:38.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.455" endtime="20201030 10:57:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.430" endtime="20201030 10:57:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.427" endtime="20201030 10:57:38.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.464" endtime="20201030 10:57:38.749"></status>
</kw>
<msg timestamp="20201030 10:57:38.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02004125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:38.463" endtime="20201030 10:57:38.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02004125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:38.754" endtime="20201030 10:57:38.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.762" endtime="20201030 10:57:38.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.460" endtime="20201030 10:57:38.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.459" endtime="20201030 10:57:38.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.768" level="INFO">${RESULT} = [{'diff': 1.0916999999999177e-05}, {'diff': 7.097000000001047e-06}, {'diff': 6.556000000001311e-06}, {'diff': 6.5279999999987015e-06}, {'diff': 6.542000000001741e-06}, {'diff': 7.054999999998868e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:38.765" endtime="20201030 10:57:38.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.772" level="INFO">${ACCURACY} = {'diff': [1.0916999999999177e-05, 7.097000000001047e-06, 6.556000000001311e-06, 6.5279999999987015e-06, 6.542000000001741e-06, 7.054999999998868e-06, 6.554999999998368e-06, 6.556000000001311e-06, 7.04...</msg>
<status status="PASS" starttime="20201030 10:57:38.769" endtime="20201030 10:57:38.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.777" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.776" endtime="20201030 10:57:38.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.779" level="INFO">VALUE: [1.0916999999999177e-05, 7.097000000001047e-06, 6.556000000001311e-06, 6.5279999999987015e-06, 6.542000000001741e-06, 7.054999999998868e-06, 6.554999999998368e-06, 6.556000000001311e-06, 7.0419999999987715e-06, 6.5279999999987015e-06, 7.068999999998438e-06, 6.5279999999987015e-06, 6.569000000001407e-06, 6.556000000001311e-06, 7.569999999998411e-06, 7.055000000002337e-06, 7.026999999999728e-06, 6.555999999997841e-06, 7.042000000002241e-06, 7.138999999999757e-06, 6.554999999998368e-06, 7.054999999998868e-06, 7.054999999998868e-06, 6.542000000001741e-06, 6.555000000001837e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 6.541999999998271e-06, 6.526999999999228e-06, 6.526999999999228e-06, 7.069999999997911e-06, 6.542000000001741e-06, 7.056000000001811e-06, 6.540999999998798e-06, 6.526999999999228e-06, 7.014000000003101e-06, 7.040999999999298e-06, 7.042000000002241e-06, 6.540999999998798e-06, 7.055000000002337e-06, 7.055999999998341e-06, 6.554999999998368e-06, 6.556000000001311e-06, 7.055000000002337e-06, 7.040999999999298e-06, 6.556000000001311e-06, 6.513999999999132e-06, 7.055999999998341e-06, 6.611000000000117e-06, 7.056000000001811e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.778" endtime="20201030 10:57:38.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.773" endtime="20201030 10:57:38.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.783" endtime="20201030 10:57:38.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.782" endtime="20201030 10:57:38.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.781" endtime="20201030 10:57:38.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.426" endtime="20201030 10:57:38.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.425" endtime="20201030 10:57:38.804"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.814" endtime="20201030 10:57:38.832"></status>
</kw>
<msg timestamp="20201030 10:57:38.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.813" endtime="20201030 10:57:38.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.833" endtime="20201030 10:57:38.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.836" endtime="20201030 10:57:38.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.809" endtime="20201030 10:57:38.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.807" endtime="20201030 10:57:38.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.845" endtime="20201030 10:57:39.131"></status>
</kw>
<msg timestamp="20201030 10:57:39.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021100278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.843" endtime="20201030 10:57:39.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021100278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.135" endtime="20201030 10:57:39.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.143" endtime="20201030 10:57:39.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.841" endtime="20201030 10:57:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.839" endtime="20201030 10:57:39.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.150" level="INFO">${RESULT} = [{'diff': 1.2430000000000774e-05}, {'diff': 7.540999999999798e-06}, {'diff': 7.554999999999368e-06}, {'diff': 8.055999999999341e-06}, {'diff': 7.540999999999798e-06}, {'diff': 8.555999999999842e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:39.147" endtime="20201030 10:57:39.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.154" level="INFO">${ACCURACY} = {'diff': [1.2430000000000774e-05, 7.540999999999798e-06, 7.554999999999368e-06, 8.055999999999341e-06, 7.540999999999798e-06, 8.555999999999842e-06, 8.041999999999772e-06, 7.554999999999368e-06, 7.568...</msg>
<status status="PASS" starttime="20201030 10:57:39.151" endtime="20201030 10:57:39.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.162" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.158" endtime="20201030 10:57:39.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.165" level="INFO">VALUE: [1.2430000000000774e-05, 7.540999999999798e-06, 7.554999999999368e-06, 8.055999999999341e-06, 7.540999999999798e-06, 8.555999999999842e-06, 8.041999999999772e-06, 7.554999999999368e-06, 7.568999999998938e-06, 8.07000000000238e-06, 7.569000000002407e-06, 7.540999999999798e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.041000000000298e-06, 8.041000000000298e-06, 8.110999999998147e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.528000000000702e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.055999999999341e-06, 7.554999999999368e-06, 8.055000000003337e-06, 7.5419999999992715e-06, 8.555999999999842e-06, 8.000000000001062e-06, 7.555999999998841e-06, 8.041999999999772e-06, 7.554999999999368e-06, 8.055999999999341e-06, 7.556000000002311e-06, 8.555999999999842e-06, 7.527999999999702e-06, 8.055999999999341e-06, 7.514000000000132e-06, 8.041999999999772e-06, 8.055999999999341e-06, 7.556000000002311e-06, 8.041000000000298e-06, 8.056000000002811e-06, 8.069999999998911e-06, 7.555999999998841e-06, 7.500000000000562e-06, 7.554999999999368e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.163" endtime="20201030 10:57:39.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.155" endtime="20201030 10:57:39.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.170" endtime="20201030 10:57:39.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.168" endtime="20201030 10:57:39.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.167" endtime="20201030 10:57:39.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.805" endtime="20201030 10:57:39.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.805" endtime="20201030 10:57:39.191"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.199" endtime="20201030 10:57:39.217"></status>
</kw>
<msg timestamp="20201030 10:57:39.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.198" endtime="20201030 10:57:39.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.219" endtime="20201030 10:57:39.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.221" endtime="20201030 10:57:39.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.195" endtime="20201030 10:57:39.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.193" endtime="20201030 10:57:39.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.230" endtime="20201030 10:57:39.515"></status>
</kw>
<msg timestamp="20201030 10:57:39.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.228" endtime="20201030 10:57:39.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.520" endtime="20201030 10:57:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.528" endtime="20201030 10:57:39.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.226" endtime="20201030 10:57:39.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.224" endtime="20201030 10:57:39.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.534" level="INFO">${RESULT} = [{'diff': 1.2917000000001178e-05}, {'diff': 9.069000000000438e-06}, {'diff': 8.540999999997329e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.056000000000342e-06}, {'diff': 8.541000000000798e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:39.531" endtime="20201030 10:57:39.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.539" level="INFO">${ACCURACY} = {'diff': [1.2917000000001178e-05, 9.069000000000438e-06, 8.540999999997329e-06, 9.069000000000438e-06, 9.056000000000342e-06, 8.541000000000798e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.611...</msg>
<status status="PASS" starttime="20201030 10:57:39.535" endtime="20201030 10:57:39.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.544" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.543" endtime="20201030 10:57:39.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.546" level="INFO">VALUE: [1.2917000000001178e-05, 9.069000000000438e-06, 8.540999999997329e-06, 9.069000000000438e-06, 9.056000000000342e-06, 8.541000000000798e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.611000000002117e-06, 8.568999999999938e-06, 8.500000000001562e-06, 8.985999999999023e-06, 9.042000000000772e-06, 9.068999999996968e-06, 8.555999999999842e-06, 9.041999999997302e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.042000000000772e-06, 8.555999999999842e-06, 8.555000000000368e-06, 9.056000000000342e-06, 8.541999999996802e-06, 9.042000000000772e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.569999999999411e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.055000000000868e-06, 8.527000000001228e-06, 9.055000000000868e-06, 9.056000000000342e-06, 8.540999999997329e-06, 8.541000000000798e-06, 8.542000000000272e-06, 8.556000000003311e-06, 8.555999999999842e-06, 9.042000000000772e-06, 8.528000000000702e-06, 9.042000000000772e-06, 9.513999999998662e-06, 9.000000000002062e-06, 9.056000000000342e-06, 9.026999999998259e-06, 8.541000000000798e-06, 9.041000000001298e-06, 9.040999999997829e-06, 8.542000000000272e-06, 9.042000000000772e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.545" endtime="20201030 10:57:39.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.540" endtime="20201030 10:57:39.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.551" endtime="20201030 10:57:39.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.550" endtime="20201030 10:57:39.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.548" endtime="20201030 10:57:39.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.191" endtime="20201030 10:57:39.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.191" endtime="20201030 10:57:39.572"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.580" endtime="20201030 10:57:39.598"></status>
</kw>
<msg timestamp="20201030 10:57:39.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.579" endtime="20201030 10:57:39.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.600" endtime="20201030 10:57:39.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.603" endtime="20201030 10:57:39.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.576" endtime="20201030 10:57:39.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.574" endtime="20201030 10:57:39.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.611" endtime="20201030 10:57:39.898"></status>
</kw>
<msg timestamp="20201030 10:57:39.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.610" endtime="20201030 10:57:39.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.903" endtime="20201030 10:57:39.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.911" endtime="20201030 10:57:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.607" endtime="20201030 10:57:39.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.606" endtime="20201030 10:57:39.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.917" level="INFO">${RESULT} = [{'diff': 1.3930000000002274e-05}, {'diff': 1.0070000000000912e-05}, {'diff': 1.0084000000000481e-05}, {'diff': 1.0013999999999162e-05}, {'diff': 1.0028000000002202e-05}, {'diff': 1.0041000000002298e-...</msg>
<status status="PASS" starttime="20201030 10:57:39.914" endtime="20201030 10:57:39.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.921" level="INFO">${ACCURACY} = {'diff': [1.3930000000002274e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 9.597000000000078e-06, 9.568999999997468e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:39.918" endtime="20201030 10:57:39.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.926" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.925" endtime="20201030 10:57:39.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.928" level="INFO">VALUE: [1.3930000000002274e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 9.597000000000078e-06, 9.568999999997468e-06, 1.0040999999998829e-05, 9.583000000000508e-06, 9.471999999999953e-06, 1.0027000000002728e-05, 1.0055999999997872e-05, 1.0055999999997872e-05, 9.999999999999593e-06, 9.569000000000938e-06, 1.0041999999998302e-05, 9.542000000001272e-06, 9.541999999997802e-06, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0541999999998802e-05, 9.526999999998759e-06, 9.541000000001798e-06, 1.0056000000001342e-05, 9.527999999998232e-06, 1.0541999999998802e-05, 9.540999999998329e-06, 9.542000000001272e-06, 1.0028000000002202e-05, 9.556000000000842e-06, 1.0055999999997872e-05, 9.540999999998329e-06, 1.0055999999997872e-05, 9.540999999998329e-06, 1.0054999999998399e-05, 9.542000000001272e-06, 9.583000000000508e-06, 9.542000000001272e-06, 1.0055999999997872e-05, 9.554999999997899e-06, 1.0041999999998302e-05, 1.0027999999998732e-05, 9.541999999997802e-06, 1.0042000000001772e-05, 1.0027999999998732e-05, 9.971999999996983e-06, 1.0055999999997872e-05, 9.556000000000842e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.927" endtime="20201030 10:57:39.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.922" endtime="20201030 10:57:39.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.933" endtime="20201030 10:57:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.932" endtime="20201030 10:57:39.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.931" endtime="20201030 10:57:39.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.573" endtime="20201030 10:57:39.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.572" endtime="20201030 10:57:39.954"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.962" endtime="20201030 10:57:39.981"></status>
</kw>
<msg timestamp="20201030 10:57:39.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.961" endtime="20201030 10:57:39.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.983" endtime="20201030 10:57:39.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.985" endtime="20201030 10:57:39.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.958" endtime="20201030 10:57:39.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.956" endtime="20201030 10:57:39.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.994" endtime="20201030 10:57:40.278"></status>
</kw>
<msg timestamp="20201030 10:57:40.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02051075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:39.993" endtime="20201030 10:57:40.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02051075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:40.283" endtime="20201030 10:57:40.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.291" endtime="20201030 10:57:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.990" endtime="20201030 10:57:40.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.988" endtime="20201030 10:57:40.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.297" level="INFO">${RESULT} = [{'diff': 1.536099999999846e-05}, {'diff': 1.0597000000001078e-05}, {'diff': 1.0554999999998899e-05}, {'diff': 1.1027999999999732e-05}, {'diff': 1.0541999999998802e-05}, {'diff': 1.1055999999998872e-0...</msg>
<status status="PASS" starttime="20201030 10:57:40.294" endtime="20201030 10:57:40.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.302" level="INFO">${ACCURACY} = {'diff': [1.536099999999846e-05, 1.0597000000001078e-05, 1.0554999999998899e-05, 1.1027999999999732e-05, 1.0541999999998802e-05, 1.1055999999998872e-05, 1.0554999999998899e-05, 1.0597000000001078e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:40.298" endtime="20201030 10:57:40.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.306" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.305" endtime="20201030 10:57:40.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.308" level="INFO">VALUE: [1.536099999999846e-05, 1.0597000000001078e-05, 1.0554999999998899e-05, 1.1027999999999732e-05, 1.0541999999998802e-05, 1.1055999999998872e-05, 1.0554999999998899e-05, 1.0597000000001078e-05, 1.1054999999999399e-05, 1.0554999999998899e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.0556000000001842e-05, 1.1041999999999302e-05, 1.0972000000001453e-05, 1.0554999999998899e-05, 1.0568999999998469e-05, 1.1054999999999399e-05, 1.1041999999999302e-05, 1.0569999999997942e-05, 1.0527999999999232e-05, 1.1096999999998108e-05, 1.1054999999999399e-05, 1.1055999999998872e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.1055999999998872e-05, 1.0555999999998372e-05, 1.0556000000001842e-05, 1.0513999999999663e-05, 1.0555000000002368e-05, 1.1096999999998108e-05, 1.1054999999999399e-05, 1.0555000000002368e-05, 1.1040999999999829e-05, 1.1041999999999302e-05, 1.0554999999998899e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0542000000002272e-05, 1.1554999999999899e-05, 1.1040999999999829e-05, 1.0569999999997942e-05, 1.0556000000001842e-05, 1.1042000000002772e-05, 1.1027999999999732e-05, 1.1055999999998872e-05, 1.1554999999999899e-05]</msg>
<status status="PASS" starttime="20201030 10:57:40.307" endtime="20201030 10:57:41.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.302" endtime="20201030 10:57:41.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.262" endtime="20201030 10:57:41.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.258" endtime="20201030 10:57:41.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.256" endtime="20201030 10:57:41.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.955" endtime="20201030 10:57:41.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.954" endtime="20201030 10:57:41.286"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.304" endtime="20201030 10:57:41.326"></status>
</kw>
<msg timestamp="20201030 10:57:41.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.301" endtime="20201030 10:57:41.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.330" endtime="20201030 10:57:41.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.333" endtime="20201030 10:57:41.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.295" endtime="20201030 10:57:41.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.291" endtime="20201030 10:57:41.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.342" endtime="20201030 10:57:41.629"></status>
</kw>
<msg timestamp="20201030 10:57:41.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033101403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033117333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.340" endtime="20201030 10:57:41.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033101403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033117333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.633" endtime="20201030 10:57:41.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.641" endtime="20201030 10:57:41.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.338" endtime="20201030 10:57:41.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.336" endtime="20201030 10:57:41.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.647" level="INFO">${RESULT} = [{'diff': 1.5929999999997335e-05}, {'diff': 1.254099999999786e-05}, {'diff': 1.2027999999997263e-05}, {'diff': 1.2042000000003772e-05}, {'diff': 1.2055000000003868e-05}, {'diff': 1.1556000000002842e-0...</msg>
<status status="PASS" starttime="20201030 10:57:41.644" endtime="20201030 10:57:41.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.652" level="INFO">${ACCURACY} = {'diff': [1.5929999999997335e-05, 1.254099999999786e-05, 1.2027999999997263e-05, 1.2042000000003772e-05, 1.2055000000003868e-05, 1.1556000000002842e-05, 1.202699999999779e-05, 1.205499999999693e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:41.648" endtime="20201030 10:57:41.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.657" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.656" endtime="20201030 10:57:41.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.659" level="INFO">VALUE: [1.5929999999997335e-05, 1.254099999999786e-05, 1.2027999999997263e-05, 1.2042000000003772e-05, 1.2055000000003868e-05, 1.1556000000002842e-05, 1.202699999999779e-05, 1.205499999999693e-05, 1.1556000000002842e-05, 1.2041000000004298e-05, 1.154099999999686e-05, 1.1986000000005492e-05, 1.1527999999996763e-05, 1.2070000000002912e-05, 1.204099999999736e-05, 1.1542000000003272e-05, 1.1555000000003368e-05, 1.205499999999693e-05, 1.2013999999997693e-05, 1.1542000000003272e-05, 1.2125000000001718e-05, 1.2028000000004202e-05, 1.1985999999998553e-05, 1.1471999999998483e-05, 1.205499999999693e-05, 1.2069999999995973e-05, 1.254099999999786e-05, 1.2056000000003342e-05, 1.2055000000003868e-05, 1.1542000000003272e-05, 1.1999999999998123e-05, 1.1527999999996763e-05, 1.2042000000003772e-05, 1.2041999999996833e-05, 1.1527999999996763e-05, 1.2082999999996069e-05, 1.2056000000003342e-05, 1.2027999999997263e-05, 1.1556000000002842e-05, 1.1513999999997193e-05, 1.2055999999996403e-05, 1.1541999999996333e-05, 1.155499999999643e-05, 1.1597000000002078e-05, 1.1584000000001982e-05, 1.1542000000003272e-05, 1.2041999999996833e-05, 1.2056000000003342e-05, 1.2041000000004298e-05, 1.2110999999995209e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.658" endtime="20201030 10:57:41.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.653" endtime="20201030 10:57:41.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.664" endtime="20201030 10:57:41.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.663" endtime="20201030 10:57:41.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.662" endtime="20201030 10:57:41.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.288" endtime="20201030 10:57:41.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.287" endtime="20201030 10:57:41.685"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.693" endtime="20201030 10:57:41.710"></status>
</kw>
<msg timestamp="20201030 10:57:41.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.692" endtime="20201030 10:57:41.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.711" endtime="20201030 10:57:41.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.713" endtime="20201030 10:57:41.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.689" endtime="20201030 10:57:41.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.687" endtime="20201030 10:57:41.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.723" endtime="20201030 10:57:42.008"></status>
</kw>
<msg timestamp="20201030 10:57:42.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.721" endtime="20201030 10:57:42.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.012" endtime="20201030 10:57:42.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.020" endtime="20201030 10:57:42.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.718" endtime="20201030 10:57:42.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.717" endtime="20201030 10:57:42.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.027" level="INFO">${RESULT} = [{'diff': 1.743099999999831e-05}, {'diff': 1.3056000000000872e-05}, {'diff': 1.3041000000001829e-05}, {'diff': 1.3055999999997403e-05}, {'diff': 1.254099999999786e-05}, {'diff': 1.3056000000000872e-05...</msg>
<status status="PASS" starttime="20201030 10:57:42.024" endtime="20201030 10:57:42.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.031" level="INFO">${ACCURACY} = {'diff': [1.743099999999831e-05, 1.3056000000000872e-05, 1.3041000000001829e-05, 1.3055999999997403e-05, 1.254099999999786e-05, 1.3056000000000872e-05, 1.255499999999743e-05, 1.3056000000000872e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:42.028" endtime="20201030 10:57:42.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.035" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.034" endtime="20201030 10:57:42.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.038" level="INFO">VALUE: [1.743099999999831e-05, 1.3056000000000872e-05, 1.3041000000001829e-05, 1.3055999999997403e-05, 1.254099999999786e-05, 1.3056000000000872e-05, 1.255499999999743e-05, 1.3056000000000872e-05, 1.3041000000001829e-05, 1.3069000000000969e-05, 1.305499999999793e-05, 1.2541000000001329e-05, 1.3070000000000442e-05, 1.304099999999836e-05, 1.3055000000001399e-05, 1.2528000000001233e-05, 1.2528000000001233e-05, 1.3056000000000872e-05, 1.2556000000000372e-05, 1.2555000000000899e-05, 1.3069000000000969e-05, 1.2541000000001329e-05, 1.2569999999999942e-05, 1.3042000000001303e-05, 1.2596999999999609e-05, 1.2569000000000469e-05, 1.3056000000000872e-05, 1.3069000000000969e-05, 1.3541999999998333e-05, 1.3541999999998333e-05, 1.3056000000000872e-05, 1.3555999999997903e-05, 1.2556000000000372e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.2569999999999942e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.2542000000000803e-05, 1.2528000000001233e-05, 1.2556000000000372e-05, 1.252699999999829e-05, 1.304099999999836e-05, 1.354099999999886e-05, 1.3042000000001303e-05, 1.2556000000000372e-05, 1.3069000000000969e-05, 1.2542000000000803e-05, 1.3055000000001399e-05, 1.2555000000000899e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.037" endtime="20201030 10:57:42.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.032" endtime="20201030 10:57:42.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.043" endtime="20201030 10:57:42.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.042" endtime="20201030 10:57:42.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.040" endtime="20201030 10:57:42.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.686" endtime="20201030 10:57:42.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.685" endtime="20201030 10:57:42.064"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.072" endtime="20201030 10:57:42.091"></status>
</kw>
<msg timestamp="20201030 10:57:42.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.071" endtime="20201030 10:57:42.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.092" endtime="20201030 10:57:42.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.095" endtime="20201030 10:57:42.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.068" endtime="20201030 10:57:42.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.066" endtime="20201030 10:57:42.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.104" endtime="20201030 10:57:42.389"></status>
</kw>
<msg timestamp="20201030 10:57:42.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.102" endtime="20201030 10:57:42.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.393" endtime="20201030 10:57:42.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.401" endtime="20201030 10:57:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.100" endtime="20201030 10:57:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.098" endtime="20201030 10:57:42.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.407" level="INFO">${RESULT} = [{'diff': 1.843100000000278e-05}, {'diff': 1.3542000000001803e-05}, {'diff': 1.3486000000000054e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.3556000000001373e-05}, {'diff': 1.4056000000001873e-0...</msg>
<status status="PASS" starttime="20201030 10:57:42.404" endtime="20201030 10:57:42.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.412" level="INFO">${ACCURACY} = {'diff': [1.843100000000278e-05, 1.3542000000001803e-05, 1.3486000000000054e-05, 1.3611000000000179e-05, 1.3556000000001373e-05, 1.4056000000001873e-05, 1.3972000000000984e-05, 1.454099999999986e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:42.408" endtime="20201030 10:57:42.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.416" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.415" endtime="20201030 10:57:42.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.419" level="INFO">VALUE: [1.843100000000278e-05, 1.3542000000001803e-05, 1.3486000000000054e-05, 1.3611000000000179e-05, 1.3556000000001373e-05, 1.4056000000001873e-05, 1.3972000000000984e-05, 1.454099999999986e-05, 1.4070000000001442e-05, 1.404099999999936e-05, 1.3486000000000054e-05, 1.3568999999998e-05, 1.4042000000002303e-05, 1.3568999999998e-05, 1.4055999999998403e-05, 1.404099999999936e-05, 1.3556000000001373e-05, 1.3555000000001899e-05, 1.404099999999936e-05, 1.4055000000002399e-05, 1.4055000000002399e-05, 1.3514000000002663e-05, 1.4041999999998833e-05, 1.4611000000001179e-05, 1.3555000000001899e-05, 1.3555000000001899e-05, 1.3556000000001373e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4055999999998403e-05, 1.3527999999998763e-05, 1.3541999999998333e-05, 1.4055999999998403e-05, 1.4041999999998833e-05, 1.3569000000001469e-05, 1.3556000000001373e-05, 1.4070000000001442e-05, 1.4041999999998833e-05, 1.3570000000000942e-05, 1.3541999999998333e-05, 1.4042000000002303e-05, 1.4555999999998903e-05, 1.3542000000001803e-05, 1.402699999999979e-05, 1.3555000000001899e-05, 1.3570000000000942e-05, 1.352699999999929e-05, 1.4069999999997973e-05, 1.3555000000001899e-05, 1.3583000000001039e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.417" endtime="20201030 10:57:42.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.412" endtime="20201030 10:57:42.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.483" endtime="20201030 10:57:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.482" endtime="20201030 10:57:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.481" endtime="20201030 10:57:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.064" endtime="20201030 10:57:42.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.064" endtime="20201030 10:57:42.504"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.512" endtime="20201030 10:57:42.530"></status>
</kw>
<msg timestamp="20201030 10:57:42.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.511" endtime="20201030 10:57:42.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.531" endtime="20201030 10:57:42.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.534" endtime="20201030 10:57:42.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.508" endtime="20201030 10:57:42.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.506" endtime="20201030 10:57:42.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.543" endtime="20201030 10:57:42.844"></status>
</kw>
<msg timestamp="20201030 10:57:42.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:42.542" endtime="20201030 10:57:42.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:42.852" endtime="20201030 10:57:42.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.860" endtime="20201030 10:57:42.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.539" endtime="20201030 10:57:42.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.537" endtime="20201030 10:57:42.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.867" level="INFO">${RESULT} = [{'diff': 1.9471999999999545e-05}, {'diff': 1.4568999999999e-05}, {'diff': 1.5097000000002109e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.50689999999995e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:42.863" endtime="20201030 10:57:42.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.872" level="INFO">${ACCURACY} = {'diff': [1.9471999999999545e-05, 1.4568999999999e-05, 1.5097000000002109e-05, 1.4555999999998903e-05, 1.459699999999814e-05, 1.50689999999995e-05, 1.4541999999999333e-05, 1.4542000000002803e-05, 1.45...</msg>
<status status="PASS" starttime="20201030 10:57:42.868" endtime="20201030 10:57:42.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.876" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.875" endtime="20201030 10:57:42.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.879" level="INFO">VALUE: [1.9471999999999545e-05, 1.4568999999999e-05, 1.5097000000002109e-05, 1.4555999999998903e-05, 1.459699999999814e-05, 1.50689999999995e-05, 1.4541999999999333e-05, 1.4542000000002803e-05, 1.4556000000002373e-05, 1.5083999999998543e-05, 1.455499999999943e-05, 1.4569999999998473e-05, 1.5041999999999833e-05, 1.455499999999943e-05, 1.5028000000000263e-05, 1.4541999999999333e-05, 1.4597000000001609e-05, 1.5055999999999403e-05, 1.454099999999986e-05, 1.555500000000043e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4542000000002803e-05, 1.454099999999986e-05, 1.5555999999999903e-05, 1.4569999999998473e-05, 1.5014000000000693e-05, 1.5083000000002539e-05, 1.5070000000002443e-05, 1.505499999999993e-05, 1.504100000000036e-05, 1.4514000000000193e-05, 1.4568999999999e-05, 1.4556000000002373e-05, 1.4569999999998473e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.4541999999999333e-05, 1.5056000000002873e-05, 1.4527999999999763e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.4487000000000527e-05, 1.4555999999998903e-05, 1.5055999999999403e-05, 1.5097000000002109e-05, 1.5056000000002873e-05, 1.5556000000003373e-05, 1.5069999999998973e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.877" endtime="20201030 10:57:42.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.873" endtime="20201030 10:57:42.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.884" endtime="20201030 10:57:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.882" endtime="20201030 10:57:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.881" endtime="20201030 10:57:42.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.505" endtime="20201030 10:57:42.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.504" endtime="20201030 10:57:42.904"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.913" endtime="20201030 10:57:42.929"></status>
</kw>
<msg timestamp="20201030 10:57:42.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.911" endtime="20201030 10:57:42.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.931" endtime="20201030 10:57:42.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.933" endtime="20201030 10:57:42.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.909" endtime="20201030 10:57:42.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.907" endtime="20201030 10:57:42.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.942" endtime="20201030 10:57:43.228"></status>
</kw>
<msg timestamp="20201030 10:57:43.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.941" endtime="20201030 10:57:43.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.233" endtime="20201030 10:57:43.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.241" endtime="20201030 10:57:43.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.938" endtime="20201030 10:57:43.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.936" endtime="20201030 10:57:43.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.247" level="INFO">${RESULT} = [{'diff': 1.9902000000002196e-05}, {'diff': 1.6513999999998724e-05}, {'diff': 1.605500000000093e-05}, {'diff': 1.655499999999796e-05}, {'diff': 1.6041999999997364e-05}, {'diff': 1.5555999999999903e-05...</msg>
<status status="PASS" starttime="20201030 10:57:43.244" endtime="20201030 10:57:43.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.251" level="INFO">${ACCURACY} = {'diff': [1.9902000000002196e-05, 1.6513999999998724e-05, 1.605500000000093e-05, 1.655499999999796e-05, 1.6041999999997364e-05, 1.5555999999999903e-05, 1.5985999999999084e-05, 1.558299999999957e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:43.248" endtime="20201030 10:57:43.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.256" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.255" endtime="20201030 10:57:43.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.258" level="INFO">VALUE: [1.9902000000002196e-05, 1.6513999999998724e-05, 1.605500000000093e-05, 1.655499999999796e-05, 1.6041999999997364e-05, 1.5555999999999903e-05, 1.5985999999999084e-05, 1.558299999999957e-05, 1.60690000000005e-05, 1.60690000000005e-05, 1.605500000000093e-05, 1.5542000000000333e-05, 1.5583999999999043e-05, 1.60690000000005e-05, 1.60690000000005e-05, 1.5569e-05, 1.6069999999999973e-05, 1.6041999999997364e-05, 1.5569e-05, 1.5555999999999903e-05, 1.6056000000000403e-05, 1.5569e-05, 1.6570000000000473e-05, 1.6056000000000403e-05, 1.654100000000186e-05, 1.6541999999997864e-05, 1.5542000000000333e-05, 1.558299999999957e-05, 1.611099999999921e-05, 1.6042000000000833e-05, 1.6000000000002124e-05, 1.604099999999789e-05, 1.608300000000007e-05, 1.602700000000179e-05, 1.6069999999999973e-05, 1.6056000000000403e-05, 1.6042000000000833e-05, 1.6027999999997794e-05, 1.555500000000043e-05, 1.562500000000175e-05, 1.6028000000001263e-05, 1.605500000000093e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.605499999999746e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.5638000000001845e-05, 1.6056000000000403e-05, 1.5486000000002054e-05]</msg>
<status status="PASS" starttime="20201030 10:57:43.257" endtime="20201030 10:57:43.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.252" endtime="20201030 10:57:43.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.263" endtime="20201030 10:57:43.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.262" endtime="20201030 10:57:43.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.261" endtime="20201030 10:57:43.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.905" endtime="20201030 10:57:43.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.905" endtime="20201030 10:57:43.284"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.292" endtime="20201030 10:57:43.311"></status>
</kw>
<msg timestamp="20201030 10:57:43.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.291" endtime="20201030 10:57:43.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.312" endtime="20201030 10:57:43.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.315" endtime="20201030 10:57:43.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.288" endtime="20201030 10:57:43.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.286" endtime="20201030 10:57:43.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.323" endtime="20201030 10:57:43.608"></status>
</kw>
<msg timestamp="20201030 10:57:43.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.322" endtime="20201030 10:57:43.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020556653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020577569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.613" endtime="20201030 10:57:43.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.621" endtime="20201030 10:57:43.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.319" endtime="20201030 10:57:43.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.318" endtime="20201030 10:57:43.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.627" level="INFO">${RESULT} = [{'diff': 2.0915999999999296e-05}, {'diff': 1.655500000000143e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.705499999999846e-05}, {'diff': 1.651299999999925e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:43.624" endtime="20201030 10:57:43.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.631" level="INFO">${ACCURACY} = {'diff': [2.0915999999999296e-05, 1.655500000000143e-05, 1.661099999999971e-05, 1.6542000000001333e-05, 1.705499999999846e-05, 1.651299999999925e-05, 1.654099999999839e-05, 1.654100000000186e-05, 1.65...</msg>
<status status="PASS" starttime="20201030 10:57:43.628" endtime="20201030 10:57:43.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.636" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.635" endtime="20201030 10:57:43.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.638" level="INFO">VALUE: [2.0915999999999296e-05, 1.655500000000143e-05, 1.661099999999971e-05, 1.6542000000001333e-05, 1.705499999999846e-05, 1.651299999999925e-05, 1.654099999999839e-05, 1.654100000000186e-05, 1.655499999999796e-05, 1.7027999999998794e-05, 1.6556000000000903e-05, 1.6556000000000903e-05, 1.6570000000000473e-05, 1.70690000000015e-05, 1.7070000000000973e-05, 1.7055999999997934e-05, 1.705499999999846e-05, 1.7027999999998794e-05, 1.7056000000001403e-05, 1.6472999999999488e-05, 1.7055999999997934e-05, 1.6542000000001333e-05, 1.711100000000021e-05, 1.7041999999998364e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.7041999999998364e-05, 1.7056000000001403e-05, 1.7027999999998794e-05, 1.70690000000015e-05, 1.655500000000143e-05, 1.7041999999998364e-05, 1.7028000000002264e-05, 1.705499999999846e-05, 1.662499999999928e-05, 1.6597999999999613e-05, 1.6542000000001333e-05, 1.652699999999882e-05, 1.704099999999889e-05, 1.654100000000186e-05, 1.656899999999753e-05, 1.6541999999997864e-05, 1.7013999999999224e-05, 1.7041999999998364e-05, 1.70690000000015e-05, 1.6584000000000043e-05, 1.7028000000002264e-05, 1.70690000000015e-05, 1.704099999999889e-05, 1.6541999999997864e-05]</msg>
<status status="PASS" starttime="20201030 10:57:43.637" endtime="20201030 10:57:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.632" endtime="20201030 10:57:43.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.647" endtime="20201030 10:57:43.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.645" endtime="20201030 10:57:43.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.644" endtime="20201030 10:57:43.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.285" endtime="20201030 10:57:43.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.284" endtime="20201030 10:57:43.667"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.676" endtime="20201030 10:57:43.693"></status>
</kw>
<msg timestamp="20201030 10:57:43.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.674" endtime="20201030 10:57:43.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.695" endtime="20201030 10:57:43.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.697" endtime="20201030 10:57:43.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.672" endtime="20201030 10:57:43.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.670" endtime="20201030 10:57:43.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.706" endtime="20201030 10:57:43.992"></status>
</kw>
<msg timestamp="20201030 10:57:43.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.705" endtime="20201030 10:57:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.996" endtime="20201030 10:57:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.005" endtime="20201030 10:57:44.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.702" endtime="20201030 10:57:44.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.701" endtime="20201030 10:57:44.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.011" level="INFO">${RESULT} = [{'diff': 2.243099999999984e-05}, {'diff': 1.8042000000002834e-05}, {'diff': 1.8069999999998504e-05}, {'diff': 1.8041999999999364e-05}, {'diff': 1.8041999999999364e-05}, {'diff': 1.80690000000025e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:44.008" endtime="20201030 10:57:44.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.016" level="INFO">${ACCURACY} = {'diff': [2.243099999999984e-05, 1.8042000000002834e-05, 1.8069999999998504e-05, 1.8041999999999364e-05, 1.8041999999999364e-05, 1.80690000000025e-05, 1.752699999999982e-05, 1.754099999999939e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 10:57:44.012" endtime="20201030 10:57:44.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.020" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.019" endtime="20201030 10:57:44.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.023" level="INFO">VALUE: [2.243099999999984e-05, 1.8042000000002834e-05, 1.8069999999998504e-05, 1.8041999999999364e-05, 1.8041999999999364e-05, 1.80690000000025e-05, 1.752699999999982e-05, 1.754099999999939e-05, 1.759700000000114e-05, 1.7541999999998864e-05, 1.8041999999999364e-05, 1.7569000000002e-05, 1.7556000000001903e-05, 1.802700000000032e-05, 1.812500000000078e-05, 1.809700000000164e-05, 1.8041999999999364e-05, 1.805500000000293e-05, 1.8041999999999364e-05, 1.8070000000001973e-05, 1.754100000000286e-05, 1.854100000000039e-05, 1.7542000000002334e-05, 1.805499999999946e-05, 1.7542000000002334e-05, 1.805499999999946e-05, 1.7569000000002e-05, 1.756899999999853e-05, 1.8000000000000654e-05, 1.8569999999999004e-05, 1.7556000000001903e-05, 1.755499999999896e-05, 1.8056000000002403e-05, 1.755500000000243e-05, 1.811099999999774e-05, 1.804099999999989e-05, 1.7570000000001473e-05, 1.7555999999998434e-05, 1.804099999999989e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.8042000000002834e-05, 1.7527999999999294e-05, 1.8055999999998934e-05, 1.754099999999939e-05, 1.7555999999998434e-05, 1.8027999999999794e-05, 1.8555999999999434e-05, 1.754099999999939e-05, 1.8014000000000224e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.022" endtime="20201030 10:57:44.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.017" endtime="20201030 10:57:44.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.028" endtime="20201030 10:57:44.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.026" endtime="20201030 10:57:44.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.025" endtime="20201030 10:57:44.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.668" endtime="20201030 10:57:44.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.668" endtime="20201030 10:57:44.049"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.057" endtime="20201030 10:57:44.075"></status>
</kw>
<msg timestamp="20201030 10:57:44.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.056" endtime="20201030 10:57:44.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.076" endtime="20201030 10:57:44.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.079" endtime="20201030 10:57:44.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.053" endtime="20201030 10:57:44.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.051" endtime="20201030 10:57:44.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.088" endtime="20201030 10:57:44.373"></status>
</kw>
<msg timestamp="20201030 10:57:44.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.086" endtime="20201030 10:57:44.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.377" endtime="20201030 10:57:44.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.386" endtime="20201030 10:57:44.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.084" endtime="20201030 10:57:44.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.082" endtime="20201030 10:57:44.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.392" level="INFO">${RESULT} = [{'diff': 2.341700000000127e-05}, {'diff': 1.9041999999996895e-05}, {'diff': 1.906900000000003e-05}, {'diff': 1.8555999999999434e-05}, {'diff': 1.9069999999999504e-05}, {'diff': 1.85829999999991e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:44.389" endtime="20201030 10:57:44.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.396" level="INFO">${ACCURACY} = {'diff': [2.341700000000127e-05, 1.9041999999996895e-05, 1.906900000000003e-05, 1.8555999999999434e-05, 1.9069999999999504e-05, 1.85829999999991e-05, 1.8541999999999864e-05, 1.9042000000000364e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:57:44.393" endtime="20201030 10:57:44.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.401" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.400" endtime="20201030 10:57:44.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.403" level="INFO">VALUE: [2.341700000000127e-05, 1.9041999999996895e-05, 1.906900000000003e-05, 1.8555999999999434e-05, 1.9069999999999504e-05, 1.85829999999991e-05, 1.8541999999999864e-05, 1.9042000000000364e-05, 1.9014000000001224e-05, 1.90829999999996e-05, 1.8570000000002473e-05, 1.8513999999997255e-05, 1.8513999999997255e-05, 1.9514000000001724e-05, 1.906900000000003e-05, 1.8500000000001154e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.90829999999996e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.9055999999999934e-05, 1.8541999999999864e-05, 1.90829999999996e-05, 1.855499999999996e-05, 1.8486000000001584e-05, 1.9055999999999934e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.906900000000003e-05, 1.9013999999997755e-05, 1.905500000000046e-05, 1.854100000000039e-05, 1.9014000000001224e-05, 1.8528000000000294e-05, 1.955500000000096e-05, 1.859699999999867e-05, 1.904100000000089e-05, 1.855499999999996e-05, 1.8556000000002904e-05, 1.9028000000000794e-05, 1.85829999999991e-05, 1.8541999999999864e-05, 1.906900000000003e-05, 1.855499999999996e-05, 1.861100000000171e-05, 1.85829999999991e-05, 1.9055999999999934e-05, 1.8555999999999434e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.402" endtime="20201030 10:57:44.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.397" endtime="20201030 10:57:44.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.408" endtime="20201030 10:57:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.407" endtime="20201030 10:57:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.405" endtime="20201030 10:57:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.050" endtime="20201030 10:57:44.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.049" endtime="20201030 10:57:44.429"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.438" endtime="20201030 10:57:44.456"></status>
</kw>
<msg timestamp="20201030 10:57:44.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.436" endtime="20201030 10:57:44.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.458" endtime="20201030 10:57:44.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.460" endtime="20201030 10:57:44.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.433" endtime="20201030 10:57:44.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.431" endtime="20201030 10:57:44.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.469" endtime="20201030 10:57:44.755"></status>
</kw>
<msg timestamp="20201030 10:57:44.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020692208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.468" endtime="20201030 10:57:44.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020692208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.760" endtime="20201030 10:57:44.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.768" endtime="20201030 10:57:44.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.465" endtime="20201030 10:57:44.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.464" endtime="20201030 10:57:44.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.774" level="INFO">${RESULT} = [{'diff': 2.3929999999998397e-05}, {'diff': 1.955499999999749e-05}, {'diff': 1.955500000000096e-05}, {'diff': 1.9556000000000434e-05}, {'diff': 2.004099999999842e-05}, {'diff': 2.0056000000000934e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:44.771" endtime="20201030 10:57:44.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.778" level="INFO">${ACCURACY} = {'diff': [2.3929999999998397e-05, 1.955499999999749e-05, 1.955500000000096e-05, 1.9556000000000434e-05, 2.004099999999842e-05, 2.0056000000000934e-05, 1.9541999999997395e-05, 2.0041999999997895e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:44.775" endtime="20201030 10:57:44.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.783" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.782" endtime="20201030 10:57:44.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.785" level="INFO">VALUE: [2.3929999999998397e-05, 1.955499999999749e-05, 1.955500000000096e-05, 1.9556000000000434e-05, 2.004099999999842e-05, 2.0056000000000934e-05, 1.9541999999997395e-05, 2.0041999999997895e-05, 2.009700000000017e-05, 2.005500000000146e-05, 1.9542000000000864e-05, 1.9570000000000004e-05, 1.9555999999996965e-05, 1.955499999999749e-05, 1.9972000000000045e-05, 2.0041999999997895e-05, 2.0070000000000504e-05, 1.9570000000000004e-05, 2.012499999999931e-05, 2.005500000000146e-05, 2.0027999999998325e-05, 2.0056000000000934e-05, 1.955500000000096e-05, 1.956900000000053e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 2.012499999999931e-05, 2.0513999999999255e-05, 1.954100000000139e-05, 2.0569999999997535e-05, 2.005500000000146e-05, 2.0069999999997035e-05, 2.002700000000232e-05, 2.0056000000000934e-05, 2.006900000000103e-05, 1.9556000000000434e-05, 1.9541999999997395e-05, 2.006900000000103e-05, 2.004100000000189e-05, 2.006900000000103e-05, 2.005499999999799e-05, 1.954099999999792e-05, 2.0028000000001794e-05, 1.955500000000096e-05, 1.9528000000001294e-05, 2.0013999999998755e-05, 1.9556000000000434e-05, 2.0042000000001364e-05, 2.006900000000103e-05, 1.955499999999749e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.784" endtime="20201030 10:57:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.779" endtime="20201030 10:57:44.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.791" endtime="20201030 10:57:44.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.790" endtime="20201030 10:57:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.788" endtime="20201030 10:57:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.430" endtime="20201030 10:57:44.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.429" endtime="20201030 10:57:44.812"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.820" endtime="20201030 10:57:44.838"></status>
</kw>
<msg timestamp="20201030 10:57:44.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.819" endtime="20201030 10:57:44.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.839" endtime="20201030 10:57:44.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.842" endtime="20201030 10:57:44.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.816" endtime="20201030 10:57:44.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.814" endtime="20201030 10:57:44.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.852" endtime="20201030 10:57:45.140"></status>
</kw>
<msg timestamp="20201030 10:57:45.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.850" endtime="20201030 10:57:45.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.144" endtime="20201030 10:57:45.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.152" endtime="20201030 10:57:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.847" endtime="20201030 10:57:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.845" endtime="20201030 10:57:45.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.158" level="INFO">${RESULT} = [{'diff': 2.49169999999993e-05}, {'diff': 2.105499999999899e-05}, {'diff': 2.055500000000196e-05}, {'diff': 2.105500000000246e-05}, {'diff': 2.105499999999899e-05}, {'diff': 2.155499999999949e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:45.155" endtime="20201030 10:57:45.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.163" level="INFO">${ACCURACY} = {'diff': [2.49169999999993e-05, 2.105499999999899e-05, 2.055500000000196e-05, 2.105500000000246e-05, 2.105499999999899e-05, 2.155499999999949e-05, 2.0528000000002294e-05, 2.104099999999942e-05, 2.0555...</msg>
<status status="PASS" starttime="20201030 10:57:45.159" endtime="20201030 10:57:45.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.168" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.167" endtime="20201030 10:57:45.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.170" level="INFO">VALUE: [2.49169999999993e-05, 2.105499999999899e-05, 2.055500000000196e-05, 2.105500000000246e-05, 2.105499999999899e-05, 2.155499999999949e-05, 2.0528000000002294e-05, 2.104099999999942e-05, 2.0555999999997965e-05, 2.1056000000001934e-05, 2.055499999999849e-05, 2.1042000000002364e-05, 2.0513999999999255e-05, 2.0556000000001434e-05, 2.0556000000001434e-05, 2.059700000000067e-05, 2.055500000000196e-05, 2.1013999999999755e-05, 2.106900000000203e-05, 2.054099999999892e-05, 2.0542000000001864e-05, 2.0555999999997965e-05, 2.1055999999998465e-05, 2.109700000000117e-05, 2.1027999999999325e-05, 2.105499999999899e-05, 2.1541999999999395e-05, 2.055500000000196e-05, 2.104099999999942e-05, 2.054099999999892e-05, 2.0499999999999685e-05, 2.0556000000001434e-05, 2.0513999999999255e-05, 2.055499999999849e-05, 2.105499999999899e-05, 2.1556000000002434e-05, 2.104099999999942e-05, 2.105499999999899e-05, 2.1027999999999325e-05, 2.155500000000296e-05, 2.0555999999997965e-05, 2.054099999999892e-05, 2.1069999999998035e-05, 2.0542000000001864e-05, 2.106900000000203e-05, 2.0555999999997965e-05, 2.0555999999997965e-05, 2.105499999999899e-05, 2.1041999999998895e-05, 2.0971999999997576e-05]</msg>
<status status="PASS" starttime="20201030 10:57:45.169" endtime="20201030 10:57:45.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.164" endtime="20201030 10:57:45.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.175" endtime="20201030 10:57:45.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.174" endtime="20201030 10:57:45.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.173" endtime="20201030 10:57:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.813" endtime="20201030 10:57:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.812" endtime="20201030 10:57:45.196"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.205" endtime="20201030 10:57:45.222"></status>
</kw>
<msg timestamp="20201030 10:57:45.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.203" endtime="20201030 10:57:45.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.223" endtime="20201030 10:57:45.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.226" endtime="20201030 10:57:45.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.201" endtime="20201030 10:57:45.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.199" endtime="20201030 10:57:45.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.235" endtime="20201030 10:57:45.521"></status>
</kw>
<msg timestamp="20201030 10:57:45.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.233" endtime="20201030 10:57:45.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.526" endtime="20201030 10:57:45.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.534" endtime="20201030 10:57:45.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.231" endtime="20201030 10:57:45.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.229" endtime="20201030 10:57:45.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.541" level="INFO">${RESULT} = [{'diff': 2.6402000000001757e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.2042000000003364e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.15830000000021e-05}, {'diff': 2.2055999999999465e-05...</msg>
<status status="PASS" starttime="20201030 10:57:45.537" endtime="20201030 10:57:45.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.545" level="INFO">${ACCURACY} = {'diff': [2.6402000000001757e-05, 2.2055999999999465e-05, 2.2042000000003364e-05, 2.1541999999999395e-05, 2.15830000000021e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.1500000000000685e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:45.542" endtime="20201030 10:57:45.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.549" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.548" endtime="20201030 10:57:45.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.552" level="INFO">VALUE: [2.6402000000001757e-05, 2.2055999999999465e-05, 2.2042000000003364e-05, 2.1541999999999395e-05, 2.15830000000021e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.2028000000000325e-05, 2.2014000000000755e-05, 2.2069999999999035e-05, 2.2542000000000395e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.1541999999999395e-05, 2.2069999999999035e-05, 2.1555999999998965e-05, 2.2055999999999465e-05, 2.156900000000253e-05, 2.1555999999998965e-05, 2.1556000000002434e-05, 2.1556000000002434e-05, 2.159700000000167e-05, 2.1555999999998965e-05, 2.158299999999863e-05, 2.2069999999999035e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.1541999999999395e-05, 2.1999999999997716e-05, 2.155500000000296e-05, 2.211099999999827e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.2041999999999895e-05, 2.155499999999949e-05, 2.1570000000002004e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.155499999999949e-05, 2.1556000000002434e-05, 2.1555999999998965e-05, 2.1527999999999825e-05, 2.1541999999999395e-05, 2.2041999999999895e-05, 2.1584000000001574e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201030 10:57:45.550" endtime="20201030 10:57:45.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.545" endtime="20201030 10:57:45.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.557" endtime="20201030 10:57:45.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.555" endtime="20201030 10:57:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.554" endtime="20201030 10:57:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.197" endtime="20201030 10:57:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.196" endtime="20201030 10:57:45.577"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.586" endtime="20201030 10:57:45.605"></status>
</kw>
<msg timestamp="20201030 10:57:45.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.584" endtime="20201030 10:57:45.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.606" endtime="20201030 10:57:45.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.609" endtime="20201030 10:57:45.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.582" endtime="20201030 10:57:45.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.580" endtime="20201030 10:57:45.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.618" endtime="20201030 10:57:45.903"></status>
</kw>
<msg timestamp="20201030 10:57:45.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020699681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020727097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.616" endtime="20201030 10:57:45.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020699681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020727097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.907" endtime="20201030 10:57:45.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.916" endtime="20201030 10:57:45.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.614" endtime="20201030 10:57:45.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.612" endtime="20201030 10:57:45.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.922" level="INFO">${RESULT} = [{'diff': 2.7415999999998858e-05}, {'diff': 2.3040999999997952e-05}, {'diff': 2.305500000000099e-05}, {'diff': 2.2527999999997356e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.2542000000000395e-0...</msg>
<status status="PASS" starttime="20201030 10:57:45.919" endtime="20201030 10:57:45.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.926" level="INFO">${ACCURACY} = {'diff': [2.7415999999998858e-05, 2.3040999999997952e-05, 2.305500000000099e-05, 2.2527999999997356e-05, 2.2555999999999965e-05, 2.2542000000000395e-05, 2.2555999999999965e-05, 2.3056000000000465e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:45.923" endtime="20201030 10:57:45.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.931" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.930" endtime="20201030 10:57:45.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.933" level="INFO">VALUE: [2.7415999999998858e-05, 2.3040999999997952e-05, 2.305500000000099e-05, 2.2527999999997356e-05, 2.2555999999999965e-05, 2.2542000000000395e-05, 2.2555999999999965e-05, 2.3056000000000465e-05, 2.308300000000013e-05, 2.3070000000000035e-05, 2.305500000000099e-05, 2.2527999999997356e-05, 2.3055999999996996e-05, 2.3054999999997522e-05, 2.254100000000092e-05, 2.2569999999999535e-05, 2.2555999999999965e-05, 2.2985999999999146e-05, 2.256900000000006e-05, 2.3026999999998382e-05, 2.305500000000099e-05, 2.255500000000049e-05, 2.3082999999996662e-05, 2.2485999999998646e-05, 2.3013999999998286e-05, 2.2542000000000395e-05, 2.3556000000000965e-05, 2.2528000000000825e-05, 2.2527999999997356e-05, 2.3028000000001325e-05, 2.312500000000231e-05, 2.3014000000001755e-05, 2.3042000000000895e-05, 2.3070000000000035e-05, 2.3056000000000465e-05, 2.2569999999999535e-05, 2.254100000000092e-05, 2.304100000000142e-05, 2.3083999999999605e-05, 2.2555999999999965e-05, 2.30969999999997e-05, 2.255500000000049e-05, 2.3027999999997856e-05, 2.356900000000106e-05, 2.3084000000003074e-05, 2.3042000000000895e-05, 2.30969999999997e-05, 2.356900000000106e-05, 2.2528000000000825e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201030 10:57:45.932" endtime="20201030 10:57:45.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.927" endtime="20201030 10:57:45.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.939" endtime="20201030 10:57:45.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.937" endtime="20201030 10:57:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.936" endtime="20201030 10:57:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.578" endtime="20201030 10:57:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.578" endtime="20201030 10:57:45.960"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.968" endtime="20201030 10:57:45.986"></status>
</kw>
<msg timestamp="20201030 10:57:45.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.967" endtime="20201030 10:57:45.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.988" endtime="20201030 10:57:45.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.990" endtime="20201030 10:57:45.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.964" endtime="20201030 10:57:45.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.962" endtime="20201030 10:57:45.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.999" endtime="20201030 10:57:46.284"></status>
</kw>
<msg timestamp="20201030 10:57:46.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:45.998" endtime="20201030 10:57:46.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:46.289" endtime="20201030 10:57:46.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.297" endtime="20201030 10:57:46.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.995" endtime="20201030 10:57:46.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.993" endtime="20201030 10:57:46.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.303" level="INFO">${RESULT} = [{'diff': 2.793100000000187e-05}, {'diff': 2.355500000000149e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.4041999999998426e-05...</msg>
<status status="PASS" starttime="20201030 10:57:46.300" endtime="20201030 10:57:46.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.308" level="INFO">${ACCURACY} = {'diff': [2.793100000000187e-05, 2.355500000000149e-05, 2.3472000000000076e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.4041999999998426e-05, 2.406900000000156e-05, 2.3972000000000576e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:46.304" endtime="20201030 10:57:46.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.313" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.312" endtime="20201030 10:57:46.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.315" level="INFO">VALUE: [2.793100000000187e-05, 2.355500000000149e-05, 2.3472000000000076e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.4041999999998426e-05, 2.406900000000156e-05, 2.3972000000000576e-05, 2.355500000000149e-05, 2.4500000000000216e-05, 2.404100000000242e-05, 2.4070000000001035e-05, 2.3570000000000535e-05, 2.4000000000003185e-05, 2.4055999999997996e-05, 2.363900000000238e-05, 2.4056000000001465e-05, 2.4056000000001465e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3554999999998022e-05, 2.4028000000002325e-05, 2.4054999999998522e-05, 2.3637999999999437e-05, 2.456900000000206e-05, 2.3554999999998022e-05, 2.406900000000156e-05, 2.3542000000001395e-05, 2.4054999999998522e-05, 2.404100000000242e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.4012999999999812e-05, 2.4054999999998522e-05, 2.4070000000001035e-05, 2.3540999999998452e-05, 2.3554999999998022e-05, 2.405500000000199e-05, 2.3541999999997926e-05, 2.4070000000001035e-05, 2.3554999999998022e-05, 2.3584000000000105e-05, 2.3556000000000965e-05, 2.3542000000001395e-05, 2.3554999999998022e-05, 2.354100000000192e-05, 2.3570000000000535e-05, 2.4069999999997566e-05, 2.4568999999998592e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201030 10:57:46.314" endtime="20201030 10:57:46.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.309" endtime="20201030 10:57:46.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.321" endtime="20201030 10:57:46.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.319" endtime="20201030 10:57:46.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.317" endtime="20201030 10:57:46.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.961" endtime="20201030 10:57:46.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.960" endtime="20201030 10:57:46.341"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.350" endtime="20201030 10:57:46.368"></status>
</kw>
<msg timestamp="20201030 10:57:46.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.348" endtime="20201030 10:57:46.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.369" endtime="20201030 10:57:46.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.372" endtime="20201030 10:57:46.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.346" endtime="20201030 10:57:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.344" endtime="20201030 10:57:46.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.381" endtime="20201030 10:57:46.666"></status>
</kw>
<msg timestamp="20201030 10:57:46.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.379" endtime="20201030 10:57:46.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.671" endtime="20201030 10:57:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.679" endtime="20201030 10:57:46.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.376" endtime="20201030 10:57:46.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.375" endtime="20201030 10:57:46.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.685" level="INFO">${RESULT} = [{'diff': 2.9430000000000428e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.5070000000002035e-05}, {'diff': 2.4554999999999022e-05}, {'diff': 2.4554999999999022e-05}, {'diff': 2.5027999999999856e-...</msg>
<status status="PASS" starttime="20201030 10:57:46.682" endtime="20201030 10:57:46.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.690" level="INFO">${ACCURACY} = {'diff': [2.9430000000000428e-05, 2.5027999999999856e-05, 2.5070000000002035e-05, 2.4554999999999022e-05, 2.4554999999999022e-05, 2.5027999999999856e-05, 2.4500000000000216e-05, 2.5041999999999426e-05...</msg>
<status status="PASS" starttime="20201030 10:57:46.686" endtime="20201030 10:57:46.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.694" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.693" endtime="20201030 10:57:46.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.696" level="INFO">VALUE: [2.9430000000000428e-05, 2.5027999999999856e-05, 2.5070000000002035e-05, 2.4554999999999022e-05, 2.4554999999999022e-05, 2.5027999999999856e-05, 2.4500000000000216e-05, 2.5041999999999426e-05, 2.5068999999999092e-05, 2.5041999999999426e-05, 2.5055999999998996e-05, 2.4486000000000646e-05, 2.4555999999998496e-05, 2.5027000000000382e-05, 2.4541999999998926e-05, 2.4570000000001535e-05, 2.5055999999998996e-05, 2.506900000000256e-05, 2.4555999999998496e-05, 2.4540999999999452e-05, 2.5054999999999522e-05, 2.4541999999998926e-05, 2.4556000000001965e-05, 2.5582999999999162e-05, 2.5055999999998996e-05, 2.4541999999998926e-05, 2.4554999999999022e-05, 2.5068999999999092e-05, 2.455500000000249e-05, 2.5069999999998566e-05, 2.5040999999999952e-05, 2.5569999999999066e-05, 2.505500000000299e-05, 2.5000000000000716e-05, 2.5541999999999926e-05, 2.5040999999999952e-05, 2.456900000000206e-05, 2.5055999999998996e-05, 2.4541999999998926e-05, 2.5070000000002035e-05, 2.4527999999999356e-05, 2.5040999999999952e-05, 2.4541999999998926e-05, 2.5054999999999522e-05, 2.512500000000084e-05, 2.4513999999999786e-05, 2.5555999999999496e-05, 2.4540999999999452e-05, 2.5040999999999952e-05, 2.4540999999999452e-05]</msg>
<status status="PASS" starttime="20201030 10:57:46.695" endtime="20201030 10:57:46.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.690" endtime="20201030 10:57:46.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.701" endtime="20201030 10:57:46.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.700" endtime="20201030 10:57:46.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.699" endtime="20201030 10:57:46.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.342" endtime="20201030 10:57:46.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.342" endtime="20201030 10:57:46.722"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.731" endtime="20201030 10:57:46.749"></status>
</kw>
<msg timestamp="20201030 10:57:46.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.729" endtime="20201030 10:57:46.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.751" endtime="20201030 10:57:46.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.753" endtime="20201030 10:57:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.726" endtime="20201030 10:57:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.724" endtime="20201030 10:57:46.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.762" endtime="20201030 10:57:47.047"></status>
</kw>
<msg timestamp="20201030 10:57:47.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.761" endtime="20201030 10:57:47.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020654986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.051" endtime="20201030 10:57:47.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.059" endtime="20201030 10:57:47.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.758" endtime="20201030 10:57:47.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.756" endtime="20201030 10:57:47.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.066" level="INFO">${RESULT} = [{'diff': 2.9917000000000832e-05}, {'diff': 2.5985999999998677e-05}, {'diff': 2.6028000000000856e-05}, {'diff': 2.5541999999999926e-05}, {'diff': 2.6055999999999996e-05}, {'diff': 2.6055999999999996e-...</msg>
<status status="PASS" starttime="20201030 10:57:47.063" endtime="20201030 10:57:47.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.070" level="INFO">${ACCURACY} = {'diff': [2.9917000000000832e-05, 2.5985999999998677e-05, 2.6028000000000856e-05, 2.5541999999999926e-05, 2.6055999999999996e-05, 2.6055999999999996e-05, 2.5999999999998247e-05, 2.5624999999997872e-05...</msg>
<status status="PASS" starttime="20201030 10:57:47.067" endtime="20201030 10:57:47.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.074" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.073" endtime="20201030 10:57:47.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.080" level="INFO">VALUE: [2.9917000000000832e-05, 2.5985999999998677e-05, 2.6028000000000856e-05, 2.5541999999999926e-05, 2.6055999999999996e-05, 2.6055999999999996e-05, 2.5999999999998247e-05, 2.5624999999997872e-05, 2.6055000000000522e-05, 2.6055999999999996e-05, 2.5528000000000356e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.5512999999997843e-05, 2.6014000000001286e-05, 2.5527000000000882e-05, 2.5555000000000022e-05, 2.6055999999999996e-05, 2.5971999999999107e-05, 2.6013999999997817e-05, 2.6041000000000952e-05, 2.6570000000000066e-05, 2.5555000000000022e-05, 2.6028000000000856e-05, 2.5568999999999592e-05, 2.6055000000000522e-05, 2.6055999999999996e-05, 2.6069000000000092e-05, 2.5555999999999496e-05, 2.598700000000162e-05, 2.6041000000000952e-05, 2.5555000000000022e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.6042000000000426e-05, 2.5541000000000452e-05, 2.6083999999999136e-05, 2.5555999999999496e-05, 2.6040999999997483e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.5541000000000452e-05, 2.6041000000000952e-05, 2.6041000000000952e-05, 2.5596999999998732e-05, 2.6042000000000426e-05, 2.5555000000000022e-05, 2.6042000000000426e-05, 2.5541000000000452e-05, 2.6028000000000856e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.075" endtime="20201030 10:57:47.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.071" endtime="20201030 10:57:47.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.085" endtime="20201030 10:57:47.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.084" endtime="20201030 10:57:47.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.083" endtime="20201030 10:57:47.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.723" endtime="20201030 10:57:47.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.722" endtime="20201030 10:57:47.106"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.114" endtime="20201030 10:57:47.132"></status>
</kw>
<msg timestamp="20201030 10:57:47.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.113" endtime="20201030 10:57:47.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.133" endtime="20201030 10:57:47.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.136" endtime="20201030 10:57:47.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.110" endtime="20201030 10:57:47.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.108" endtime="20201030 10:57:47.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.145" endtime="20201030 10:57:47.429"></status>
</kw>
<msg timestamp="20201030 10:57:47.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019698667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.143" endtime="20201030 10:57:47.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019698667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.433" endtime="20201030 10:57:47.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.441" endtime="20201030 10:57:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.141" endtime="20201030 10:57:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.139" endtime="20201030 10:57:47.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.448" level="INFO">${RESULT} = [{'diff': 3.140199999999982e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.7014000000002286e-05}, {'diff': 2.7083000000000662e-05}, {'diff': 2.6554999999997553e-05}, {'diff': 2.712500000000284e-05...</msg>
<status status="PASS" starttime="20201030 10:57:47.445" endtime="20201030 10:57:47.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.453" level="INFO">${ACCURACY} = {'diff': [3.140199999999982e-05, 2.7042000000001426e-05, 2.7014000000002286e-05, 2.7083000000000662e-05, 2.6554999999997553e-05, 2.712500000000284e-05, 2.6570000000000066e-05, 2.6499999999998747e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:47.449" endtime="20201030 10:57:47.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.457" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.456" endtime="20201030 10:57:47.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.460" level="INFO">VALUE: [3.140199999999982e-05, 2.7042000000001426e-05, 2.7014000000002286e-05, 2.7083000000000662e-05, 2.6554999999997553e-05, 2.712500000000284e-05, 2.6570000000000066e-05, 2.6499999999998747e-05, 2.7070000000000566e-05, 2.6528000000001356e-05, 2.6556000000000496e-05, 2.7013999999998817e-05, 2.6527999999997887e-05, 2.7055999999997526e-05, 2.7056000000000996e-05, 2.7555999999998027e-05, 2.7069000000001092e-05, 2.6542000000000926e-05, 2.7068999999997623e-05, 2.7054999999998053e-05, 2.7055000000001522e-05, 2.7042000000001426e-05, 2.7041999999997957e-05, 2.7068999999997623e-05, 2.6568999999997123e-05, 2.6555000000001022e-05, 2.6556000000000496e-05, 2.712500000000284e-05, 2.7042000000001426e-05, 2.6555000000001022e-05, 2.7082999999997193e-05, 2.7540999999998983e-05, 2.7569000000001592e-05, 2.6556000000000496e-05, 2.7055000000001522e-05, 2.7055000000001522e-05, 2.6555999999997026e-05, 2.7041999999997957e-05, 2.6541999999997457e-05, 2.7042000000001426e-05, 2.6570000000000066e-05, 2.712500000000284e-05, 2.7040999999998483e-05, 2.7041000000001952e-05, 2.7040999999998483e-05, 2.7027999999998387e-05, 2.6542000000000926e-05, 2.7056000000000996e-05, 2.6556000000000496e-05, 2.6540999999997983e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.458" endtime="20201030 10:57:47.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.454" endtime="20201030 10:57:47.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.713" endtime="20201030 10:57:47.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.712" endtime="20201030 10:57:47.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.711" endtime="20201030 10:57:47.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.107" endtime="20201030 10:57:47.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.106" endtime="20201030 10:57:47.734"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.742" endtime="20201030 10:57:47.760"></status>
</kw>
<msg timestamp="20201030 10:57:47.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.741" endtime="20201030 10:57:47.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.761" endtime="20201030 10:57:47.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.764" endtime="20201030 10:57:47.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.738" endtime="20201030 10:57:47.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.736" endtime="20201030 10:57:47.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.772" endtime="20201030 10:57:48.072"></status>
</kw>
<msg timestamp="20201030 10:57:48.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.771" endtime="20201030 10:57:48.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.077" endtime="20201030 10:57:48.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.085" endtime="20201030 10:57:48.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.768" endtime="20201030 10:57:48.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.767" endtime="20201030 10:57:48.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.091" level="INFO">${RESULT} = [{'diff': 3.241699999999986e-05}, {'diff': 2.7555999999998027e-05}, {'diff': 2.8026999999999913e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8040999999999483e-05}, {'diff': 2.8055000000002522e-0...</msg>
<status status="PASS" starttime="20201030 10:57:48.088" endtime="20201030 10:57:48.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.095" level="INFO">${ACCURACY} = {'diff': [3.241699999999986e-05, 2.7555999999998027e-05, 2.8026999999999913e-05, 2.8540999999999983e-05, 2.8040999999999483e-05, 2.8055000000002522e-05, 2.7555000000002022e-05, 2.7541999999998457e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:48.092" endtime="20201030 10:57:48.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.100" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.099" endtime="20201030 10:57:48.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.102" level="INFO">VALUE: [3.241699999999986e-05, 2.7555999999998027e-05, 2.8026999999999913e-05, 2.8540999999999983e-05, 2.8040999999999483e-05, 2.8055000000002522e-05, 2.7555000000002022e-05, 2.7541999999998457e-05, 2.7554999999998553e-05, 2.7527999999998887e-05, 2.8027999999999387e-05, 2.8040999999999483e-05, 2.8542000000002926e-05, 2.8041999999998957e-05, 2.7985999999997208e-05, 2.7569000000001592e-05, 2.8055999999998527e-05, 2.7527000000002882e-05, 2.8070000000001566e-05, 2.8055999999998527e-05, 2.8055999999998527e-05, 2.8056000000001996e-05, 2.7570000000001066e-05, 2.7526999999999413e-05, 2.8068999999998623e-05, 2.8027999999999387e-05, 2.7555000000002022e-05, 2.8055000000002522e-05, 2.7540999999998983e-05, 2.8068999999998623e-05, 2.8000000000000247e-05, 2.7555999999998027e-05, 2.8097000000001232e-05, 2.8069999999998096e-05, 2.7554999999998553e-05, 2.8054999999999053e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.7583000000001162e-05, 2.8541999999999457e-05, 2.7540999999998983e-05, 2.7555999999998027e-05, 2.7555999999998027e-05, 2.8070000000001566e-05, 2.8040999999999483e-05, 2.7583000000001162e-05, 2.8055999999998527e-05, 2.8582999999998693e-05, 2.8056000000001996e-05, 2.7526999999999413e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.101" endtime="20201030 10:57:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.096" endtime="20201030 10:57:48.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.107" endtime="20201030 10:57:48.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.106" endtime="20201030 10:57:48.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.105" endtime="20201030 10:57:48.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.735" endtime="20201030 10:57:48.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.734" endtime="20201030 10:57:48.128"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.136" endtime="20201030 10:57:48.155"></status>
</kw>
<msg timestamp="20201030 10:57:48.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.135" endtime="20201030 10:57:48.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.156" endtime="20201030 10:57:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.159" endtime="20201030 10:57:48.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.132" endtime="20201030 10:57:48.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.130" endtime="20201030 10:57:48.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.168" endtime="20201030 10:57:48.453"></status>
</kw>
<msg timestamp="20201030 10:57:48.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.166" endtime="20201030 10:57:48.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.457" endtime="20201030 10:57:48.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.465" endtime="20201030 10:57:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.164" endtime="20201030 10:57:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.162" endtime="20201030 10:57:48.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.471" level="INFO">${RESULT} = [{'diff': 3.337500000000215e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.8555999999999027e-05}, {'diff': 2.9055999999999527e-05}, {'diff': 2.8583000000002162e-0...</msg>
<status status="PASS" starttime="20201030 10:57:48.468" endtime="20201030 10:57:48.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.476" level="INFO">${ACCURACY} = {'diff': [3.337500000000215e-05, 2.9514000000001317e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.8583000000002162e-05, 2.9041999999999957e-05, 2.8556000000002496e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:48.472" endtime="20201030 10:57:48.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.480" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.479" endtime="20201030 10:57:48.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.482" level="INFO">VALUE: [3.337500000000215e-05, 2.9514000000001317e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.8583000000002162e-05, 2.9041999999999957e-05, 2.8556000000002496e-05, 2.9041000000000483e-05, 2.8597999999997736e-05, 2.9041999999999957e-05, 2.9068999999999623e-05, 2.8555999999999027e-05, 2.8540999999999983e-05, 2.9069000000003092e-05, 2.9055000000000053e-05, 2.8527999999999887e-05, 2.9041000000000483e-05, 2.9042000000003426e-05, 2.9027999999996917e-05, 2.8541999999999457e-05, 2.8582999999998693e-05, 2.9055000000000053e-05, 2.8500000000000747e-05, 2.8554999999999553e-05, 2.9055999999999527e-05, 2.9041999999999957e-05, 2.9098000000001706e-05, 2.8568999999999123e-05, 2.8555999999999027e-05, 2.9055000000000053e-05, 2.9541000000000983e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.9068999999999623e-05, 2.9041000000000483e-05, 2.9028000000000387e-05, 2.9083000000002662e-05, 2.8527999999999887e-05, 2.8625000000000872e-05, 2.8555999999999027e-05, 2.9041999999999957e-05, 2.8554999999999553e-05, 2.8555999999999027e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.9041999999999957e-05, 2.8541999999999457e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.481" endtime="20201030 10:57:48.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.476" endtime="20201030 10:57:48.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.488" endtime="20201030 10:57:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.487" endtime="20201030 10:57:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.486" endtime="20201030 10:57:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.129" endtime="20201030 10:57:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.128" endtime="20201030 10:57:48.509"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.517" endtime="20201030 10:57:48.535"></status>
</kw>
<msg timestamp="20201030 10:57:48.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.516" endtime="20201030 10:57:48.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.537" endtime="20201030 10:57:48.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.539" endtime="20201030 10:57:48.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.513" endtime="20201030 10:57:48.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.511" endtime="20201030 10:57:48.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.548" endtime="20201030 10:57:48.833"></status>
</kw>
<msg timestamp="20201030 10:57:48.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.546" endtime="20201030 10:57:48.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.837" endtime="20201030 10:57:48.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.846" endtime="20201030 10:57:48.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.544" endtime="20201030 10:57:48.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.542" endtime="20201030 10:57:48.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.852" level="INFO">${RESULT} = [{'diff': 3.390299999999832e-05}, {'diff': 3.0054999999997584e-05}, {'diff': 2.9541999999996987e-05}, {'diff': 3.0568999999997654e-05}, {'diff': 2.9597000000002732e-05}, {'diff': 3.0056000000000527e-0...</msg>
<status status="PASS" starttime="20201030 10:57:48.849" endtime="20201030 10:57:48.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.857" level="INFO">${ACCURACY} = {'diff': [3.390299999999832e-05, 3.0054999999997584e-05, 2.9541999999996987e-05, 3.0568999999997654e-05, 2.9597000000002732e-05, 3.0056000000000527e-05, 2.9528000000000887e-05, 2.9556000000000027e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:48.853" endtime="20201030 10:57:48.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.862" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.860" endtime="20201030 10:57:48.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.864" level="INFO">VALUE: [3.390299999999832e-05, 3.0054999999997584e-05, 2.9541999999996987e-05, 3.0568999999997654e-05, 2.9597000000002732e-05, 3.0056000000000527e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 3.0056000000000527e-05, 3.0028000000001387e-05, 3.0042000000000957e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 2.9485999999998708e-05, 3.0070000000000097e-05, 2.9556000000000027e-05, 3.0055000000001053e-05, 3.0070000000000097e-05, 3.0040999999998014e-05, 3.0070000000000097e-05, 3.055599999999756e-05, 3.0042000000000957e-05, 3.0042000000000957e-05, 2.9556000000000027e-05, 3.0027000000001913e-05, 3.0054999999997584e-05, 3.0040999999998014e-05, 2.9541000000000983e-05, 2.9540999999997514e-05, 2.9500000000001747e-05, 3.0028000000001387e-05, 3.0055000000001053e-05, 3.0055999999997057e-05, 2.9556000000000027e-05, 2.9542000000000457e-05, 2.9555000000000553e-05, 3.0055000000001053e-05, 3.0069000000000623e-05, 3.055500000000155e-05, 2.9569999999999597e-05, 3.0110999999999333e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 3.0055000000001053e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 2.9582999999999693e-05, 3.0070000000000097e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.863" endtime="20201030 10:57:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.858" endtime="20201030 10:57:48.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.869" endtime="20201030 10:57:48.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.867" endtime="20201030 10:57:48.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.866" endtime="20201030 10:57:48.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.510" endtime="20201030 10:57:48.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.509" endtime="20201030 10:57:48.890"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.898" endtime="20201030 10:57:48.916"></status>
</kw>
<msg timestamp="20201030 10:57:48.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.897" endtime="20201030 10:57:48.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.917" endtime="20201030 10:57:48.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.920" endtime="20201030 10:57:48.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.894" endtime="20201030 10:57:48.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.892" endtime="20201030 10:57:48.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.929" endtime="20201030 10:57:49.216"></status>
</kw>
<msg timestamp="20201030 10:57:49.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:48.928" endtime="20201030 10:57:49.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:49.220" endtime="20201030 10:57:49.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.229" endtime="20201030 10:57:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.925" endtime="20201030 10:57:49.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.923" endtime="20201030 10:57:49.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.235" level="INFO">${RESULT} = [{'diff': 3.5916999999999893e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.055600000000103e-05}, {'diff': 3.154199999999899e-05}, {'diff': 3.055599999999756e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.232" endtime="20201030 10:57:49.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.239" level="INFO">${ACCURACY} = {'diff': [3.5916999999999893e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.055600000000103e-05, 3.154199999999899e-05, 3.055599999999756e-05, 3.055600000000103e-05, 3.1040999999999014e-05, 3.05...</msg>
<status status="PASS" starttime="20201030 10:57:49.236" endtime="20201030 10:57:49.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.244" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.243" endtime="20201030 10:57:49.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.246" level="INFO">VALUE: [3.5916999999999893e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.055600000000103e-05, 3.154199999999899e-05, 3.055599999999756e-05, 3.055600000000103e-05, 3.1040999999999014e-05, 3.055600000000103e-05, 3.106999999999763e-05, 3.055600000000103e-05, 3.104199999999849e-05, 3.055599999999756e-05, 3.1054999999998584e-05, 3.052800000000189e-05, 3.0582999999997224e-05, 3.105500000000205e-05, 3.1554999999999084e-05, 3.055600000000103e-05, 3.0500000000002747e-05, 3.099999999999978e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.055599999999756e-05, 3.1054999999998584e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0597999999999737e-05, 3.1054999999998584e-05, 3.1040999999999014e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.1040999999999014e-05, 3.0554999999998084e-05, 3.15700000000016e-05, 3.0540999999998514e-05, 3.105599999999806e-05, 3.0554999999998084e-05, 3.055599999999756e-05, 3.055500000000155e-05, 3.099999999999978e-05, 3.055600000000103e-05, 3.101399999999935e-05, 3.055600000000103e-05, 3.055599999999756e-05, 3.0597999999999737e-05, 3.105599999999806e-05, 3.097200000000064e-05, 3.155500000000255e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.245" endtime="20201030 10:57:49.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.240" endtime="20201030 10:57:49.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.251" endtime="20201030 10:57:49.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.250" endtime="20201030 10:57:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.248" endtime="20201030 10:57:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.891" endtime="20201030 10:57:49.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.890" endtime="20201030 10:57:49.272"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.280" endtime="20201030 10:57:49.299"></status>
</kw>
<msg timestamp="20201030 10:57:49.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.279" endtime="20201030 10:57:49.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.301" endtime="20201030 10:57:49.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.303" endtime="20201030 10:57:49.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.276" endtime="20201030 10:57:49.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.274" endtime="20201030 10:57:49.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.312" endtime="20201030 10:57:49.598"></status>
</kw>
<msg timestamp="20201030 10:57:49.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.311" endtime="20201030 10:57:49.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.603" endtime="20201030 10:57:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.611" endtime="20201030 10:57:49.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.308" endtime="20201030 10:57:49.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.306" endtime="20201030 10:57:49.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.617" level="INFO">${RESULT} = [{'diff': 3.590199999999738e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.159700000000126e-05}, {'diff': 3.200000000000078e-05}, {'diff': 3.156900000000212e-05}, {'diff': 3.155599999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:49.614" endtime="20201030 10:57:49.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.621" level="INFO">${ACCURACY} = {'diff': [3.590199999999738e-05, 3.204199999999949e-05, 3.159700000000126e-05, 3.200000000000078e-05, 3.156900000000212e-05, 3.155599999999856e-05, 3.1554999999999084e-05, 3.198600000000121e-05, 3.156...</msg>
<status status="PASS" starttime="20201030 10:57:49.618" endtime="20201030 10:57:49.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.626" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.625" endtime="20201030 10:57:49.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.628" level="INFO">VALUE: [3.590199999999738e-05, 3.204199999999949e-05, 3.159700000000126e-05, 3.200000000000078e-05, 3.156900000000212e-05, 3.155599999999856e-05, 3.1554999999999084e-05, 3.198600000000121e-05, 3.1568999999998654e-05, 3.202799999999992e-05, 3.155600000000203e-05, 3.205599999999906e-05, 3.205599999999906e-05, 3.155600000000203e-05, 3.2096999999998294e-05, 3.208400000000167e-05, 3.205600000000253e-05, 3.1554999999999084e-05, 3.2027000000000444e-05, 3.2555000000000084e-05, 3.2054999999999584e-05, 3.152799999999942e-05, 3.2054999999999584e-05, 3.151400000000332e-05, 3.211100000000133e-05, 3.155599999999856e-05, 3.20700000000021e-05, 3.204199999999949e-05, 3.155600000000203e-05, 3.154200000000246e-05, 3.20700000000021e-05, 3.205600000000253e-05, 3.205599999999906e-05, 3.2041000000000014e-05, 3.156900000000212e-05, 3.2041000000000014e-05, 3.204199999999949e-05, 3.254199999999999e-05, 3.152799999999942e-05, 3.208400000000167e-05, 3.155599999999856e-05, 3.155600000000203e-05, 3.1540999999999514e-05, 3.1554999999999084e-05, 3.156999999999813e-05, 3.2054999999999584e-05, 3.155500000000255e-05, 3.202799999999992e-05, 3.205599999999906e-05, 3.15700000000016e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.627" endtime="20201030 10:57:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.622" endtime="20201030 10:57:49.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.634" endtime="20201030 10:57:49.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.632" endtime="20201030 10:57:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.631" endtime="20201030 10:57:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.273" endtime="20201030 10:57:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.272" endtime="20201030 10:57:49.655"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.663" endtime="20201030 10:57:49.681"></status>
</kw>
<msg timestamp="20201030 10:57:49.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.662" endtime="20201030 10:57:49.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.682" endtime="20201030 10:57:49.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.685" endtime="20201030 10:57:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.659" endtime="20201030 10:57:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.657" endtime="20201030 10:57:49.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.694" endtime="20201030 10:57:49.980"></status>
</kw>
<msg timestamp="20201030 10:57:49.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.692" endtime="20201030 10:57:49.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.984" endtime="20201030 10:57:49.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.992" endtime="20201030 10:57:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.690" endtime="20201030 10:57:49.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.688" endtime="20201030 10:57:49.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.999" level="INFO">${RESULT} = [{'diff': 3.742999999999802e-05}, {'diff': 3.2555000000000084e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.255599999999956e-05}, {'diff': 3.351399999999838e-05}, {'diff': 3.3124999999998433e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:49.996" endtime="20201030 10:57:49.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.004" level="INFO">${ACCURACY} = {'diff': [3.742999999999802e-05, 3.2555000000000084e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.351399999999838e-05, 3.3124999999998433e-05, 3.254199999999999e-05, 3.3082999999999724e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 10:57:50.000" endtime="20201030 10:57:50.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.008" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.007" endtime="20201030 10:57:50.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.011" level="INFO">VALUE: [3.742999999999802e-05, 3.2555000000000084e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.351399999999838e-05, 3.3124999999998433e-05, 3.254199999999999e-05, 3.3082999999999724e-05, 3.304200000000049e-05, 3.26250000000014e-05, 3.305600000000006e-05, 3.254199999999999e-05, 3.309800000000224e-05, 3.3068999999996684e-05, 3.255600000000303e-05, 3.2555000000000084e-05, 3.304200000000049e-05, 3.256999999999913e-05, 3.25700000000026e-05, 3.2555000000000084e-05, 3.306999999999963e-05, 3.355599999999709e-05, 3.304200000000049e-05, 3.3041000000001014e-05, 3.304200000000049e-05, 3.2568999999999654e-05, 3.298599999999874e-05, 3.255600000000303e-05, 3.255599999999956e-05, 3.306999999999963e-05, 3.3054999999997114e-05, 3.255599999999956e-05, 3.256999999999913e-05, 3.249999999999781e-05, 3.3055000000000584e-05, 3.306999999999963e-05, 3.305600000000006e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.2555000000000084e-05, 3.3055000000000584e-05, 3.301400000000135e-05, 3.2555000000000084e-05, 3.3055000000000584e-05, 3.305600000000006e-05, 3.254199999999999e-05, 3.306999999999963e-05, 3.254199999999999e-05, 3.305600000000006e-05, 3.255599999999956e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.010" endtime="20201030 10:57:50.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.005" endtime="20201030 10:57:50.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.016" endtime="20201030 10:57:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.014" endtime="20201030 10:57:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.013" endtime="20201030 10:57:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.655" endtime="20201030 10:57:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.655" endtime="20201030 10:57:50.037"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.045" endtime="20201030 10:57:50.062"></status>
</kw>
<msg timestamp="20201030 10:57:50.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.044" endtime="20201030 10:57:50.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.064" endtime="20201030 10:57:50.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.066" endtime="20201030 10:57:50.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.041" endtime="20201030 10:57:50.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.039" endtime="20201030 10:57:50.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.075" endtime="20201030 10:57:50.361"></status>
</kw>
<msg timestamp="20201030 10:57:50.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.074" endtime="20201030 10:57:50.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.366" endtime="20201030 10:57:50.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.374" endtime="20201030 10:57:50.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.071" endtime="20201030 10:57:50.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.069" endtime="20201030 10:57:50.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.380" level="INFO">${RESULT} = [{'diff': 3.848700000000024e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.4055000000001584e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.348699999999871e-05}, {'diff': 3.405600000000106e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:50.377" endtime="20201030 10:57:50.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.384" level="INFO">${ACCURACY} = {'diff': [3.848700000000024e-05, 3.355600000000056e-05, 3.4055000000001584e-05, 3.3569000000000654e-05, 3.348699999999871e-05, 3.405600000000106e-05, 3.455600000000156e-05, 3.4055000000001584e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 10:57:50.381" endtime="20201030 10:57:50.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.389" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.388" endtime="20201030 10:57:50.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.391" level="INFO">VALUE: [3.848700000000024e-05, 3.355600000000056e-05, 3.4055000000001584e-05, 3.3569000000000654e-05, 3.348699999999871e-05, 3.405600000000106e-05, 3.455600000000156e-05, 3.4055000000001584e-05, 3.4069000000001154e-05, 3.357000000000013e-05, 3.355599999999709e-05, 3.401400000000235e-05, 3.4055000000001584e-05, 3.351400000000185e-05, 3.3541000000001514e-05, 3.4110999999999864e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.404199999999802e-05, 3.4110999999999864e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.4569000000001654e-05, 3.4054999999998115e-05, 3.355600000000056e-05, 3.3527000000001944e-05, 3.407000000000063e-05, 3.3555000000001084e-05, 3.4054999999998115e-05, 3.407000000000063e-05, 3.354200000000099e-05, 3.355599999999709e-05, 3.355600000000056e-05, 3.349999999999881e-05, 3.3555000000001084e-05, 3.345899999999957e-05, 3.3526999999998475e-05, 3.352800000000142e-05, 3.398599999999974e-05, 3.401399999999888e-05, 3.4040999999998545e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.401400000000235e-05, 3.4054999999998115e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.390" endtime="20201030 10:57:50.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.385" endtime="20201030 10:57:50.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.396" endtime="20201030 10:57:50.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.395" endtime="20201030 10:57:50.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.394" endtime="20201030 10:57:50.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.037" endtime="20201030 10:57:50.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.037" endtime="20201030 10:57:50.417"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.426" endtime="20201030 10:57:50.445"></status>
</kw>
<msg timestamp="20201030 10:57:50.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.424" endtime="20201030 10:57:50.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.447" endtime="20201030 10:57:50.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.449" endtime="20201030 10:57:50.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.422" endtime="20201030 10:57:50.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.420" endtime="20201030 10:57:50.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.458" endtime="20201030 10:57:50.749"></status>
</kw>
<msg timestamp="20201030 10:57:50.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020592306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.457" endtime="20201030 10:57:50.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020592306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.758" endtime="20201030 10:57:50.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.777" endtime="20201030 10:57:50.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.454" endtime="20201030 10:57:50.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.452" endtime="20201030 10:57:50.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.791" level="INFO">${RESULT} = [{'diff': 8.905499999999761e-05}, {'diff': 6.829200000000105e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.965199999999991e-05}, {'diff': 6.905500000000189e-05}, {'diff': 6.966599999999948e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:50.784" endtime="20201030 10:57:50.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.800" level="INFO">${ACCURACY} = {'diff': [8.905499999999761e-05, 6.829200000000105e-05, 7.001400000000019e-05, 6.965199999999991e-05, 6.905500000000189e-05, 6.966599999999948e-05, 6.879199999999808e-05, 6.851399999999869e-05, 6.9195...</msg>
<status status="PASS" starttime="20201030 10:57:50.793" endtime="20201030 10:57:50.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.809" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.807" endtime="20201030 10:57:50.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.820" level="INFO">VALUE: [8.905499999999761e-05, 6.829200000000105e-05, 7.001400000000019e-05, 6.965199999999991e-05, 6.905500000000189e-05, 6.966599999999948e-05, 6.879199999999808e-05, 6.851399999999869e-05, 6.919500000000106e-05, 6.87359999999998e-05, 6.957000000000144e-05, 6.833300000000028e-05, 6.913899999999931e-05, 6.883400000000026e-05, 6.969499999999809e-05, 6.931900000000171e-05, 6.849999999999912e-05, 6.952799999999926e-05, 6.83619999999989e-05, 6.998600000000105e-05, 6.830600000000062e-05, 7.002799999999976e-05, 6.891599999999873e-05, 6.877799999999851e-05, 6.869500000000056e-05, 6.956999999999797e-05, 6.969500000000156e-05, 6.863899999999881e-05, 6.867999999999805e-05, 6.956899999999849e-05, 6.872200000000023e-05, 6.958300000000153e-05, 6.872200000000023e-05, 6.956899999999849e-05, 6.847299999999945e-05, 6.927799999999901e-05, 6.83619999999989e-05, 6.90970000000006e-05, 6.894400000000134e-05, 6.815300000000135e-05, 6.85420000000013e-05, 6.926399999999944e-05, 6.872200000000023e-05, 6.957000000000144e-05, 6.898600000000005e-05, 6.916700000000192e-05, 6.870900000000013e-05, 6.956900000000196e-05, 6.845899999999988e-05, 6.922200000000073e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.811" endtime="20201030 10:57:50.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.801" endtime="20201030 10:57:50.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.829" endtime="20201030 10:57:50.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.827" endtime="20201030 10:57:50.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.825" endtime="20201030 10:57:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.418" endtime="20201030 10:57:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.417" endtime="20201030 10:57:50.850"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.859" endtime="20201030 10:57:50.878"></status>
</kw>
<msg timestamp="20201030 10:57:50.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.857" endtime="20201030 10:57:50.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.879" endtime="20201030 10:57:50.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.882" endtime="20201030 10:57:50.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.854" endtime="20201030 10:57:50.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.852" endtime="20201030 10:57:50.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.891" endtime="20201030 10:57:51.176"></status>
</kw>
<msg timestamp="20201030 10:57:51.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.889" endtime="20201030 10:57:51.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.181" endtime="20201030 10:57:51.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.189" endtime="20201030 10:57:51.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.887" endtime="20201030 10:57:51.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.885" endtime="20201030 10:57:51.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.196" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 7.047199999999851e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.948600000000055e-05}, {'diff': 6.943100000000174e-05}, {'diff': 6.933300000000128e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:51.192" endtime="20201030 10:57:51.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.201" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 7.047199999999851e-05, 6.950000000000012e-05, 6.948600000000055e-05, 6.943100000000174e-05, 6.933300000000128e-05, 7.052800000000026e-05, 6.963899999999981e-05, 6.9889...</msg>
<status status="PASS" starttime="20201030 10:57:51.197" endtime="20201030 10:57:51.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.205" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.204" endtime="20201030 10:57:51.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.207" level="INFO">VALUE: [9.341699999999842e-05, 7.047199999999851e-05, 6.950000000000012e-05, 6.948600000000055e-05, 6.943100000000174e-05, 6.933300000000128e-05, 7.052800000000026e-05, 6.963899999999981e-05, 6.988900000000006e-05, 7.054100000000035e-05, 7.062500000000124e-05, 6.956899999999849e-05, 6.969399999999862e-05, 7.054199999999983e-05, 7.052700000000078e-05, 7.048599999999808e-05, 7.051400000000069e-05, 7.051400000000069e-05, 7.051400000000069e-05, 7.048700000000102e-05, 7.051400000000069e-05, 7.052800000000026e-05, 7.051400000000069e-05, 6.948599999999708e-05, 6.957000000000144e-05, 7.052700000000078e-05, 7.051400000000069e-05, 7.052700000000078e-05, 7.047200000000198e-05, 6.950000000000012e-05, 6.96109999999972e-05, 6.969499999999809e-05, 6.986100000000092e-05, 6.968099999999852e-05, 6.986100000000092e-05, 7.049999999999765e-05, 7.051400000000069e-05, 6.969400000000209e-05, 7.001400000000019e-05, 7.05970000000021e-05, 6.952799999999926e-05, 6.987499999999702e-05, 7.063900000000081e-05, 7.051300000000121e-05, 7.052800000000026e-05, 7.051299999999774e-05, 6.966699999999895e-05, 6.959800000000058e-05, 7.052800000000026e-05, 6.944399999999837e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.206" endtime="20201030 10:57:51.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.201" endtime="20201030 10:57:51.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.213" endtime="20201030 10:57:51.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.211" endtime="20201030 10:57:51.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.210" endtime="20201030 10:57:51.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.851" endtime="20201030 10:57:51.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.850" endtime="20201030 10:57:51.233"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.242" endtime="20201030 10:57:51.262"></status>
</kw>
<msg timestamp="20201030 10:57:51.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.240" endtime="20201030 10:57:51.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.264" endtime="20201030 10:57:51.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.266" endtime="20201030 10:57:51.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.238" endtime="20201030 10:57:51.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.236" endtime="20201030 10:57:51.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.275" endtime="20201030 10:57:51.561"></status>
</kw>
<msg timestamp="20201030 10:57:51.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.274" endtime="20201030 10:57:51.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.566" endtime="20201030 10:57:51.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.574" endtime="20201030 10:57:51.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.271" endtime="20201030 10:57:51.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.269" endtime="20201030 10:57:51.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.580" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 7.104100000000085e-05}, {'diff': 7.148599999999908e-05}, {'diff': 7.069399999999962e-05}, {'diff': 7.073599999999833e-05}, {'diff': 7.104200000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:51.577" endtime="20201030 10:57:51.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.585" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 7.104100000000085e-05, 7.148599999999908e-05, 7.069399999999962e-05, 7.073599999999833e-05, 7.104200000000033e-05, 7.149999999999865e-05, 7.066699999999995e-05, 7.1167...</msg>
<status status="PASS" starttime="20201030 10:57:51.581" endtime="20201030 10:57:51.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.589" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.588" endtime="20201030 10:57:51.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.592" level="INFO">VALUE: [9.341699999999842e-05, 7.104100000000085e-05, 7.148599999999908e-05, 7.069399999999962e-05, 7.073599999999833e-05, 7.104200000000033e-05, 7.149999999999865e-05, 7.066699999999995e-05, 7.116700000000045e-05, 7.099999999999815e-05, 7.116700000000045e-05, 7.069499999999909e-05, 7.137499999999852e-05, 7.123599999999883e-05, 7.088800000000159e-05, 7.130500000000067e-05, 7.069399999999962e-05, 7.075000000000137e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.162499999999877e-05, 7.075000000000137e-05, 7.076399999999747e-05, 7.130500000000067e-05, 7.056999999999897e-05, 7.112499999999827e-05, 7.131999999999972e-05, 7.069499999999909e-05, 7.072299999999823e-05, 7.065300000000038e-05, 7.066699999999995e-05, 7.094399999999987e-05, 7.111200000000165e-05, 7.098699999999805e-05, 7.069399999999962e-05, 7.108299999999956e-05, 7.077800000000051e-05, 7.073599999999833e-05, 7.091600000000073e-05, 7.142999999999733e-05, 7.104200000000033e-05, 7.14300000000008e-05, 7.081899999999974e-05, 7.097199999999901e-05, 7.086099999999845e-05, 7.136099999999895e-05, 7.145899999999941e-05, 7.122199999999926e-05, 7.120899999999916e-05, 7.109800000000208e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.590" endtime="20201030 10:57:51.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.585" endtime="20201030 10:57:51.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.597" endtime="20201030 10:57:51.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.595" endtime="20201030 10:57:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.594" endtime="20201030 10:57:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.234" endtime="20201030 10:57:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.234" endtime="20201030 10:57:51.617"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.626" endtime="20201030 10:57:51.646"></status>
</kw>
<msg timestamp="20201030 10:57:51.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.625" endtime="20201030 10:57:51.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.647" endtime="20201030 10:57:51.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.650" endtime="20201030 10:57:51.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.622" endtime="20201030 10:57:51.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.620" endtime="20201030 10:57:51.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.660" endtime="20201030 10:57:51.944"></status>
</kw>
<msg timestamp="20201030 10:57:51.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020919236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.658" endtime="20201030 10:57:51.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020919236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.949" endtime="20201030 10:57:51.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.957" endtime="20201030 10:57:51.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.655" endtime="20201030 10:57:51.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.653" endtime="20201030 10:57:51.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.965" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 7.242999999999833e-05}, {'diff': 7.218000000000155e-05}, {'diff': 7.191600000000173e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.266699999999848e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:51.961" endtime="20201030 10:57:51.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.969" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 7.242999999999833e-05, 7.218000000000155e-05, 7.191600000000173e-05, 7.236099999999995e-05, 7.266699999999848e-05, 7.229199999999811e-05, 7.193100000000077e-05, 7.1736...</msg>
<status status="PASS" starttime="20201030 10:57:51.966" endtime="20201030 10:57:51.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.973" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.972" endtime="20201030 10:57:51.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.976" level="INFO">VALUE: [9.341699999999842e-05, 7.242999999999833e-05, 7.218000000000155e-05, 7.191600000000173e-05, 7.236099999999995e-05, 7.266699999999848e-05, 7.229199999999811e-05, 7.193100000000077e-05, 7.17360000000028e-05, 7.195899999999991e-05, 7.266599999999901e-05, 7.223599999999983e-05, 7.17499999999989e-05, 7.216700000000145e-05, 7.216699999999798e-05, 7.24170000000017e-05, 7.179099999999813e-05, 7.187499999999902e-05, 7.180500000000117e-05, 7.226400000000244e-05, 7.201399999999872e-05, 7.199999999999915e-05, 7.191599999999826e-05, 7.177800000000151e-05, 7.17499999999989e-05, 7.229199999999811e-05, 7.151400000000169e-05, 7.226400000000244e-05, 7.186099999999945e-05, 7.220799999999722e-05, 7.172299999999923e-05, 7.209799999999961e-05, 7.186199999999893e-05, 7.181900000000074e-05, 7.168000000000105e-05, 7.180500000000117e-05, 7.241599999999876e-05, 7.19300000000013e-05, 7.17499999999989e-05, 7.173599999999933e-05, 7.252800000000226e-05, 7.199999999999915e-05, 7.165300000000138e-05, 7.190300000000163e-05, 7.166699999999748e-05, 7.218099999999755e-05, 7.21109999999997e-05, 7.251399999999922e-05, 7.2069999999997e-05, 7.186199999999893e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.975" endtime="20201030 10:57:51.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.970" endtime="20201030 10:57:51.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.982" endtime="20201030 10:57:52.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.980" endtime="20201030 10:57:52.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.979" endtime="20201030 10:57:52.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.618" endtime="20201030 10:57:52.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.618" endtime="20201030 10:57:52.003"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.011" endtime="20201030 10:57:52.030"></status>
</kw>
<msg timestamp="20201030 10:57:52.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.010" endtime="20201030 10:57:52.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.031" endtime="20201030 10:57:52.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.034" endtime="20201030 10:57:52.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.007" endtime="20201030 10:57:52.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.005" endtime="20201030 10:57:52.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.043" endtime="20201030 10:57:52.329"></status>
</kw>
<msg timestamp="20201030 10:57:52.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.042" endtime="20201030 10:57:52.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.333" endtime="20201030 10:57:52.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.342" endtime="20201030 10:57:52.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.039" endtime="20201030 10:57:52.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.037" endtime="20201030 10:57:52.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.348" level="INFO">${RESULT} = [{'diff': 9.340300000000232e-05}, {'diff': 7.363900000000034e-05}, {'diff': 7.287500000000002e-05}, {'diff': 7.322199999999779e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.338900000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:52.345" endtime="20201030 10:57:52.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.353" level="INFO">${ACCURACY} = {'diff': [9.340300000000232e-05, 7.363900000000034e-05, 7.287500000000002e-05, 7.322199999999779e-05, 7.316599999999951e-05, 7.338900000000009e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.2542...</msg>
<status status="PASS" starttime="20201030 10:57:52.349" endtime="20201030 10:57:52.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.358" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.357" endtime="20201030 10:57:52.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.360" level="INFO">VALUE: [9.340300000000232e-05, 7.363900000000034e-05, 7.287500000000002e-05, 7.322199999999779e-05, 7.316599999999951e-05, 7.338900000000009e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.254200000000183e-05, 7.279199999999861e-05, 7.312500000000027e-05, 7.281999999999775e-05, 7.30560000000019e-05, 7.293100000000177e-05, 7.309700000000113e-05, 7.30560000000019e-05, 7.29309999999983e-05, 7.327799999999954e-05, 7.319400000000212e-05, 7.277699999999956e-05, 7.283300000000131e-05, 7.33049999999992e-05, 7.329099999999963e-05, 7.294400000000187e-05, 7.359700000000163e-05, 7.354200000000283e-05, 7.305599999999843e-05, 7.341699999999923e-05, 7.301399999999972e-05, 7.301399999999972e-05, 7.36110000000012e-05, 7.347199999999804e-05, 7.27499999999999e-05, 7.29309999999983e-05, 7.268000000000205e-05, 7.280500000000217e-05, 7.368099999999905e-05, 7.308300000000156e-05, 7.349999999999718e-05, 7.281900000000174e-05, 7.331899999999877e-05, 7.295800000000144e-05, 7.27499999999999e-05, 7.290299999999916e-05, 7.283400000000079e-05, 7.327799999999954e-05, 7.312500000000027e-05, 7.266700000000195e-05, 7.276399999999947e-05, 7.255599999999793e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.359" endtime="20201030 10:57:52.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.354" endtime="20201030 10:57:52.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.365" endtime="20201030 10:57:52.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.364" endtime="20201030 10:57:52.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.363" endtime="20201030 10:57:52.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.004" endtime="20201030 10:57:52.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.003" endtime="20201030 10:57:52.386"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.395" endtime="20201030 10:57:52.414"></status>
</kw>
<msg timestamp="20201030 10:57:52.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.393" endtime="20201030 10:57:52.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.416" endtime="20201030 10:57:52.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.418" endtime="20201030 10:57:52.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.391" endtime="20201030 10:57:52.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.388" endtime="20201030 10:57:52.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.427" endtime="20201030 10:57:52.714"></status>
</kw>
<msg timestamp="20201030 10:57:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01974025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:52.426" endtime="20201030 10:57:52.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01974025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:52.718" endtime="20201030 10:57:52.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.726" endtime="20201030 10:57:52.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.423" endtime="20201030 10:57:52.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.421" endtime="20201030 10:57:52.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.733" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 7.41110000000017e-05}, {'diff': 7.380599999999918e-05}, {'diff': 7.444499999999937e-05}, {'diff': 7.397200000000201e-05}, {'diff': 7.436100000000195e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:52.730" endtime="20201030 10:57:52.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.737" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 7.41110000000017e-05, 7.380599999999918e-05, 7.444499999999937e-05, 7.397200000000201e-05, 7.436100000000195e-05, 7.397199999999854e-05, 7.4069999999999e-05, 7.4374999...</msg>
<status status="PASS" starttime="20201030 10:57:52.734" endtime="20201030 10:57:52.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.741" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.740" endtime="20201030 10:57:52.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.744" level="INFO">VALUE: [9.341699999999842e-05, 7.41110000000017e-05, 7.380599999999918e-05, 7.444499999999937e-05, 7.397200000000201e-05, 7.436100000000195e-05, 7.397199999999854e-05, 7.4069999999999e-05, 7.437499999999805e-05, 7.404100000000038e-05, 7.461099999999873e-05, 7.387499999999755e-05, 7.376400000000047e-05, 7.368000000000305e-05, 7.423599999999836e-05, 7.456900000000002e-05, 7.437500000000152e-05, 7.39029999999967e-05, 7.39170000000032e-05, 7.430599999999968e-05, 7.418099999999955e-05, 7.380599999999918e-05, 7.429200000000011e-05, 7.388900000000059e-05, 7.380599999999918e-05, 7.416699999999998e-05, 7.436099999999848e-05, 7.455599999999993e-05, 7.409799999999814e-05, 7.369399999999915e-05, 7.370799999999872e-05, 7.44439999999999e-05, 7.37500000000009e-05, 7.392999999999983e-05, 7.373599999999786e-05, 7.437499999999805e-05, 7.395800000000244e-05, 7.426400000000097e-05, 7.454099999999741e-05, 7.369499999999862e-05, 7.35699999999985e-05, 7.399999999999768e-05, 7.368099999999905e-05, 7.35560000000024e-05, 7.455599999999993e-05, 7.426400000000097e-05, 7.448600000000208e-05, 7.39439999999994e-05, 7.455499999999698e-05, 7.424999999999793e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.743" endtime="20201030 10:57:52.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.738" endtime="20201030 10:57:52.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.749" endtime="20201030 10:57:52.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.748" endtime="20201030 10:57:52.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.746" endtime="20201030 10:57:52.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.387" endtime="20201030 10:57:52.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.386" endtime="20201030 10:57:52.770"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.779" endtime="20201030 10:57:52.799"></status>
</kw>
<msg timestamp="20201030 10:57:52.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.777" endtime="20201030 10:57:52.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.801" endtime="20201030 10:57:52.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.803" endtime="20201030 10:57:52.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.774" endtime="20201030 10:57:52.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.772" endtime="20201030 10:57:52.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.813" endtime="20201030 10:57:53.099"></status>
</kw>
<msg timestamp="20201030 10:57:53.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.811" endtime="20201030 10:57:53.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.103" endtime="20201030 10:57:53.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.111" endtime="20201030 10:57:53.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.808" endtime="20201030 10:57:53.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.807" endtime="20201030 10:57:53.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.117" level="INFO">${RESULT} = [{'diff': 9.341700000000189e-05}, {'diff': 7.509699999999966e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.486099999999898e-05}, {'diff': 7.505500000000095e-05}, {'diff': 7.563899999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:53.114" endtime="20201030 10:57:53.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.122" level="INFO">${ACCURACY} = {'diff': [9.341700000000189e-05, 7.509699999999966e-05, 7.56249999999993e-05, 7.486099999999898e-05, 7.505500000000095e-05, 7.563899999999887e-05, 7.505600000000043e-05, 7.542999999999786e-05, 7.51659...</msg>
<status status="PASS" starttime="20201030 10:57:53.119" endtime="20201030 10:57:53.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.126" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.125" endtime="20201030 10:57:53.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.129" level="INFO">VALUE: [9.341700000000189e-05, 7.509699999999966e-05, 7.56249999999993e-05, 7.486099999999898e-05, 7.505500000000095e-05, 7.563899999999887e-05, 7.505600000000043e-05, 7.542999999999786e-05, 7.516599999999804e-05, 7.530600000000068e-05, 7.511099999999923e-05, 7.455599999999993e-05, 7.451400000000122e-05, 7.477800000000104e-05, 7.502800000000129e-05, 7.53050000000012e-05, 7.504100000000138e-05, 7.469400000000015e-05, 7.506899999999705e-05, 7.517999999999761e-05, 7.56249999999993e-05, 7.499999999999868e-05, 7.516700000000098e-05, 7.454200000000036e-05, 7.522199999999979e-05, 7.472200000000276e-05, 7.505599999999696e-05, 7.473600000000233e-05, 7.534799999999939e-05, 7.511099999999923e-05, 7.523699999999883e-05, 7.4763999999998e-05, 7.548599999999961e-05, 7.549999999999918e-05, 7.468000000000058e-05, 7.476400000000147e-05, 7.549999999999918e-05, 7.516699999999751e-05, 7.473599999999886e-05, 7.549999999999918e-05, 7.473599999999886e-05, 7.513900000000184e-05, 7.52500000000024e-05, 7.487500000000202e-05, 7.529200000000111e-05, 7.51249999999988e-05, 7.518099999999708e-05, 7.488900000000159e-05, 7.472199999999929e-05, 7.487500000000202e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.127" endtime="20201030 10:57:53.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.123" endtime="20201030 10:57:53.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.135" endtime="20201030 10:57:53.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.133" endtime="20201030 10:57:53.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.132" endtime="20201030 10:57:53.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.771" endtime="20201030 10:57:53.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.770" endtime="20201030 10:57:53.155"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.164" endtime="20201030 10:57:53.183"></status>
</kw>
<msg timestamp="20201030 10:57:53.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.162" endtime="20201030 10:57:53.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.185" endtime="20201030 10:57:53.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.187" endtime="20201030 10:57:53.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.160" endtime="20201030 10:57:53.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.158" endtime="20201030 10:57:53.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.196" endtime="20201030 10:57:53.482"></status>
</kw>
<msg timestamp="20201030 10:57:53.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.195" endtime="20201030 10:57:53.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.486" endtime="20201030 10:57:53.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.494" endtime="20201030 10:57:53.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.192" endtime="20201030 10:57:53.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.190" endtime="20201030 10:57:53.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.500" level="INFO">${RESULT} = [{'diff': 9.347300000000017e-05}, {'diff': 7.619400000000165e-05}, {'diff': 7.590300000000216e-05}, {'diff': 7.602699999999935e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.619400000000165e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:53.497" endtime="20201030 10:57:53.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.505" level="INFO">${ACCURACY} = {'diff': [9.347300000000017e-05, 7.619400000000165e-05, 7.590300000000216e-05, 7.602699999999935e-05, 7.598600000000011e-05, 7.619400000000165e-05, 7.60830000000011e-05, 7.626400000000297e-05, 7.65690...</msg>
<status status="PASS" starttime="20201030 10:57:53.501" endtime="20201030 10:57:53.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.510" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.509" endtime="20201030 10:57:53.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.512" level="INFO">VALUE: [9.347300000000017e-05, 7.619400000000165e-05, 7.590300000000216e-05, 7.602699999999935e-05, 7.598600000000011e-05, 7.619400000000165e-05, 7.60830000000011e-05, 7.626400000000297e-05, 7.656900000000202e-05, 7.650000000000018e-05, 7.601400000000272e-05, 7.569499999999715e-05, 7.638899999999962e-05, 7.565300000000191e-05, 7.624999999999993e-05, 7.649999999999671e-05, 7.64310000000018e-05, 7.580600000000118e-05, 7.568000000000158e-05, 7.655499999999898e-05, 7.654099999999942e-05, 7.654099999999942e-05, 7.591600000000226e-05, 7.574999999999943e-05, 7.627799999999907e-05, 7.565299999999844e-05, 7.605600000000143e-05, 7.637500000000005e-05, 7.593099999999783e-05, 7.565300000000191e-05, 7.598600000000011e-05, 7.599999999999968e-05, 7.613899999999937e-05, 7.647199999999757e-05, 7.572299999999976e-05, 7.56249999999993e-05, 7.630499999999873e-05, 7.611099999999676e-05, 7.579099999999866e-05, 7.597200000000054e-05, 7.617999999999861e-05, 7.606900000000152e-05, 7.605499999999848e-05, 7.637500000000005e-05, 7.601400000000272e-05, 7.655599999999846e-05, 7.584700000000041e-05, 7.576400000000247e-05, 7.647300000000051e-05, 7.569500000000062e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.511" endtime="20201030 10:57:53.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.506" endtime="20201030 10:57:53.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.517" endtime="20201030 10:57:53.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.516" endtime="20201030 10:57:53.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.515" endtime="20201030 10:57:53.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.156" endtime="20201030 10:57:53.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.156" endtime="20201030 10:57:53.538"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.546" endtime="20201030 10:57:53.566"></status>
</kw>
<msg timestamp="20201030 10:57:53.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.545" endtime="20201030 10:57:53.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.568" endtime="20201030 10:57:53.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.570" endtime="20201030 10:57:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.542" endtime="20201030 10:57:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.540" endtime="20201030 10:57:53.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.579" endtime="20201030 10:57:53.881"></status>
</kw>
<msg timestamp="20201030 10:57:53.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.578" endtime="20201030 10:57:53.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.885" endtime="20201030 10:57:53.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.894" endtime="20201030 10:57:53.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.575" endtime="20201030 10:57:53.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.573" endtime="20201030 10:57:53.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.900" level="INFO">${RESULT} = [{'diff': 9.340299999999885e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.679099999999967e-05}, {'diff': 7.672199999999782e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.723600000000136e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:53.897" endtime="20201030 10:57:53.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.904" level="INFO">${ACCURACY} = {'diff': [9.340299999999885e-05, 7.704199999999939e-05, 7.679099999999967e-05, 7.672199999999782e-05, 7.675000000000043e-05, 7.723600000000136e-05, 7.670799999999825e-05, 7.711100000000123e-05, 7.6945...</msg>
<status status="PASS" starttime="20201030 10:57:53.901" endtime="20201030 10:57:53.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.909" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.907" endtime="20201030 10:57:53.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.911" level="INFO">VALUE: [9.340299999999885e-05, 7.704199999999939e-05, 7.679099999999967e-05, 7.672199999999782e-05, 7.675000000000043e-05, 7.723600000000136e-05, 7.670799999999825e-05, 7.711100000000123e-05, 7.694500000000187e-05, 7.691699999999926e-05, 7.723599999999789e-05, 7.743099999999933e-05, 7.76250000000013e-05, 7.655599999999846e-05, 7.705600000000243e-05, 7.719499999999865e-05, 7.723600000000136e-05, 7.701400000000025e-05, 7.7070000000002e-05, 7.729100000000017e-05, 7.715200000000047e-05, 7.655499999999898e-05, 7.761099999999826e-05, 7.725000000000093e-05, 7.754199999999989e-05, 7.744500000000237e-05, 7.733300000000234e-05, 7.740299999999672e-05, 7.748599999999814e-05, 7.686100000000098e-05, 7.675000000000043e-05, 7.691699999999926e-05, 7.713900000000037e-05, 7.683400000000132e-05, 7.668000000000258e-05, 7.723599999999789e-05, 7.673600000000086e-05, 7.748599999999814e-05, 7.669399999999868e-05, 7.673599999999739e-05, 7.761100000000173e-05, 7.70969999999982e-05, 7.706899999999905e-05, 7.68189999999988e-05, 7.74310000000028e-05, 7.673599999999739e-05, 7.725000000000093e-05, 7.688900000000012e-05, 7.716699999999951e-05, 7.741699999999976e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.910" endtime="20201030 10:57:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.905" endtime="20201030 10:57:53.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.916" endtime="20201030 10:57:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.914" endtime="20201030 10:57:53.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.913" endtime="20201030 10:57:53.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.539" endtime="20201030 10:57:53.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.538" endtime="20201030 10:57:53.937"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.945" endtime="20201030 10:57:53.966"></status>
</kw>
<msg timestamp="20201030 10:57:53.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.944" endtime="20201030 10:57:53.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.968" endtime="20201030 10:57:53.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.971" endtime="20201030 10:57:53.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.941" endtime="20201030 10:57:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.939" endtime="20201030 10:57:53.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.980" endtime="20201030 10:57:54.268"></status>
</kw>
<msg timestamp="20201030 10:57:54.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:53.978" endtime="20201030 10:57:54.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:54.272" endtime="20201030 10:57:54.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.280" endtime="20201030 10:57:54.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.975" endtime="20201030 10:57:54.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.974" endtime="20201030 10:57:54.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.287" level="INFO">${RESULT} = [{'diff': 9.343100000000146e-05}, {'diff': 7.815300000000094e-05}, {'diff': 7.776399999999753e-05}, {'diff': 7.765300000000044e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.78189999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:54.284" endtime="20201030 10:57:54.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.291" level="INFO">${ACCURACY} = {'diff': [9.343100000000146e-05, 7.815300000000094e-05, 7.776399999999753e-05, 7.765300000000044e-05, 7.843100000000033e-05, 7.78189999999998e-05, 7.829200000000064e-05, 7.790199999999775e-05, 7.86109...</msg>
<status status="PASS" starttime="20201030 10:57:54.288" endtime="20201030 10:57:54.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.296" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.295" endtime="20201030 10:57:54.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.301" level="INFO">VALUE: [9.343100000000146e-05, 7.815300000000094e-05, 7.776399999999753e-05, 7.765300000000044e-05, 7.843100000000033e-05, 7.78189999999998e-05, 7.829200000000064e-05, 7.790199999999775e-05, 7.861099999999926e-05, 7.848600000000261e-05, 7.768000000000011e-05, 7.850000000000218e-05, 7.830499999999727e-05, 7.862499999999883e-05, 7.793000000000036e-05, 7.779200000000014e-05, 7.781999999999928e-05, 7.79030000000007e-05, 7.81250000000018e-05, 7.847300000000251e-05, 7.829200000000064e-05, 7.831999999999978e-05, 7.78189999999998e-05, 7.847299999999904e-05, 7.836100000000248e-05, 7.849999999999871e-05, 7.808299999999962e-05, 7.794399999999993e-05, 7.787500000000155e-05, 7.827800000000107e-05, 7.794399999999993e-05, 7.816700000000051e-05, 7.818100000000008e-05, 7.818100000000008e-05, 7.836100000000248e-05, 7.847199999999957e-05, 7.84449999999999e-05, 7.818100000000008e-05, 7.773600000000186e-05, 7.808299999999962e-05, 7.7764000000001e-05, 7.83190000000003e-05, 7.837499999999858e-05, 7.855500000000099e-05, 7.787499999999808e-05, 7.855599999999699e-05, 7.798599999999864e-05, 7.78189999999998e-05, 7.83190000000003e-05, 7.795899999999897e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.297" endtime="20201030 10:57:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.292" endtime="20201030 10:57:54.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.306" endtime="20201030 10:57:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.305" endtime="20201030 10:57:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.304" endtime="20201030 10:57:54.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.938" endtime="20201030 10:57:54.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.937" endtime="20201030 10:57:54.327"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.336" endtime="20201030 10:57:54.355"></status>
</kw>
<msg timestamp="20201030 10:57:54.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.334" endtime="20201030 10:57:54.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.357" endtime="20201030 10:57:54.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.359" endtime="20201030 10:57:54.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.332" endtime="20201030 10:57:54.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.329" endtime="20201030 10:57:54.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.368" endtime="20201030 10:57:54.664"></status>
</kw>
<msg timestamp="20201030 10:57:54.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:54.367" endtime="20201030 10:57:54.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:54.670" endtime="20201030 10:57:54.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.679" endtime="20201030 10:57:54.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.364" endtime="20201030 10:57:54.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.363" endtime="20201030 10:57:54.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.685" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 7.948600000000014e-05}, {'diff': 7.93329999999974e-05}, {'diff': 7.905500000000149e-05}, {'diff': 7.905600000000096e-05}, {'diff': 7.883300000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:54.682" endtime="20201030 10:57:54.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.690" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 7.948600000000014e-05, 7.93329999999974e-05, 7.905500000000149e-05, 7.905600000000096e-05, 7.883300000000037e-05, 7.869500000000015e-05, 7.915299999999847e-05, 7.96389...</msg>
<status status="PASS" starttime="20201030 10:57:54.686" endtime="20201030 10:57:54.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.695" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.694" endtime="20201030 10:57:54.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.697" level="INFO">VALUE: [9.341699999999842e-05, 7.948600000000014e-05, 7.93329999999974e-05, 7.905500000000149e-05, 7.905600000000096e-05, 7.883300000000037e-05, 7.869500000000015e-05, 7.915299999999847e-05, 7.96389999999994e-05, 7.879200000000114e-05, 7.954199999999842e-05, 7.893100000000083e-05, 7.924999999999946e-05, 7.854200000000089e-05, 7.90970000000002e-05, 7.912499999999933e-05, 7.869400000000068e-05, 7.894399999999746e-05, 7.886099999999951e-05, 7.940299999999872e-05, 7.952799999999885e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.890299999999822e-05, 7.876399999999853e-05, 7.947200000000057e-05, 7.924999999999946e-05, 7.944399999999796e-05, 7.874999999999896e-05, 7.869400000000068e-05, 7.874999999999896e-05, 7.895799999999703e-05, 7.934700000000044e-05, 7.918000000000161e-05, 7.865299999999797e-05, 7.911099999999976e-05, 7.866700000000101e-05, 7.855599999999699e-05, 7.933399999999688e-05, 7.879199999999767e-05, 7.873599999999939e-05, 7.912499999999933e-05, 7.905600000000096e-05, 7.869500000000015e-05, 7.898699999999911e-05, 7.929200000000164e-05, 7.873599999999939e-05, 7.919399999999771e-05, 7.888899999999865e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.696" endtime="20201030 10:57:54.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.691" endtime="20201030 10:57:54.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.702" endtime="20201030 10:57:54.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.701" endtime="20201030 10:57:54.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.700" endtime="20201030 10:57:54.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.328" endtime="20201030 10:57:54.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.327" endtime="20201030 10:57:54.723"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.731" endtime="20201030 10:57:54.751"></status>
</kw>
<msg timestamp="20201030 10:57:54.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.730" endtime="20201030 10:57:54.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.752" endtime="20201030 10:57:54.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.755" endtime="20201030 10:57:54.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.727" endtime="20201030 10:57:54.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.725" endtime="20201030 10:57:54.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.763" endtime="20201030 10:57:55.051"></status>
</kw>
<msg timestamp="20201030 10:57:55.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.762" endtime="20201030 10:57:55.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.055" endtime="20201030 10:57:55.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.064" endtime="20201030 10:57:55.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.759" endtime="20201030 10:57:55.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.758" endtime="20201030 10:57:55.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.072" level="INFO">${RESULT} = [{'diff': 9.343100000000146e-05}, {'diff': 8.00970000000012e-05}, {'diff': 8.045900000000147e-05}, {'diff': 8.005600000000196e-05}, {'diff': 7.974999999999996e-05}, {'diff': 7.994400000000193e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:55.068" endtime="20201030 10:57:55.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.076" level="INFO">${ACCURACY} = {'diff': [9.343100000000146e-05, 8.00970000000012e-05, 8.045900000000147e-05, 8.005600000000196e-05, 7.974999999999996e-05, 7.994400000000193e-05, 8.008300000000163e-05, 8.054199999999942e-05, 7.99720...</msg>
<status status="PASS" starttime="20201030 10:57:55.073" endtime="20201030 10:57:55.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.080" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.079" endtime="20201030 10:57:55.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.083" level="INFO">VALUE: [9.343100000000146e-05, 8.00970000000012e-05, 8.045900000000147e-05, 8.005600000000196e-05, 7.974999999999996e-05, 7.994400000000193e-05, 8.008300000000163e-05, 8.054199999999942e-05, 7.997200000000107e-05, 8.049999999999724e-05, 8.036099999999755e-05, 7.986100000000051e-05, 8.041600000000329e-05, 8.048600000000114e-05, 8.062500000000083e-05, 7.993099999999836e-05, 7.955599999999799e-05, 7.986100000000051e-05, 8.038899999999669e-05, 7.973600000000039e-05, 7.986099999999705e-05, 7.998600000000064e-05, 8.01109999999973e-05, 8.006999999999806e-05, 7.980499999999877e-05, 7.998600000000064e-05, 7.970800000000125e-05, 8.019399999999871e-05, 8.02909999999997e-05, 8.026400000000003e-05, 8.06109999999978e-05, 8.036100000000101e-05, 8.048600000000114e-05, 8.018100000000208e-05, 7.984700000000094e-05, 8.008300000000163e-05, 8.01389999999999e-05, 7.987500000000008e-05, 8.00130000000003e-05, 8.006899999999859e-05, 7.988900000000312e-05, 7.997200000000107e-05, 7.974999999999996e-05, 7.97909999999992e-05, 7.967999999999864e-05, 8.065299999999997e-05, 7.990299999999922e-05, 8.037499999999712e-05, 8.012500000000033e-05, 8.030600000000221e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.081" endtime="20201030 10:57:55.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.077" endtime="20201030 10:57:55.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.088" endtime="20201030 10:57:55.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.086" endtime="20201030 10:57:55.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.085" endtime="20201030 10:57:55.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.724" endtime="20201030 10:57:55.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.723" endtime="20201030 10:57:55.108"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.117" endtime="20201030 10:57:55.137"></status>
</kw>
<msg timestamp="20201030 10:57:55.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.115" endtime="20201030 10:57:55.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.139" endtime="20201030 10:57:55.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.141" endtime="20201030 10:57:55.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.113" endtime="20201030 10:57:55.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.111" endtime="20201030 10:57:55.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.150" endtime="20201030 10:57:55.435"></status>
</kw>
<msg timestamp="20201030 10:57:55.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.149" endtime="20201030 10:57:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.440" endtime="20201030 10:57:55.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.448" endtime="20201030 10:57:55.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.146" endtime="20201030 10:57:55.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.144" endtime="20201030 10:57:55.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.454" level="INFO">${RESULT} = [{'diff': 9.341700000000189e-05}, {'diff': 8.088799999999771e-05}, {'diff': 8.104100000000045e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.130500000000027e-05}, {'diff': 8.067999999999964e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:55.451" endtime="20201030 10:57:55.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.458" level="INFO">${ACCURACY} = {'diff': [9.341700000000189e-05, 8.088799999999771e-05, 8.104100000000045e-05, 8.136099999999855e-05, 8.130500000000027e-05, 8.067999999999964e-05, 8.122199999999885e-05, 8.150000000000171e-05, 8.1485...</msg>
<status status="PASS" starttime="20201030 10:57:55.455" endtime="20201030 10:57:55.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.463" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.462" endtime="20201030 10:57:55.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.465" level="INFO">VALUE: [9.341700000000189e-05, 8.088799999999771e-05, 8.104100000000045e-05, 8.136099999999855e-05, 8.130500000000027e-05, 8.067999999999964e-05, 8.122199999999885e-05, 8.150000000000171e-05, 8.148599999999867e-05, 8.093100000000283e-05, 8.14170000000003e-05, 8.120899999999875e-05, 8.084700000000195e-05, 8.123599999999842e-05, 8.070799999999878e-05, 8.116700000000004e-05, 8.15130000000018e-05, 8.09169999999998e-05, 8.119399999999971e-05, 8.14719999999991e-05, 8.140300000000072e-05, 8.080499999999977e-05, 8.136100000000202e-05, 8.075000000000096e-05, 8.123599999999842e-05, 8.118099999999961e-05, 8.131899999999984e-05, 8.094499999999893e-05, 8.086099999999805e-05, 8.130599999999974e-05, 8.098699999999764e-05, 8.15979999999987e-05, 8.112500000000133e-05, 8.07780000000001e-05, 8.112500000000133e-05, 8.162500000000183e-05, 8.130500000000027e-05, 8.144399999999996e-05, 8.086100000000151e-05, 8.055600000000246e-05, 8.104199999999992e-05, 8.086100000000151e-05, 8.137500000000158e-05, 8.07780000000001e-05, 8.15970000000027e-05, 8.123600000000189e-05, 8.093099999999936e-05, 8.073600000000139e-05, 8.125000000000146e-05, 8.066600000000007e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.464" endtime="20201030 10:57:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.459" endtime="20201030 10:57:55.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.471" endtime="20201030 10:57:55.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.470" endtime="20201030 10:57:55.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.468" endtime="20201030 10:57:55.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.109" endtime="20201030 10:57:55.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.109" endtime="20201030 10:57:55.492"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.500" endtime="20201030 10:57:55.520"></status>
</kw>
<msg timestamp="20201030 10:57:55.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.499" endtime="20201030 10:57:55.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.521" endtime="20201030 10:57:55.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.524" endtime="20201030 10:57:55.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.496" endtime="20201030 10:57:55.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.494" endtime="20201030 10:57:55.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.533" endtime="20201030 10:57:55.818"></status>
</kw>
<msg timestamp="20201030 10:57:55.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:55.531" endtime="20201030 10:57:55.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:55.823" endtime="20201030 10:57:55.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.831" endtime="20201030 10:57:55.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.529" endtime="20201030 10:57:55.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.527" endtime="20201030 10:57:55.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.837" level="INFO">${RESULT} = [{'diff': 9.340299999999885e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.257000000000056e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.208399999999963e-05}, {'diff': 8.263899999999894e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:55.834" endtime="20201030 10:57:55.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.842" level="INFO">${ACCURACY} = {'diff': [9.340299999999885e-05, 8.169400000000021e-05, 8.257000000000056e-05, 8.170799999999978e-05, 8.208399999999963e-05, 8.263899999999894e-05, 8.179200000000067e-05, 8.20269999999984e-05, 8.20969...</msg>
<status status="PASS" starttime="20201030 10:57:55.838" endtime="20201030 10:57:55.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.847" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.846" endtime="20201030 10:57:55.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.849" level="INFO">VALUE: [9.340299999999885e-05, 8.169400000000021e-05, 8.257000000000056e-05, 8.170799999999978e-05, 8.208399999999963e-05, 8.263899999999894e-05, 8.179200000000067e-05, 8.20269999999984e-05, 8.209699999999973e-05, 8.230600000000074e-05, 8.181900000000034e-05, 8.168000000000064e-05, 8.180500000000077e-05, 8.24170000000013e-05, 8.212499999999887e-05, 8.262499999999937e-05, 8.254200000000142e-05, 8.24720000000001e-05, 8.176400000000153e-05, 8.226400000000203e-05, 8.237499999999912e-05, 8.218100000000061e-05, 8.224999999999899e-05, 8.212500000000234e-05, 8.223599999999942e-05, 8.244400000000096e-05, 8.254200000000142e-05, 8.181900000000034e-05, 8.266700000000154e-05, 8.170799999999978e-05, 8.22780000000016e-05, 8.249999999999924e-05, 8.243100000000086e-05, 8.205600000000049e-05, 8.211100000000277e-05, 8.180600000000024e-05, 8.26109999999998e-05, 8.198599999999917e-05, 8.262499999999937e-05, 8.248599999999967e-05, 8.237499999999912e-05, 8.243100000000086e-05, 8.187499999999862e-05, 8.16520000000015e-05, 8.243000000000139e-05, 8.251399999999881e-05, 8.204200000000092e-05, 8.180500000000077e-05, 8.23330000000004e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.848" endtime="20201030 10:57:55.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.843" endtime="20201030 10:57:55.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.854" endtime="20201030 10:57:55.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.853" endtime="20201030 10:57:55.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.851" endtime="20201030 10:57:55.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.493" endtime="20201030 10:57:55.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.492" endtime="20201030 10:57:55.875"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.883" endtime="20201030 10:57:55.903"></status>
</kw>
<msg timestamp="20201030 10:57:55.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.882" endtime="20201030 10:57:55.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.904" endtime="20201030 10:57:55.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.907" endtime="20201030 10:57:55.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.879" endtime="20201030 10:57:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.877" endtime="20201030 10:57:55.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.915" endtime="20201030 10:57:56.202"></status>
</kw>
<msg timestamp="20201030 10:57:56.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.914" endtime="20201030 10:57:56.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.206" endtime="20201030 10:57:56.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.215" endtime="20201030 10:57:56.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.911" endtime="20201030 10:57:56.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.910" endtime="20201030 10:57:56.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.221" level="INFO">${RESULT} = [{'diff': 9.341599999999894e-05}, {'diff': 8.288899999999919e-05}, {'diff': 8.299999999999974e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.340199999999978e-05}, {'diff': 8.319400000000171e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:56.218" endtime="20201030 10:57:56.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.225" level="INFO">${ACCURACY} = {'diff': [9.341599999999894e-05, 8.288899999999919e-05, 8.299999999999974e-05, 8.337500000000012e-05, 8.340199999999978e-05, 8.319400000000171e-05, 8.26659999999986e-05, 8.277799999999863e-05, 8.28610...</msg>
<status status="PASS" starttime="20201030 10:57:56.222" endtime="20201030 10:57:56.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.230" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.229" endtime="20201030 10:57:56.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.232" level="INFO">VALUE: [9.341599999999894e-05, 8.288899999999919e-05, 8.299999999999974e-05, 8.337500000000012e-05, 8.340199999999978e-05, 8.319400000000171e-05, 8.26659999999986e-05, 8.277799999999863e-05, 8.286100000000005e-05, 8.274999999999949e-05, 8.269500000000068e-05, 8.293100000000136e-05, 8.274999999999949e-05, 8.298600000000017e-05, 8.266700000000154e-05, 8.305600000000149e-05, 8.323700000000336e-05, 8.350000000000024e-05, 8.269399999999774e-05, 8.298600000000017e-05, 8.350000000000024e-05, 8.354199999999895e-05, 8.294400000000146e-05, 8.350000000000024e-05, 8.34720000000011e-05, 8.308299999999769e-05, 8.274999999999949e-05, 8.301399999999931e-05, 8.322200000000085e-05, 8.343100000000186e-05, 8.322300000000032e-05, 8.28330000000009e-05, 8.308300000000116e-05, 8.320800000000128e-05, 8.323600000000042e-05, 8.323599999999695e-05, 8.275000000000296e-05, 8.29720000000006e-05, 8.298699999999964e-05, 8.272200000000035e-05, 8.298600000000017e-05, 8.344499999999797e-05, 8.316700000000204e-05, 8.36110000000008e-05, 8.282000000000081e-05, 8.348700000000014e-05, 8.279200000000167e-05, 8.308300000000116e-05, 8.342999999999892e-05, 8.322200000000085e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.231" endtime="20201030 10:57:56.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.226" endtime="20201030 10:57:56.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.237" endtime="20201030 10:57:56.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.236" endtime="20201030 10:57:56.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.235" endtime="20201030 10:57:56.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.876" endtime="20201030 10:57:56.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.875" endtime="20201030 10:57:56.258"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.266" endtime="20201030 10:57:56.287"></status>
</kw>
<msg timestamp="20201030 10:57:56.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.265" endtime="20201030 10:57:56.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.288" endtime="20201030 10:57:56.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.291" endtime="20201030 10:57:56.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.262" endtime="20201030 10:57:56.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.260" endtime="20201030 10:57:56.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.300" endtime="20201030 10:57:56.585"></status>
</kw>
<msg timestamp="20201030 10:57:56.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.298" endtime="20201030 10:57:56.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.589" endtime="20201030 10:57:56.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.597" endtime="20201030 10:57:56.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.295" endtime="20201030 10:57:56.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.294" endtime="20201030 10:57:56.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.604" level="INFO">${RESULT} = [{'diff': 9.341700000000189e-05}, {'diff': 8.369500000000168e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.3846999999998e-05}, {'diff': 8.42919999999997e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:56.601" endtime="20201030 10:57:56.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.608" level="INFO">${ACCURACY} = {'diff': [9.341700000000189e-05, 8.369500000000168e-05, 8.461099999999833e-05, 8.388900000000019e-05, 8.3846999999998e-05, 8.42919999999997e-05, 8.406899999999912e-05, 8.39170000000028e-05, 8.43189999...</msg>
<status status="PASS" starttime="20201030 10:57:56.605" endtime="20201030 10:57:56.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.613" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.611" endtime="20201030 10:57:56.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.615" level="INFO">VALUE: [9.341700000000189e-05, 8.369500000000168e-05, 8.461099999999833e-05, 8.388900000000019e-05, 8.3846999999998e-05, 8.42919999999997e-05, 8.406899999999912e-05, 8.39170000000028e-05, 8.431899999999937e-05, 8.442999999999992e-05, 8.438900000000069e-05, 8.386100000000105e-05, 8.38049999999993e-05, 8.388800000000071e-05, 8.42919999999997e-05, 8.355600000000199e-05, 8.44309999999994e-05, 8.388900000000019e-05, 8.368099999999865e-05, 8.402799999999988e-05, 8.368099999999865e-05, 8.394500000000193e-05, 8.400000000000074e-05, 8.405499999999955e-05, 8.395799999999856e-05, 8.444399999999949e-05, 8.423599999999795e-05, 8.379200000000267e-05, 8.423600000000142e-05, 8.430599999999927e-05, 8.444399999999949e-05, 8.425000000000099e-05, 8.400000000000074e-05, 8.372200000000135e-05, 8.419399999999924e-05, 8.461099999999833e-05, 8.417999999999967e-05, 8.381999999999834e-05, 8.412500000000087e-05, 8.458299999999919e-05, 8.436100000000155e-05, 8.417999999999967e-05, 8.448600000000167e-05, 8.367999999999917e-05, 8.391699999999933e-05, 8.387500000000062e-05, 8.420899999999829e-05, 8.373600000000092e-05, 8.416699999999958e-05, 8.393100000000236e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.614" endtime="20201030 10:57:56.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.609" endtime="20201030 10:57:56.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.621" endtime="20201030 10:57:56.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.619" endtime="20201030 10:57:56.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.618" endtime="20201030 10:57:56.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.259" endtime="20201030 10:57:56.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.258" endtime="20201030 10:57:56.641"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.650" endtime="20201030 10:57:56.670"></status>
</kw>
<msg timestamp="20201030 10:57:56.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.648" endtime="20201030 10:57:56.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.671" endtime="20201030 10:57:56.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.673" endtime="20201030 10:57:56.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.646" endtime="20201030 10:57:56.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.644" endtime="20201030 10:57:56.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.682" endtime="20201030 10:57:56.968"></status>
</kw>
<msg timestamp="20201030 10:57:56.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.681" endtime="20201030 10:57:56.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.972" endtime="20201030 10:57:56.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.980" endtime="20201030 10:57:56.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.678" endtime="20201030 10:57:56.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.677" endtime="20201030 10:57:56.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.987" level="INFO">${RESULT} = [{'diff': 9.342999999999851e-05}, {'diff': 8.51660000000011e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.473599999999845e-05}, {'diff': 8.488899999999772e-05}, {'diff': 8.53469999999995e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:56.984" endtime="20201030 10:57:56.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.992" level="INFO">${ACCURACY} = {'diff': [9.342999999999851e-05, 8.51660000000011e-05, 8.56249999999989e-05, 8.473599999999845e-05, 8.488899999999772e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.487500000000162e-05, 8.54310000...</msg>
<status status="PASS" starttime="20201030 10:57:56.988" endtime="20201030 10:57:56.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.996" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.995" endtime="20201030 10:57:56.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.999" level="INFO">VALUE: [9.342999999999851e-05, 8.51660000000011e-05, 8.56249999999989e-05, 8.473599999999845e-05, 8.488899999999772e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.487500000000162e-05, 8.54310000000004e-05, 8.52920000000007e-05, 8.474999999999802e-05, 8.483399999999891e-05, 8.559799999999923e-05, 8.530600000000027e-05, 8.487500000000162e-05, 8.523699999999843e-05, 8.56249999999989e-05, 8.49859999999987e-05, 8.558300000000019e-05, 8.465299999999704e-05, 8.483299999999944e-05, 8.491700000000033e-05, 8.454199999999995e-05, 8.49309999999999e-05, 8.49859999999987e-05, 8.537499999999865e-05, 8.538899999999822e-05, 8.513799999999849e-05, 8.541700000000083e-05, 8.538800000000221e-05, 8.494399999999999e-05, 8.537500000000212e-05, 8.543000000000092e-05, 8.488900000000119e-05, 8.481899999999987e-05, 8.497199999999913e-05, 8.480599999999977e-05, 8.533399999999941e-05, 8.562500000000237e-05, 8.487499999999815e-05, 8.520899999999929e-05, 8.51669999999971e-05, 8.544499999999997e-05, 8.495799999999956e-05, 8.470800000000278e-05, 8.484799999999848e-05, 8.505500000000055e-05, 8.547199999999963e-05, 8.487500000000162e-05, 8.476399999999759e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.997" endtime="20201030 10:57:57.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.993" endtime="20201030 10:57:57.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.004" endtime="20201030 10:57:57.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.002" endtime="20201030 10:57:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.001" endtime="20201030 10:57:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.642" endtime="20201030 10:57:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.642" endtime="20201030 10:57:57.024"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.034" endtime="20201030 10:57:57.053"></status>
</kw>
<msg timestamp="20201030 10:57:57.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.032" endtime="20201030 10:57:57.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.055" endtime="20201030 10:57:57.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.057" endtime="20201030 10:57:57.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.029" endtime="20201030 10:57:57.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.027" endtime="20201030 10:57:57.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.066" endtime="20201030 10:57:57.352"></status>
</kw>
<msg timestamp="20201030 10:57:57.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.065" endtime="20201030 10:57:57.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.356" endtime="20201030 10:57:57.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.364" endtime="20201030 10:57:57.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.062" endtime="20201030 10:57:57.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.061" endtime="20201030 10:57:57.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.371" level="INFO">${RESULT} = [{'diff': 9.343099999999799e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.568100000000065e-05}, {'diff': 8.627800000000213e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.616700000000158e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:57.368" endtime="20201030 10:57:57.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.375" level="INFO">${ACCURACY} = {'diff': [9.343099999999799e-05, 8.663899999999947e-05, 8.568100000000065e-05, 8.627800000000213e-05, 8.605600000000102e-05, 8.616700000000158e-05, 8.59859999999997e-05, 8.591700000000133e-05, 8.62909...</msg>
<status status="PASS" starttime="20201030 10:57:57.372" endtime="20201030 10:57:57.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.379" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.378" endtime="20201030 10:57:57.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.382" level="INFO">VALUE: [9.343099999999799e-05, 8.663899999999947e-05, 8.568100000000065e-05, 8.627800000000213e-05, 8.605600000000102e-05, 8.616700000000158e-05, 8.59859999999997e-05, 8.591700000000133e-05, 8.629099999999876e-05, 8.58050000000013e-05, 8.623599999999995e-05, 8.633299999999747e-05, 8.629099999999876e-05, 8.558300000000019e-05, 8.606899999999765e-05, 8.609700000000026e-05, 8.636100000000008e-05, 8.586099999999958e-05, 8.580600000000077e-05, 8.63470000000005e-05, 8.620900000000029e-05, 8.604200000000145e-05, 8.627800000000213e-05, 8.590200000000228e-05, 8.609799999999973e-05, 8.611099999999983e-05, 8.661100000000033e-05, 8.562500000000237e-05, 8.569400000000074e-05, 8.618000000000167e-05, 8.641700000000183e-05, 8.63470000000005e-05, 8.566700000000108e-05, 8.575000000000249e-05, 8.633400000000041e-05, 8.555599999999705e-05, 8.622299999999986e-05, 8.595900000000004e-05, 8.624999999999952e-05, 8.654100000000248e-05, 8.591599999999838e-05, 8.558300000000019e-05, 8.605500000000155e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.588899999999872e-05, 8.56249999999989e-05, 8.595900000000004e-05, 8.568099999999718e-05, 8.58059999999973e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.381" endtime="20201030 10:57:57.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.376" endtime="20201030 10:57:57.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.387" endtime="20201030 10:57:57.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.385" endtime="20201030 10:57:57.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.384" endtime="20201030 10:57:57.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.025" endtime="20201030 10:57:57.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.025" endtime="20201030 10:57:57.407"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.416" endtime="20201030 10:57:57.437"></status>
</kw>
<msg timestamp="20201030 10:57:57.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.414" endtime="20201030 10:57:57.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.439" endtime="20201030 10:57:57.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.441" endtime="20201030 10:57:57.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.412" endtime="20201030 10:57:57.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.410" endtime="20201030 10:57:57.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.450" endtime="20201030 10:57:57.735"></status>
</kw>
<msg timestamp="20201030 10:57:57.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.449" endtime="20201030 10:57:57.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.740" endtime="20201030 10:57:57.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.748" endtime="20201030 10:57:57.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.446" endtime="20201030 10:57:57.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.445" endtime="20201030 10:57:57.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.754" level="INFO">${RESULT} = [{'diff': 9.340299999999885e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.725000000000052e-05}, {'diff': 8.733399999999794e-05}, {'diff': 8.68050000000023e-05}, {'diff': 8.761100000000133e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:57.751" endtime="20201030 10:57:57.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.759" level="INFO">${ACCURACY} = {'diff': [9.340299999999885e-05, 8.759700000000176e-05, 8.725000000000052e-05, 8.733399999999794e-05, 8.68050000000023e-05, 8.761100000000133e-05, 8.712499999999693e-05, 8.71250000000004e-05, 8.727799...</msg>
<status status="PASS" starttime="20201030 10:57:57.755" endtime="20201030 10:57:57.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.763" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.762" endtime="20201030 10:57:57.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.769" level="INFO">VALUE: [9.340299999999885e-05, 8.759700000000176e-05, 8.725000000000052e-05, 8.733399999999794e-05, 8.68050000000023e-05, 8.761100000000133e-05, 8.712499999999693e-05, 8.71250000000004e-05, 8.727799999999966e-05, 8.686100000000058e-05, 8.726400000000009e-05, 8.71799999999992e-05, 8.71250000000004e-05, 8.675000000000002e-05, 8.673600000000045e-05, 8.737499999999718e-05, 8.748700000000068e-05, 8.73470000000015e-05, 8.74860000000012e-05, 8.683400000000091e-05, 8.71120000000003e-05, 8.68059999999983e-05, 8.69310000000019e-05, 8.709700000000126e-05, 8.694399999999852e-05, 8.750000000000077e-05, 8.719399999999877e-05, 8.723600000000095e-05, 8.704199999999898e-05, 8.71669999999991e-05, 8.74310000000024e-05, 8.727799999999966e-05, 8.697199999999766e-05, 8.655599999999805e-05, 8.673599999999698e-05, 8.69310000000019e-05, 8.76250000000009e-05, 8.750000000000077e-05, 8.661100000000033e-05, 8.748599999999773e-05, 8.73050000000028e-05, 8.691599999999938e-05, 8.683400000000091e-05, 8.76250000000009e-05, 8.658300000000119e-05, 8.738900000000022e-05, 8.731999999999837e-05, 8.67920000000022e-05, 8.669499999999775e-05, 8.71120000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.764" endtime="20201030 10:57:57.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.759" endtime="20201030 10:57:57.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.998" endtime="20201030 10:57:58.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.996" endtime="20201030 10:57:58.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.995" endtime="20201030 10:57:58.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.408" endtime="20201030 10:57:58.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.408" endtime="20201030 10:57:58.019"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.028" endtime="20201030 10:57:58.048"></status>
</kw>
<msg timestamp="20201030 10:57:58.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.026" endtime="20201030 10:57:58.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.050" endtime="20201030 10:57:58.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.052" endtime="20201030 10:57:58.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.024" endtime="20201030 10:57:58.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.022" endtime="20201030 10:57:58.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.062" endtime="20201030 10:57:58.360"></status>
</kw>
<msg timestamp="20201030 10:57:58.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.060" endtime="20201030 10:57:58.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.364" endtime="20201030 10:57:58.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.372" endtime="20201030 10:57:58.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.058" endtime="20201030 10:57:58.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.056" endtime="20201030 10:57:58.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.379" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 8.784699999999854e-05}, {'diff': 8.862499999999843e-05}, {'diff': 8.841700000000036e-05}, {'diff': 8.836099999999861e-05}, {'diff': 8.787500000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:58.376" endtime="20201030 10:57:58.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.384" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 8.784699999999854e-05, 8.862499999999843e-05, 8.841700000000036e-05, 8.836099999999861e-05, 8.787500000000115e-05, 8.855600000000005e-05, 8.793099999999943e-05, 8.7709...</msg>
<status status="PASS" starttime="20201030 10:57:58.380" endtime="20201030 10:57:58.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.388" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.387" endtime="20201030 10:57:58.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.391" level="INFO">VALUE: [9.341699999999842e-05, 8.784699999999854e-05, 8.862499999999843e-05, 8.841700000000036e-05, 8.836099999999861e-05, 8.787500000000115e-05, 8.855600000000005e-05, 8.793099999999943e-05, 8.770900000000179e-05, 8.772299999999789e-05, 8.833400000000241e-05, 8.775000000000102e-05, 8.780499999999983e-05, 8.838900000000122e-05, 8.842999999999698e-05, 8.791600000000038e-05, 8.809699999999879e-05, 8.848599999999873e-05, 8.837499999999818e-05, 8.836099999999861e-05, 8.801300000000137e-05, 8.820899999999882e-05, 8.851399999999787e-05, 8.837499999999818e-05, 8.809800000000173e-05, 8.844400000000002e-05, 8.848599999999873e-05, 8.820799999999934e-05, 8.777800000000016e-05, 8.861099999999886e-05, 8.848599999999873e-05, 8.841700000000036e-05, 8.841700000000036e-05, 8.788899999999725e-05, 8.784799999999801e-05, 8.850000000000177e-05, 8.825000000000152e-05, 8.791699999999986e-05, 8.834800000000198e-05, 8.84449999999995e-05, 8.825000000000152e-05, 8.869499999999975e-05, 8.829100000000076e-05, 8.826399999999762e-05, 8.769399999999927e-05, 8.78189999999994e-05, 8.78059999999993e-05, 8.797200000000213e-05, 8.777800000000016e-05, 8.811100000000183e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.389" endtime="20201030 10:57:58.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.385" endtime="20201030 10:57:58.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.396" endtime="20201030 10:57:58.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.394" endtime="20201030 10:57:58.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.393" endtime="20201030 10:57:58.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.020" endtime="20201030 10:57:58.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.019" endtime="20201030 10:57:58.416"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.425" endtime="20201030 10:57:58.444"></status>
</kw>
<msg timestamp="20201030 10:57:58.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.423" endtime="20201030 10:57:58.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.446" endtime="20201030 10:57:58.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.448" endtime="20201030 10:57:58.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.421" endtime="20201030 10:57:58.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.419" endtime="20201030 10:57:58.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.457" endtime="20201030 10:57:58.744"></status>
</kw>
<msg timestamp="20201030 10:57:58.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.456" endtime="20201030 10:57:58.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.749" endtime="20201030 10:57:58.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.757" endtime="20201030 10:57:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.453" endtime="20201030 10:57:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.452" endtime="20201030 10:57:58.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.764" level="INFO">${RESULT} = [{'diff': 9.340199999999937e-05}, {'diff': 8.879200000000073e-05}, {'diff': 8.936099999999961e-05}, {'diff': 8.962499999999943e-05}, {'diff': 8.94999999999993e-05}, {'diff': 8.901300000000237e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:58.761" endtime="20201030 10:57:58.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.768" level="INFO">${ACCURACY} = {'diff': [9.340199999999937e-05, 8.879200000000073e-05, 8.936099999999961e-05, 8.962499999999943e-05, 8.94999999999993e-05, 8.901300000000237e-05, 8.890200000000181e-05, 8.951399999999887e-05, 8.89300...</msg>
<status status="PASS" starttime="20201030 10:57:58.765" endtime="20201030 10:57:58.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.773" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.772" endtime="20201030 10:57:58.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.775" level="INFO">VALUE: [9.340199999999937e-05, 8.879200000000073e-05, 8.936099999999961e-05, 8.962499999999943e-05, 8.94999999999993e-05, 8.901300000000237e-05, 8.890200000000181e-05, 8.951399999999887e-05, 8.893000000000095e-05, 8.905500000000108e-05, 8.880500000000083e-05, 8.945900000000007e-05, 8.924999999999905e-05, 8.966699999999814e-05, 8.936099999999961e-05, 8.8945e-05, 8.911099999999936e-05, 8.886099999999911e-05, 8.881999999999987e-05, 8.89730000000026e-05, 8.956900000000115e-05, 8.936099999999961e-05, 8.941599999999841e-05, 8.938899999999875e-05, 8.920800000000034e-05, 8.854099999999754e-05, 8.900000000000227e-05, 8.881999999999987e-05, 8.8945e-05, 8.893099999999696e-05, 8.870900000000279e-05, 8.86670000000006e-05, 8.923600000000295e-05, 8.940300000000179e-05, 8.88190000000004e-05, 8.873599999999898e-05, 8.897199999999966e-05, 8.965300000000204e-05, 8.874999999999855e-05, 8.930500000000133e-05, 8.855500000000058e-05, 8.886100000000258e-05, 8.919500000000025e-05, 8.886099999999911e-05, 8.869500000000322e-05, 8.94999999999993e-05, 8.932000000000037e-05, 8.8945e-05, 8.884800000000248e-05, 8.913800000000249e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.774" endtime="20201030 10:57:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.769" endtime="20201030 10:57:58.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.781" endtime="20201030 10:57:58.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.779" endtime="20201030 10:57:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.778" endtime="20201030 10:57:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.417" endtime="20201030 10:57:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.417" endtime="20201030 10:57:58.801"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.810" endtime="20201030 10:57:58.832"></status>
</kw>
<msg timestamp="20201030 10:57:58.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.809" endtime="20201030 10:57:58.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.834" endtime="20201030 10:57:58.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.836" endtime="20201030 10:57:58.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.806" endtime="20201030 10:57:58.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.804" endtime="20201030 10:57:58.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.846" endtime="20201030 10:57:59.154"></status>
</kw>
<msg timestamp="20201030 10:57:59.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.844" endtime="20201030 10:57:59.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.158" endtime="20201030 10:57:59.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.166" endtime="20201030 10:57:59.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.842" endtime="20201030 10:57:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.840" endtime="20201030 10:57:59.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.173" level="INFO">${RESULT} = [{'diff': 9.433299999999853e-05}, {'diff': 9.037500000000018e-05}, {'diff': 8.99999999999998e-05}, {'diff': 9.013900000000297e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.987499999999968e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:59.170" endtime="20201030 10:57:59.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.177" level="INFO">${ACCURACY} = {'diff': [9.433299999999853e-05, 9.037500000000018e-05, 8.99999999999998e-05, 9.013900000000297e-05, 8.986100000000011e-05, 8.987499999999968e-05, 9.036099999999714e-05, 8.984700000000054e-05, 9.04860...</msg>
<status status="PASS" starttime="20201030 10:57:59.174" endtime="20201030 10:57:59.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.182" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.181" endtime="20201030 10:57:59.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.185" level="INFO">VALUE: [9.433299999999853e-05, 9.037500000000018e-05, 8.99999999999998e-05, 9.013900000000297e-05, 8.986100000000011e-05, 8.987499999999968e-05, 9.036099999999714e-05, 8.984700000000054e-05, 9.048600000000073e-05, 9.03060000000018e-05, 8.968100000000118e-05, 9.007000000000112e-05, 9.038900000000322e-05, 9.012499999999993e-05, 8.982000000000087e-05, 9.012499999999993e-05, 8.987499999999968e-05, 9.023599999999701e-05, 8.980499999999836e-05, 9.030499999999886e-05, 8.987499999999968e-05, 8.986100000000011e-05, 9.012499999999993e-05, 9.015299999999907e-05, 8.973599999999998e-05, 9.036100000000061e-05, 8.980599999999783e-05, 9.043100000000193e-05, 8.96670000000016e-05, 9.005499999999861e-05, 9.012499999999993e-05, 8.998700000000318e-05, 9.037500000000018e-05, 9.01939999999983e-05, 8.99999999999998e-05, 8.973599999999998e-05, 9.036099999999714e-05, 9.043099999999846e-05, 9.005500000000208e-05, 9.022200000000091e-05, 9.011100000000036e-05, 9.036100000000061e-05, 9.029199999999876e-05, 9.026400000000309e-05, 8.968100000000118e-05, 9.055500000000258e-05, 9.044399999999855e-05, 8.991599999999891e-05, 9.008300000000122e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.183" endtime="20201030 10:57:59.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.178" endtime="20201030 10:57:59.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.191" endtime="20201030 10:57:59.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.189" endtime="20201030 10:57:59.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.188" endtime="20201030 10:57:59.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.802" endtime="20201030 10:57:59.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.802" endtime="20201030 10:57:59.211"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.221" endtime="20201030 10:57:59.241"></status>
</kw>
<msg timestamp="20201030 10:57:59.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.219" endtime="20201030 10:57:59.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.243" endtime="20201030 10:57:59.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.245" endtime="20201030 10:57:59.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.216" endtime="20201030 10:57:59.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.214" endtime="20201030 10:57:59.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.255" endtime="20201030 10:57:59.541"></status>
</kw>
<msg timestamp="20201030 10:57:59.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.253" endtime="20201030 10:57:59.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.545" endtime="20201030 10:57:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.553" endtime="20201030 10:57:59.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.251" endtime="20201030 10:57:59.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.249" endtime="20201030 10:57:59.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.560" level="INFO">${RESULT} = [{'diff': 9.590300000000135e-05}, {'diff': 9.098600000000123e-05}, {'diff': 9.154099999999707e-05}, {'diff': 9.109699999999832e-05}, {'diff': 9.108299999999875e-05}, {'diff': 9.124999999999758e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:59.557" endtime="20201030 10:57:59.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.565" level="INFO">${ACCURACY} = {'diff': [9.590300000000135e-05, 9.098600000000123e-05, 9.154099999999707e-05, 9.109699999999832e-05, 9.108299999999875e-05, 9.124999999999758e-05, 9.123600000000148e-05, 9.15000000000013e-05, 9.16249...</msg>
<status status="PASS" starttime="20201030 10:57:59.561" endtime="20201030 10:57:59.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.570" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.569" endtime="20201030 10:57:59.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.573" level="INFO">VALUE: [9.590300000000135e-05, 9.098600000000123e-05, 9.154099999999707e-05, 9.109699999999832e-05, 9.108299999999875e-05, 9.124999999999758e-05, 9.123600000000148e-05, 9.15000000000013e-05, 9.162499999999796e-05, 9.130599999999933e-05, 9.138900000000075e-05, 9.086100000000111e-05, 9.125000000000105e-05, 9.084700000000154e-05, 9.156899999999968e-05, 9.101400000000037e-05, 9.136099999999814e-05, 9.105499999999961e-05, 9.092999999999948e-05, 9.162499999999796e-05, 9.11800000000032e-05, 9.143100000000293e-05, 9.056899999999868e-05, 9.11670000000031e-05, 9.082000000000187e-05, 9.120800000000234e-05, 9.119499999999878e-05, 9.143100000000293e-05, 9.10000000000008e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.072200000000141e-05, 9.102700000000047e-05, 9.080500000000283e-05, 9.070799999999837e-05, 9.077799999999969e-05, 9.094399999999905e-05, 9.080599999999883e-05, 9.095900000000157e-05, 9.082000000000187e-05, 9.08199999999984e-05, 9.119499999999878e-05, 9.068100000000218e-05, 9.136200000000108e-05, 9.143099999999946e-05, 9.131899999999943e-05, 9.120799999999887e-05, 9.079099999999979e-05, 9.054099999999954e-05, 9.141699999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.571" endtime="20201030 10:57:59.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.566" endtime="20201030 10:57:59.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.578" endtime="20201030 10:57:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.576" endtime="20201030 10:57:59.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.575" endtime="20201030 10:57:59.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.212" endtime="20201030 10:57:59.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.212" endtime="20201030 10:57:59.599"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.608" endtime="20201030 10:57:59.628"></status>
</kw>
<msg timestamp="20201030 10:57:59.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.606" endtime="20201030 10:57:59.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.629" endtime="20201030 10:57:59.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.632" endtime="20201030 10:57:59.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.603" endtime="20201030 10:57:59.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.601" endtime="20201030 10:57:59.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.642" endtime="20201030 10:57:59.928"></status>
</kw>
<msg timestamp="20201030 10:57:59.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.640" endtime="20201030 10:57:59.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.932" endtime="20201030 10:57:59.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.941" endtime="20201030 10:57:59.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.637" endtime="20201030 10:57:59.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.635" endtime="20201030 10:57:59.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.947" level="INFO">${RESULT} = [{'diff': 9.565299999999763e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.262499999999896e-05}, {'diff': 9.209700000000279e-05}, {'diff': 9.249999999999883e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:59.944" endtime="20201030 10:57:59.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.952" level="INFO">${ACCURACY} = {'diff': [9.565299999999763e-05, 9.168099999999971e-05, 9.173600000000198e-05, 9.262499999999896e-05, 9.209700000000279e-05, 9.249999999999883e-05, 9.222299999999892e-05, 9.229200000000076e-05, 9.2139...</msg>
<status status="PASS" starttime="20201030 10:57:59.948" endtime="20201030 10:57:59.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.956" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.955" endtime="20201030 10:57:59.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.959" level="INFO">VALUE: [9.565299999999763e-05, 9.168099999999971e-05, 9.173600000000198e-05, 9.262499999999896e-05, 9.209700000000279e-05, 9.249999999999883e-05, 9.222299999999892e-05, 9.229200000000076e-05, 9.21390000000015e-05, 9.262499999999896e-05, 9.205500000000061e-05, 9.175000000000155e-05, 9.231900000000043e-05, 9.212500000000193e-05, 9.188900000000125e-05, 9.255600000000058e-05, 9.175000000000155e-05, 9.180599999999983e-05, 9.230600000000033e-05, 9.262499999999896e-05, 9.243100000000046e-05, 9.176399999999765e-05, 9.195799999999962e-05, 9.212499999999846e-05, 9.209700000000279e-05, 9.184700000000254e-05, 9.218000000000073e-05, 9.245800000000012e-05, 9.204200000000051e-05, 9.244500000000003e-05, 9.211099999999889e-05, 9.162500000000143e-05, 9.188900000000125e-05, 9.169499999999928e-05, 9.266699999999767e-05, 9.188900000000125e-05, 9.262500000000243e-05, 9.170800000000284e-05, 9.237499999999871e-05, 9.251400000000187e-05, 9.2333e-05, 9.190300000000082e-05, 9.205600000000008e-05, 9.237500000000218e-05, 9.262499999999896e-05, 9.198599999999876e-05, 9.204200000000051e-05, 9.252800000000144e-05, 9.262500000000243e-05, 9.237499999999871e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.957" endtime="20201030 10:57:59.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.953" endtime="20201030 10:57:59.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.964" endtime="20201030 10:57:59.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.962" endtime="20201030 10:57:59.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.961" endtime="20201030 10:57:59.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.600" endtime="20201030 10:57:59.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.599" endtime="20201030 10:57:59.985"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.994" endtime="20201030 10:58:00.016"></status>
</kw>
<msg timestamp="20201030 10:58:00.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.992" endtime="20201030 10:58:00.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.017" endtime="20201030 10:58:00.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.020" endtime="20201030 10:58:00.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.990" endtime="20201030 10:58:00.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.987" endtime="20201030 10:58:00.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.029" endtime="20201030 10:58:00.315"></status>
</kw>
<msg timestamp="20201030 10:58:00.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.028" endtime="20201030 10:58:00.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.319" endtime="20201030 10:58:00.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.328" endtime="20201030 10:58:00.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.025" endtime="20201030 10:58:00.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.023" endtime="20201030 10:58:00.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.334" level="INFO">${RESULT} = [{'diff': 9.787500000000074e-05}, {'diff': 9.31390000000025e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.329200000000176e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.343000000000198e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:00.331" endtime="20201030 10:58:00.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.339" level="INFO">${ACCURACY} = {'diff': [9.787500000000074e-05, 9.31390000000025e-05, 9.280600000000083e-05, 9.329200000000176e-05, 9.281900000000093e-05, 9.343000000000198e-05, 9.274999999999908e-05, 9.313899999999903e-05, 9.34440...</msg>
<status status="PASS" starttime="20201030 10:58:00.335" endtime="20201030 10:58:00.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.343" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.342" endtime="20201030 10:58:00.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.346" level="INFO">VALUE: [9.787500000000074e-05, 9.31390000000025e-05, 9.280600000000083e-05, 9.329200000000176e-05, 9.281900000000093e-05, 9.343000000000198e-05, 9.274999999999908e-05, 9.313899999999903e-05, 9.344400000000155e-05, 9.327799999999872e-05, 9.331899999999796e-05, 9.348600000000026e-05, 9.338899999999928e-05, 9.294500000000053e-05, 9.361100000000039e-05, 9.257000000000015e-05, 9.336100000000014e-05, 9.288899999999878e-05, 9.312499999999946e-05, 9.323699999999949e-05, 9.338899999999928e-05, 9.302799999999847e-05, 9.302700000000247e-05, 9.323600000000001e-05, 9.362499999999996e-05, 9.287499999999921e-05, 9.352800000000244e-05, 9.269500000000028e-05, 9.280600000000083e-05, 9.269500000000028e-05, 9.293100000000096e-05, 9.318099999999774e-05, 9.351299999999993e-05, 9.291700000000139e-05, 9.276400000000212e-05, 9.287499999999921e-05, 9.255500000000111e-05, 9.295800000000062e-05, 9.284700000000007e-05, 9.354199999999854e-05, 9.330600000000133e-05, 9.312499999999946e-05, 9.255600000000058e-05, 9.362499999999996e-05, 9.30000000000028e-05, 9.255599999999711e-05, 9.28330000000005e-05, 9.292999999999801e-05, 9.312499999999946e-05, 9.33469999999971e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.344" endtime="20201030 10:58:00.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.340" endtime="20201030 10:58:00.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.352" endtime="20201030 10:58:00.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.351" endtime="20201030 10:58:00.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.349" endtime="20201030 10:58:00.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.986" endtime="20201030 10:58:00.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.985" endtime="20201030 10:58:00.373"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.382" endtime="20201030 10:58:00.402"></status>
</kw>
<msg timestamp="20201030 10:58:00.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.380" endtime="20201030 10:58:00.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.404" endtime="20201030 10:58:00.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.406" endtime="20201030 10:58:00.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.378" endtime="20201030 10:58:00.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.375" endtime="20201030 10:58:00.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.416" endtime="20201030 10:58:00.701"></status>
</kw>
<msg timestamp="20201030 10:58:00.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.414" endtime="20201030 10:58:00.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.705" endtime="20201030 10:58:00.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.714" endtime="20201030 10:58:00.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.411" endtime="20201030 10:58:00.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.410" endtime="20201030 10:58:00.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.721" level="INFO">${RESULT} = [{'diff': 9.881899999999999e-05}, {'diff': 9.424999999999711e-05}, {'diff': 9.373600000000051e-05}, {'diff': 9.444399999999908e-05}, {'diff': 9.419500000000178e-05}, {'diff': 9.391699999999892e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.717" endtime="20201030 10:58:00.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.726" level="INFO">${ACCURACY} = {'diff': [9.881899999999999e-05, 9.424999999999711e-05, 9.373600000000051e-05, 9.444399999999908e-05, 9.419500000000178e-05, 9.391699999999892e-05, 9.39859999999973e-05, 9.394499999999806e-05, 9.45560...</msg>
<status status="PASS" starttime="20201030 10:58:00.722" endtime="20201030 10:58:00.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.731" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.729" endtime="20201030 10:58:00.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.733" level="INFO">VALUE: [9.881899999999999e-05, 9.424999999999711e-05, 9.373600000000051e-05, 9.444399999999908e-05, 9.419500000000178e-05, 9.391699999999892e-05, 9.39859999999973e-05, 9.394499999999806e-05, 9.455600000000258e-05, 9.461199999999739e-05, 9.443099999999899e-05, 9.437500000000071e-05, 9.45140000000004e-05, 9.436099999999767e-05, 9.44859999999978e-05, 9.377800000000269e-05, 9.445800000000212e-05, 9.388899999999978e-05, 9.427799999999972e-05, 9.418099999999874e-05, 9.418100000000221e-05, 9.436099999999767e-05, 9.394500000000153e-05, 9.430599999999886e-05, 9.418100000000221e-05, 9.406899999999871e-05, 9.418000000000273e-05, 9.424999999999711e-05, 9.413900000000003e-05, 9.418000000000273e-05, 9.384700000000107e-05, 9.462500000000096e-05, 9.419499999999831e-05, 9.443099999999899e-05, 9.438900000000028e-05, 9.423599999999754e-05, 9.39720000000012e-05, 9.418099999999874e-05, 9.4333999999998e-05, 9.431900000000243e-05, 9.400000000000033e-05, 9.356900000000168e-05, 9.462500000000096e-05, 9.444399999999908e-05, 9.441700000000289e-05, 9.381999999999793e-05, 9.458400000000172e-05, 9.450000000000083e-05, 9.41529999999996e-05, 9.363899999999953e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.732" endtime="20201030 10:58:00.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.727" endtime="20201030 10:58:00.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.738" endtime="20201030 10:58:00.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.737" endtime="20201030 10:58:00.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.735" endtime="20201030 10:58:00.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.374" endtime="20201030 10:58:00.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.373" endtime="20201030 10:58:00.759"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.768" endtime="20201030 10:58:00.789"></status>
</kw>
<msg timestamp="20201030 10:58:00.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.767" endtime="20201030 10:58:00.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.790" endtime="20201030 10:58:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.793" endtime="20201030 10:58:00.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.764" endtime="20201030 10:58:00.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.762" endtime="20201030 10:58:00.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.802" endtime="20201030 10:58:01.089"></status>
</kw>
<msg timestamp="20201030 10:58:01.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.801" endtime="20201030 10:58:01.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.094" endtime="20201030 10:58:01.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.103" endtime="20201030 10:58:01.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.798" endtime="20201030 10:58:01.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.796" endtime="20201030 10:58:01.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.110" level="INFO">${RESULT} = [{'diff': 9.897200000000272e-05}, {'diff': 9.501399999999743e-05}, {'diff': 9.493100000000296e-05}, {'diff': 9.50140000000009e-05}, {'diff': 9.548700000000174e-05}, {'diff': 9.467999999999976e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:01.106" endtime="20201030 10:58:01.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.114" level="INFO">${ACCURACY} = {'diff': [9.897200000000272e-05, 9.501399999999743e-05, 9.493100000000296e-05, 9.50140000000009e-05, 9.548700000000174e-05, 9.467999999999976e-05, 9.516700000000017e-05, 9.484700000000207e-05, 9.45549...</msg>
<status status="PASS" starttime="20201030 10:58:01.111" endtime="20201030 10:58:01.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.119" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.118" endtime="20201030 10:58:01.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.121" level="INFO">VALUE: [9.897200000000272e-05, 9.501399999999743e-05, 9.493100000000296e-05, 9.50140000000009e-05, 9.548700000000174e-05, 9.467999999999976e-05, 9.516700000000017e-05, 9.484700000000207e-05, 9.455499999999964e-05, 9.543000000000051e-05, 9.486099999999817e-05, 9.480599999999936e-05, 9.504200000000004e-05, 9.475000000000108e-05, 9.505599999999961e-05, 9.538799999999834e-05, 9.500000000000133e-05, 9.562500000000196e-05, 9.523599999999854e-05, 9.447199999999822e-05, 9.455499999999964e-05, 9.563900000000153e-05, 9.512500000000146e-05, 9.487500000000121e-05, 9.549999999999836e-05, 9.511099999999842e-05, 9.513899999999756e-05, 9.512500000000146e-05, 9.543099999999999e-05, 9.505599999999961e-05, 9.493099999999949e-05, 9.547199999999922e-05, 9.525000000000158e-05, 9.550000000000183e-05, 9.547199999999922e-05, 9.473599999999804e-05, 9.473599999999804e-05, 9.541700000000042e-05, 9.502800000000047e-05, 9.480599999999936e-05, 9.519499999999931e-05, 9.494499999999906e-05, 9.473600000000151e-05, 9.523700000000149e-05, 9.512500000000146e-05, 9.512499999999799e-05, 9.524999999999811e-05, 9.505500000000014e-05, 9.543000000000051e-05, 9.531899999999996e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.120" endtime="20201030 10:58:01.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.115" endtime="20201030 10:58:01.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.127" endtime="20201030 10:58:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.125" endtime="20201030 10:58:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.124" endtime="20201030 10:58:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.760" endtime="20201030 10:58:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.760" endtime="20201030 10:58:01.147"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.157" endtime="20201030 10:58:01.178"></status>
</kw>
<msg timestamp="20201030 10:58:01.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.155" endtime="20201030 10:58:01.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.179" endtime="20201030 10:58:01.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.182" endtime="20201030 10:58:01.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.152" endtime="20201030 10:58:01.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.150" endtime="20201030 10:58:01.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.191" endtime="20201030 10:58:01.479"></status>
</kw>
<msg timestamp="20201030 10:58:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.190" endtime="20201030 10:58:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.483" endtime="20201030 10:58:01.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.491" endtime="20201030 10:58:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.187" endtime="20201030 10:58:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.185" endtime="20201030 10:58:01.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.498" level="INFO">${RESULT} = [{'diff': 0.00010029200000000182}, {'diff': 9.613900000000203e-05}, {'diff': 9.644399999999761e-05}, {'diff': 9.645800000000065e-05}, {'diff': 9.580500000000089e-05}, {'diff': 9.624999999999911e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:01.495" endtime="20201030 10:58:01.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.502" level="INFO">${ACCURACY} = {'diff': [0.00010029200000000182, 9.613900000000203e-05, 9.644399999999761e-05, 9.645800000000065e-05, 9.580500000000089e-05, 9.624999999999911e-05, 9.580500000000089e-05, 9.568000000000076e-05, 9.644...</msg>
<status status="PASS" starttime="20201030 10:58:01.499" endtime="20201030 10:58:01.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.507" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.506" endtime="20201030 10:58:01.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.513" level="INFO">VALUE: [0.00010029200000000182, 9.613900000000203e-05, 9.644399999999761e-05, 9.645800000000065e-05, 9.580500000000089e-05, 9.624999999999911e-05, 9.580500000000089e-05, 9.568000000000076e-05, 9.644400000000108e-05, 9.591699999999745e-05, 9.611099999999942e-05, 9.599999999999886e-05, 9.663899999999906e-05, 9.607000000000018e-05, 9.618100000000074e-05, 9.611099999999942e-05, 9.586099999999917e-05, 9.606900000000071e-05, 9.580499999999742e-05, 9.60140000000019e-05, 9.587500000000221e-05, 9.662500000000296e-05, 9.645800000000065e-05, 9.611099999999942e-05, 9.579200000000079e-05, 9.556999999999968e-05, 9.604199999999757e-05, 9.623599999999954e-05, 9.657000000000068e-05, 9.569499999999981e-05, 9.59729999999992e-05, 9.579099999999785e-05, 9.659800000000329e-05, 9.572199999999947e-05, 9.647200000000022e-05, 9.645800000000065e-05, 9.65279999999985e-05, 9.597199999999972e-05, 9.580600000000036e-05, 9.643100000000099e-05, 9.605600000000061e-05, 9.601399999999843e-05, 9.662499999999949e-05, 9.634800000000304e-05, 9.591699999999745e-05, 9.637499999999924e-05, 9.591600000000144e-05, 9.64859999999998e-05, 9.606900000000071e-05, 9.568000000000076e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.508" endtime="20201030 10:58:01.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.503" endtime="20201030 10:58:01.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.518" endtime="20201030 10:58:01.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.517" endtime="20201030 10:58:01.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.515" endtime="20201030 10:58:01.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.148" endtime="20201030 10:58:01.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.148" endtime="20201030 10:58:01.539"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.548" endtime="20201030 10:58:01.569"></status>
</kw>
<msg timestamp="20201030 10:58:01.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.546" endtime="20201030 10:58:01.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.571" endtime="20201030 10:58:01.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.573" endtime="20201030 10:58:01.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.544" endtime="20201030 10:58:01.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.542" endtime="20201030 10:58:01.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.583" endtime="20201030 10:58:01.870"></status>
</kw>
<msg timestamp="20201030 10:58:01.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.581" endtime="20201030 10:58:01.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020432389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.874" endtime="20201030 10:58:01.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.883" endtime="20201030 10:58:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.578" endtime="20201030 10:58:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.577" endtime="20201030 10:58:01.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.890" level="INFO">${RESULT} = [{'diff': 0.00010159700000000188}, {'diff': 9.672200000000047e-05}, {'diff': 9.676399999999918e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.694399999999812e-05}, {'diff': 9.736100000000067e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:01.886" endtime="20201030 10:58:01.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.895" level="INFO">${ACCURACY} = {'diff': [0.00010159700000000188, 9.672200000000047e-05, 9.676399999999918e-05, 9.737500000000024e-05, 9.694399999999812e-05, 9.736100000000067e-05, 9.738899999999981e-05, 9.761100000000092e-05, 9.654...</msg>
<status status="PASS" starttime="20201030 10:58:01.891" endtime="20201030 10:58:01.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.900" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.898" endtime="20201030 10:58:01.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.902" level="INFO">VALUE: [0.00010159700000000188, 9.672200000000047e-05, 9.676399999999918e-05, 9.737500000000024e-05, 9.694399999999812e-05, 9.736100000000067e-05, 9.738899999999981e-05, 9.761100000000092e-05, 9.654200000000154e-05, 9.712499999999999e-05, 9.723599999999707e-05, 9.707000000000118e-05, 9.712499999999999e-05, 9.761199999999692e-05, 9.701399999999943e-05, 9.743000000000251e-05, 9.673600000000004e-05, 9.725000000000011e-05, 9.693100000000149e-05, 9.680600000000136e-05, 9.733299999999806e-05, 9.697200000000072e-05, 9.741700000000242e-05, 9.707000000000118e-05, 9.705600000000161e-05, 9.687499999999974e-05, 9.743099999999852e-05, 9.738899999999981e-05, 9.677699999999928e-05, 9.680499999999842e-05, 9.699999999999986e-05, 9.761100000000092e-05, 9.694399999999812e-05, 9.691700000000192e-05, 9.712499999999999e-05, 9.67080000000009e-05, 9.73479999999971e-05, 9.707000000000118e-05, 9.743099999999852e-05, 9.727699999999978e-05, 9.69860000000003e-05, 9.742999999999905e-05, 9.742999999999905e-05, 9.680499999999842e-05, 9.686199999999964e-05, 9.674999999999961e-05, 9.704200000000204e-05, 9.68470000000006e-05, 9.668100000000124e-05, 9.745799999999818e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.901" endtime="20201030 10:58:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.896" endtime="20201030 10:58:01.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.907" endtime="20201030 10:58:01.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.906" endtime="20201030 10:58:01.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.905" endtime="20201030 10:58:01.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.540" endtime="20201030 10:58:01.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.539" endtime="20201030 10:58:01.928"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.937" endtime="20201030 10:58:01.959"></status>
</kw>
<msg timestamp="20201030 10:58:01.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.935" endtime="20201030 10:58:01.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.961" endtime="20201030 10:58:01.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.964" endtime="20201030 10:58:01.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.933" endtime="20201030 10:58:01.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.931" endtime="20201030 10:58:01.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.977" endtime="20201030 10:58:02.269"></status>
</kw>
<msg timestamp="20201030 10:58:02.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:01.975" endtime="20201030 10:58:02.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:02.273" endtime="20201030 10:58:02.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.282" endtime="20201030 10:58:02.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.972" endtime="20201030 10:58:02.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.969" endtime="20201030 10:58:02.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.289" level="INFO">${RESULT} = [{'diff': 0.0001021939999999999}, {'diff': 9.78059999999989e-05}, {'diff': 9.781900000000246e-05}, {'diff': 9.823600000000154e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.861200000000139e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:02.285" endtime="20201030 10:58:02.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.293" level="INFO">${ACCURACY} = {'diff': [0.0001021939999999999, 9.78059999999989e-05, 9.781900000000246e-05, 9.823600000000154e-05, 9.854200000000007e-05, 9.861200000000139e-05, 9.76799999999993e-05, 9.81799999999998e-05, 9.7874999...</msg>
<status status="PASS" starttime="20201030 10:58:02.290" endtime="20201030 10:58:02.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.298" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.296" endtime="20201030 10:58:02.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.300" level="INFO">VALUE: [0.0001021939999999999, 9.78059999999989e-05, 9.781900000000246e-05, 9.823600000000154e-05, 9.854200000000007e-05, 9.861200000000139e-05, 9.76799999999993e-05, 9.81799999999998e-05, 9.787499999999727e-05, 9.805499999999967e-05, 9.801400000000043e-05, 9.790299999999988e-05, 9.831899999999949e-05, 9.805599999999914e-05, 9.855599999999964e-05, 9.773600000000104e-05, 9.800000000000086e-05, 9.805599999999914e-05, 9.813800000000109e-05, 9.843099999999952e-05, 9.83479999999981e-05, 9.766599999999973e-05, 9.788900000000031e-05, 9.786100000000117e-05, 9.775000000000061e-05, 9.806999999999871e-05, 9.768099999999877e-05, 9.797199999999825e-05, 9.862500000000149e-05, 9.859699999999888e-05, 9.791699999999945e-05, 9.833299999999906e-05, 9.770900000000138e-05, 9.819399999999937e-05, 9.759699999999788e-05, 9.855500000000017e-05, 9.837500000000124e-05, 9.809700000000185e-05, 9.806899999999924e-05, 9.788899999999684e-05, 9.768100000000224e-05, 9.861100000000192e-05, 9.806999999999871e-05, 9.768099999999877e-05, 9.806999999999871e-05, 9.793099999999902e-05, 9.837499999999777e-05, 9.818099999999927e-05, 9.780499999999942e-05, 9.79999999999974e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.299" endtime="20201030 10:58:02.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.294" endtime="20201030 10:58:02.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.305" endtime="20201030 10:58:02.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.304" endtime="20201030 10:58:02.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.303" endtime="20201030 10:58:02.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.929" endtime="20201030 10:58:02.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.928" endtime="20201030 10:58:02.326"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.335" endtime="20201030 10:58:02.357"></status>
</kw>
<msg timestamp="20201030 10:58:02.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.334" endtime="20201030 10:58:02.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.359" endtime="20201030 10:58:02.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.362" endtime="20201030 10:58:02.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.331" endtime="20201030 10:58:02.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.329" endtime="20201030 10:58:02.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.371" endtime="20201030 10:58:02.657"></status>
</kw>
<msg timestamp="20201030 10:58:02.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021237167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.369" endtime="20201030 10:58:02.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021237167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.662" endtime="20201030 10:58:02.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.670" endtime="20201030 10:58:02.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.367" endtime="20201030 10:58:02.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.365" endtime="20201030 10:58:02.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.677" level="INFO">${RESULT} = [{'diff': 0.000103820000000001}, {'diff': 9.912500000000199e-05}, {'diff': 9.944399999999715e-05}, {'diff': 9.915299999999766e-05}, {'diff': 9.90410000000011e-05}, {'diff': 9.900000000000186e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:02.674" endtime="20201030 10:58:02.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.681" level="INFO">${ACCURACY} = {'diff': [0.000103820000000001, 9.912500000000199e-05, 9.944399999999715e-05, 9.915299999999766e-05, 9.90410000000011e-05, 9.900000000000186e-05, 9.879099999999738e-05, 9.909699999999938e-05, 9.920799...</msg>
<status status="PASS" starttime="20201030 10:58:02.678" endtime="20201030 10:58:02.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.686" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.685" endtime="20201030 10:58:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.689" level="INFO">VALUE: [0.000103820000000001, 9.912500000000199e-05, 9.944399999999715e-05, 9.915299999999766e-05, 9.90410000000011e-05, 9.900000000000186e-05, 9.879099999999738e-05, 9.909699999999938e-05, 9.920799999999994e-05, 9.93060000000004e-05, 9.924999999999864e-05, 9.905600000000014e-05, 9.855599999999964e-05, 9.94020000000019e-05, 9.900000000000186e-05, 9.93060000000004e-05, 9.925000000000211e-05, 9.88609999999987e-05, 9.876399999999771e-05, 9.919400000000037e-05, 9.88609999999987e-05, 9.884699999999913e-05, 9.941700000000095e-05, 9.913900000000156e-05, 9.893100000000002e-05, 9.940299999999791e-05, 9.94869999999988e-05, 9.922299999999898e-05, 9.938799999999887e-05, 9.875000000000161e-05, 9.913900000000156e-05, 9.874999999999814e-05, 9.936100000000267e-05, 9.87080000000029e-05, 9.93609999999992e-05, 9.944500000000009e-05, 9.940299999999791e-05, 9.909699999999938e-05, 9.926400000000168e-05, 9.88059999999999e-05, 9.893000000000055e-05, 9.91800000000008e-05, 9.920799999999994e-05, 9.877700000000128e-05, 9.924999999999864e-05, 9.924999999999864e-05, 9.855500000000017e-05, 9.937499999999877e-05, 9.8721999999999e-05, 9.947199999999976e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.687" endtime="20201030 10:58:02.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.682" endtime="20201030 10:58:02.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.695" endtime="20201030 10:58:02.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.693" endtime="20201030 10:58:02.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.692" endtime="20201030 10:58:02.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.327" endtime="20201030 10:58:02.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.327" endtime="20201030 10:58:02.717"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.726" endtime="20201030 10:58:02.746"></status>
</kw>
<msg timestamp="20201030 10:58:02.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.724" endtime="20201030 10:58:02.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.748" endtime="20201030 10:58:02.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.751" endtime="20201030 10:58:02.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.722" endtime="20201030 10:58:02.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.719" endtime="20201030 10:58:02.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.760" endtime="20201030 10:58:03.046"></status>
</kw>
<msg timestamp="20201030 10:58:03.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:02.759" endtime="20201030 10:58:03.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:03.051" endtime="20201030 10:58:03.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.059" endtime="20201030 10:58:03.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.756" endtime="20201030 10:58:03.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.754" endtime="20201030 10:58:03.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.066" level="INFO">${RESULT} = [{'diff': 0.00010491699999999951}, {'diff': 0.0001000419999999981}, {'diff': 9.976400000000218e-05}, {'diff': 9.976400000000218e-05}, {'diff': 0.0001004999999999999}, {'diff': 0.00010000000000000286},...</msg>
<status status="PASS" starttime="20201030 10:58:03.063" endtime="20201030 10:58:03.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.071" level="INFO">${ACCURACY} = {'diff': [0.00010491699999999951, 0.0001000419999999981, 9.976400000000218e-05, 9.976400000000218e-05, 0.0001004999999999999, 0.00010000000000000286, 0.00010037499999999977, 0.00010051399999999946, 0....</msg>
<status status="PASS" starttime="20201030 10:58:03.067" endtime="20201030 10:58:03.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.076" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.075" endtime="20201030 10:58:03.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.078" level="INFO">VALUE: [0.00010491699999999951, 0.0001000419999999981, 9.976400000000218e-05, 9.976400000000218e-05, 0.0001004999999999999, 0.00010000000000000286, 0.00010037499999999977, 0.00010051399999999946, 0.00010052799999999903, 9.976399999999871e-05, 0.00010004200000000157, 0.0001001800000000018, 9.973600000000304e-05, 9.965299999999816e-05, 0.00010012499999999952, 9.979200000000132e-05, 0.00010023600000000008, 9.955600000000064e-05, 9.984700000000013e-05, 0.00010038799999999987, 0.00010011199999999942, 9.976399999999871e-05, 0.00010009700000000038, 0.00010013899999999909, 9.983299999999709e-05, 0.00010015299999999866, 9.962499999999902e-05, 0.00010062500000000002, 9.973600000000304e-05, 0.00010047300000000023, 0.00010029199999999835, 9.948599999999932e-05, 0.00010008400000000028, 0.00010051299999999999, 9.970899999999991e-05, 0.00010008299999999734, 0.00010044400000000162, 0.00010011099999999995, 9.966600000000173e-05, 9.976399999999871e-05, 0.00010043100000000152, 0.00010036099999999673, 9.993100000000102e-05, 9.994500000000059e-05, 0.00010024999999999964, 9.983300000000056e-05, 0.00010019400000000137, 0.00010037500000000324, 0.00010030499999999845, 0.00010006900000000124]</msg>
<status status="PASS" starttime="20201030 10:58:03.077" endtime="20201030 10:58:03.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.072" endtime="20201030 10:58:03.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.924" endtime="20201030 10:58:03.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.920" endtime="20201030 10:58:03.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.918" endtime="20201030 10:58:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.718" endtime="20201030 10:58:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.717" endtime="20201030 10:58:03.949"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.969" endtime="20201030 10:58:03.996"></status>
</kw>
<msg timestamp="20201030 10:58:03.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.965" endtime="20201030 10:58:03.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.999" endtime="20201030 10:58:04.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.005" endtime="20201030 10:58:04.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.959" endtime="20201030 10:58:04.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.954" endtime="20201030 10:58:04.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.025" endtime="20201030 10:58:04.318"></status>
</kw>
<msg timestamp="20201030 10:58:04.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036145542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036250861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.022" endtime="20201030 10:58:04.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036145542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036250861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.323" endtime="20201030 10:58:04.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.331" endtime="20201030 10:58:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.016" endtime="20201030 10:58:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.012" endtime="20201030 10:58:04.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.338" level="INFO">${RESULT} = [{'diff': 0.00010531899999999955}, {'diff': 0.0001007359999999971}, {'diff': 0.00010087500000000027}, {'diff': 0.00010051400000000293}, {'diff': 0.00010129199999999589}, {'diff': 0.0001014999999999974...</msg>
<status status="PASS" starttime="20201030 10:58:04.334" endtime="20201030 10:58:04.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.342" level="INFO">${ACCURACY} = {'diff': [0.00010531899999999955, 0.0001007359999999971, 0.00010087500000000027, 0.00010051400000000293, 0.00010129199999999589, 0.00010149999999999743, 0.00010105600000000214, 0.00010111200000000042,...</msg>
<status status="PASS" starttime="20201030 10:58:04.339" endtime="20201030 10:58:04.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.346" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.345" endtime="20201030 10:58:04.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.349" level="INFO">VALUE: [0.00010531899999999955, 0.0001007359999999971, 0.00010087500000000027, 0.00010051400000000293, 0.00010129199999999589, 0.00010149999999999743, 0.00010105600000000214, 0.00010111200000000042, 0.00010070799999999797, 0.00010116599999999976, 0.00010094399999999865, 0.00010055500000000217, 0.0001009860000000043, 0.00010092999999999908, 0.00010104200000000257, 0.00010137500000000077, 0.0001013060000000024, 0.00010150000000000436, 0.00010150000000000436, 0.00010122299999999751, 0.0001008610000000007, 0.00010105500000000267, 0.00010141699999999948, 0.00010133300000000206, 0.00010156900000000274, 0.00010111100000000095, 0.00010094399999999865, 0.00010130599999999546, 0.00010131999999999503, 0.00010143099999999905, 0.00010162500000000102, 0.00010070900000000438, 0.00010159800000000135, 0.00010087500000000027, 0.00010124999999999718, 0.00010142999999999958, 0.00010138900000000034, 0.00010138900000000034, 0.00010144499999999862, 0.00010123600000000454, 0.00010088899999999984, 0.00010140299999999991, 0.00010162499999999408, 0.00010099999999999693, 0.00010155600000000264, 0.00010079100000000285, 0.00010123700000000402, 0.00010142999999999958, 0.00010161099999999451, 0.00010127799999999632]</msg>
<status status="PASS" starttime="20201030 10:58:04.347" endtime="20201030 10:58:04.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.343" endtime="20201030 10:58:04.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.354" endtime="20201030 10:58:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.353" endtime="20201030 10:58:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.351" endtime="20201030 10:58:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.951" endtime="20201030 10:58:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.950" endtime="20201030 10:58:04.375"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.384" endtime="20201030 10:58:04.406"></status>
</kw>
<msg timestamp="20201030 10:58:04.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.382" endtime="20201030 10:58:04.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.407" endtime="20201030 10:58:04.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.410" endtime="20201030 10:58:04.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.380" endtime="20201030 10:58:04.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.377" endtime="20201030 10:58:04.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.419" endtime="20201030 10:58:04.705"></status>
</kw>
<msg timestamp="20201030 10:58:04.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021319625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.418" endtime="20201030 10:58:04.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021319625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.709" endtime="20201030 10:58:04.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.717" endtime="20201030 10:58:04.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.415" endtime="20201030 10:58:04.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.413" endtime="20201030 10:58:04.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.724" level="INFO">${RESULT} = [{'diff': 0.00010663899999999865}, {'diff': 0.00010230599999999992}, {'diff': 0.0001023199999999995}, {'diff': 0.00010193099999999955}, {'diff': 0.00010182000000000246}, {'diff': 0.0001015700000000022...</msg>
<status status="PASS" starttime="20201030 10:58:04.721" endtime="20201030 10:58:04.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.728" level="INFO">${ACCURACY} = {'diff': [0.00010663899999999865, 0.00010230599999999992, 0.0001023199999999995, 0.00010193099999999955, 0.00010182000000000246, 0.00010157000000000221, 0.00010195799999999922, 0.00010197200000000226,...</msg>
<status status="PASS" starttime="20201030 10:58:04.725" endtime="20201030 10:58:04.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.733" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.732" endtime="20201030 10:58:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.735" level="INFO">VALUE: [0.00010663899999999865, 0.00010230599999999992, 0.0001023199999999995, 0.00010193099999999955, 0.00010182000000000246, 0.00010157000000000221, 0.00010195799999999922, 0.00010197200000000226, 0.00010224999999999818, 0.00010233299999999959, 0.00010193000000000008, 0.0001016939999999994, 0.00010219499999999937, 0.00010169499999999887, 0.000101722000000002, 0.00010219499999999937, 0.0001021809999999998, 0.00010195899999999869, 0.00010209699999999891, 0.00010198599999999836, 0.00010193000000000008, 0.00010213799999999815, 0.00010237500000000177, 0.00010226400000000122, 0.00010208299999999934, 0.00010238899999999787, 0.00010237500000000177, 0.00010226400000000122, 0.00010236099999999873, 0.00010252800000000103, 0.00010259799999999888, 0.00010261099999999898, 0.00010256900000000027, 0.00010244400000000015, 0.00010225000000000165, 0.00010234699999999916, 0.00010208299999999934, 0.00010167999999999983, 0.00010198600000000183, 0.0001020420000000001, 0.00010205599999999967, 0.00010236099999999873, 0.00010256999999999974, 0.00010180499999999995, 0.00010206999999999924, 0.00010255600000000017, 0.00010204100000000063, 0.0001018610000000017, 0.00010186099999999823, 0.00010202800000000053]</msg>
<status status="PASS" starttime="20201030 10:58:04.734" endtime="20201030 10:58:04.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.729" endtime="20201030 10:58:04.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.741" endtime="20201030 10:58:04.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.740" endtime="20201030 10:58:04.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.739" endtime="20201030 10:58:04.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.376" endtime="20201030 10:58:04.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.375" endtime="20201030 10:58:04.762"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.771" endtime="20201030 10:58:04.792"></status>
</kw>
<msg timestamp="20201030 10:58:04.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.770" endtime="20201030 10:58:04.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.794" endtime="20201030 10:58:04.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.796" endtime="20201030 10:58:04.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.767" endtime="20201030 10:58:04.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.765" endtime="20201030 10:58:04.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.806" endtime="20201030 10:58:05.091"></status>
</kw>
<msg timestamp="20201030 10:58:05.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.804" endtime="20201030 10:58:05.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.095" endtime="20201030 10:58:05.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.103" endtime="20201030 10:58:05.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.801" endtime="20201030 10:58:05.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.800" endtime="20201030 10:58:05.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.110" level="INFO">${RESULT} = [{'diff': 0.00010737499999999983}, {'diff': 0.00010342999999999811}, {'diff': 0.00010270799999999997}, {'diff': 0.00010336099999999973}, {'diff': 0.00010362499999999955}, {'diff': 0.000103610999999999...</msg>
<status status="PASS" starttime="20201030 10:58:05.107" endtime="20201030 10:58:05.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.115" level="INFO">${ACCURACY} = {'diff': [0.00010737499999999983, 0.00010342999999999811, 0.00010270799999999997, 0.00010336099999999973, 0.00010362499999999955, 0.00010361099999999998, 0.00010299999999999893, 0.00010336099999999973...</msg>
<status status="PASS" starttime="20201030 10:58:05.111" endtime="20201030 10:58:05.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.120" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.119" endtime="20201030 10:58:05.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.123" level="INFO">VALUE: [0.00010737499999999983, 0.00010342999999999811, 0.00010270799999999997, 0.00010336099999999973, 0.00010362499999999955, 0.00010361099999999998, 0.00010299999999999893, 0.00010336099999999973, 0.00010283399999999956, 0.00010316699999999776, 0.00010282, 0.0001032359999999996, 0.00010270899999999944, 0.00010343000000000158, 0.00010338899999999887, 0.00010354100000000213, 0.0001031940000000009, 0.00010349999999999943, 0.00010280500000000095, 0.0001026810000000003, 0.00010318099999999733, 0.00010307000000000024, 0.00010270899999999944, 0.00010327799999999832, 0.00010330599999999746, 0.00010293000000000108, 0.00010348599999999986, 0.00010312499999999905, 0.0001030550000000012, 0.00010276399999999825, 0.00010273700000000205, 0.0001033749999999993, 0.00010340299999999844, 0.00010358299999999737, 0.00010302799999999807, 0.00010301400000000197, 0.00010315300000000166, 0.00010329200000000135, 0.0001032359999999996, 0.0001031940000000009, 0.0001026810000000003, 0.0001030000000000024, 0.00010352800000000204, 0.00010309699999999991, 0.0001025420000000006, 0.00010333300000000059, 0.0001033749999999993, 0.0001026810000000003, 0.00010276400000000172, 0.00010357000000000074]</msg>
<status status="PASS" starttime="20201030 10:58:05.121" endtime="20201030 10:58:05.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.116" endtime="20201030 10:58:05.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.128" endtime="20201030 10:58:05.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.126" endtime="20201030 10:58:05.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.125" endtime="20201030 10:58:05.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.763" endtime="20201030 10:58:05.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.763" endtime="20201030 10:58:05.149"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.159" endtime="20201030 10:58:05.180"></status>
</kw>
<msg timestamp="20201030 10:58:05.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.157" endtime="20201030 10:58:05.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.181" endtime="20201030 10:58:05.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.184" endtime="20201030 10:58:05.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.154" endtime="20201030 10:58:05.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.152" endtime="20201030 10:58:05.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.193" endtime="20201030 10:58:05.480"></status>
</kw>
<msg timestamp="20201030 10:58:05.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.192" endtime="20201030 10:58:05.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.484" endtime="20201030 10:58:05.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.492" endtime="20201030 10:58:05.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.189" endtime="20201030 10:58:05.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.187" endtime="20201030 10:58:05.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.499" level="INFO">${RESULT} = [{'diff': 0.00010865300000000022}, {'diff': 0.00010419500000000137}, {'diff': 0.00010390300000000241}, {'diff': 0.00010427699999999984}, {'diff': 0.00010441599999999954}, {'diff': 0.000104125000000000...</msg>
<status status="PASS" starttime="20201030 10:58:05.496" endtime="20201030 10:58:05.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.503" level="INFO">${ACCURACY} = {'diff': [0.00010865300000000022, 0.00010419500000000137, 0.00010390300000000241, 0.00010427699999999984, 0.00010441599999999954, 0.00010412500000000005, 0.00010365300000000216, 0.00010412500000000005...</msg>
<status status="PASS" starttime="20201030 10:58:05.500" endtime="20201030 10:58:05.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.508" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.507" endtime="20201030 10:58:05.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.511" level="INFO">VALUE: [0.00010865300000000022, 0.00010419500000000137, 0.00010390300000000241, 0.00010427699999999984, 0.00010441599999999954, 0.00010412500000000005, 0.00010365300000000216, 0.00010412500000000005, 0.00010445799999999825, 0.00010384699999999719, 0.00010442999999999911, 0.00010429200000000236, 0.00010399999999999993, 0.0001040559999999982, 0.00010377799999999882, 0.0001043750000000003, 0.00010430600000000192, 0.0001037360000000001, 0.00010401300000000002, 0.00010383300000000109, 0.00010411099999999701, 0.00010462499999999708, 0.00010399999999999993, 0.00010425000000000018, 0.00010395899999999722, 0.00010418099999999833, 0.00010376399999999925, 0.00010430599999999846, 0.00010376400000000272, 0.00010377699999999934, 0.00010426399999999975, 0.00010462500000000055, 0.00010388899999999937, 0.00010431899999999855, 0.0001043750000000003, 0.00010368000000000183, 0.00010433299999999812, 0.00010419500000000137, 0.00010431999999999803, 0.00010408400000000081, 0.00010430600000000192, 0.00010430599999999846, 0.0001036810000000013, 0.00010427799999999932, 0.00010425000000000018, 0.00010444399999999868, 0.00010436100000000073, 0.0001043200000000015, 0.00010442999999999911, 0.00010443099999999858]</msg>
<status status="PASS" starttime="20201030 10:58:05.509" endtime="20201030 10:58:05.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.504" endtime="20201030 10:58:05.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.516" endtime="20201030 10:58:05.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.514" endtime="20201030 10:58:05.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.513" endtime="20201030 10:58:05.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.150" endtime="20201030 10:58:05.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.149" endtime="20201030 10:58:05.537"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.546" endtime="20201030 10:58:05.568"></status>
</kw>
<msg timestamp="20201030 10:58:05.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.544" endtime="20201030 10:58:05.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.569" endtime="20201030 10:58:05.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.572" endtime="20201030 10:58:05.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.541" endtime="20201030 10:58:05.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.539" endtime="20201030 10:58:05.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.581" endtime="20201030 10:58:05.867"></status>
</kw>
<msg timestamp="20201030 10:58:05.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021411264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.580" endtime="20201030 10:58:05.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021411264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.871" endtime="20201030 10:58:05.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.879" endtime="20201030 10:58:05.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.577" endtime="20201030 10:58:05.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.575" endtime="20201030 10:58:05.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.886" level="INFO">${RESULT} = [{'diff': 0.00010943100000000011}, {'diff': 0.00010518099999999933}, {'diff': 0.00010529199999999989}, {'diff': 0.00010566700000000026}, {'diff': 0.00010548600000000186}, {'diff': 0.000105125000000001...</msg>
<status status="PASS" starttime="20201030 10:58:05.883" endtime="20201030 10:58:05.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.890" level="INFO">${ACCURACY} = {'diff': [0.00010943100000000011, 0.00010518099999999933, 0.00010529199999999989, 0.00010566700000000026, 0.00010548600000000186, 0.00010512500000000105, 0.00010502800000000007, 0.00010530499999999998...</msg>
<status status="PASS" starttime="20201030 10:58:05.887" endtime="20201030 10:58:05.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.895" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.894" endtime="20201030 10:58:05.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.901" level="INFO">VALUE: [0.00010943100000000011, 0.00010518099999999933, 0.00010529199999999989, 0.00010566700000000026, 0.00010548600000000186, 0.00010512500000000105, 0.00010502800000000007, 0.00010530499999999998, 0.00010497199999999832, 0.00010466599999999979, 0.00010512499999999758, 0.00010481899999999905, 0.00010522200000000204, 0.00010534699999999869, 0.00010561099999999851, 0.00010519500000000237, 0.00010522300000000151, 0.00010519399999999943, 0.00010562500000000155, 0.0001048750000000008, 0.0001051940000000029, 0.00010512500000000105, 0.00010493099999999908, 0.0001052360000000016, 0.00010515300000000019, 0.00010530499999999998, 0.00010480600000000242, 0.0001051949999999989, 0.00010549999999999796, 0.00010472200000000154, 0.00010479099999999991, 0.00010477799999999982, 0.00010550000000000143, 0.00010470800000000197, 0.00010516599999999682, 0.00010494399999999918, 0.00010494399999999918, 0.00010511099999999801, 0.00010475000000000068, 0.00010494500000000212, 0.00010505499999999973, 0.0001050420000000031, 0.00010520800000000247, 0.0001053750000000013, 0.00010452700000000009, 0.00010505499999999973, 0.00010515300000000019, 0.00010495799999999875, 0.00010518099999999933, 0.00010483300000000209]</msg>
<status status="PASS" starttime="20201030 10:58:05.896" endtime="20201030 10:58:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.891" endtime="20201030 10:58:05.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.906" endtime="20201030 10:58:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.905" endtime="20201030 10:58:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.903" endtime="20201030 10:58:05.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.538" endtime="20201030 10:58:05.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.537" endtime="20201030 10:58:05.927"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.936" endtime="20201030 10:58:05.957"></status>
</kw>
<msg timestamp="20201030 10:58:05.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.934" endtime="20201030 10:58:05.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.958" endtime="20201030 10:58:05.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.961" endtime="20201030 10:58:05.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.932" endtime="20201030 10:58:05.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.930" endtime="20201030 10:58:05.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.970" endtime="20201030 10:58:06.256"></status>
</kw>
<msg timestamp="20201030 10:58:06.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.969" endtime="20201030 10:58:06.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.261" endtime="20201030 10:58:06.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.269" endtime="20201030 10:58:06.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.966" endtime="20201030 10:58:06.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.964" endtime="20201030 10:58:06.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.276" level="INFO">${RESULT} = [{'diff': 0.00011095900000000075}, {'diff': 0.00010633300000000012}, {'diff': 0.00010604100000000116}, {'diff': 0.00010591599999999757}, {'diff': 0.00010647199999999982}, {'diff': 0.000105735999999998...</msg>
<status status="PASS" starttime="20201030 10:58:06.273" endtime="20201030 10:58:06.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.281" level="INFO">${ACCURACY} = {'diff': [0.00011095900000000075, 0.00010633300000000012, 0.00010604100000000116, 0.00010591599999999757, 0.00010647199999999982, 0.00010573599999999864, 0.00010650000000000243, 0.0001058339999999991,...</msg>
<status status="PASS" starttime="20201030 10:58:06.277" endtime="20201030 10:58:06.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.286" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.284" endtime="20201030 10:58:06.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.288" level="INFO">VALUE: [0.00011095900000000075, 0.00010633300000000012, 0.00010604100000000116, 0.00010591599999999757, 0.00010647199999999982, 0.00010573599999999864, 0.00010650000000000243, 0.0001058339999999991, 0.00010609699999999944, 0.00010576399999999778, 0.00010570899999999897, 0.00010566700000000026, 0.00010619400000000043, 0.0001060690000000003, 0.0001060690000000003, 0.00010627800000000132, 0.00010655500000000123, 0.00010611099999999901, 0.00010627799999999785, 0.00010662499999999908, 0.00010604099999999769, 0.00010645899999999972, 0.00010598600000000236, 0.00010618100000000033, 0.00010580599999999996, 0.00010637499999999883, 0.00010619400000000043, 0.0001062499999999987, 0.00010619400000000043, 0.00010665299999999822, 0.00010591699999999704, 0.00010643100000000058, 0.00010598599999999889, 0.0001058339999999991, 0.0001060560000000002, 0.00010611099999999901, 0.00010644400000000068, 0.00010587499999999833, 0.00010605500000000073, 0.0001060140000000015, 0.00010594400000000018, 0.00010608299999999987, 0.00010630600000000046, 0.00010665299999999822, 0.00010576399999999778, 0.00010620900000000294, 0.00010619400000000043, 0.0001057360000000021, 0.00010632000000000003, 0.00010661099999999951]</msg>
<status status="PASS" starttime="20201030 10:58:06.287" endtime="20201030 10:58:06.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.282" endtime="20201030 10:58:06.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.293" endtime="20201030 10:58:06.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.292" endtime="20201030 10:58:06.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.290" endtime="20201030 10:58:06.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.928" endtime="20201030 10:58:06.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.927" endtime="20201030 10:58:06.314"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.323" endtime="20201030 10:58:06.344"></status>
</kw>
<msg timestamp="20201030 10:58:06.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.321" endtime="20201030 10:58:06.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.346" endtime="20201030 10:58:06.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.348" endtime="20201030 10:58:06.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.319" endtime="20201030 10:58:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.317" endtime="20201030 10:58:06.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.358" endtime="20201030 10:58:06.644"></status>
</kw>
<msg timestamp="20201030 10:58:06.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02019075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.356" endtime="20201030 10:58:06.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02019075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.649" endtime="20201030 10:58:06.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.657" endtime="20201030 10:58:06.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.354" endtime="20201030 10:58:06.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.352" endtime="20201030 10:58:06.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.664" level="INFO">${RESULT} = [{'diff': 0.00011133299999999818}, {'diff': 0.00010701399999999903}, {'diff': 0.00010668000000000136}, {'diff': 0.00010730499999999851}, {'diff': 0.00010681999999999706}, {'diff': 0.000106972000000000...</msg>
<status status="PASS" starttime="20201030 10:58:06.660" endtime="20201030 10:58:06.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.668" level="INFO">${ACCURACY} = {'diff': [0.00011133299999999818, 0.00010701399999999903, 0.00010668000000000136, 0.00010730499999999851, 0.00010681999999999706, 0.00010697200000000032, 0.00010763899999999965, 0.0001065699999999968,...</msg>
<status status="PASS" starttime="20201030 10:58:06.665" endtime="20201030 10:58:06.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.673" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.671" endtime="20201030 10:58:06.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.675" level="INFO">VALUE: [0.00011133299999999818, 0.00010701399999999903, 0.00010668000000000136, 0.00010730499999999851, 0.00010681999999999706, 0.00010697200000000032, 0.00010763899999999965, 0.0001065699999999968, 0.00010693100000000108, 0.00010701299999999955, 0.00010730499999999851, 0.00010677699999999887, 0.00010705500000000173, 0.00010737499999999983, 0.00010719399999999796, 0.00010680600000000096, 0.00010705599999999774, 0.0001065560000000007, 0.00010704200000000164, 0.00010730599999999799, 0.0001065279999999981, 0.0001074019999999995, 0.00010673599999999964, 0.00010666600000000179, 0.00010718099999999786, 0.00010740299999999897, 0.00010684700000000019, 0.00010698599999999989, 0.00010761100000000051, 0.00010763899999999965, 0.00010723600000000014, 0.00010704200000000164, 0.00010673599999999964, 0.00010673599999999964, 0.00010681900000000105, 0.00010712499999999958, 0.00010749999999999996, 0.0001072499999999997, 0.0001072499999999997, 0.00010738900000000287, 0.00010731999999999756, 0.0001066950000000004, 0.00010682000000000053, 0.00010755599999999824, 0.0001073340000000006, 0.00010751300000000005, 0.00010723600000000014, 0.00010693000000000161, 0.00010713900000000262, 0.00010731900000000155]</msg>
<status status="PASS" starttime="20201030 10:58:06.674" endtime="20201030 10:58:06.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.669" endtime="20201030 10:58:06.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.680" endtime="20201030 10:58:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.679" endtime="20201030 10:58:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.677" endtime="20201030 10:58:06.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.315" endtime="20201030 10:58:06.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.314" endtime="20201030 10:58:06.701"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.710" endtime="20201030 10:58:06.732"></status>
</kw>
<msg timestamp="20201030 10:58:06.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.708" endtime="20201030 10:58:06.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.734" endtime="20201030 10:58:06.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.736" endtime="20201030 10:58:06.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.706" endtime="20201030 10:58:06.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.703" endtime="20201030 10:58:06.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.746" endtime="20201030 10:58:07.031"></status>
</kw>
<msg timestamp="20201030 10:58:07.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.744" endtime="20201030 10:58:07.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.035" endtime="20201030 10:58:07.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.044" endtime="20201030 10:58:07.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.741" endtime="20201030 10:58:07.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.740" endtime="20201030 10:58:07.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.051" level="INFO">${RESULT} = [{'diff': 0.00011266600000000085}, {'diff': 0.00010836100000000126}, {'diff': 0.00010826400000000028}, {'diff': 0.0001077080000000015}, {'diff': 0.00010794499999999818}, {'diff': 0.0001078059999999984...</msg>
<status status="PASS" starttime="20201030 10:58:07.047" endtime="20201030 10:58:07.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.055" level="INFO">${ACCURACY} = {'diff': [0.00011266600000000085, 0.00010836100000000126, 0.00010826400000000028, 0.0001077080000000015, 0.00010794499999999818, 0.00010780599999999849, 0.00010794499999999818, 0.00010845899999999825,...</msg>
<status status="PASS" starttime="20201030 10:58:07.052" endtime="20201030 10:58:07.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.059" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.058" endtime="20201030 10:58:07.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.062" level="INFO">VALUE: [0.00011266600000000085, 0.00010836100000000126, 0.00010826400000000028, 0.0001077080000000015, 0.00010794499999999818, 0.00010780599999999849, 0.00010794499999999818, 0.00010845899999999825, 0.00010844499999999868, 0.00010856899999999933, 0.00010790299999999947, 0.00010845800000000225, 0.00010769399999999846, 0.00010779199999999892, 0.00010848600000000139, 0.00010850000000000096, 0.00010770900000000097, 0.00010818100000000233, 0.00010823600000000114, 0.00010805599999999874, 0.00010844399999999921, 0.00010848700000000086, 0.00010837500000000083, 0.0001080690000000023, 0.00010848600000000139, 0.00010823600000000114, 0.00010848600000000139, 0.00010797299999999732, 0.00010806899999999883, 0.00010861099999999804, 0.00010783299999999815, 0.00010855599999999924, 0.0001085699999999988, 0.00010841699999999954, 0.00010787500000000033, 0.00010812500000000058, 0.00010800000000000046, 0.00010816599999999982, 0.00010837499999999736, 0.00010854200000000314, 0.00010829199999999942, 0.00010787500000000033, 0.0001080279999999996, 0.00010787500000000033, 0.00010788800000000043, 0.0001083890000000004, 0.0001082219999999981, 0.00010847199999999835, 0.00010798600000000089, 0.00010811099999999754]</msg>
<status status="PASS" starttime="20201030 10:58:07.060" endtime="20201030 10:58:07.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.055" endtime="20201030 10:58:07.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.068" endtime="20201030 10:58:07.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.066" endtime="20201030 10:58:07.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.065" endtime="20201030 10:58:07.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.702" endtime="20201030 10:58:07.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.701" endtime="20201030 10:58:07.089"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.098" endtime="20201030 10:58:07.119"></status>
</kw>
<msg timestamp="20201030 10:58:07.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.096" endtime="20201030 10:58:07.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.120" endtime="20201030 10:58:07.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.123" endtime="20201030 10:58:07.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.094" endtime="20201030 10:58:07.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.091" endtime="20201030 10:58:07.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.132" endtime="20201030 10:58:07.418"></status>
</kw>
<msg timestamp="20201030 10:58:07.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020379083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.131" endtime="20201030 10:58:07.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020379083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.422" endtime="20201030 10:58:07.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.430" endtime="20201030 10:58:07.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.128" endtime="20201030 10:58:07.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.126" endtime="20201030 10:58:07.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.437" level="INFO">${RESULT} = [{'diff': 0.00011386099999999982}, {'diff': 0.00010902700000000112}, {'diff': 0.00010962500000000208}, {'diff': 0.00010944400000000021}, {'diff': 0.00010875000000000121}, {'diff': 0.000109000000000001...</msg>
<status status="PASS" starttime="20201030 10:58:07.434" endtime="20201030 10:58:07.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.442" level="INFO">${ACCURACY} = {'diff': [0.00011386099999999982, 0.00010902700000000112, 0.00010962500000000208, 0.00010944400000000021, 0.00010875000000000121, 0.00010900000000000146, 0.00010886099999999829, 0.00010949999999999849...</msg>
<status status="PASS" starttime="20201030 10:58:07.438" endtime="20201030 10:58:07.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.447" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.446" endtime="20201030 10:58:07.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.449" level="INFO">VALUE: [0.00011386099999999982, 0.00010902700000000112, 0.00010962500000000208, 0.00010944400000000021, 0.00010875000000000121, 0.00010900000000000146, 0.00010886099999999829, 0.00010949999999999849, 0.00010915299999999725, 0.00010963899999999818, 0.00010931999999999956, 0.0001088890000000009, 0.0001090699999999993, 0.00010854199999999967, 0.00010927700000000137, 0.00010881899999999958, 0.00010943000000000064, 0.00010869400000000293, 0.00010911099999999854, 0.00010913900000000115, 0.00010877800000000035, 0.00010936099999999879, 0.00010887500000000133, 0.00010916600000000082, 0.00010920799999999953, 0.00010879100000000044, 0.00010875000000000121, 0.00010930500000000051, 0.00010949999999999849, 0.00010904200000000017, 0.00010893099999999961, 0.00010905599999999974, 0.00010919499999999943, 0.00010916700000000029, 0.0001088890000000009, 0.00010869499999999893, 0.00010923700000000161, 0.00010886200000000124, 0.00010949999999999849, 0.00010900000000000146, 0.00010936099999999879, 0.00010959699999999947, 0.00010943000000000064, 0.00010929200000000042, 0.0001093340000000026, 0.00010943100000000011, 0.00010887499999999786, 0.00010855599999999924, 0.00010850000000000096, 0.00010909799999999845]</msg>
<status status="PASS" starttime="20201030 10:58:07.448" endtime="20201030 10:58:07.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.443" endtime="20201030 10:58:07.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.454" endtime="20201030 10:58:07.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.453" endtime="20201030 10:58:07.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.452" endtime="20201030 10:58:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.090" endtime="20201030 10:58:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.089" endtime="20201030 10:58:07.475"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.484" endtime="20201030 10:58:07.505"></status>
</kw>
<msg timestamp="20201030 10:58:07.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.483" endtime="20201030 10:58:07.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.507" endtime="20201030 10:58:07.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.509" endtime="20201030 10:58:07.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.480" endtime="20201030 10:58:07.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.478" endtime="20201030 10:58:07.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.519" endtime="20201030 10:58:07.804"></status>
</kw>
<msg timestamp="20201030 10:58:07.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.517" endtime="20201030 10:58:07.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.808" endtime="20201030 10:58:07.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.819" endtime="20201030 10:58:07.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.515" endtime="20201030 10:58:07.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.513" endtime="20201030 10:58:07.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.826" level="INFO">${RESULT} = [{'diff': 0.0001145420000000022}, {'diff': 0.00011041700000000154}, {'diff': 0.0001104159999999986}, {'diff': 0.00010995899999999975}, {'diff': 0.00010982000000000006}, {'diff': 0.00010998699999999889...</msg>
<status status="PASS" starttime="20201030 10:58:07.822" endtime="20201030 10:58:07.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.830" level="INFO">${ACCURACY} = {'diff': [0.0001145420000000022, 0.00011041700000000154, 0.0001104159999999986, 0.00010995899999999975, 0.00010982000000000006, 0.00010998699999999889, 0.00011037500000000283, 0.00011000000000000246, ...</msg>
<status status="PASS" starttime="20201030 10:58:07.827" endtime="20201030 10:58:07.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.835" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.834" endtime="20201030 10:58:07.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.837" level="INFO">VALUE: [0.0001145420000000022, 0.00011041700000000154, 0.0001104159999999986, 0.00010995899999999975, 0.00010982000000000006, 0.00010998699999999889, 0.00011037500000000283, 0.00011000000000000246, 0.00011024999999999924, 0.00010969400000000046, 0.00010968100000000036, 0.00010999999999999899, 0.00011048699999999939, 0.00011008399999999988, 0.00010979199999999745, 0.00011047200000000035, 0.00011065199999999928, 0.00011019399999999749, 0.00011009699999999997, 0.00011006900000000083, 0.00010974999999999874, 0.00011063899999999918, 0.00010969400000000046, 0.00011026399999999881, 0.00011012499999999911, 0.00010980600000000049, 0.00010963900000000165, 0.00010987499999999886, 0.00011055600000000124, 0.00010993100000000061, 0.00011024999999999924, 0.00011042999999999817, 0.00011029099999999847, 0.00011051399999999906, 0.00011011099999999954, 0.00011063899999999918, 0.00010976399999999831, 0.00010982000000000006, 0.0001100700000000003, 0.00010998599999999942, 0.0001105419999999982, 0.00011066700000000179, 0.00011062499999999961, 0.00011019400000000096, 0.00010981900000000058, 0.00010973599999999917, 0.00011024999999999924, 0.00011043100000000111, 0.00011037499999999936, 0.0001100700000000003]</msg>
<status status="PASS" starttime="20201030 10:58:07.836" endtime="20201030 10:58:07.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.831" endtime="20201030 10:58:07.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.842" endtime="20201030 10:58:07.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.841" endtime="20201030 10:58:07.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.839" endtime="20201030 10:58:07.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.476" endtime="20201030 10:58:07.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.475" endtime="20201030 10:58:07.863"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.872" endtime="20201030 10:58:07.894"></status>
</kw>
<msg timestamp="20201030 10:58:07.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.871" endtime="20201030 10:58:07.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.896" endtime="20201030 10:58:07.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.898" endtime="20201030 10:58:07.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.868" endtime="20201030 10:58:07.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.866" endtime="20201030 10:58:07.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.908" endtime="20201030 10:58:08.194"></status>
</kw>
<msg timestamp="20201030 10:58:08.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.906" endtime="20201030 10:58:08.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.198" endtime="20201030 10:58:08.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.207" endtime="20201030 10:58:08.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.903" endtime="20201030 10:58:08.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.902" endtime="20201030 10:58:08.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.214" level="INFO">${RESULT} = [{'diff': 0.00011531899999999914}, {'diff': 0.00011098600000000042}, {'diff': 0.0001105830000000009}, {'diff': 0.00011131999999999809}, {'diff': 0.00011055600000000124}, {'diff': 0.0001110130000000000...</msg>
<status status="PASS" starttime="20201030 10:58:08.211" endtime="20201030 10:58:08.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.218" level="INFO">${ACCURACY} = {'diff': [0.00011531899999999914, 0.00011098600000000042, 0.0001105830000000009, 0.00011131999999999809, 0.00011055600000000124, 0.00011101300000000008, 0.00011137500000000036, 0.00011138899999999993,...</msg>
<status status="PASS" starttime="20201030 10:58:08.215" endtime="20201030 10:58:08.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.223" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.222" endtime="20201030 10:58:08.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.225" level="INFO">VALUE: [0.00011531899999999914, 0.00011098600000000042, 0.0001105830000000009, 0.00011131999999999809, 0.00011055600000000124, 0.00011101300000000008, 0.00011137500000000036, 0.00011138899999999993, 0.00011119399999999849, 0.00011161100000000104, 0.00011130600000000199, 0.00011083300000000115, 0.00011080599999999802, 0.00011148600000000092, 0.00011069500000000093, 0.00011141699999999907, 0.00011169399999999899, 0.00011080499999999854, 0.00011074999999999974, 0.00011151400000000006, 0.00011119500000000143, 0.0001107220000000006, 0.0001107090000000005, 0.00011066699999999832, 0.00011083399999999716, 0.00011152799999999963, 0.00011141699999999907, 0.00011119499999999796, 0.00011159700000000147, 0.00011138899999999993, 0.00011140200000000003, 0.00011155600000000224, 0.00011101399999999956, 0.00011161099999999757, 0.00011098600000000042, 0.00011086100000000029, 0.00011127799999999938, 0.00011129099999999947, 0.00011166599999999985, 0.00011111100000000054, 0.00011143100000000211, 0.00011111100000000054, 0.00011144400000000221, 0.00011125000000000024, 0.00011102799999999913, 0.00011106900000000183, 0.00011131900000000208, 0.00011055599999999777, 0.00011125000000000024, 0.00011169399999999899]</msg>
<status status="PASS" starttime="20201030 10:58:08.224" endtime="20201030 10:58:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.219" endtime="20201030 10:58:08.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.322" endtime="20201030 10:58:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.318" endtime="20201030 10:58:08.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.316" endtime="20201030 10:58:08.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.864" endtime="20201030 10:58:08.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.864" endtime="20201030 10:58:08.347"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.367" endtime="20201030 10:58:08.394"></status>
</kw>
<msg timestamp="20201030 10:58:08.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.363" endtime="20201030 10:58:08.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.397" endtime="20201030 10:58:08.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.402" endtime="20201030 10:58:08.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.357" endtime="20201030 10:58:08.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.352" endtime="20201030 10:58:08.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.414" endtime="20201030 10:58:08.700"></status>
</kw>
<msg timestamp="20201030 10:58:08.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03605625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:08.412" endtime="20201030 10:58:08.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03605625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:08.705" endtime="20201030 10:58:08.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.713" endtime="20201030 10:58:08.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.409" endtime="20201030 10:58:08.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.408" endtime="20201030 10:58:08.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.720" level="INFO">${RESULT} = [{'diff': 0.00011701399999999862}, {'diff': 0.0001118890000000039}, {'diff': 0.00011165299999999628}, {'diff': 0.00011180599999999902}, {'diff': 0.00011187500000000433}, {'diff': 0.0001126250000000050...</msg>
<status status="PASS" starttime="20201030 10:58:08.716" endtime="20201030 10:58:08.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.725" level="INFO">${ACCURACY} = {'diff': [0.00011701399999999862, 0.0001118890000000039, 0.00011165299999999628, 0.00011180599999999902, 0.00011187500000000433, 0.00011262500000000508, 0.00011225000000000124, 0.00011198600000000142,...</msg>
<status status="PASS" starttime="20201030 10:58:08.721" endtime="20201030 10:58:08.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.729" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.728" endtime="20201030 10:58:08.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.732" level="INFO">VALUE: [0.00011701399999999862, 0.0001118890000000039, 0.00011165299999999628, 0.00011180599999999902, 0.00011187500000000433, 0.00011262500000000508, 0.00011225000000000124, 0.00011198600000000142, 0.00011202700000000065, 0.00011248599999999498, 0.00011200000000000099, 0.00011218000000000339, 0.00011188899999999696, 0.00011218099999999592, 0.00011186099999999782, 0.00011168100000000236, 0.00011229199999999995, 0.00011193099999999567, 0.00011198599999999448, 0.00011219399999999602, 0.00011262499999999814, 0.00011261099999999857, 0.00011243000000000364, 0.00011211099999999807, 0.00011166699999999585, 0.00011187499999999739, 0.00011168100000000236, 0.00011258399999999891, 0.00011261199999999805, 0.0001122369999999942, 0.00011247300000000182, 0.00011167999999999595, 0.00011158300000000537, 0.00011186099999999782, 0.00011218100000000286, 0.00011216700000000329, 0.00011181999999999859, 0.00011190300000000347, 0.0001125550000000003, 0.00011254100000000072, 0.00011169500000000193, 0.00011175000000000074, 0.00011216600000000382, 0.00011184699999999825, 0.00011170800000000203, 0.00011187499999999739, 0.00011218000000000339, 0.00011236100000000526, 0.00011218000000000339, 0.00011238899999999746]</msg>
<status status="PASS" starttime="20201030 10:58:08.731" endtime="20201030 10:58:08.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.726" endtime="20201030 10:58:08.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.737" endtime="20201030 10:58:08.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.736" endtime="20201030 10:58:08.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.734" endtime="20201030 10:58:08.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.349" endtime="20201030 10:58:08.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.348" endtime="20201030 10:58:08.758"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.767" endtime="20201030 10:58:08.788"></status>
</kw>
<msg timestamp="20201030 10:58:08.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.766" endtime="20201030 10:58:08.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.790" endtime="20201030 10:58:08.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.792" endtime="20201030 10:58:08.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.763" endtime="20201030 10:58:08.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.760" endtime="20201030 10:58:08.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.802" endtime="20201030 10:58:09.089"></status>
</kw>
<msg timestamp="20201030 10:58:09.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.800" endtime="20201030 10:58:09.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.093" endtime="20201030 10:58:09.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.102" endtime="20201030 10:58:09.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.798" endtime="20201030 10:58:09.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.796" endtime="20201030 10:58:09.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.108" level="INFO">${RESULT} = [{'diff': 0.00011754099999999879}, {'diff': 0.00011290199999999806}, {'diff': 0.0001128749999999984}, {'diff': 0.00011312499999999864}, {'diff': 0.00011293100000000014}, {'diff': 0.0001131250000000021...</msg>
<status status="PASS" starttime="20201030 10:58:09.105" endtime="20201030 10:58:09.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.113" level="INFO">${ACCURACY} = {'diff': [0.00011754099999999879, 0.00011290199999999806, 0.0001128749999999984, 0.00011312499999999864, 0.00011293100000000014, 0.00011312500000000211, 0.00011287500000000186, 0.00011304199999999723,...</msg>
<status status="PASS" starttime="20201030 10:58:09.109" endtime="20201030 10:58:09.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.117" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.116" endtime="20201030 10:58:09.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.120" level="INFO">VALUE: [0.00011754099999999879, 0.00011290199999999806, 0.0001128749999999984, 0.00011312499999999864, 0.00011293100000000014, 0.00011312500000000211, 0.00011287500000000186, 0.00011304199999999723, 0.00011306999999999984, 0.00011302700000000165, 0.00011294400000000024, 0.00011354099999999825, 0.00011306900000000036, 0.0001127359999999987, 0.00011308299999999993, 0.00011286100000000229, 0.00011281999999999959, 0.0001132359999999992, 0.00011270899999999903, 0.00011352799999999816, 0.00011301399999999809, 0.00011350000000000249, 0.00011302699999999818, 0.00011330600000000052, 0.00011324999999999877, 0.00011319400000000049, 0.00011336099999999932, 0.00011319499999999996, 0.00011295799999999981, 0.00011272199999999913, 0.00011269499999999946, 0.0001132359999999992, 0.00011338799999999899, 0.00011362499999999914, 0.00011341599999999813, 0.00011344400000000074, 0.00011299999999999852, 0.000113597, 0.0001125420000000002, 0.00011294500000000318, 0.00011302799999999766, 0.00011291700000000057, 0.00011265300000000075, 0.00011279100000000097, 0.00011266700000000032, 0.00011334699999999975, 0.00011358300000000043, 0.00011331899999999714, 0.00011315299999999778, 0.00011344400000000074]</msg>
<status status="PASS" starttime="20201030 10:58:09.119" endtime="20201030 10:58:09.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.113" endtime="20201030 10:58:09.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.125" endtime="20201030 10:58:09.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.124" endtime="20201030 10:58:09.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.122" endtime="20201030 10:58:09.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.759" endtime="20201030 10:58:09.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.758" endtime="20201030 10:58:09.146"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.155" endtime="20201030 10:58:09.177"></status>
</kw>
<msg timestamp="20201030 10:58:09.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.154" endtime="20201030 10:58:09.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.179" endtime="20201030 10:58:09.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.182" endtime="20201030 10:58:09.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.151" endtime="20201030 10:58:09.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.149" endtime="20201030 10:58:09.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.191" endtime="20201030 10:58:09.477"></status>
</kw>
<msg timestamp="20201030 10:58:09.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.189" endtime="20201030 10:58:09.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.482" endtime="20201030 10:58:09.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.490" endtime="20201030 10:58:09.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.187" endtime="20201030 10:58:09.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.185" endtime="20201030 10:58:09.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.496" level="INFO">${RESULT} = [{'diff': 0.00011841699999999913}, {'diff': 0.00011434700000000075}, {'diff': 0.0001137359999999997}, {'diff': 0.00011463899999999971}, {'diff': 0.00011411199999999955}, {'diff': 0.0001137640000000023...</msg>
<status status="PASS" starttime="20201030 10:58:09.493" endtime="20201030 10:58:09.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.501" level="INFO">${ACCURACY} = {'diff': [0.00011841699999999913, 0.00011434700000000075, 0.0001137359999999997, 0.00011463899999999971, 0.00011411199999999955, 0.00011376400000000231, 0.00011404100000000222, 0.00011413899999999921,...</msg>
<status status="PASS" starttime="20201030 10:58:09.497" endtime="20201030 10:58:09.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.505" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.504" endtime="20201030 10:58:09.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.511" level="INFO">VALUE: [0.00011841699999999913, 0.00011434700000000075, 0.0001137359999999997, 0.00011463899999999971, 0.00011411199999999955, 0.00011376400000000231, 0.00011404100000000222, 0.00011413899999999921, 0.00011408300000000093, 0.00011380600000000102, 0.00011405600000000127, 0.0001139169999999981, 0.00011445900000000078, 0.00011412499999999964, 0.00011418099999999792, 0.00011433300000000118, 0.00011455499999999882, 0.00011380600000000102, 0.00011401400000000256, 0.00011397200000000038, 0.00011426399999999934, 0.00011425000000000324, 0.00011422199999999716, 0.00011384799999999973, 0.00011462499999999667, 0.00011412499999999964, 0.00011357000000000034, 0.00011375000000000274, 0.00011394399999999777, 0.00011444400000000174, 0.00011401399999999909, 0.00011370800000000056, 0.00011427799999999891, 0.00011394500000000071, 0.00011390299999999853, 0.00011388899999999896, 0.00011407000000000084, 0.0001142360000000002, 0.0001143619999999998, 0.00011391700000000157, 0.00011369399999999752, 0.00011372200000000013, 0.00011413899999999921, 0.00011393000000000167, 0.00011381900000000111, 0.00011394500000000071, 0.00011422200000000063, 0.00011443100000000164, 0.0001138749999999994, 0.0001137770000000024]</msg>
<status status="PASS" starttime="20201030 10:58:09.506" endtime="20201030 10:58:09.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.501" endtime="20201030 10:58:09.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.517" endtime="20201030 10:58:09.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.515" endtime="20201030 10:58:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.514" endtime="20201030 10:58:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.147" endtime="20201030 10:58:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.146" endtime="20201030 10:58:09.538"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.546" endtime="20201030 10:58:09.568"></status>
</kw>
<msg timestamp="20201030 10:58:09.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.545" endtime="20201030 10:58:09.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.569" endtime="20201030 10:58:09.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.572" endtime="20201030 10:58:09.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.542" endtime="20201030 10:58:09.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.540" endtime="20201030 10:58:09.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.581" endtime="20201030 10:58:09.867"></status>
</kw>
<msg timestamp="20201030 10:58:09.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.580" endtime="20201030 10:58:09.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.871" endtime="20201030 10:58:09.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.879" endtime="20201030 10:58:09.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.577" endtime="20201030 10:58:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.575" endtime="20201030 10:58:09.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.886" level="INFO">${RESULT} = [{'diff': 0.00011916699999999988}, {'diff': 0.00011494499999999824}, {'diff': 0.00011554199999999973}, {'diff': 0.00011518099999999892}, {'diff': 0.0001147360000000007}, {'diff': 0.0001148189999999986...</msg>
<status status="PASS" starttime="20201030 10:58:09.883" endtime="20201030 10:58:09.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.891" level="INFO">${ACCURACY} = {'diff': [0.00011916699999999988, 0.00011494499999999824, 0.00011554199999999973, 0.00011518099999999892, 0.0001147360000000007, 0.00011481899999999864, 0.00011475000000000027, 0.00011530499999999957,...</msg>
<status status="PASS" starttime="20201030 10:58:09.887" endtime="20201030 10:58:09.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.896" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.895" endtime="20201030 10:58:09.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.898" level="INFO">VALUE: [0.00011916699999999988, 0.00011494499999999824, 0.00011554199999999973, 0.00011518099999999892, 0.0001147360000000007, 0.00011481899999999864, 0.00011475000000000027, 0.00011530499999999957, 0.00011544399999999927, 0.00011543099999999917, 0.00011530599999999905, 0.00011475000000000027, 0.00011509699999999803, 0.00011525000000000077, 0.00011520799999999859, 0.0001150689999999989, 0.00011498600000000095, 0.00011501400000000009, 0.00011481900000000211, 0.000115597000000002, 0.0001150420000000027, 0.00011508300000000193, 0.00011519500000000196, 0.00011498600000000095, 0.00011538900000000046, 0.00011530599999999905, 0.0001147230000000006, 0.00011549999999999755, 0.0001156109999999981, 0.00011552800000000016, 0.00011547199999999841, 0.00011548600000000145, 0.00011491700000000257, 0.00011457000000000134, 0.00011519499999999849, 0.00011550000000000102, 0.00011520900000000153, 0.00011498600000000095, 0.00011563800000000124, 0.00011538900000000046, 0.0001150689999999989, 0.00011501400000000009, 0.00011541600000000013, 0.00011468100000000189, 0.00011498600000000095, 0.00011545900000000178, 0.00011482000000000159, 0.00011484800000000073, 0.00011476399999999984, 0.00011525000000000077]</msg>
<status status="PASS" starttime="20201030 10:58:09.897" endtime="20201030 10:58:09.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.892" endtime="20201030 10:58:09.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.903" endtime="20201030 10:58:09.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.902" endtime="20201030 10:58:09.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.901" endtime="20201030 10:58:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.539" endtime="20201030 10:58:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.538" endtime="20201030 10:58:09.924"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.933" endtime="20201030 10:58:09.955"></status>
</kw>
<msg timestamp="20201030 10:58:09.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.932" endtime="20201030 10:58:09.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.957" endtime="20201030 10:58:09.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.960" endtime="20201030 10:58:09.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.929" endtime="20201030 10:58:09.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.927" endtime="20201030 10:58:09.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.969" endtime="20201030 10:58:10.256"></status>
</kw>
<msg timestamp="20201030 10:58:10.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.968" endtime="20201030 10:58:10.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.260" endtime="20201030 10:58:10.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.268" endtime="20201030 10:58:10.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.965" endtime="20201030 10:58:10.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.963" endtime="20201030 10:58:10.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.275" level="INFO">${RESULT} = [{'diff': 0.00012072200000000019}, {'diff': 0.00011581999999999912}, {'diff': 0.00011590300000000053}, {'diff': 0.00011566699999999985}, {'diff': 0.00011598700000000142}, {'diff': 0.000116264000000001...</msg>
<status status="PASS" starttime="20201030 10:58:10.272" endtime="20201030 10:58:10.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.279" level="INFO">${ACCURACY} = {'diff': [0.00012072200000000019, 0.00011581999999999912, 0.00011590300000000053, 0.00011566699999999985, 0.00011598700000000142, 0.00011626400000000134, 0.00011595799999999934, 0.00011648599999999898...</msg>
<status status="PASS" starttime="20201030 10:58:10.276" endtime="20201030 10:58:10.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.284" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.283" endtime="20201030 10:58:10.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.286" level="INFO">VALUE: [0.00012072200000000019, 0.00011581999999999912, 0.00011590300000000053, 0.00011566699999999985, 0.00011598700000000142, 0.00011626400000000134, 0.00011595799999999934, 0.00011648599999999898, 0.00011569399999999952, 0.00011663900000000171, 0.0001159170000000001, 0.00011580599999999955, 0.00011556999999999887, 0.00011663899999999824, 0.00011656899999999693, 0.00011580500000000007, 0.00011613900000000121, 0.00011584700000000225, 0.00011605500000000032, 0.00011601400000000109, 0.0001165560000000003, 0.000116388999999998, 0.00011643100000000017, 0.00011590300000000053, 0.00011597199999999891, 0.00011618099999999992, 0.0001158889999999975, 0.00011598600000000195, 0.00011591599999999716, 0.00011594399999999977, 0.00011630600000000005, 0.00011619400000000002, 0.00011581899999999964, 0.00011575000000000127, 0.0001162499999999983, 0.00011586100000000182, 0.00011658299999999996, 0.00011618000000000045, 0.00011604200000000023, 0.0001164439999999968, 0.00011644400000000027, 0.00011651399999999812, 0.00011606999999999937, 0.00011567999999999995, 0.00011644400000000027, 0.00011620900000000253, 0.0001161109999999986, 0.00011620899999999906, 0.00011594399999999977, 0.00011622299999999863]</msg>
<status status="PASS" starttime="20201030 10:58:10.285" endtime="20201030 10:58:10.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.280" endtime="20201030 10:58:10.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.291" endtime="20201030 10:58:10.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.290" endtime="20201030 10:58:10.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.289" endtime="20201030 10:58:10.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.925" endtime="20201030 10:58:10.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.925" endtime="20201030 10:58:10.312"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.321" endtime="20201030 10:58:10.344"></status>
</kw>
<msg timestamp="20201030 10:58:10.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.320" endtime="20201030 10:58:10.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.346" endtime="20201030 10:58:10.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.349" endtime="20201030 10:58:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.317" endtime="20201030 10:58:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.315" endtime="20201030 10:58:10.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.358" endtime="20201030 10:58:10.644"></status>
</kw>
<msg timestamp="20201030 10:58:10.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021358458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.357" endtime="20201030 10:58:10.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021358458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.648" endtime="20201030 10:58:10.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.656" endtime="20201030 10:58:10.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.354" endtime="20201030 10:58:10.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.352" endtime="20201030 10:58:10.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.663" level="INFO">${RESULT} = [{'diff': 0.00012197300000000091}, {'diff': 0.0001171109999999996}, {'diff': 0.00011715199999999884}, {'diff': 0.0001171109999999996}, {'diff': 0.00011733300000000071}, {'diff': 0.00011736099999999985...</msg>
<status status="PASS" starttime="20201030 10:58:10.660" endtime="20201030 10:58:10.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.667" level="INFO">${ACCURACY} = {'diff': [0.00012197300000000091, 0.0001171109999999996, 0.00011715199999999884, 0.0001171109999999996, 0.00011733300000000071, 0.00011736099999999985, 0.00011699999999999905, 0.0001173049999999981, 0...</msg>
<status status="PASS" starttime="20201030 10:58:10.664" endtime="20201030 10:58:10.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.672" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.671" endtime="20201030 10:58:10.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.674" level="INFO">VALUE: [0.00012197300000000091, 0.0001171109999999996, 0.00011715199999999884, 0.0001171109999999996, 0.00011733300000000071, 0.00011736099999999985, 0.00011699999999999905, 0.0001173049999999981, 0.00011711199999999908, 0.00011749999999999955, 0.00011720900000000006, 0.00011666699999999738, 0.00011682000000000012, 0.00011668100000000042, 0.0001165690000000004, 0.00011677799999999794, 0.00011733300000000071, 0.00011672199999999966, 0.0001168750000000024, 0.00011683300000000021, 0.00011668100000000042, 0.0001167499999999988, 0.00011651400000000159, 0.0001165560000000003, 0.00011655599999999683, 0.00011701299999999915, 0.00011725000000000277, 0.00011730500000000157, 0.00011680500000000107, 0.0001173049999999981, 0.00011680500000000107, 0.00011690299999999806, 0.00011686099999999935, 0.00011736099999999985, 0.00011751399999999912, 0.00011733300000000071, 0.00011669400000000052, 0.00011730599999999758, 0.00011676400000000184, 0.00011684699999999978, 0.00011695800000000034, 0.0001174439999999978, 0.00011669400000000052, 0.00011693100000000067, 0.00011705599999999733, 0.00011694500000000024, 0.00011670800000000009, 0.00011693100000000067, 0.00011726399999999887, 0.00011669400000000052]</msg>
<status status="PASS" starttime="20201030 10:58:10.673" endtime="20201030 10:58:10.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.668" endtime="20201030 10:58:10.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.681" endtime="20201030 10:58:10.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.679" endtime="20201030 10:58:10.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.678" endtime="20201030 10:58:10.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.313" endtime="20201030 10:58:10.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.313" endtime="20201030 10:58:10.701"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.710" endtime="20201030 10:58:10.732"></status>
</kw>
<msg timestamp="20201030 10:58:10.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.709" endtime="20201030 10:58:10.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.734" endtime="20201030 10:58:10.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.736" endtime="20201030 10:58:10.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.706" endtime="20201030 10:58:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.704" endtime="20201030 10:58:10.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.746" endtime="20201030 10:58:11.031"></status>
</kw>
<msg timestamp="20201030 10:58:11.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.744" endtime="20201030 10:58:11.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.035" endtime="20201030 10:58:11.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.044" endtime="20201030 10:58:11.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.741" endtime="20201030 10:58:11.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.740" endtime="20201030 10:58:11.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.050" level="INFO">${RESULT} = [{'diff': 0.00012223600000000126}, {'diff': 0.00011809800000000051}, {'diff': 0.00011756899999999793}, {'diff': 0.00011855499999999936}, {'diff': 0.00011815300000000278}, {'diff': 0.000118333000000001...</msg>
<status status="PASS" starttime="20201030 10:58:11.047" endtime="20201030 10:58:11.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.055" level="INFO">${ACCURACY} = {'diff': [0.00012223600000000126, 0.00011809800000000051, 0.00011756899999999793, 0.00011855499999999936, 0.00011815300000000278, 0.00011833300000000171, 0.00011843100000000217, 0.00011819499999999802...</msg>
<status status="PASS" starttime="20201030 10:58:11.051" endtime="20201030 10:58:11.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.060" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.059" endtime="20201030 10:58:11.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.063" level="INFO">VALUE: [0.00012223600000000126, 0.00011809800000000051, 0.00011756899999999793, 0.00011855499999999936, 0.00011815300000000278, 0.00011833300000000171, 0.00011843100000000217, 0.00011819499999999802, 0.0001182500000000003, 0.00011829199999999901, 0.0001180560000000018, 0.0001185829999999985, 0.00011805500000000232, 0.00011805500000000232, 0.00011819399999999855, 0.0001180690000000019, 0.00011862500000000067, 0.00011770800000000109, 0.00011776399999999937, 0.00011855599999999883, 0.00011784800000000026, 0.00011772299999999666, 0.00011837500000000042, 0.00011813899999999974, 0.00011772200000000066, 0.00011758300000000096, 0.00011831899999999868, 0.000118082999999998, 0.00011798600000000048, 0.00011855599999999883, 0.00011859700000000153, 0.00011800000000000005, 0.00011850000000000055, 0.00011850000000000055, 0.00011809700000000103, 0.000118082999999998, 0.00011787499999999992, 0.00011781899999999818, 0.00011815299999999931, 0.0001179309999999982, 0.00011863900000000024, 0.00011862500000000067, 0.00011844499999999827, 0.00011797300000000038, 0.00011837499999999695, 0.00011791699999999863, 0.00011831899999999868, 0.00011776399999999937, 0.00011845800000000184, 0.00011805599999999833]</msg>
<status status="PASS" starttime="20201030 10:58:11.061" endtime="20201030 10:58:11.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.056" endtime="20201030 10:58:11.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.068" endtime="20201030 10:58:11.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.066" endtime="20201030 10:58:11.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.065" endtime="20201030 10:58:11.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.702" endtime="20201030 10:58:11.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.702" endtime="20201030 10:58:11.089"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.098" endtime="20201030 10:58:11.119"></status>
</kw>
<msg timestamp="20201030 10:58:11.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.096" endtime="20201030 10:58:11.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.121" endtime="20201030 10:58:11.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.123" endtime="20201030 10:58:11.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.093" endtime="20201030 10:58:11.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.091" endtime="20201030 10:58:11.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.133" endtime="20201030 10:58:11.424"></status>
</kw>
<msg timestamp="20201030 10:58:11.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.131" endtime="20201030 10:58:11.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.428" endtime="20201030 10:58:11.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.436" endtime="20201030 10:58:11.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.128" endtime="20201030 10:58:11.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.127" endtime="20201030 10:58:11.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.444" level="INFO">${RESULT} = [{'diff': 0.00012348599999999904}, {'diff': 0.00011902800000000019}, {'diff': 0.0001188890000000005}, {'diff': 0.0001191249999999977}, {'diff': 0.0001192089999999986}, {'diff': 0.00011955599999999983}...</msg>
<status status="PASS" starttime="20201030 10:58:11.440" endtime="20201030 10:58:11.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.448" level="INFO">${ACCURACY} = {'diff': [0.00012348599999999904, 0.00011902800000000019, 0.0001188890000000005, 0.0001191249999999977, 0.0001192089999999986, 0.00011955599999999983, 0.00011937500000000142, 0.0001191110000000016, 0....</msg>
<status status="PASS" starttime="20201030 10:58:11.445" endtime="20201030 10:58:11.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.452" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.451" endtime="20201030 10:58:11.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.455" level="INFO">VALUE: [0.00012348599999999904, 0.00011902800000000019, 0.0001188890000000005, 0.0001191249999999977, 0.0001192089999999986, 0.00011955599999999983, 0.00011937500000000142, 0.0001191110000000016, 0.00011908300000000246, 0.00011898600000000148, 0.00011948599999999851, 0.00011905499999999986, 0.0001194309999999997, 0.0001194309999999997, 0.00011938899999999752, 0.0001194309999999997, 0.00011912500000000117, 0.00011926400000000087, 0.00011887500000000092, 0.00011941599999999719, 0.00011901400000000062, 0.00011892999999999973, 0.00011958300000000296, 0.0001192500000000013, 0.00011886099999999789, 0.00011877799999999994, 0.00011880599999999908, 0.00011895899999999834, 0.00011905499999999986, 0.00011933299999999925, 0.00011949999999999808, 0.00011917999999999998, 0.00011900000000000105, 0.00011943000000000023, 0.00011918099999999945, 0.00011879199999999951, 0.00011891699999999963, 0.00011870900000000156, 0.00011881999999999865, 0.00011911099999999814, 0.0001192370000000012, 0.00011950000000000155, 0.00011869400000000252, 0.0001195829999999995, 0.00011920799999999912, 0.00011880599999999908, 0.00011919499999999902, 0.00011873600000000123, 0.00011923600000000173, 0.00011911099999999814]</msg>
<status status="PASS" starttime="20201030 10:58:11.454" endtime="20201030 10:58:11.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.449" endtime="20201030 10:58:11.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.460" endtime="20201030 10:58:11.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.459" endtime="20201030 10:58:11.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.457" endtime="20201030 10:58:11.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.090" endtime="20201030 10:58:11.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.089" endtime="20201030 10:58:11.481"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.490" endtime="20201030 10:58:11.512"></status>
</kw>
<msg timestamp="20201030 10:58:11.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.488" endtime="20201030 10:58:11.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.513" endtime="20201030 10:58:11.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.516" endtime="20201030 10:58:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.485" endtime="20201030 10:58:11.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.483" endtime="20201030 10:58:11.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.525" endtime="20201030 10:58:11.810"></status>
</kw>
<msg timestamp="20201030 10:58:11.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.523" endtime="20201030 10:58:11.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020894917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.814" endtime="20201030 10:58:11.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.822" endtime="20201030 10:58:11.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.521" endtime="20201030 10:58:11.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.519" endtime="20201030 10:58:11.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.828" level="INFO">${RESULT} = [{'diff': 0.0001242770000000025}, {'diff': 0.00012029200000000101}, {'diff': 0.00012045800000000037}, {'diff': 0.00012016700000000088}, {'diff': 0.00012036099999999939}, {'diff': 0.0001204440000000008...</msg>
<status status="PASS" starttime="20201030 10:58:11.825" endtime="20201030 10:58:11.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.832" level="INFO">${ACCURACY} = {'diff': [0.0001242770000000025, 0.00012029200000000101, 0.00012045800000000037, 0.00012016700000000088, 0.00012036099999999939, 0.0001204440000000008, 0.00011977799999999747, 0.00012037500000000242, ...</msg>
<status status="PASS" starttime="20201030 10:58:11.829" endtime="20201030 10:58:11.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.837" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.836" endtime="20201030 10:58:11.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.839" level="INFO">VALUE: [0.0001242770000000025, 0.00012029200000000101, 0.00012045800000000037, 0.00012016700000000088, 0.00012036099999999939, 0.0001204440000000008, 0.00011977799999999747, 0.00012037500000000242, 0.00012019500000000002, 0.00012032000000000015, 0.0001199310000000002, 0.0001196110000000021, 0.00011998599999999901, 0.00011969400000000005, 0.0001201110000000026, 0.00012024999999999883, 0.00011977800000000094, 0.0001204310000000007, 0.00012027799999999797, 0.00012012500000000217, 0.00012066600000000191, 0.00011994499999999977, 0.00012055499999999789, 0.00011968000000000048, 0.00011968000000000048, 0.0001203050000000011, 0.000120389000000002, 0.00011993000000000073, 0.00012037500000000242, 0.00011979200000000051, 0.00011994499999999977, 0.00011973599999999876, 0.00011968099999999995, 0.00012063899999999877, 0.00012033300000000025, 0.00012063899999999877, 0.000120083, 0.0001202500000000023, 0.00012009699999999957, 0.00011955599999999983, 0.00012018100000000045, 0.00012047199999999994, 0.0001204440000000008, 0.00011999999999999858, 0.00011980600000000008, 0.00011990199999999812, 0.00012005500000000086, 0.00012062500000000267, 0.00012015300000000131, 0.00012063900000000224]</msg>
<status status="PASS" starttime="20201030 10:58:11.838" endtime="20201030 10:58:11.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.833" endtime="20201030 10:58:11.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.845" endtime="20201030 10:58:11.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.843" endtime="20201030 10:58:11.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.842" endtime="20201030 10:58:11.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.482" endtime="20201030 10:58:11.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.481" endtime="20201030 10:58:11.865"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.874" endtime="20201030 10:58:11.896"></status>
</kw>
<msg timestamp="20201030 10:58:11.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.873" endtime="20201030 10:58:11.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.897" endtime="20201030 10:58:11.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.900" endtime="20201030 10:58:11.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.870" endtime="20201030 10:58:11.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.868" endtime="20201030 10:58:11.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.909" endtime="20201030 10:58:12.209"></status>
</kw>
<msg timestamp="20201030 10:58:12.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.907" endtime="20201030 10:58:12.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.213" endtime="20201030 10:58:12.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.221" endtime="20201030 10:58:12.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.905" endtime="20201030 10:58:12.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.903" endtime="20201030 10:58:12.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.228" level="INFO">${RESULT} = [{'diff': 0.0001260559999999994}, {'diff': 0.00012145800000000137}, {'diff': 0.00012116699999999841}, {'diff': 0.0001214579999999979}, {'diff': 0.00012141699999999866}, {'diff': 0.00012102800000000219...</msg>
<status status="PASS" starttime="20201030 10:58:12.225" endtime="20201030 10:58:12.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.233" level="INFO">${ACCURACY} = {'diff': [0.0001260559999999994, 0.00012145800000000137, 0.00012116699999999841, 0.0001214579999999979, 0.00012141699999999866, 0.00012102800000000219, 0.00012104200000000176, 0.00012138899999999953, ...</msg>
<status status="PASS" starttime="20201030 10:58:12.229" endtime="20201030 10:58:12.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.237" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.236" endtime="20201030 10:58:12.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.240" level="INFO">VALUE: [0.0001260559999999994, 0.00012145800000000137, 0.00012116699999999841, 0.0001214579999999979, 0.00012141699999999866, 0.00012102800000000219, 0.00012104200000000176, 0.00012138899999999953, 0.00012079199999999804, 0.00012150000000000008, 0.00012152799999999922, 0.00012159700000000107, 0.00012105499999999839, 0.00012142999999999876, 0.00012056899999999746, 0.00012083300000000075, 0.00012108400000000047, 0.00012124999999999983, 0.0001208050000000016, 0.00012104200000000176, 0.0001211249999999997, 0.00012118000000000198, 0.00012136100000000039, 0.00012069400000000105, 0.00012094399999999783, 0.00012120800000000112, 0.00012069500000000052, 0.00012080600000000108, 0.00012152799999999922, 0.00012138899999999953, 0.00012120899999999712, 0.00012104199999999829, 0.00012148600000000051, 0.00012092999999999826, 0.0001213189999999982, 0.0001216250000000002, 0.0001216250000000002, 0.00012127800000000244, 0.00012100000000000305, 0.00012066699999999791, 0.00012151399999999965, 0.00012055499999999789, 0.00012141700000000213, 0.00012115300000000231, 0.0001213189999999982, 0.00012120800000000112, 0.000121083000000001, 0.00012130599999999811, 0.00012130599999999811, 0.00012073599999999976]</msg>
<status status="PASS" starttime="20201030 10:58:12.238" endtime="20201030 10:58:12.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.234" endtime="20201030 10:58:12.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.245" endtime="20201030 10:58:12.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.243" endtime="20201030 10:58:12.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.242" endtime="20201030 10:58:12.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.866" endtime="20201030 10:58:12.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.866" endtime="20201030 10:58:12.266"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.274" endtime="20201030 10:58:12.296"></status>
</kw>
<msg timestamp="20201030 10:58:12.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.273" endtime="20201030 10:58:12.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.297" endtime="20201030 10:58:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.300" endtime="20201030 10:58:12.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.270" endtime="20201030 10:58:12.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.268" endtime="20201030 10:58:12.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.309" endtime="20201030 10:58:12.596"></status>
</kw>
<msg timestamp="20201030 10:58:12.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.307" endtime="20201030 10:58:12.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.600" endtime="20201030 10:58:12.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.608" endtime="20201030 10:58:12.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.305" endtime="20201030 10:58:12.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.303" endtime="20201030 10:58:12.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.615" level="INFO">${RESULT} = [{'diff': 0.00012648600000000204}, {'diff': 0.00012200000000000058}, {'diff': 0.00012209700000000157}, {'diff': 0.00012242999999999976}, {'diff': 0.00012255599999999936}, {'diff': 0.000122125000000000...</msg>
<status status="PASS" starttime="20201030 10:58:12.612" endtime="20201030 10:58:12.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.619" level="INFO">${ACCURACY} = {'diff': [0.00012648600000000204, 0.00012200000000000058, 0.00012209700000000157, 0.00012242999999999976, 0.00012255599999999936, 0.0001221250000000007, 0.0001225419999999998, 0.00012223600000000126, ...</msg>
<status status="PASS" starttime="20201030 10:58:12.616" endtime="20201030 10:58:12.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.623" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.622" endtime="20201030 10:58:12.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.626" level="INFO">VALUE: [0.00012648600000000204, 0.00012200000000000058, 0.00012209700000000157, 0.00012242999999999976, 0.00012255599999999936, 0.0001221250000000007, 0.0001225419999999998, 0.00012223600000000126, 0.00012220899999999812, 0.00012216699999999941, 0.00012198700000000048, 0.0001221799999999995, 0.00012191599999999969, 0.00012229100000000007, 0.00012192999999999926, 0.00012241699999999966, 0.0001223059999999991, 0.00012200000000000058, 0.0001224449999999988, 0.00012199999999999711, 0.00012244399999999933, 0.00012179100000000304, 0.00012255499999999989, 0.00012225000000000083, 0.00012223600000000126, 0.00012237500000000096, 0.00012182000000000165, 0.00012193099999999873, 0.00012218100000000245, 0.0001224449999999988, 0.00012187499999999699, 0.00012262499999999774, 0.00012181900000000218, 0.00012172200000000119, 0.0001226250000000012, 0.00012244399999999933, 0.0001226250000000012, 0.00012256899999999946, 0.00012220899999999812, 0.00012206999999999843, 0.00012202799999999972, 0.00012212499999999724, 0.00012229199999999954, 0.00012200000000000058, 0.00012206899999999896, 0.00012262499999999774, 0.00012219400000000255, 0.00012192999999999926, 0.00012156899999999846, 0.00012173600000000076]</msg>
<status status="PASS" starttime="20201030 10:58:12.624" endtime="20201030 10:58:12.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.619" endtime="20201030 10:58:12.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.631" endtime="20201030 10:58:12.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.629" endtime="20201030 10:58:12.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.628" endtime="20201030 10:58:12.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.267" endtime="20201030 10:58:12.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.266" endtime="20201030 10:58:12.651"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.660" endtime="20201030 10:58:12.682"></status>
</kw>
<msg timestamp="20201030 10:58:12.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.658" endtime="20201030 10:58:12.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.684" endtime="20201030 10:58:12.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.686" endtime="20201030 10:58:12.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.656" endtime="20201030 10:58:12.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.654" endtime="20201030 10:58:12.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.695" endtime="20201030 10:58:12.981"></status>
</kw>
<msg timestamp="20201030 10:58:12.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020638278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.694" endtime="20201030 10:58:12.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020638278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.985" endtime="20201030 10:58:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.992" endtime="20201030 10:58:12.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.691" endtime="20201030 10:58:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.690" endtime="20201030 10:58:12.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.999" level="INFO">${RESULT} = [{'diff': 0.0001278889999999991}, {'diff': 0.000122986000000002}, {'diff': 0.00012275000000000133}, {'diff': 0.00012312499999999824}, {'diff': 0.0001228189999999997}, {'diff': 0.00012319400000000008},...</msg>
<status status="PASS" starttime="20201030 10:58:12.996" endtime="20201030 10:58:12.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.003" level="INFO">${ACCURACY} = {'diff': [0.0001278889999999991, 0.000122986000000002, 0.00012275000000000133, 0.00012312499999999824, 0.0001228189999999997, 0.00012319400000000008, 0.00012286099999999842, 0.00012320799999999965, 0....</msg>
<status status="PASS" starttime="20201030 10:58:13.000" endtime="20201030 10:58:13.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.007" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.006" endtime="20201030 10:58:13.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.013" level="INFO">VALUE: [0.0001278889999999991, 0.000122986000000002, 0.00012275000000000133, 0.00012312499999999824, 0.0001228189999999997, 0.00012319400000000008, 0.00012286099999999842, 0.00012320799999999965, 0.00012336100000000239, 0.00012270899999999862, 0.0001235839999999995, 0.00012282000000000265, 0.00012269399999999958, 0.0001234030000000011, 0.00012286099999999842, 0.00012351399999999818, 0.00012319400000000008, 0.00012351399999999818, 0.0001229999999999981, 0.00012312499999999824, 0.0001229449999999993, 0.00012266699999999991, 0.00012281999999999918, 0.00012348599999999904, 0.00012361099999999917, 0.0001227640000000009, 0.00012287499999999799, 0.00012255499999999989, 0.0001225419999999998, 0.000123568999999997, 0.0001227640000000009, 0.00012283399999999875, 0.00012300000000000158, 0.00012275000000000133, 0.0001229999999999981, 0.00012301400000000115, 0.0001227220000000022, 0.00012293000000000026, 0.00012283299999999928, 0.00012293099999999973, 0.0001232359999999988, 0.00012287499999999799, 0.00012286099999999842, 0.00012281999999999918, 0.0001235420000000008, 0.00012312499999999824, 0.00012343000000000076, 0.00012330500000000064, 0.00012308299999999953, 0.00012302800000000072]</msg>
<status status="PASS" starttime="20201030 10:58:13.009" endtime="20201030 10:58:13.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.004" endtime="20201030 10:58:13.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.018" endtime="20201030 10:58:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.017" endtime="20201030 10:58:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.016" endtime="20201030 10:58:13.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.652" endtime="20201030 10:58:13.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.652" endtime="20201030 10:58:13.039"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.047" endtime="20201030 10:58:13.069"></status>
</kw>
<msg timestamp="20201030 10:58:13.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.046" endtime="20201030 10:58:13.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.070" endtime="20201030 10:58:13.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.073" endtime="20201030 10:58:13.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.043" endtime="20201030 10:58:13.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.041" endtime="20201030 10:58:13.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.082" endtime="20201030 10:58:13.369"></status>
</kw>
<msg timestamp="20201030 10:58:13.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.080" endtime="20201030 10:58:13.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.373" endtime="20201030 10:58:13.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.381" endtime="20201030 10:58:13.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.078" endtime="20201030 10:58:13.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.076" endtime="20201030 10:58:13.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.387" level="INFO">${RESULT} = [{'diff': 0.00012836100000000045}, {'diff': 0.00012436099999999992}, {'diff': 0.00012411099999999967}, {'diff': 0.00012402700000000225}, {'diff': 0.00012444400000000133}, {'diff': 0.000124069000000000...</msg>
<status status="PASS" starttime="20201030 10:58:13.384" endtime="20201030 10:58:13.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.438" level="INFO">${ACCURACY} = {'diff': [0.00012836100000000045, 0.00012436099999999992, 0.00012411099999999967, 0.00012402700000000225, 0.00012444400000000133, 0.00012406900000000096, 0.00012456900000000146, 0.00012401399999999868...</msg>
<status status="PASS" starttime="20201030 10:58:13.389" endtime="20201030 10:58:13.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.443" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.442" endtime="20201030 10:58:13.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.446" level="INFO">VALUE: [0.00012836100000000045, 0.00012436099999999992, 0.00012411099999999967, 0.00012402700000000225, 0.00012444400000000133, 0.00012406900000000096, 0.00012456900000000146, 0.00012401399999999868, 0.000123680000000001, 0.00012422200000000022, 0.00012382000000000018, 0.00012388900000000203, 0.0001239999999999991, 0.00012454199999999832, 0.0001242229999999997, 0.00012447300000000341, 0.00012405500000000139, 0.00012411099999999967, 0.00012408300000000053, 0.0001239999999999991, 0.00012377800000000147, 0.00012401400000000215, 0.0001242640000000024, 0.0001237359999999993, 0.0001239450000000003, 0.00012437499999999949, 0.00012419400000000108, 0.00012433300000000078, 0.00012416600000000194, 0.00012393100000000074, 0.00012411099999999967, 0.0001238060000000006, 0.00012443099999999777, 0.00012411099999999967, 0.00012368100000000048, 0.000123777999999998, 0.0001239450000000003, 0.00012374999999999886, 0.00012430499999999817, 0.00012426399999999893, 0.00012430599999999764, 0.0001237359999999993, 0.00012397199999999997, 0.00012368100000000048, 0.00012372199999999972, 0.00012393100000000074, 0.0001239580000000004, 0.00012387499999999899, 0.00012383300000000028, 0.0001239999999999991]</msg>
<status status="PASS" starttime="20201030 10:58:13.444" endtime="20201030 10:58:13.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.439" endtime="20201030 10:58:13.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.520" endtime="20201030 10:58:13.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.519" endtime="20201030 10:58:13.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.518" endtime="20201030 10:58:13.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.040" endtime="20201030 10:58:13.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.039" endtime="20201030 10:58:13.541"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.551" endtime="20201030 10:58:13.573"></status>
</kw>
<msg timestamp="20201030 10:58:13.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.550" endtime="20201030 10:58:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.575" endtime="20201030 10:58:13.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.577" endtime="20201030 10:58:13.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.547" endtime="20201030 10:58:13.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.544" endtime="20201030 10:58:13.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.586" endtime="20201030 10:58:13.871"></status>
</kw>
<msg timestamp="20201030 10:58:13.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02137325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:13.585" endtime="20201030 10:58:13.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02137325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:13.875" endtime="20201030 10:58:13.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.883" endtime="20201030 10:58:13.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.582" endtime="20201030 10:58:13.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.580" endtime="20201030 10:58:13.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.890" level="INFO">${RESULT} = [{'diff': 0.0001292919999999996}, {'diff': 0.00012476299999999996}, {'diff': 0.00012508299999999806}, {'diff': 0.0001249580000000014}, {'diff': 0.00012488899999999956}, {'diff': 0.00012474999999999986...</msg>
<status status="PASS" starttime="20201030 10:58:13.887" endtime="20201030 10:58:13.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.894" level="INFO">${ACCURACY} = {'diff': [0.0001292919999999996, 0.00012476299999999996, 0.00012508299999999806, 0.0001249580000000014, 0.00012488899999999956, 0.00012474999999999986, 0.0001250559999999984, 0.00012544499999999834, 0...</msg>
<status status="PASS" starttime="20201030 10:58:13.891" endtime="20201030 10:58:13.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.899" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.897" endtime="20201030 10:58:13.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.901" level="INFO">VALUE: [0.0001292919999999996, 0.00012476299999999996, 0.00012508299999999806, 0.0001249580000000014, 0.00012488899999999956, 0.00012474999999999986, 0.0001250559999999984, 0.00012544499999999834, 0.00012562500000000074, 0.00012549999999999714, 0.00012561100000000117, 0.00012538800000000058, 0.00012493000000000226, 0.00012536099999999745, 0.00012467999999999854, 0.00012534700000000135, 0.0001250689999999985, 0.00012558299999999856, 0.0001252360000000008, 0.0001254450000000018, 0.00012538900000000006, 0.00012518099999999852, 0.0001249450000000013, 0.00012526399999999993, 0.00012533300000000178, 0.00012483300000000128, 0.00012526399999999993, 0.00012494400000000183, 0.00012501399999999968, 0.00012537500000000049, 0.00012512500000000024, 0.00012509800000000057, 0.00012504199999999882, 0.00012502700000000325, 0.00012562499999999727, 0.0001249299999999988, 0.00012538900000000006, 0.00012479199999999857, 0.00012486099999999695, 0.0001248060000000016, 0.00012468099999999802, 0.00012483400000000075, 0.0001254169999999992, 0.00012494499999999784, 0.00012525000000000036, 0.0001255000000000006, 0.00012487499999999999, 0.00012481899999999824, 0.0001248060000000016, 0.00012566699999999945]</msg>
<status status="PASS" starttime="20201030 10:58:13.900" endtime="20201030 10:58:13.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.895" endtime="20201030 10:58:13.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.906" endtime="20201030 10:58:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.905" endtime="20201030 10:58:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.904" endtime="20201030 10:58:13.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.542" endtime="20201030 10:58:13.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.542" endtime="20201030 10:58:13.927"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.936" endtime="20201030 10:58:13.957"></status>
</kw>
<msg timestamp="20201030 10:58:13.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.934" endtime="20201030 10:58:13.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.958" endtime="20201030 10:58:13.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.961" endtime="20201030 10:58:13.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.932" endtime="20201030 10:58:13.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.929" endtime="20201030 10:58:13.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.970" endtime="20201030 10:58:14.271"></status>
</kw>
<msg timestamp="20201030 10:58:14.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.968" endtime="20201030 10:58:14.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.277" endtime="20201030 10:58:14.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.285" endtime="20201030 10:58:14.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.966" endtime="20201030 10:58:14.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.964" endtime="20201030 10:58:14.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.292" level="INFO">${RESULT} = [{'diff': 0.0001300409999999974}, {'diff': 0.00012618099999999952}, {'diff': 0.00012587499999999752}, {'diff': 0.00012644399999999986}, {'diff': 0.00012598600000000154}, {'diff': 0.0001260699999999989...</msg>
<status status="PASS" starttime="20201030 10:58:14.289" endtime="20201030 10:58:14.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.297" level="INFO">${ACCURACY} = {'diff': [0.0001300409999999974, 0.00012618099999999952, 0.00012587499999999752, 0.00012644399999999986, 0.00012598600000000154, 0.00012606999999999896, 0.00012612500000000124, 0.00012662499999999827,...</msg>
<status status="PASS" starttime="20201030 10:58:14.293" endtime="20201030 10:58:14.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.301" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.300" endtime="20201030 10:58:14.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.304" level="INFO">VALUE: [0.0001300409999999974, 0.00012618099999999952, 0.00012587499999999752, 0.00012644399999999986, 0.00012598600000000154, 0.00012606999999999896, 0.00012612500000000124, 0.00012662499999999827, 0.00012575000000000086, 0.00012581899999999924, 0.00012626400000000093, 0.00012636100000000192, 0.00012584700000000185, 0.00012637499999999802, 0.00012615300000000038, 0.0001260559999999994, 0.00012584699999999838, 0.00012582000000000218, 0.00012569400000000258, 0.00012609699999999863, 0.00012575000000000086, 0.00012631899999999974, 0.00012655500000000042, 0.0001257360000000013, 0.00012612499999999777, 0.00012648599999999857, 0.00012572199999999825, 0.0001262499999999979, 0.00012602700000000078, 0.00012625000000000136, 0.00012638900000000106, 0.00012601400000000068, 0.00012586100000000142, 0.0001260000000000011, 0.00012659699999999913, 0.00012612500000000124, 0.00012576400000000043, 0.0001265559999999999, 0.00012625000000000136, 0.00012593099999999927, 0.00012644399999999986, 0.00012654100000000085, 0.00012637500000000149, 0.00012591600000000022, 0.00012623599999999832, 0.00012640300000000063, 0.00012658399999999903, 0.00012625000000000136, 0.00012611200000000114, 0.00012594499999999884]</msg>
<status status="PASS" starttime="20201030 10:58:14.302" endtime="20201030 10:58:14.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.298" endtime="20201030 10:58:14.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.309" endtime="20201030 10:58:14.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.307" endtime="20201030 10:58:14.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.306" endtime="20201030 10:58:14.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.928" endtime="20201030 10:58:14.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.927" endtime="20201030 10:58:14.329"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.338" endtime="20201030 10:58:14.360"></status>
</kw>
<msg timestamp="20201030 10:58:14.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.336" endtime="20201030 10:58:14.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.361" endtime="20201030 10:58:14.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.364" endtime="20201030 10:58:14.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.334" endtime="20201030 10:58:14.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.332" endtime="20201030 10:58:14.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.373" endtime="20201030 10:58:14.659"></status>
</kw>
<msg timestamp="20201030 10:58:14.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.371" endtime="20201030 10:58:14.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.663" endtime="20201030 10:58:14.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.671" endtime="20201030 10:58:14.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.369" endtime="20201030 10:58:14.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.367" endtime="20201030 10:58:14.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.677" level="INFO">${RESULT} = [{'diff': 0.00013147199999999706}, {'diff': 0.00012749999999999914}, {'diff': 0.00012681900000000024}, {'diff': 0.00012666600000000097}, {'diff': 0.00012712499999999877}, {'diff': 0.000127138999999998...</msg>
<status status="PASS" starttime="20201030 10:58:14.674" endtime="20201030 10:58:14.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.681" level="INFO">${ACCURACY} = {'diff': [0.00013147199999999706, 0.00012749999999999914, 0.00012681900000000024, 0.00012666600000000097, 0.00012712499999999877, 0.00012713899999999834, 0.0001269589999999994, 0.0001268199999999997, ...</msg>
<status status="PASS" starttime="20201030 10:58:14.678" endtime="20201030 10:58:14.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.686" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.685" endtime="20201030 10:58:14.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.688" level="INFO">VALUE: [0.00013147199999999706, 0.00012749999999999914, 0.00012681900000000024, 0.00012666600000000097, 0.00012712499999999877, 0.00012713899999999834, 0.0001269589999999994, 0.0001268199999999997, 0.00012744500000000034, 0.00012712499999999877, 0.00012693100000000027, 0.00012701400000000168, 0.00012740299999999816, 0.0001272499999999989, 0.0001265559999999999, 0.00012743100000000077, 0.00012680600000000014, 0.000126778000000001, 0.0001268199999999997, 0.00012736099999999945, 0.00012654200000000032, 0.00012748599999999957, 0.00012655500000000042, 0.00012701400000000168, 0.0001274300000000013, 0.00012737499999999902, 0.00012712499999999877, 0.00012686099999999895, 0.00012669499999999959, 0.00012716700000000095, 0.00012742999999999782, 0.00012666600000000097, 0.0001268199999999997, 0.00012688900000000156, 0.00012706999999999996, 0.00012749999999999914, 0.00012712500000000224, 0.00012752800000000175, 0.0001272499999999989, 0.0001265840000000025, 0.0001265559999999999, 0.00012731900000000074, 0.00012730500000000117, 0.00012692999999999732, 0.00012675000000000186, 0.0001266940000000001, 0.00012680600000000014, 0.00012762500000000274, 0.00012726399999999846, 0.0001272499999999989]</msg>
<status status="PASS" starttime="20201030 10:58:14.687" endtime="20201030 10:58:14.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.682" endtime="20201030 10:58:14.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.693" endtime="20201030 10:58:14.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.692" endtime="20201030 10:58:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.690" endtime="20201030 10:58:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.330" endtime="20201030 10:58:14.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.330" endtime="20201030 10:58:14.714"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.723" endtime="20201030 10:58:14.745"></status>
</kw>
<msg timestamp="20201030 10:58:14.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.721" endtime="20201030 10:58:14.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.746" endtime="20201030 10:58:14.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.749" endtime="20201030 10:58:14.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.718" endtime="20201030 10:58:14.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.716" endtime="20201030 10:58:14.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.758" endtime="20201030 10:58:15.043"></status>
</kw>
<msg timestamp="20201030 10:58:15.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.756" endtime="20201030 10:58:15.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.047" endtime="20201030 10:58:15.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.055" endtime="20201030 10:58:15.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.754" endtime="20201030 10:58:15.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.752" endtime="20201030 10:58:15.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.062" level="INFO">${RESULT} = [{'diff': 0.00013200000000000017}, {'diff': 0.00012777799999999853}, {'diff': 0.00012822200000000075}, {'diff': 0.0001282919999999986}, {'diff': 0.00012813899999999934}, {'diff': 0.000128263}, {'diff'...</msg>
<status status="PASS" starttime="20201030 10:58:15.059" endtime="20201030 10:58:15.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.066" level="INFO">${ACCURACY} = {'diff': [0.00013200000000000017, 0.00012777799999999853, 0.00012822200000000075, 0.0001282919999999986, 0.00012813899999999934, 0.000128263, 0.00012808300000000106, 0.0001285829999999981, 0.000127986...</msg>
<status status="PASS" starttime="20201030 10:58:15.063" endtime="20201030 10:58:15.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.070" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.069" endtime="20201030 10:58:15.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.073" level="INFO">VALUE: [0.00013200000000000017, 0.00012777799999999853, 0.00012822200000000075, 0.0001282919999999986, 0.00012813899999999934, 0.000128263, 0.00012808300000000106, 0.0001285829999999981, 0.00012798600000000007, 0.0001282910000000026, 0.00012842999999999882, 0.00012777799999999853, 0.0001285560000000019, 0.00012855599999999842, 0.00012845899999999744, 0.0001286379999999969, 0.00012786199999999942, 0.00012816600000000247, 0.00012816699999999848, 0.00012776400000000243, 0.0001286249999999968, 0.00012787499999999952, 0.00012861200000000017, 0.0001284590000000009, 0.00012809700000000063, 0.00012818100000000152, 0.00012799999999999964, 0.00012816699999999848, 0.000127569000000001, 0.0001282499999999999, 0.00012788900000000256, 0.00012838900000000306, 0.00012854199999999885, 0.0001280560000000014, 0.00012780600000000114, 0.0001280000000000031, 0.00012768100000000102, 0.0001284439999999984, 0.00012781900000000124, 0.000128569000000002, 0.00012863899999999984, 0.00012798600000000007, 0.0001280000000000031, 0.00012790299999999866, 0.00012837500000000002, 0.0001280560000000014, 0.00012830599999999817, 0.00012845799999999796, 0.00012815199999999943, 0.0001277499999999994]</msg>
<status status="PASS" starttime="20201030 10:58:15.071" endtime="20201030 10:58:15.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.066" endtime="20201030 10:58:15.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.078" endtime="20201030 10:58:15.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.077" endtime="20201030 10:58:15.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.075" endtime="20201030 10:58:15.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.715" endtime="20201030 10:58:15.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.714" endtime="20201030 10:58:15.099"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.107" endtime="20201030 10:58:15.129"></status>
</kw>
<msg timestamp="20201030 10:58:15.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.106" endtime="20201030 10:58:15.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.130" endtime="20201030 10:58:15.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.133" endtime="20201030 10:58:15.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.103" endtime="20201030 10:58:15.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.101" endtime="20201030 10:58:15.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.142" endtime="20201030 10:58:15.427"></status>
</kw>
<msg timestamp="20201030 10:58:15.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.140" endtime="20201030 10:58:15.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.431" endtime="20201030 10:58:15.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.439" endtime="20201030 10:58:15.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.138" endtime="20201030 10:58:15.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.136" endtime="20201030 10:58:15.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.445" level="INFO">${RESULT} = [{'diff': 0.0001331800000000001}, {'diff': 0.00012862500000000027}, {'diff': 0.00012909700000000163}, {'diff': 0.0001292500000000009}, {'diff': 0.00012886100000000095}, {'diff': 0.0001288330000000018}...</msg>
<status status="PASS" starttime="20201030 10:58:15.442" endtime="20201030 10:58:15.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.450" level="INFO">${ACCURACY} = {'diff': [0.0001331800000000001, 0.00012862500000000027, 0.00012909700000000163, 0.0001292500000000009, 0.00012886100000000095, 0.0001288330000000018, 0.00012918099999999905, 0.00012877799999999953, 0...</msg>
<status status="PASS" starttime="20201030 10:58:15.446" endtime="20201030 10:58:15.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.454" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.453" endtime="20201030 10:58:15.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.457" level="INFO">VALUE: [0.0001331800000000001, 0.00012862500000000027, 0.00012909700000000163, 0.0001292500000000009, 0.00012886100000000095, 0.0001288330000000018, 0.00012918099999999905, 0.00012877799999999953, 0.00012923599999999785, 0.00012858400000000103, 0.0001290270000000003, 0.00012954100000000038, 0.00012855499999999895, 0.0001288890000000001, 0.00012877799999999953, 0.00012945799999999896, 0.0001287500000000004, 0.00012919499999999862, 0.00012930599999999917, 0.00012923600000000132, 0.00012905599999999892, 0.00012947199999999853, 0.00012887500000000052, 0.00012867999999999907, 0.00012898600000000107, 0.00012858300000000156, 0.00012919500000000209, 0.00012869499999999812, 0.00012873599999999735, 0.00012876399999999996, 0.00012900000000000064, 0.0001289439999999989, 0.00012888899999999662, 0.00012912500000000077, 0.00012908300000000206, 0.00012913900000000034, 0.0001294439999999994, 0.00012963899999999737, 0.0001288339999999978, 0.00012954199999999985, 0.00012883299999999834, 0.00012886200000000042, 0.0001290690000000025, 0.00012895799999999846, 0.00012950000000000114, 0.00012931899999999927, 0.00012900000000000064, 0.0001288200000000017, 0.00012941699999999973, 0.00012902799999999978]</msg>
<status status="PASS" starttime="20201030 10:58:15.456" endtime="20201030 10:58:15.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.451" endtime="20201030 10:58:15.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.462" endtime="20201030 10:58:15.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.460" endtime="20201030 10:58:15.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.459" endtime="20201030 10:58:15.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.100" endtime="20201030 10:58:15.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.099" endtime="20201030 10:58:15.482"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.491" endtime="20201030 10:58:15.513"></status>
</kw>
<msg timestamp="20201030 10:58:15.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.489" endtime="20201030 10:58:15.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.514" endtime="20201030 10:58:15.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.517" endtime="20201030 10:58:15.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.487" endtime="20201030 10:58:15.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.485" endtime="20201030 10:58:15.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.526" endtime="20201030 10:58:15.812"></status>
</kw>
<msg timestamp="20201030 10:58:15.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.524" endtime="20201030 10:58:15.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.816" endtime="20201030 10:58:15.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.824" endtime="20201030 10:58:15.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.522" endtime="20201030 10:58:15.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.520" endtime="20201030 10:58:15.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.831" level="INFO">${RESULT} = [{'diff': 0.00013420800000000024}, {'diff': 0.00013047199999999953}, {'diff': 0.0001303189999999968}, {'diff': 0.00013005599999999992}, {'diff': 0.00013011099999999873}, {'diff': 0.0001297640000000009...</msg>
<status status="PASS" starttime="20201030 10:58:15.828" endtime="20201030 10:58:15.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.835" level="INFO">${ACCURACY} = {'diff': [0.00013420800000000024, 0.00013047199999999953, 0.0001303189999999968, 0.00013005599999999992, 0.00013011099999999873, 0.00012976400000000096, 0.00013062500000000227, 0.0001297370000000013, ...</msg>
<status status="PASS" starttime="20201030 10:58:15.832" endtime="20201030 10:58:15.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.839" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.838" endtime="20201030 10:58:15.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.842" level="INFO">VALUE: [0.00013420800000000024, 0.00013047199999999953, 0.0001303189999999968, 0.00013005599999999992, 0.00013011099999999873, 0.00012976400000000096, 0.00013062500000000227, 0.0001297370000000013, 0.00013037500000000202, 0.0001302079999999997, 0.00013068100000000055, 0.00013030499999999723, 0.00013024999999999842, 0.0001304859999999991, 0.00013026400000000146, 0.00012974999999999792, 0.00013062500000000227, 0.00013001399999999774, 0.0001303059999999967, 0.00012980599999999967, 0.00013050000000000214, 0.00013023599999999885, 0.00013063899999999837, 0.00013038899999999812, 0.00013024999999999842, 0.00012969499999999912, 0.000130263000000002, 0.00013030600000000017, 0.00013037499999999855, 0.0001306249999999988, 0.00013018000000000057, 0.00012968000000000007, 0.00013041700000000073, 0.00013054199999999738, 0.00012977800000000053, 0.00013000000000000164, 0.00013033299999999984, 0.00013048699999999858, 0.00012988899999999762, 0.00013011099999999873, 0.00012981899999999977, 0.0001304859999999991, 0.0001302500000000019, 0.00012972199999999878, 0.000129569999999999, 0.0001300699999999995, 0.00012981999999999924, 0.00013037500000000202, 0.00013051299999999877, 0.00012974999999999792]</msg>
<status status="PASS" starttime="20201030 10:58:15.840" endtime="20201030 10:58:15.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.836" endtime="20201030 10:58:15.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.847" endtime="20201030 10:58:15.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.845" endtime="20201030 10:58:15.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.844" endtime="20201030 10:58:15.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.483" endtime="20201030 10:58:15.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.483" endtime="20201030 10:58:15.867"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.876" endtime="20201030 10:58:15.898"></status>
</kw>
<msg timestamp="20201030 10:58:15.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.874" endtime="20201030 10:58:15.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.900" endtime="20201030 10:58:15.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.902" endtime="20201030 10:58:15.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.872" endtime="20201030 10:58:15.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.870" endtime="20201030 10:58:15.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.911" endtime="20201030 10:58:16.196"></status>
</kw>
<msg timestamp="20201030 10:58:16.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.910" endtime="20201030 10:58:16.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.200" endtime="20201030 10:58:16.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.208" endtime="20201030 10:58:16.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.907" endtime="20201030 10:58:16.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.905" endtime="20201030 10:58:16.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.214" level="INFO">${RESULT} = [{'diff': 0.00013562500000000033}, {'diff': 0.00013074999999999892}, {'diff': 0.00013149999999999967}, {'diff': 0.0001316249999999998}, {'diff': 0.00013111099999999973}, {'diff': 0.0001314440000000014...</msg>
<status status="PASS" starttime="20201030 10:58:16.211" endtime="20201030 10:58:16.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.218" level="INFO">${ACCURACY} = {'diff': [0.00013562500000000033, 0.00013074999999999892, 0.00013149999999999967, 0.0001316249999999998, 0.00013111099999999973, 0.0001314440000000014, 0.0001316249999999998, 0.00013149999999999967, 0...</msg>
<status status="PASS" starttime="20201030 10:58:16.215" endtime="20201030 10:58:16.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.223" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.222" endtime="20201030 10:58:16.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.226" level="INFO">VALUE: [0.00013562500000000033, 0.00013074999999999892, 0.00013149999999999967, 0.0001316249999999998, 0.00013111099999999973, 0.0001314440000000014, 0.0001316249999999998, 0.00013149999999999967, 0.00013136099999999998, 0.00013163899999999937, 0.00013133300000000084, 0.00013136099999999998, 0.00013105600000000092, 0.00013123599999999985, 0.00013130600000000117, 0.0001314860000000001, 0.00013095800000000046, 0.0001310700000000005, 0.00013113899999999887, 0.00013152800000000228, 0.0001314310000000013, 0.00013137499999999955, 0.00013141700000000173, 0.000131263999999999, 0.00013101399999999874, 0.00013105499999999798, 0.00013122200000000028, 0.00013112500000000277, 0.00013115199999999896, 0.00013092999999999785, 0.00013138899999999912, 0.00013077800000000153, 0.0001316249999999998, 0.0001307920000000011, 0.0001313340000000003, 0.00013105600000000092, 0.00013087499999999905, 0.00013113899999999887, 0.0001312370000000028, 0.0001310409999999984, 0.00013145800000000096, 0.0001313050000000017, 0.00013106900000000102, 0.00013138899999999912, 0.00013147200000000053, 0.0001313890000000026, 0.00013084799999999938, 0.0001311249999999993, 0.00013084799999999938, 0.00013112500000000277]</msg>
<status status="PASS" starttime="20201030 10:58:16.224" endtime="20201030 10:58:16.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.219" endtime="20201030 10:58:16.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.231" endtime="20201030 10:58:16.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.230" endtime="20201030 10:58:16.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.228" endtime="20201030 10:58:16.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.868" endtime="20201030 10:58:16.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.868" endtime="20201030 10:58:16.252"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.260" endtime="20201030 10:58:16.282"></status>
</kw>
<msg timestamp="20201030 10:58:16.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.259" endtime="20201030 10:58:16.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.284" endtime="20201030 10:58:16.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.286" endtime="20201030 10:58:16.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.256" endtime="20201030 10:58:16.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.254" endtime="20201030 10:58:16.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.295" endtime="20201030 10:58:16.581"></status>
</kw>
<msg timestamp="20201030 10:58:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.294" endtime="20201030 10:58:16.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.585" endtime="20201030 10:58:16.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.593" endtime="20201030 10:58:16.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.291" endtime="20201030 10:58:16.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.290" endtime="20201030 10:58:16.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.599" level="INFO">${RESULT} = [{'diff': 0.0001359169999999993}, {'diff': 0.00013206999999999802}, {'diff': 0.00013181999999999777}, {'diff': 0.00013224999999999695}, {'diff': 0.00013263900000000037}, {'diff': 0.0001325549999999994...</msg>
<status status="PASS" starttime="20201030 10:58:16.596" endtime="20201030 10:58:16.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.604" level="INFO">${ACCURACY} = {'diff': [0.0001359169999999993, 0.00013206999999999802, 0.00013181999999999777, 0.00013224999999999695, 0.00013263900000000037, 0.00013255499999999948, 0.0001325409999999999, 0.00013180499999999873, ...</msg>
<status status="PASS" starttime="20201030 10:58:16.600" endtime="20201030 10:58:16.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.609" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.607" endtime="20201030 10:58:16.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.611" level="INFO">VALUE: [0.0001359169999999993, 0.00013206999999999802, 0.00013181999999999777, 0.00013224999999999695, 0.00013263900000000037, 0.00013255499999999948, 0.0001325409999999999, 0.00013180499999999873, 0.0001326250000000008, 0.0001323189999999988, 0.0001320830000000016, 0.00013187500000000005, 0.00013219500000000162, 0.00013237500000000055, 0.00013155600000000142, 0.00013180600000000167, 0.0001321799999999991, 0.0001319029999999992, 0.00013205500000000245, 0.00013250000000000067, 0.00013181900000000177, 0.00013250000000000067, 0.00013187500000000005, 0.0001324860000000011, 0.0001324449999999984, 0.0001320409999999994, 0.00013256899999999905, 0.00013248599999999763, 0.0001318189999999983, 0.0001319029999999992, 0.0001326250000000008, 0.00013223700000000033, 0.0001323059999999987, 0.00013211100000000073, 0.00013243099999999883, 0.00013243099999999883, 0.00013224999999999695, 0.00013201399999999974, 0.00013211100000000073, 0.00013219399999999867, 0.00013158299999999762, 0.00013205600000000192, 0.0001324449999999984, 0.00013222200000000128, 0.0001320279999999993, 0.0001323609999999975, 0.00013244399999999892, 0.00013247199999999806, 0.00013213899999999987, 0.00013255499999999948]</msg>
<status status="PASS" starttime="20201030 10:58:16.610" endtime="20201030 10:58:16.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.605" endtime="20201030 10:58:16.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.616" endtime="20201030 10:58:16.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.614" endtime="20201030 10:58:16.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.613" endtime="20201030 10:58:16.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.253" endtime="20201030 10:58:16.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.252" endtime="20201030 10:58:16.636"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.645" endtime="20201030 10:58:16.668"></status>
</kw>
<msg timestamp="20201030 10:58:16.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.644" endtime="20201030 10:58:16.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.669" endtime="20201030 10:58:16.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.672" endtime="20201030 10:58:16.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.641" endtime="20201030 10:58:16.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.639" endtime="20201030 10:58:16.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.681" endtime="20201030 10:58:16.969"></status>
</kw>
<msg timestamp="20201030 10:58:16.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.679" endtime="20201030 10:58:16.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.973" endtime="20201030 10:58:16.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.981" endtime="20201030 10:58:16.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.677" endtime="20201030 10:58:16.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.675" endtime="20201030 10:58:16.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.988" level="INFO">${RESULT} = [{'diff': 0.00013719399999999674}, {'diff': 0.00013281999999999877}, {'diff': 0.0001330839999999986}, {'diff': 0.0001333609999999985}, {'diff': 0.00013319499999999915}, {'diff': 0.00013343099999999983...</msg>
<status status="PASS" starttime="20201030 10:58:16.984" endtime="20201030 10:58:16.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.992" level="INFO">${ACCURACY} = {'diff': [0.00013719399999999674, 0.00013281999999999877, 0.0001330839999999986, 0.0001333609999999985, 0.00013319499999999915, 0.00013343099999999983, 0.00013292999999999985, 0.00013330500000000023, ...</msg>
<status status="PASS" starttime="20201030 10:58:16.989" endtime="20201030 10:58:16.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.996" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.995" endtime="20201030 10:58:16.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.998" level="INFO">VALUE: [0.00013719399999999674, 0.00013281999999999877, 0.0001330839999999986, 0.0001333609999999985, 0.00013319499999999915, 0.00013343099999999983, 0.00013292999999999985, 0.00013330500000000023, 0.00013319400000000314, 0.00013316600000000053, 0.0001330969999999987, 0.00013361099999999876, 0.00013277800000000006, 0.00013316600000000053, 0.00013301400000000074, 0.000133167, 0.00013363900000000137, 0.00013348599999999863, 0.00013300000000000117, 0.00013308299999999912, 0.00013279199999999963, 0.00013306999999999902, 0.00013273599999999788, 0.00013269499999999865, 0.0001327640000000005, 0.00013272200000000178, 0.00013275000000000092, 0.00013347199999999906, 0.00013256900000000252, 0.00013272200000000178, 0.0001331250000000013, 0.00013276399999999702, 0.00013305599999999945, 0.00013350000000000167, 0.00013255599999999895, 0.00013275000000000092, 0.00013362499999999833, 0.00013362499999999833, 0.00013350000000000167, 0.00013333299999999937, 0.000133167, 0.00013309700000000216, 0.0001328059999999992, 0.000133264000000001, 0.00013331999999999927, 0.00013255499999999948, 0.00013337500000000155, 0.00013323599999999838, 0.00013301400000000074, 0.000132957999999999]</msg>
<status status="PASS" starttime="20201030 10:58:16.997" endtime="20201030 10:58:16.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.992" endtime="20201030 10:58:17.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.003" endtime="20201030 10:58:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.002" endtime="20201030 10:58:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.001" endtime="20201030 10:58:17.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.637" endtime="20201030 10:58:17.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.637" endtime="20201030 10:58:17.024"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.033" endtime="20201030 10:58:17.055"></status>
</kw>
<msg timestamp="20201030 10:58:17.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.031" endtime="20201030 10:58:17.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.057" endtime="20201030 10:58:17.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.059" endtime="20201030 10:58:17.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.029" endtime="20201030 10:58:17.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.027" endtime="20201030 10:58:17.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.068" endtime="20201030 10:58:17.354"></status>
</kw>
<msg timestamp="20201030 10:58:17.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.067" endtime="20201030 10:58:17.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.358" endtime="20201030 10:58:17.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.366" endtime="20201030 10:58:17.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.064" endtime="20201030 10:58:17.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.063" endtime="20201030 10:58:17.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.373" level="INFO">${RESULT} = [{'diff': 0.00013805600000000098}, {'diff': 0.0001341389999999984}, {'diff': 0.00013442999999999788}, {'diff': 0.00013448599999999963}, {'diff': 0.00013352799999999734}, {'diff': 0.0001339019999999982...</msg>
<status status="PASS" starttime="20201030 10:58:17.370" endtime="20201030 10:58:17.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.377" level="INFO">${ACCURACY} = {'diff': [0.00013805600000000098, 0.0001341389999999984, 0.00013442999999999788, 0.00013448599999999963, 0.00013352799999999734, 0.00013390199999999824, 0.0001339030000000012, 0.00013423599999999938, ...</msg>
<status status="PASS" starttime="20201030 10:58:17.374" endtime="20201030 10:58:17.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.381" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.380" endtime="20201030 10:58:17.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.383" level="INFO">VALUE: [0.00013805600000000098, 0.0001341389999999984, 0.00013442999999999788, 0.00013448599999999963, 0.00013352799999999734, 0.00013390199999999824, 0.0001339030000000012, 0.00013423599999999938, 0.0001343609999999995, 0.00013424999999999895, 0.00013373599999999888, 0.00013424999999999895, 0.00013400000000000217, 0.00013438899999999865, 0.00013448599999999963, 0.00013370799999999974, 0.00013397199999999956, 0.00013419400000000067, 0.000134264000000002, 0.00013419500000000015, 0.0001344450000000004, 0.00013419400000000067, 0.00013411199999999873, 0.00013375000000000192, 0.00013419400000000067, 0.0001338190000000003, 0.0001346389999999989, 0.0001339449999999999, 0.00013445899999999997, 0.00013418100000000058, 0.00013411099999999926, 0.0001342770000000021, 0.0001339030000000012, 0.0001344580000000005, 0.00013425000000000242, 0.0001339999999999987, 0.00013452799999999834, 0.00013393100000000033, 0.0001344999999999992, 0.00013413900000000187, 0.0001339999999999987, 0.000133958, 0.00013387499999999858, 0.00013442999999999788, 0.00013388899999999815, 0.00013391600000000128, 0.00013379200000000063, 0.00013404200000000088, 0.00013438900000000212, 0.0001339999999999987]</msg>
<status status="PASS" starttime="20201030 10:58:17.382" endtime="20201030 10:58:17.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.377" endtime="20201030 10:58:17.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.389" endtime="20201030 10:58:17.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.388" endtime="20201030 10:58:17.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.387" endtime="20201030 10:58:17.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.025" endtime="20201030 10:58:17.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.024" endtime="20201030 10:58:17.410"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.419" endtime="20201030 10:58:17.441"></status>
</kw>
<msg timestamp="20201030 10:58:17.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.417" endtime="20201030 10:58:17.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.442" endtime="20201030 10:58:17.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.445" endtime="20201030 10:58:17.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.414" endtime="20201030 10:58:17.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.412" endtime="20201030 10:58:17.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.454" endtime="20201030 10:58:17.741"></status>
</kw>
<msg timestamp="20201030 10:58:17.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.452" endtime="20201030 10:58:17.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.745" endtime="20201030 10:58:17.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.753" endtime="20201030 10:58:17.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.450" endtime="20201030 10:58:17.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.448" endtime="20201030 10:58:17.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.760" level="INFO">${RESULT} = [{'diff': 0.00013980599999999926}, {'diff': 0.00013469500000000065}, {'diff': 0.00013558299999999815}, {'diff': 0.00013502799999999884}, {'diff': 0.00013523600000000038}, {'diff': 0.000135333000000001...</msg>
<status status="PASS" starttime="20201030 10:58:17.757" endtime="20201030 10:58:17.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.765" level="INFO">${ACCURACY} = {'diff': [0.00013980599999999926, 0.00013469500000000065, 0.00013558299999999815, 0.00013502799999999884, 0.00013523600000000038, 0.00013533300000000137, 0.00013487499999999958, 0.00013473599999999988...</msg>
<status status="PASS" starttime="20201030 10:58:17.761" endtime="20201030 10:58:17.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.769" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.768" endtime="20201030 10:58:17.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.771" level="INFO">VALUE: [0.00013980599999999926, 0.00013469500000000065, 0.00013558299999999815, 0.00013502799999999884, 0.00013523600000000038, 0.00013533300000000137, 0.00013487499999999958, 0.00013473599999999988, 0.00013465299999999847, 0.0001351250000000033, 0.00013473599999999988, 0.00013493100000000133, 0.00013536199999999998, 0.00013512499999999983, 0.0001351939999999982, 0.00013523600000000038, 0.00013502799999999884, 0.00013523600000000038, 0.00013519499999999768, 0.00013498600000000013, 0.0001347640000000025, 0.00013482000000000077, 0.00013480499999999826, 0.00013540299999999922, 0.00013517999999999863, 0.00013526399999999952, 0.0001350280000000023, 0.0001351389999999994, 0.00013537500000000008, 0.0001355000000000002, 0.00013544499999999793, 0.00013484699999999697, 0.0001353329999999979, 0.00013557000000000152, 0.00013493000000000185, 0.00013493099999999786, 0.00013552799999999934, 0.00013552799999999934, 0.00013481899999999783, 0.0001353060000000017, 0.0001349869999999996, 0.00013559800000000066, 0.00013518100000000158, 0.00013547200000000106, 0.00013512499999999983, 0.0001355000000000002, 0.00013512499999999983, 0.0001353199999999978, 0.0001345840000000001, 0.00013532000000000127]</msg>
<status status="PASS" starttime="20201030 10:58:17.770" endtime="20201030 10:58:17.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.765" endtime="20201030 10:58:17.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.776" endtime="20201030 10:58:17.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.775" endtime="20201030 10:58:17.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.774" endtime="20201030 10:58:17.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.411" endtime="20201030 10:58:17.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.410" endtime="20201030 10:58:17.797"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.806" endtime="20201030 10:58:17.829"></status>
</kw>
<msg timestamp="20201030 10:58:17.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.804" endtime="20201030 10:58:17.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.830" endtime="20201030 10:58:17.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.833" endtime="20201030 10:58:17.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.802" endtime="20201030 10:58:17.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.800" endtime="20201030 10:58:17.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.842" endtime="20201030 10:58:18.127"></status>
</kw>
<msg timestamp="20201030 10:58:18.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.840" endtime="20201030 10:58:18.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.131" endtime="20201030 10:58:18.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.140" endtime="20201030 10:58:18.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.837" endtime="20201030 10:58:18.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.836" endtime="20201030 10:58:18.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.146" level="INFO">${RESULT} = [{'diff': 0.00014087499999999864}, {'diff': 0.00013615299999999997}, {'diff': 0.00013631899999999933}, {'diff': 0.00013637500000000108}, {'diff': 0.00013579199999999916}, {'diff': 0.000135749999999996...</msg>
<status status="PASS" starttime="20201030 10:58:18.143" endtime="20201030 10:58:18.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.150" level="INFO">${ACCURACY} = {'diff': [0.00014087499999999864, 0.00013615299999999997, 0.00013631899999999933, 0.00013637500000000108, 0.00013579199999999916, 0.00013574999999999698, 0.00013588900000000015, 0.00013594499999999843...</msg>
<status status="PASS" starttime="20201030 10:58:18.147" endtime="20201030 10:58:18.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.154" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.153" endtime="20201030 10:58:18.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.157" level="INFO">VALUE: [0.00014087499999999864, 0.00013615299999999997, 0.00013631899999999933, 0.00013637500000000108, 0.00013579199999999916, 0.00013574999999999698, 0.00013588900000000015, 0.00013594499999999843, 0.0001360000000000007, 0.00013661199999999776, 0.00013595799999999852, 0.00013617999999999963, 0.00013630499999999976, 0.00013573600000000088, 0.00013651400000000077, 0.00013597300000000104, 0.00013638900000000065, 0.0001359169999999993, 0.0001358329999999984, 0.00013618100000000258, 0.0001364580000000025, 0.00013630499999999976, 0.00013588900000000015, 0.00013573599999999741, 0.00013605600000000245, 0.00013598600000000113, 0.0001363060000000027, 0.00013591599999999981, 0.00013608299999999865, 0.0001361809999999991, 0.00013619500000000215, 0.00013606899999999908, 0.00013637500000000108, 0.00013648600000000163, 0.00013636099999999804, 0.00013608300000000212, 0.00013633399999999837, 0.0001360549999999995, 0.0001360130000000008, 0.00013575000000000045, 0.00013643099999999936, 0.000135554999999999, 0.00013642999999999988, 0.00013568100000000208, 0.00013630599999999923, 0.0001361390000000004, 0.00013569499999999818, 0.0001359169999999993, 0.00013606900000000255, 0.00013647299999999807]</msg>
<status status="PASS" starttime="20201030 10:58:18.155" endtime="20201030 10:58:18.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.151" endtime="20201030 10:58:18.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.162" endtime="20201030 10:58:18.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.160" endtime="20201030 10:58:18.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.159" endtime="20201030 10:58:18.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.798" endtime="20201030 10:58:18.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.797" endtime="20201030 10:58:18.182"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.191" endtime="20201030 10:58:18.214"></status>
</kw>
<msg timestamp="20201030 10:58:18.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.190" endtime="20201030 10:58:18.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.215" endtime="20201030 10:58:18.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.218" endtime="20201030 10:58:18.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.187" endtime="20201030 10:58:18.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.185" endtime="20201030 10:58:18.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.227" endtime="20201030 10:58:18.513"></status>
</kw>
<msg timestamp="20201030 10:58:18.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.225" endtime="20201030 10:58:18.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.517" endtime="20201030 10:58:18.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.525" endtime="20201030 10:58:18.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.223" endtime="20201030 10:58:18.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.221" endtime="20201030 10:58:18.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.531" level="INFO">${RESULT} = [{'diff': 0.00014199999999999977}, {'diff': 0.0001368329999999994}, {'diff': 0.00013749999999999873}, {'diff': 0.00013705599999999998}, {'diff': 0.00013736099999999904}, {'diff': 0.0001374310000000003...</msg>
<status status="PASS" starttime="20201030 10:58:18.528" endtime="20201030 10:58:18.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.535" level="INFO">${ACCURACY} = {'diff': [0.00014199999999999977, 0.0001368329999999994, 0.00013749999999999873, 0.00013705599999999998, 0.00013736099999999904, 0.00013743100000000036, 0.00013684699999999897, 0.00013761199999999876,...</msg>
<status status="PASS" starttime="20201030 10:58:18.532" endtime="20201030 10:58:18.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.540" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.539" endtime="20201030 10:58:18.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.542" level="INFO">VALUE: [0.00014199999999999977, 0.0001368329999999994, 0.00013749999999999873, 0.00013705599999999998, 0.00013736099999999904, 0.00013743100000000036, 0.00013684699999999897, 0.00013761199999999876, 0.00013693000000000038, 0.00013651400000000077, 0.0001371940000000002, 0.00013759699999999972, 0.0001366109999999983, 0.00013712499999999836, 0.0001370979999999987, 0.00013680599999999973, 0.00013684700000000244, 0.00013698599999999866, 0.00013712500000000183, 0.00013762500000000233, 0.00013680500000000026, 0.00013757000000000005, 0.00013705599999999998, 0.00013669499999999918, 0.00013723599999999891, 0.00013730599999999676, 0.0001373879999999987, 0.00013744399999999699, 0.00013690299999999725, 0.00013763899999999843, 0.00013749999999999873, 0.0001365000000000012, 0.00013693099999999986, 0.00013672199999999884, 0.0001368199999999993, 0.0001370130000000018, 0.0001373049999999973, 0.0001366939999999997, 0.0001367910000000007, 0.0001375139999999983, 0.0001376109999999993, 0.00013736099999999904, 0.0001372780000000011, 0.00013716699999999707, 0.00013688900000000115, 0.00013684699999999897, 0.00013699999999999823, 0.00013675000000000145, 0.00013762499999999886, 0.0001370139999999978]</msg>
<status status="PASS" starttime="20201030 10:58:18.541" endtime="20201030 10:58:18.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.536" endtime="20201030 10:58:18.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.604" endtime="20201030 10:58:18.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.602" endtime="20201030 10:58:18.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.601" endtime="20201030 10:58:18.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.183" endtime="20201030 10:58:18.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.183" endtime="20201030 10:58:18.625"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.633" endtime="20201030 10:58:18.655"></status>
</kw>
<msg timestamp="20201030 10:58:18.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.632" endtime="20201030 10:58:18.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.657" endtime="20201030 10:58:18.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.660" endtime="20201030 10:58:18.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.629" endtime="20201030 10:58:18.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.627" endtime="20201030 10:58:18.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.669" endtime="20201030 10:58:18.954"></status>
</kw>
<msg timestamp="20201030 10:58:18.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.667" endtime="20201030 10:58:18.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.959" endtime="20201030 10:58:18.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.966" endtime="20201030 10:58:18.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.664" endtime="20201030 10:58:18.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.663" endtime="20201030 10:58:18.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.973" level="INFO">${RESULT} = [{'diff': 0.00014287499999999717}, {'diff': 0.00013798600000000313}, {'diff': 0.00013774999999999898}, {'diff': 0.00013790299999999825}, {'diff': 0.00013855600000000148}, {'diff': 0.000137930000000001...</msg>
<status status="PASS" starttime="20201030 10:58:18.970" endtime="20201030 10:58:18.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.978" level="INFO">${ACCURACY} = {'diff': [0.00014287499999999717, 0.00013798600000000313, 0.00013774999999999898, 0.00013790299999999825, 0.00013855600000000148, 0.00013793000000000138, 0.00013799999999999923, 0.0001378330000000004,...</msg>
<status status="PASS" starttime="20201030 10:58:18.974" endtime="20201030 10:58:18.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.982" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.981" endtime="20201030 10:58:18.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.985" level="INFO">VALUE: [0.00014287499999999717, 0.00013798600000000313, 0.00013774999999999898, 0.00013790299999999825, 0.00013855600000000148, 0.00013793000000000138, 0.00013799999999999923, 0.0001378330000000004, 0.00013865300000000247, 0.00013862499999999986, 0.0001381810000000011, 0.00013804199999999794, 0.00013788899999999868, 0.00013812499999999936, 0.00013833299999999743, 0.00013811199999999926, 0.00013790300000000172, 0.00013801400000000227, 0.00013813899999999893, 0.0001380000000000027, 0.00013849999999999973, 0.00013769500000000018, 0.00013773599999999941, 0.0001384590000000005, 0.0001383749999999996, 0.00013855499999999854, 0.00013822200000000034, 0.00013799999999999923, 0.00013854200000000191, 0.00013833400000000037, 0.00013779200000000116, 0.00013862499999999986, 0.00013805600000000098, 0.0001380689999999976, 0.0001377369999999989, 0.00013779200000000116, 0.00013812500000000283, 0.00013759699999999972, 0.00013844500000000093, 0.00013787500000000258, 0.0001385139999999993, 0.0001378200000000003, 0.00013769500000000018, 0.00013772199999999984, 0.00013844399999999799, 0.000138555000000002, 0.0001376940000000007, 0.00013824999999999948, 0.00013809700000000022, 0.00013772199999999984]</msg>
<status status="PASS" starttime="20201030 10:58:18.983" endtime="20201030 10:58:18.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.979" endtime="20201030 10:58:18.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.990" endtime="20201030 10:58:19.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.988" endtime="20201030 10:58:19.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.987" endtime="20201030 10:58:19.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.625" endtime="20201030 10:58:19.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.625" endtime="20201030 10:58:19.010"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.019" endtime="20201030 10:58:19.040"></status>
</kw>
<msg timestamp="20201030 10:58:19.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.017" endtime="20201030 10:58:19.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.041" endtime="20201030 10:58:19.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.044" endtime="20201030 10:58:19.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.015" endtime="20201030 10:58:19.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.013" endtime="20201030 10:58:19.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.053" endtime="20201030 10:58:19.354"></status>
</kw>
<msg timestamp="20201030 10:58:19.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.051" endtime="20201030 10:58:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.359" endtime="20201030 10:58:19.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.367" endtime="20201030 10:58:19.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.049" endtime="20201030 10:58:19.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.047" endtime="20201030 10:58:19.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.374" level="INFO">${RESULT} = [{'diff': 0.0001431120000000008}, {'diff': 0.0001394859999999977}, {'diff': 0.00013905600000000198}, {'diff': 0.00013873599999999695}, {'diff': 0.00013916600000000307}, {'diff': 0.00013872200000000084...</msg>
<status status="PASS" starttime="20201030 10:58:19.370" endtime="20201030 10:58:19.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.378" level="INFO">${ACCURACY} = {'diff': [0.0001431120000000008, 0.0001394859999999977, 0.00013905600000000198, 0.00013873599999999695, 0.00013916600000000307, 0.00013872200000000084, 0.00013925000000000048, 0.0001391949999999982, 0...</msg>
<status status="PASS" starttime="20201030 10:58:19.375" endtime="20201030 10:58:19.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.382" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.381" endtime="20201030 10:58:19.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.384" level="INFO">VALUE: [0.0001431120000000008, 0.0001394859999999977, 0.00013905600000000198, 0.00013873599999999695, 0.00013916600000000307, 0.00013872200000000084, 0.00013925000000000048, 0.0001391949999999982, 0.0001390689999999986, 0.00013922200000000134, 0.00013906999999999808, 0.00013894500000000143, 0.0001390980000000007, 0.00013876399999999955, 0.00013901300000000033, 0.0001395270000000004, 0.00013855499999999854, 0.0001390550000000025, 0.0001385689999999981, 0.00013893100000000186, 0.00013902799999999937, 0.00013881999999999783, 0.00013913899999999993, 0.0001393880000000007, 0.00013906900000000208, 0.000139653, 0.0001394590000000015, 0.00013877799999999912, 0.00013897199999999763, 0.00013868099999999814, 0.00013955599999999901, 0.0001391249999999969, 0.00013884799999999697, 0.00013919399999999874, 0.0001389859999999972, 0.00013909700000000122, 0.00013888899999999968, 0.00013904199999999894, 0.0001391110000000008, 0.0001387919999999987, 0.00013944500000000193, 0.0001393750000000006, 0.0001391949999999982, 0.00013884700000000097, 0.00013913899999999993, 0.00013913899999999993, 0.00013905599999999851, 0.00013950000000000073, 0.00013886100000000054, 0.0001392919999999992]</msg>
<status status="PASS" starttime="20201030 10:58:19.383" endtime="20201030 10:58:19.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.378" endtime="20201030 10:58:19.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.390" endtime="20201030 10:58:19.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.388" endtime="20201030 10:58:19.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.387" endtime="20201030 10:58:19.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.011" endtime="20201030 10:58:19.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.011" endtime="20201030 10:58:19.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.043" endtime="20201030 10:58:19.410"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:37.966" endtime="20201030 10:58:19.411" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:49.783" endtime="20201030 10:58:19.416"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.473" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:19.481" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:20.447" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:19.472" endtime="20201030 10:58:20.448"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.450" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:20.449" endtime="20201030 10:58:20.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.470" endtime="20201030 10:58:20.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.453" endtime="20201030 10:58:20.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.452" endtime="20201030 10:58:20.637"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.650" endtime="20201030 10:58:20.673"></status>
</kw>
<msg timestamp="20201030 10:58:20.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.648" endtime="20201030 10:58:20.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.675" endtime="20201030 10:58:20.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:20.677" endtime="20201030 10:58:20.680"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.646" endtime="20201030 10:58:20.680"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.644" endtime="20201030 10:58:20.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.642" endtime="20201030 10:58:20.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:20.685" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:20.684" endtime="20201030 10:58:20.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.682" endtime="20201030 10:58:20.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.642" endtime="20201030 10:58:20.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.641" endtime="20201030 10:58:20.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.687" endtime="20201030 10:58:20.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.640" endtime="20201030 10:58:20.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.690" endtime="20201030 10:58:20.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.638" endtime="20201030 10:58:20.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.469" endtime="20201030 10:58:20.692"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.698" endtime="20201030 10:58:20.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.697" endtime="20201030 10:58:20.718"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.731" endtime="20201030 10:58:20.756"></status>
</kw>
<msg timestamp="20201030 10:58:20.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.730" endtime="20201030 10:58:20.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.759" endtime="20201030 10:58:20.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:20.764" endtime="20201030 10:58:20.769"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.727" endtime="20201030 10:58:20.772"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.725" endtime="20201030 10:58:20.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.724" endtime="20201030 10:58:20.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:20.782" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:20.781" endtime="20201030 10:58:20.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.776" endtime="20201030 10:58:20.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.723" endtime="20201030 10:58:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.722" endtime="20201030 10:58:20.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.785" endtime="20201030 10:58:20.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.721" endtime="20201030 10:58:20.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.719" endtime="20201030 10:58:20.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.696" endtime="20201030 10:58:20.791"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.809" endtime="20201030 10:59:02.096"></status>
</kw>
<msg timestamp="20201030 10:59:02.098" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 0', 'msg': ['sleep_jitter 0\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 10:58:20.806" endtime="20201030 10:59:02.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 0', 'msg': ['sleep_jitter 0\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 10:59:02.100" endtime="20201030 10:59:02.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.125" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 10:59:02.121" endtime="20201030 10:59:02.125"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.801" endtime="20201030 10:59:02.127"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.797" endtime="20201030 10:59:02.128"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:20.793" endtime="20201030 10:59:02.129"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 10:58:20.693" endtime="20201030 10:59:02.132" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.149" endtime="20201030 10:59:02.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.146" endtime="20201030 10:59:02.172"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.201" endtime="20201030 10:59:02.223"></status>
</kw>
<msg timestamp="20201030 10:59:02.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.195" endtime="20201030 10:59:02.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.225" endtime="20201030 10:59:02.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.229" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:02.227" endtime="20201030 10:59:02.230"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:02.190" endtime="20201030 10:59:02.230"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:02.185" endtime="20201030 10:59:02.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.183" endtime="20201030 10:59:02.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:02.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:02.234" endtime="20201030 10:59:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.232" endtime="20201030 10:59:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.181" endtime="20201030 10:59:02.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.180" endtime="20201030 10:59:02.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.236" endtime="20201030 10:59:02.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.177" endtime="20201030 10:59:02.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.173" endtime="20201030 10:59:02.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.144" endtime="20201030 10:59:02.239"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.248" endtime="20201030 10:59:43.534"></status>
</kw>
<msg timestamp="20201030 10:59:43.535" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 5', 'msg': ['sleep_jitter 5\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 10:59:02.246" endtime="20201030 10:59:43.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.549" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 5', 'msg': ['sleep_jitter 5\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 10:59:43.537" endtime="20201030 10:59:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.555" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 10:59:43.551" endtime="20201030 10:59:43.556"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:02.244" endtime="20201030 10:59:43.557"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:02.242" endtime="20201030 10:59:43.558"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:02.240" endtime="20201030 10:59:43.560"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 10:59:02.139" endtime="20201030 10:59:43.561" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.576" endtime="20201030 10:59:43.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.574" endtime="20201030 10:59:43.599"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.628" endtime="20201030 10:59:43.655"></status>
</kw>
<msg timestamp="20201030 10:59:43.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.625" endtime="20201030 10:59:43.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.657" endtime="20201030 10:59:43.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.662" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:43.660" endtime="20201030 10:59:43.662"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:43.619" endtime="20201030 10:59:43.663"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:43.612" endtime="20201030 10:59:43.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.610" endtime="20201030 10:59:43.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:43.667" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:43.666" endtime="20201030 10:59:43.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.664" endtime="20201030 10:59:43.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.608" endtime="20201030 10:59:43.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.607" endtime="20201030 10:59:43.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.669" endtime="20201030 10:59:43.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.604" endtime="20201030 10:59:43.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.601" endtime="20201030 10:59:43.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.571" endtime="20201030 10:59:43.672"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.681" endtime="20201030 11:00:24.967"></status>
</kw>
<msg timestamp="20201030 11:00:24.968" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 10', 'msg': ['sleep_jitter 10\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 10:59:43.679" endtime="20201030 11:00:24.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 10', 'msg': ['sleep_jitter 10\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:00:24.971" endtime="20201030 11:00:24.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.991" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:00:24.987" endtime="20201030 11:00:24.992"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:43.676" endtime="20201030 11:00:24.993"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:43.674" endtime="20201030 11:00:24.995"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:43.673" endtime="20201030 11:00:24.996"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 10:59:43.565" endtime="20201030 11:00:24.997" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:25.013" endtime="20201030 11:00:25.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.010" endtime="20201030 11:00:25.036"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.064" endtime="20201030 11:00:25.091"></status>
</kw>
<msg timestamp="20201030 11:00:25.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.061" endtime="20201030 11:00:25.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.094" endtime="20201030 11:00:25.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.098" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:25.096" endtime="20201030 11:00:25.099"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:25.056" endtime="20201030 11:00:25.099"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:25.051" endtime="20201030 11:00:25.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.049" endtime="20201030 11:00:25.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:25.104" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:25.103" endtime="20201030 11:00:25.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.101" endtime="20201030 11:00:25.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.047" endtime="20201030 11:00:25.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.043" endtime="20201030 11:00:25.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.106" endtime="20201030 11:00:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.040" endtime="20201030 11:00:25.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.037" endtime="20201030 11:00:25.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.007" endtime="20201030 11:00:25.108"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.117" endtime="20201030 11:01:06.398"></status>
</kw>
<msg timestamp="20201030 11:01:06.399" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:00:25.115" endtime="20201030 11:01:06.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:06.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:01:06.402" endtime="20201030 11:01:06.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:01:06.419" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:01:06.415" endtime="20201030 11:01:06.420"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:25.113" endtime="20201030 11:01:06.422"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:25.111" endtime="20201030 11:01:06.423"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:25.109" endtime="20201030 11:01:06.424"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:00:25.001" endtime="20201030 11:01:06.426" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:01:06.442" endtime="20201030 11:01:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.439" endtime="20201030 11:01:06.467"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:06.486" endtime="20201030 11:01:06.507"></status>
</kw>
<msg timestamp="20201030 11:01:06.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:06.484" endtime="20201030 11:01:06.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:06.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:06.508" endtime="20201030 11:01:06.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:01:06.513" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:01:06.511" endtime="20201030 11:01:06.513"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:06.482" endtime="20201030 11:01:06.513"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:06.479" endtime="20201030 11:01:06.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.478" endtime="20201030 11:01:06.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:01:06.518" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:01:06.517" endtime="20201030 11:01:06.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.515" endtime="20201030 11:01:06.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.476" endtime="20201030 11:01:06.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.475" endtime="20201030 11:01:06.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:06.520" endtime="20201030 11:01:06.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.472" endtime="20201030 11:01:06.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.469" endtime="20201030 11:01:06.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:06.435" endtime="20201030 11:01:06.522"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:06.531" endtime="20201030 11:01:47.813"></status>
</kw>
<msg timestamp="20201030 11:01:47.814" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 20', 'msg': ['sleep_jitter 20\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:01:06.530" endtime="20201030 11:01:47.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:47.827" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 20', 'msg': ['sleep_jitter 20\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:01:47.816" endtime="20201030 11:01:47.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:01:47.834" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:01:47.830" endtime="20201030 11:01:47.834"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:06.527" endtime="20201030 11:01:47.836"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:06.525" endtime="20201030 11:01:47.837"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:06.523" endtime="20201030 11:01:47.838"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:01:06.430" endtime="20201030 11:01:47.840" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:01:47.857" endtime="20201030 11:01:47.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.854" endtime="20201030 11:01:47.880"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:47.907" endtime="20201030 11:01:47.933"></status>
</kw>
<msg timestamp="20201030 11:01:47.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:47.904" endtime="20201030 11:01:47.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:47.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:47.936" endtime="20201030 11:01:47.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:01:47.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:01:47.941" endtime="20201030 11:01:47.946"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:47.898" endtime="20201030 11:01:47.947"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:47.893" endtime="20201030 11:01:47.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.891" endtime="20201030 11:01:47.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:01:47.956" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:01:47.955" endtime="20201030 11:01:47.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.951" endtime="20201030 11:01:47.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.889" endtime="20201030 11:01:47.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.887" endtime="20201030 11:01:47.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:47.960" endtime="20201030 11:01:47.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.885" endtime="20201030 11:01:47.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.881" endtime="20201030 11:01:47.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:47.848" endtime="20201030 11:01:47.965"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:47.973" endtime="20201030 11:02:29.246"></status>
</kw>
<msg timestamp="20201030 11:02:29.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 25', 'msg': ['sleep_jitter 25\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:01:47.972" endtime="20201030 11:02:29.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:02:29.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 25', 'msg': ['sleep_jitter 25\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:02:29.249" endtime="20201030 11:02:29.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:02:29.269" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:02:29.263" endtime="20201030 11:02:29.270"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:47.969" endtime="20201030 11:02:29.271"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:47.967" endtime="20201030 11:02:29.272"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:47.965" endtime="20201030 11:02:29.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:01:47.843" endtime="20201030 11:02:29.275" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 10:58:19.427" endtime="20201030 11:02:29.291"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="FAIL" starttime="20201030 10:56:22.323" endtime="20201030 11:02:29.335"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="7">Critical Tests</stat>
<stat pass="11" fail="7">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="11" fail="7">APP_tests_xtimer_benchmarks</stat>
<stat pass="11" fail="7">BOARD_esp32-wroom-32</stat>
<stat pass="9" fail="1">dev</stat>
</tag>
<suite>
<stat pass="11" fail="7" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="1" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="0" fail="6" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
