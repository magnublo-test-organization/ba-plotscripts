<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 14:27:56.880" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:57.453" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:57.461" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:27:58.480" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:57.451" endtime="20201010 14:27:58.481"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.484" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:27:58.482" endtime="20201010 14:27:58.484"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.450" endtime="20201010 14:27:58.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:58.487" endtime="20201010 14:27:58.670"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.485" endtime="20201010 14:27:58.671"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.684" endtime="20201010 14:27:58.704"></status>
</kw>
<msg timestamp="20201010 14:27:58.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.682" endtime="20201010 14:27:58.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.706" endtime="20201010 14:27:58.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.710" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:58.708" endtime="20201010 14:27:58.711"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.679" endtime="20201010 14:27:58.711"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.677" endtime="20201010 14:27:58.712"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.676" endtime="20201010 14:27:58.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:58.716" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:58.715" endtime="20201010 14:27:58.716"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.713" endtime="20201010 14:27:58.717"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.675" endtime="20201010 14:27:58.717"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.674" endtime="20201010 14:27:58.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.718" endtime="20201010 14:27:58.719"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.673" endtime="20201010 14:27:58.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.721" endtime="20201010 14:27:58.723"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.671" endtime="20201010 14:27:58.723"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.448" endtime="20201010 14:27:58.723"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:58.730" endtime="20201010 14:27:58.750"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.729" endtime="20201010 14:27:58.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.765" endtime="20201010 14:27:58.782"></status>
</kw>
<msg timestamp="20201010 14:27:58.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.763" endtime="20201010 14:27:58.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.784" endtime="20201010 14:27:58.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:58.786" endtime="20201010 14:27:58.789"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.760" endtime="20201010 14:27:58.789"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.757" endtime="20201010 14:27:58.790"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.755" endtime="20201010 14:27:58.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:58.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:58.793" endtime="20201010 14:27:58.794"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.791" endtime="20201010 14:27:58.794"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.755" endtime="20201010 14:27:58.794"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.754" endtime="20201010 14:27:58.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.795" endtime="20201010 14:27:58.797"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.753" endtime="20201010 14:27:58.797"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.751" endtime="20201010 14:27:58.798"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.727" endtime="20201010 14:27:58.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.805" endtime="20201010 14:27:58.818"></status>
</kw>
<msg timestamp="20201010 14:27:58.818" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.804" endtime="20201010 14:27:58.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.821" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.819" endtime="20201010 14:27:58.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.822" endtime="20201010 14:27:58.823"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.801" endtime="20201010 14:27:58.824"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.799" endtime="20201010 14:27:58.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.829" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 14:27:58.828" endtime="20201010 14:27:58.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.831" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201010 14:27:58.830" endtime="20201010 14:27:58.831"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.825" endtime="20201010 14:27:58.832"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:27:58.724" endtime="20201010 14:27:58.832" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:56.992" endtime="20201010 14:27:58.835"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.886" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:58.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:27:59.885" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:58.885" endtime="20201010 14:27:59.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.891" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:27:59.888" endtime="20201010 14:27:59.892"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.883" endtime="20201010 14:27:59.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:59.897" endtime="20201010 14:28:00.194"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.894" endtime="20201010 14:28:00.195"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.207" endtime="20201010 14:28:00.227"></status>
</kw>
<msg timestamp="20201010 14:28:00.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.206" endtime="20201010 14:28:00.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.229" endtime="20201010 14:28:00.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.231" endtime="20201010 14:28:00.233"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.203" endtime="20201010 14:28:00.234"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.201" endtime="20201010 14:28:00.234"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.200" endtime="20201010 14:28:00.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.238" endtime="20201010 14:28:00.239"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.236" endtime="20201010 14:28:00.239"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.199" endtime="20201010 14:28:00.239"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.198" endtime="20201010 14:28:00.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.240" endtime="20201010 14:28:00.242"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.197" endtime="20201010 14:28:00.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.243" endtime="20201010 14:28:00.244"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.196" endtime="20201010 14:28:00.245"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.882" endtime="20201010 14:28:00.245"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:00.252" endtime="20201010 14:28:00.271"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.249" endtime="20201010 14:28:00.272"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.284" endtime="20201010 14:28:00.300"></status>
</kw>
<msg timestamp="20201010 14:28:00.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.283" endtime="20201010 14:28:00.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.303" endtime="20201010 14:28:00.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.308" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.306" endtime="20201010 14:28:00.308"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.280" endtime="20201010 14:28:00.309"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.278" endtime="20201010 14:28:00.309"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.277" endtime="20201010 14:28:00.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.313" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.312" endtime="20201010 14:28:00.314"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.310" endtime="20201010 14:28:00.314"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.276" endtime="20201010 14:28:00.314"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.276" endtime="20201010 14:28:00.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.315" endtime="20201010 14:28:00.316"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.274" endtime="20201010 14:28:00.317"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.272" endtime="20201010 14:28:00.317"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.248" endtime="20201010 14:28:00.318"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.327" endtime="20201010 14:28:05.847"></status>
</kw>
<msg timestamp="20201010 14:28:05.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.325" endtime="20201010 14:28:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:05.850" endtime="20201010 14:28:05.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:05.855" endtime="20201010 14:28:05.858"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.322" endtime="20201010 14:28:05.859"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.320" endtime="20201010 14:28:05.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:05.865" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:05.862" endtime="20201010 14:28:05.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:05.924" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 14:28:05.867" endtime="20201010 14:28:05.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.932" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:05.930" endtime="20201010 14:28:05.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.936" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 14:28:05.934" endtime="20201010 14:28:05.937"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.926" endtime="20201010 14:28:05.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.945" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:05.943" endtime="20201010 14:28:05.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.949" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:05.947" endtime="20201010 14:28:05.949"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.939" endtime="20201010 14:28:05.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:05.965" endtime="20201010 14:28:06.267"></status>
</kw>
<msg timestamp="20201010 14:28:06.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.565618694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.665602, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201010 14:28:05.961" endtime="20201010 14:28:06.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.565618694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.665602, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201010 14:28:06.271" endtime="20201010 14:28:06.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.279" endtime="20201010 14:28:06.281"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.955" endtime="20201010 14:28:06.281"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.952" endtime="20201010 14:28:06.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:06.286" level="INFO">${FILTERED} = [{'diff': 0.09998330600000005}, {'diff': 0.10000406900000003}, {'diff': 0.10000555500000008}, {'diff': 0.10000551299999993}, {'diff': 0.10000598599999999}, {'diff': 0.10000633299999984}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:06.283" endtime="20201010 14:28:06.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:06.290" level="INFO">${RESULT} = {'diff': [0.09998330600000005, 0.10000406900000003, 0.10000555500000008, 0.10000551299999993, 0.10000598599999999, 0.10000633299999984, 0.10000352800000001, 0.10000429100000008, 0.10000709699999999, 0...</msg>
<status status="PASS" starttime="20201010 14:28:06.287" endtime="20201010 14:28:06.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.294" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:06.293" endtime="20201010 14:28:06.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.297" level="INFO">VALUE: [0.09998330600000005, 0.10000406900000003, 0.10000555500000008, 0.10000551299999993, 0.10000598599999999, 0.10000633299999984, 0.10000352800000001, 0.10000429100000008, 0.10000709699999999, 0.10000427800000011, 0.10000377800000004, 0.10000445800000013, 0.10000362500000004, 0.10000636100000015, 0.10000567999999999, 0.10000347299999968, 0.1000038609999998, 0.10000693100000024, 0.10000626400000012, 0.10000351299999988, 0.1000053620000001, 0.10000477699999966, 0.10000708299999994, 0.10000447199999973, 0.1000048050000002, 0.10000672299999991, 0.10000709699999977, 0.10000541699999976, 0.10000530499999982, 0.10000322200000022, 0.100005291, 0.10000566700000002, 0.10000362499999982, 0.10000705599999993, 0.10000365299999991, 0.10000418, 0.10000344400000039, 0.10000607000000006, 0.1000037779999996, 0.10000641699999946, 0.10000418100000008, 0.10000562499999965, 0.10000607000000006, 0.10000461100000013, 0.10000340199999957, 0.10000379199999987, 0.10000484700000012, 0.10000566699999958, 0.10000554099999981, 0.10000520799999979]</msg>
<status status="PASS" starttime="20201010 14:28:06.296" endtime="20201010 14:28:06.297"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.291" endtime="20201010 14:28:06.298"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.318" endtime="20201010 14:28:06.298"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:00.246" endtime="20201010 14:28:06.301" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:06.310" endtime="20201010 14:28:06.329"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.309" endtime="20201010 14:28:06.330"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.343" endtime="20201010 14:28:06.361"></status>
</kw>
<msg timestamp="20201010 14:28:06.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.341" endtime="20201010 14:28:06.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.363" endtime="20201010 14:28:06.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.367" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:06.365" endtime="20201010 14:28:06.368"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.339" endtime="20201010 14:28:06.368"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.336" endtime="20201010 14:28:06.369"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.335" endtime="20201010 14:28:06.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:06.373" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:06.372" endtime="20201010 14:28:06.373"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.370" endtime="20201010 14:28:06.374"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.334" endtime="20201010 14:28:06.374"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.334" endtime="20201010 14:28:06.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.375" endtime="20201010 14:28:06.376"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.332" endtime="20201010 14:28:06.377"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.331" endtime="20201010 14:28:06.377"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.307" endtime="20201010 14:28:06.377"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.388" endtime="20201010 14:28:11.904"></status>
</kw>
<msg timestamp="20201010 14:28:11.905" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:06.386" endtime="20201010 14:28:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:11.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:11.908" endtime="20201010 14:28:11.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:11.913" endtime="20201010 14:28:11.916"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.383" endtime="20201010 14:28:11.917"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.380" endtime="20201010 14:28:11.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:11.923" level="INFO">${RESULT} = {'interval': [56207, 42110, 19271, 94738, 34690], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:11.920" endtime="20201010 14:28:11.924"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:11.934" level="INFO">${interval} = [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:11.925" endtime="20201010 14:28:11.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:11.941" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:11.939" endtime="20201010 14:28:11.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:11.945" level="INFO">VALUE: [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:11.943" endtime="20201010 14:28:11.946"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:11.935" endtime="20201010 14:28:11.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:11.954" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:11.952" endtime="20201010 14:28:11.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:11.959" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:11.957" endtime="20201010 14:28:11.959"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:11.948" endtime="20201010 14:28:11.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:11.973" endtime="20201010 14:28:12.274"></status>
</kw>
<msg timestamp="20201010 14:28:12.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567350903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667358583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:11.970" endtime="20201010 14:28:12.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567350903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667358583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:12.278" endtime="20201010 14:28:12.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.286" endtime="20201010 14:28:12.288"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:11.965" endtime="20201010 14:28:12.288"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:11.961" endtime="20201010 14:28:12.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:12.292" level="INFO">${FILTERED} = [{'diff': 0.10000767999999993}, {'diff': 0.10000815299999999}, {'diff': 0.10002320799999997}, {'diff': 0.09998813900000003}, {'diff': 0.10000584700000004}, {'diff': 0.10000237499999987}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:12.289" endtime="20201010 14:28:12.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:12.297" level="INFO">${RESULT} = {'diff': [0.10000767999999993, 0.10000815299999999, 0.10002320799999997, 0.09998813900000003, 0.10000584700000004, 0.10000237499999987, 0.10000647299999987, 0.10000594399999985, 0.100003222, 0.1000046...</msg>
<status status="PASS" starttime="20201010 14:28:12.293" endtime="20201010 14:28:12.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.301" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:12.300" endtime="20201010 14:28:12.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.304" level="INFO">VALUE: [0.10000767999999993, 0.10000815299999999, 0.10002320799999997, 0.09998813900000003, 0.10000584700000004, 0.10000237499999987, 0.10000647299999987, 0.10000594399999985, 0.100003222, 0.1000046670000001, 0.1000049999999999, 0.100005444, 0.10000329099999994, 0.10000681899999986, 0.10000529199999986, 0.10000588899999974, 0.10000411099999962, 0.10000680500000003, 0.10000381900000033, 0.10000702800000028, 0.10000217999999972, 0.10000422199999992, 0.10000905500000012, 0.10000577799999988, 0.10000223599999991, 0.10000790299999984, 0.10000695800000026, 0.10000288899999976, 0.10000498600000007, 0.10000716700000023, 0.10000411100000006, 0.10000666699999972, 0.10000341699999993, 0.10000327799999997, 0.10000345799999977, 0.10000558299999973, 0.10000561200000035, 0.10000683300000013, 0.10000447200000018, 0.10000467999999962, 0.10000322300000075, 0.10000780599999981, 0.10000347200000004, 0.10000676399999975, 0.10000355500000069, 0.10000718000000042, 0.10000347200000004, 0.10000545900000013, 0.10000623600000047, 0.10000479200000001]</msg>
<status status="PASS" starttime="20201010 14:28:12.302" endtime="20201010 14:28:12.304"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.298" endtime="20201010 14:28:12.304"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.378" endtime="20201010 14:28:12.305"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:06.304" endtime="20201010 14:28:12.308" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:12.317" endtime="20201010 14:28:12.336"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.315" endtime="20201010 14:28:12.337"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.350" endtime="20201010 14:28:12.368"></status>
</kw>
<msg timestamp="20201010 14:28:12.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.348" endtime="20201010 14:28:12.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.370" endtime="20201010 14:28:12.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.375" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:12.372" endtime="20201010 14:28:12.375"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.346" endtime="20201010 14:28:12.376"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.343" endtime="20201010 14:28:12.376"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.342" endtime="20201010 14:28:12.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:12.380" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:12.380" endtime="20201010 14:28:12.381"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.377" endtime="20201010 14:28:12.381"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.341" endtime="20201010 14:28:12.381"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.340" endtime="20201010 14:28:12.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.382" endtime="20201010 14:28:12.384"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.339" endtime="20201010 14:28:12.384"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.337" endtime="20201010 14:28:12.384"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.314" endtime="20201010 14:28:12.385"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.394" endtime="20201010 14:28:17.920"></status>
</kw>
<msg timestamp="20201010 14:28:17.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:12.392" endtime="20201010 14:28:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:17.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:17.923" endtime="20201010 14:28:17.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:17.929" endtime="20201010 14:28:17.932"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.390" endtime="20201010 14:28:17.933"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.388" endtime="20201010 14:28:17.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:17.939" level="INFO">${RESULT} = {'interval': [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:17.936" endtime="20201010 14:28:17.940"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:17.950" level="INFO">${interval} = [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:17.941" endtime="20201010 14:28:17.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:17.957" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:17.955" endtime="20201010 14:28:17.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:17.962" level="INFO">VALUE: [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:17.960" endtime="20201010 14:28:17.962"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:17.952" endtime="20201010 14:28:17.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:17.970" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:17.968" endtime="20201010 14:28:17.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:17.976" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:17.974" endtime="20201010 14:28:17.977"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:17.965" endtime="20201010 14:28:17.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:17.993" endtime="20201010 14:28:18.302"></status>
</kw>
<msg timestamp="20201010 14:28:18.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.580092569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.680098069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:17.988" endtime="20201010 14:28:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.580092569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.680098069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:18.306" endtime="20201010 14:28:18.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.314" endtime="20201010 14:28:18.315"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:17.983" endtime="20201010 14:28:18.316"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:17.979" endtime="20201010 14:28:18.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:18.320" level="INFO">${FILTERED} = [{'diff': 0.10000550000000008}, {'diff': 0.10000327799999997}, {'diff': 0.10000484700000001}, {'diff': 0.100004486}, {'diff': 0.10000405599999995}, {'diff': 0.10000347200000004}, {'diff': 0.1000067919...</msg>
<status status="PASS" starttime="20201010 14:28:18.317" endtime="20201010 14:28:18.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:18.324" level="INFO">${RESULT} = {'diff': [0.10000550000000008, 0.10000327799999997, 0.10000484700000001, 0.100004486, 0.10000405599999995, 0.10000347200000004, 0.10000679199999984, 0.10000480600000006, 0.10000477699999988, 0.1000036...</msg>
<status status="PASS" starttime="20201010 14:28:18.321" endtime="20201010 14:28:18.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.328" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:18.327" endtime="20201010 14:28:18.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.330" level="INFO">VALUE: [0.10000550000000008, 0.10000327799999997, 0.10000484700000001, 0.100004486, 0.10000405599999995, 0.10000347200000004, 0.10000679199999984, 0.10000480600000006, 0.10000477699999988, 0.10000361200000007, 0.10000490300000009, 0.100007972, 0.10000611100000012, 0.10000600000000004, 0.1000048469999999, 0.10000229100000002, 0.10000516599999987, 0.10000441700000007, 0.10000584699999981, 0.10000470800000016, 0.10000426400000029, 0.10000465300000005, 0.10000422199999992, 0.10000636099999971, 0.10000702799999983, 0.10000683400000021, 0.10000236100000004, 0.100006445, 0.10000447199999973, 0.10000612500000017, 0.10000425000000002, 0.10000333399999972, 0.10000702799999983, 0.10000497200000025, 0.1000026110000003, 0.10000420800000054, 0.10000430499999968, 0.10001266599999958, 0.09999972299999982, 0.10000672299999991, 0.10000122200000039, 0.10000582000000069, 0.10000666699999972, 0.10000549999999997, 0.100005597, 0.10000515200000049, 0.10000227799999983, 0.1000046809999997, 0.10000645800000019, 0.1000045140000001]</msg>
<status status="PASS" starttime="20201010 14:28:18.329" endtime="20201010 14:28:18.331"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.325" endtime="20201010 14:28:18.331"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.386" endtime="20201010 14:28:18.331"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:12.311" endtime="20201010 14:28:18.332" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:18.339" endtime="20201010 14:28:18.359"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.338" endtime="20201010 14:28:18.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.374" endtime="20201010 14:28:18.391"></status>
</kw>
<msg timestamp="20201010 14:28:18.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.373" endtime="20201010 14:28:18.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.392" endtime="20201010 14:28:18.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.397" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:18.395" endtime="20201010 14:28:18.398"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.370" endtime="20201010 14:28:18.398"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.368" endtime="20201010 14:28:18.399"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.367" endtime="20201010 14:28:18.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:18.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:18.402" endtime="20201010 14:28:18.403"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.400" endtime="20201010 14:28:18.403"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.366" endtime="20201010 14:28:18.403"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.365" endtime="20201010 14:28:18.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.404" endtime="20201010 14:28:18.406"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.362" endtime="20201010 14:28:18.406"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.360" endtime="20201010 14:28:18.407"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.337" endtime="20201010 14:28:18.407"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.416" endtime="20201010 14:28:23.955"></status>
</kw>
<msg timestamp="20201010 14:28:23.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:18.414" endtime="20201010 14:28:23.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:23.961" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:23.958" endtime="20201010 14:28:23.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:23.964" endtime="20201010 14:28:23.967"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.412" endtime="20201010 14:28:23.968"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.410" endtime="20201010 14:28:23.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:23.975" level="INFO">${RESULT} = {'interval': [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:23.971" endtime="20201010 14:28:23.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:23.985" level="INFO">${interval} = [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:23.977" endtime="20201010 14:28:23.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:23.993" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:23.991" endtime="20201010 14:28:23.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:23.997" level="INFO">VALUE: [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:23.995" endtime="20201010 14:28:23.998"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:23.987" endtime="20201010 14:28:23.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.008" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:24.004" endtime="20201010 14:28:24.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.012" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:24.011" endtime="20201010 14:28:24.013"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.000" endtime="20201010 14:28:24.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.024" endtime="20201010 14:28:24.321"></status>
</kw>
<msg timestamp="20201010 14:28:24.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.579680292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.679684667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.022" endtime="20201010 14:28:24.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.579680292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.679684667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.325" endtime="20201010 14:28:24.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.333" endtime="20201010 14:28:24.334"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.019" endtime="20201010 14:28:24.335"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.015" endtime="20201010 14:28:24.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:24.339" level="INFO">${FILTERED} = [{'diff': 0.10000437499999992}, {'diff': 0.10001554200000007}, {'diff': 0.09997483299999999}, {'diff': 0.10000456899999999}, {'diff': 0.10000516700000006}, {'diff': 0.10000547299999996}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:24.336" endtime="20201010 14:28:24.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:24.343" level="INFO">${RESULT} = {'diff': [0.10000437499999992, 0.10001554200000007, 0.09997483299999999, 0.10000456899999999, 0.10000516700000006, 0.10000547299999996, 0.10000447199999996, 0.10000538900000011, 0.10000455499999994, 0...</msg>
<status status="PASS" starttime="20201010 14:28:24.340" endtime="20201010 14:28:24.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.347" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:24.346" endtime="20201010 14:28:24.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.350" level="INFO">VALUE: [0.10000437499999992, 0.10001554200000007, 0.09997483299999999, 0.10000456899999999, 0.10000516700000006, 0.10000547299999996, 0.10000447199999996, 0.10000538900000011, 0.10000455499999994, 0.1000036660000001, 0.10000544500000008, 0.10000811099999996, 0.10000405499999987, 0.10000677800000002, 0.1000051249999998, 0.10000245799999963, 0.10000515300000012, 0.1000067360000001, 0.10000580599999997, 0.10000498600000007, 0.10000586100000008, 0.10000404100000004, 0.10000386100000025, 0.10001409699999986, 0.0999967780000004, 0.10002738900000008, 0.09998476400000023, 0.10000602799999969, 0.10000681999999994, 0.10000402799999986, 0.10000422199999992, 0.10000538900000011, 0.10000506900000028, 0.10000530499999982, 0.10000577799999988, 0.10000506999999992, 0.10000516699999995, 0.10000475000000009, 0.10000379199999987, 0.10000227700000064, 0.10000799999999987, 0.10000373599999968, 0.10000694400000043, 0.10000755600000044, 0.10000540299999994, 0.10000438900000042, 0.10000480600000028, 0.10000686099999978, 0.10000276400000008, 0.10000459699999986]</msg>
<status status="PASS" starttime="20201010 14:28:24.348" endtime="20201010 14:28:24.351"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.344" endtime="20201010 14:28:24.351"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.408" endtime="20201010 14:28:24.351"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:18.334" endtime="20201010 14:28:24.352" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:24.359" endtime="20201010 14:28:24.379"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.358" endtime="20201010 14:28:24.379"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.392" endtime="20201010 14:28:24.410"></status>
</kw>
<msg timestamp="20201010 14:28:24.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.390" endtime="20201010 14:28:24.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.411" endtime="20201010 14:28:24.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.416" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:24.414" endtime="20201010 14:28:24.416"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.388" endtime="20201010 14:28:24.417"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.386" endtime="20201010 14:28:24.418"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.384" endtime="20201010 14:28:24.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:24.422" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:24.421" endtime="20201010 14:28:24.422"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.419" endtime="20201010 14:28:24.422"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.383" endtime="20201010 14:28:24.422"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.383" endtime="20201010 14:28:24.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.423" endtime="20201010 14:28:24.425"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.382" endtime="20201010 14:28:24.425"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.380" endtime="20201010 14:28:24.426"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.356" endtime="20201010 14:28:24.426"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.436" endtime="20201010 14:28:29.983"></status>
</kw>
<msg timestamp="20201010 14:28:29.984" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:24.433" endtime="20201010 14:28:29.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:29.990" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:29.986" endtime="20201010 14:28:29.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:29.992" endtime="20201010 14:28:29.996"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.431" endtime="20201010 14:28:29.997"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.429" endtime="20201010 14:28:29.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.005" level="INFO">${RESULT} = {'interval': [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:30.000" endtime="20201010 14:28:30.005"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:30.016" level="INFO">${interval} = [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.007" endtime="20201010 14:28:30.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.024" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:30.021" endtime="20201010 14:28:30.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.028" level="INFO">VALUE: [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.026" endtime="20201010 14:28:30.029"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.017" endtime="20201010 14:28:30.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.037" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:30.035" endtime="20201010 14:28:30.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.041" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:30.039" endtime="20201010 14:28:30.041"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.031" endtime="20201010 14:28:30.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.060" endtime="20201010 14:28:30.365"></status>
</kw>
<msg timestamp="20201010 14:28:30.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.590719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.690726125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.053" endtime="20201010 14:28:30.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.590719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.690726125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.369" endtime="20201010 14:28:30.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.377" endtime="20201010 14:28:30.378"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.047" endtime="20201010 14:28:30.379"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.044" endtime="20201010 14:28:30.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:30.383" level="INFO">${FILTERED} = [{'diff': 0.10000673599999998}, {'diff': 0.10000666700000005}, {'diff': 0.10000436099999999}, {'diff': 0.10000615300000004}, {'diff': 0.10000697299999994}, {'diff': 0.1000022089999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 14:28:30.380" endtime="20201010 14:28:30.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.388" level="INFO">${RESULT} = {'diff': [0.10000673599999998, 0.10000666700000005, 0.10000436099999999, 0.10000615300000004, 0.10000697299999994, 0.1000022089999999, 0.10000543100000003, 0.10000522200000006, 0.10000241599999993, 0....</msg>
<status status="PASS" starttime="20201010 14:28:30.384" endtime="20201010 14:28:30.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.392" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:30.391" endtime="20201010 14:28:30.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.394" level="INFO">VALUE: [0.10000673599999998, 0.10000666700000005, 0.10000436099999999, 0.10000615300000004, 0.10000697299999994, 0.1000022089999999, 0.10000543100000003, 0.10000522200000006, 0.10000241599999993, 0.10000717999999997, 0.10000630500000018, 0.10000661200000005, 0.10002638899999994, 0.099981125, 0.10000705600000015, 0.10000368100000001, 0.10000604099999988, 0.10000690200000006, 0.10000323600000005, 0.10000890299999998, 0.10000573599999996, 0.10000602800000014, 0.10000381900000033, 0.10000681899999986, 0.10000624999999985, 0.1000045970000003, 0.10000123599999977, 0.10000552800000007, 0.10000795799999995, 0.10000236100000004, 0.1000080419999998, 0.1000032919999998, 0.10000600000000004, 0.1000044309999999, 0.1000049169999997, 0.10000597199999994, 0.10000702700000019, 0.10000536100000001, 0.10000673599999921, 0.10000420899999973, 0.10000593099999922, 0.10000677800000002, 0.10000325000000032, 0.10000617999999939, 0.10000422199999992, 0.10000329200000024, 0.10000459799999994, 0.1000048050000002, 0.10000384800000006, 0.10000590299999956]</msg>
<status status="PASS" starttime="20201010 14:28:30.393" endtime="20201010 14:28:30.394"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.389" endtime="20201010 14:28:30.395"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.427" endtime="20201010 14:28:30.395"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:24.354" endtime="20201010 14:28:30.396" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:30.403" endtime="20201010 14:28:30.422"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.402" endtime="20201010 14:28:30.423"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.436" endtime="20201010 14:28:30.455"></status>
</kw>
<msg timestamp="20201010 14:28:30.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.434" endtime="20201010 14:28:30.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.456" endtime="20201010 14:28:30.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.461" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:30.459" endtime="20201010 14:28:30.462"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.432" endtime="20201010 14:28:30.462"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.429" endtime="20201010 14:28:30.463"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.428" endtime="20201010 14:28:30.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:30.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:30.466" endtime="20201010 14:28:30.467"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.464" endtime="20201010 14:28:30.467"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.427" endtime="20201010 14:28:30.468"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.427" endtime="20201010 14:28:30.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.468" endtime="20201010 14:28:30.470"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.425" endtime="20201010 14:28:30.470"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.424" endtime="20201010 14:28:30.471"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.400" endtime="20201010 14:28:30.471"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.480" endtime="20201010 14:28:36.036"></status>
</kw>
<msg timestamp="20201010 14:28:36.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:30.478" endtime="20201010 14:28:36.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.043" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:36.039" endtime="20201010 14:28:36.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.045" endtime="20201010 14:28:36.049"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.476" endtime="20201010 14:28:36.050"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.474" endtime="20201010 14:28:36.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.058" level="INFO">${RESULT} = {'interval': [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264], 'focus': [...</msg>
<status status="PASS" starttime="20201010 14:28:36.052" endtime="20201010 14:28:36.058"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:36.068" level="INFO">${interval} = [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.060" endtime="20201010 14:28:36.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.075" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:36.073" endtime="20201010 14:28:36.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.080" level="INFO">VALUE: [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.078" endtime="20201010 14:28:36.080"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.070" endtime="20201010 14:28:36.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.088" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:36.086" endtime="20201010 14:28:36.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.093" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:36.091" endtime="20201010 14:28:36.093"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.083" endtime="20201010 14:28:36.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.102" endtime="20201010 14:28:36.396"></status>
</kw>
<msg timestamp="20201010 14:28:36.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.602076389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.702083681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.100" endtime="20201010 14:28:36.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.602076389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.702083681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.400" endtime="20201010 14:28:36.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.408" endtime="20201010 14:28:36.410"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.096" endtime="20201010 14:28:36.410"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.095" endtime="20201010 14:28:36.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:36.414" level="INFO">${FILTERED} = [{'diff': 0.10000729199999991}, {'diff': 0.10000470900000002}, {'diff': 0.10000237500000009}, {'diff': 0.10000540300000005}, {'diff': 0.10000429099999986}, {'diff': 0.10000426399999984}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:36.411" endtime="20201010 14:28:36.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.418" level="INFO">${RESULT} = {'diff': [0.10000729199999991, 0.10000470900000002, 0.10000237500000009, 0.10000540300000005, 0.10000429099999986, 0.10000426399999984, 0.10000794499999999, 0.10000227800000006, 0.10000540299999994, 0...</msg>
<status status="PASS" starttime="20201010 14:28:36.415" endtime="20201010 14:28:36.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.422" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:36.421" endtime="20201010 14:28:36.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.424" level="INFO">VALUE: [0.10000729199999991, 0.10000470900000002, 0.10000237500000009, 0.10000540300000005, 0.10000429099999986, 0.10000426399999984, 0.10000794499999999, 0.10000227800000006, 0.10000540299999994, 0.100007819, 0.10000768000000004, 0.10000447200000018, 0.10000624999999985, 0.10000798600000005, 0.10000350000000013, 0.10000548600000014, 0.10000597199999994, 0.10000554100000025, 0.10000468000000007, 0.10000341699999993, 0.10000415299999998, 0.1000069029999997, 0.10000697200000008, 0.10000140200000018, 0.10000456899999977, 0.10000486200000003, 0.10000612500000017, 0.100007556, 0.10000563899999992, 0.10000586100000008, 0.10000367999999993, 0.10000569400000003, 0.10000409700000024, 0.10000356900000007, 0.10000391699999955, 0.10000484799999931, 0.10000334700000035, 0.10000727799999964, 0.10000615199999974, 0.10000145800000038, 0.10000759700000028, 0.10000458299999959, 0.10000593000000002, 0.10000348600000031, 0.10000590300000045, 0.10000713900000058, 0.1000012219999995, 0.10000717999999953, 0.10000327699999989, 0.10000595900000064]</msg>
<status status="PASS" starttime="20201010 14:28:36.423" endtime="20201010 14:28:36.425"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.419" endtime="20201010 14:28:36.425"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.472" endtime="20201010 14:28:36.426"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:30.398" endtime="20201010 14:28:36.427" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:58.841" endtime="20201010 14:28:36.434"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 14:27:56.883" endtime="20201010 14:28:36.460"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
