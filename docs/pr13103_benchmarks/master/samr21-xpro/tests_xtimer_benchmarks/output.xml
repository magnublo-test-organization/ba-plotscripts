<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 10:57:37.112" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.353" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:38.370" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:40.292" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:38.349" endtime="20201030 10:57:40.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.299" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:40.295" endtime="20201030 10:57:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.346" endtime="20201030 10:57:40.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.306" endtime="20201030 10:57:40.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.303" endtime="20201030 10:57:40.639"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.671" endtime="20201030 10:57:40.690"></status>
</kw>
<msg timestamp="20201030 10:57:40.691" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.667" endtime="20201030 10:57:40.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.694" endtime="20201030 10:57:40.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.705" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:40.700" endtime="20201030 10:57:40.705"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.661" endtime="20201030 10:57:40.707"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.654" endtime="20201030 10:57:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.651" endtime="20201030 10:57:40.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:40.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:40.716" endtime="20201030 10:57:40.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.712" endtime="20201030 10:57:40.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.649" endtime="20201030 10:57:40.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.647" endtime="20201030 10:57:40.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.722" endtime="20201030 10:57:40.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.644" endtime="20201030 10:57:40.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.728" endtime="20201030 10:57:40.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.640" endtime="20201030 10:57:40.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.342" endtime="20201030 10:57:40.734"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.749" endtime="20201030 10:57:40.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.745" endtime="20201030 10:57:40.773"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.808" endtime="20201030 10:57:40.826"></status>
</kw>
<msg timestamp="20201030 10:57:40.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.805" endtime="20201030 10:57:40.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.830" endtime="20201030 10:57:40.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:40.837" endtime="20201030 10:57:40.842"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.798" endtime="20201030 10:57:40.843"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:40.791" endtime="20201030 10:57:40.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.788" endtime="20201030 10:57:40.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:40.853" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:40.852" endtime="20201030 10:57:40.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.847" endtime="20201030 10:57:40.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.786" endtime="20201030 10:57:40.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.783" endtime="20201030 10:57:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.857" endtime="20201030 10:57:40.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.779" endtime="20201030 10:57:40.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.774" endtime="20201030 10:57:40.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.743" endtime="20201030 10:57:40.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.882" endtime="20201030 10:57:40.894"></status>
</kw>
<msg timestamp="20201030 10:57:40.895" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.879" endtime="20201030 10:57:40.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.901" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.897" endtime="20201030 10:57:40.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.903" endtime="20201030 10:57:40.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.872" endtime="20201030 10:57:40.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.866" endtime="20201030 10:57:40.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.921" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:57:40.919" endtime="20201030 10:57:40.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.926" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:57:40.923" endtime="20201030 10:57:40.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.912" endtime="20201030 10:57:40.928"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:40.735" endtime="20201030 10:57:40.930" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:37.375" endtime="20201030 10:57:40.937"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.072" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:41.089" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:43.022" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:41.068" endtime="20201030 10:57:43.024"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.030" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:43.026" endtime="20201030 10:57:43.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.065" endtime="20201030 10:57:43.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.036" endtime="20201030 10:57:43.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.034" endtime="20201030 10:57:43.371"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.401" endtime="20201030 10:57:43.419"></status>
</kw>
<msg timestamp="20201030 10:57:43.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.397" endtime="20201030 10:57:43.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.423" endtime="20201030 10:57:43.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:43.429" endtime="20201030 10:57:43.434"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.391" endtime="20201030 10:57:43.436"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.386" endtime="20201030 10:57:43.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.383" endtime="20201030 10:57:43.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:43.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:43.445" endtime="20201030 10:57:43.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.440" endtime="20201030 10:57:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.381" endtime="20201030 10:57:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.379" endtime="20201030 10:57:43.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.450" endtime="20201030 10:57:43.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.376" endtime="20201030 10:57:43.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.457" endtime="20201030 10:57:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.373" endtime="20201030 10:57:43.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.062" endtime="20201030 10:57:43.463"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.476" endtime="20201030 10:57:43.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.473" endtime="20201030 10:57:43.500"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.595" endtime="20201030 10:57:43.613"></status>
</kw>
<msg timestamp="20201030 10:57:43.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.592" endtime="20201030 10:57:43.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.617" endtime="20201030 10:57:43.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:43.623" endtime="20201030 10:57:43.628"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.584" endtime="20201030 10:57:43.630"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:43.578" endtime="20201030 10:57:43.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.514" endtime="20201030 10:57:43.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:43.640" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:43.639" endtime="20201030 10:57:43.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.634" endtime="20201030 10:57:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.512" endtime="20201030 10:57:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.510" endtime="20201030 10:57:43.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.644" endtime="20201030 10:57:43.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.506" endtime="20201030 10:57:43.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.502" endtime="20201030 10:57:43.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.470" endtime="20201030 10:57:43.651"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.674" endtime="20201030 10:57:43.685"></status>
</kw>
<msg timestamp="20201030 10:57:43.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.671" endtime="20201030 10:57:43.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.690" endtime="20201030 10:57:43.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.696" endtime="20201030 10:57:43.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.663" endtime="20201030 10:57:43.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.659" endtime="20201030 10:57:43.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.721" endtime="20201030 10:57:44.074"></status>
</kw>
<msg timestamp="20201030 10:57:44.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187916333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.187932472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:43.718" endtime="20201030 10:57:44.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187916333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.187932472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:44.084" endtime="20201030 10:57:44.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.104" endtime="20201030 10:57:44.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.711" endtime="20201030 10:57:44.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.704" endtime="20201030 10:57:44.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.122" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7200000000...</msg>
<status status="PASS" starttime="20201030 10:57:44.113" endtime="20201030 10:57:44.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:44.132" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:57:44.124" endtime="20201030 10:57:44.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.142" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:44.140" endtime="20201030 10:57:44.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.149" level="INFO">VALUE: [0, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.410000000205528e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.729999999730783e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 10:57:44.145" endtime="20201030 10:57:44.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.134" endtime="20201030 10:57:44.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.655" endtime="20201030 10:57:44.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.654" endtime="20201030 10:57:44.153"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.174" endtime="20201030 10:57:44.184"></status>
</kw>
<msg timestamp="20201030 10:57:44.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.170" endtime="20201030 10:57:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.188" endtime="20201030 10:57:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.194" endtime="20201030 10:57:44.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.163" endtime="20201030 10:57:44.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.158" endtime="20201030 10:57:44.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.217" endtime="20201030 10:57:44.576"></status>
</kw>
<msg timestamp="20201030 10:57:44.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.188479847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.188480319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.214" endtime="20201030 10:57:44.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.188479847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.188480319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.588" endtime="20201030 10:57:44.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.610" endtime="20201030 10:57:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.207" endtime="20201030 10:57:44.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.202" endtime="20201030 10:57:44.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.628" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:57:44.618" endtime="20201030 10:57:44.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:44.640" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201030 10:57:44.630" endtime="20201030 10:57:44.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.650" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:44.648" endtime="20201030 10:57:44.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.656" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999095305e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:44.653" endtime="20201030 10:57:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.642" endtime="20201030 10:57:44.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.155" endtime="20201030 10:57:44.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.154" endtime="20201030 10:57:44.660"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.680" endtime="20201030 10:57:44.691"></status>
</kw>
<msg timestamp="20201030 10:57:44.692" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.677" endtime="20201030 10:57:44.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.694" endtime="20201030 10:57:44.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.701" endtime="20201030 10:57:44.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.670" endtime="20201030 10:57:44.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.665" endtime="20201030 10:57:44.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.724" endtime="20201030 10:57:45.072"></status>
</kw>
<msg timestamp="20201030 10:57:45.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.678690931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.678691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.720" endtime="20201030 10:57:45.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.678690931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.678691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.083" endtime="20201030 10:57:45.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.105" endtime="20201030 10:57:45.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.713" endtime="20201030 10:57:45.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.709" endtime="20201030 10:57:45.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.124" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:57:45.114" endtime="20201030 10:57:45.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:45.136" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:57:45.127" endtime="20201030 10:57:45.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.146" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:45.144" endtime="20201030 10:57:45.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.152" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:45.148" endtime="20201030 10:57:45.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.138" endtime="20201030 10:57:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.662" endtime="20201030 10:57:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.661" endtime="20201030 10:57:45.156"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.176" endtime="20201030 10:57:45.187"></status>
</kw>
<msg timestamp="20201030 10:57:45.188" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.173" endtime="20201030 10:57:45.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.190" endtime="20201030 10:57:45.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.196" endtime="20201030 10:57:45.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.165" endtime="20201030 10:57:45.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.161" endtime="20201030 10:57:45.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.221" endtime="20201030 10:57:45.569"></status>
</kw>
<msg timestamp="20201030 10:57:45.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176394014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.218" endtime="20201030 10:57:45.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176394014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.580" endtime="20201030 10:57:45.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.602" endtime="20201030 10:57:45.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.209" endtime="20201030 10:57:45.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.204" endtime="20201030 10:57:45.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.620" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:57:45.611" endtime="20201030 10:57:45.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:45.631" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201030 10:57:45.623" endtime="20201030 10:57:45.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.641" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:45.639" endtime="20201030 10:57:45.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.648" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:45.644" endtime="20201030 10:57:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.633" endtime="20201030 10:57:45.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.158" endtime="20201030 10:57:45.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.157" endtime="20201030 10:57:45.653"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.673" endtime="20201030 10:57:45.683"></status>
</kw>
<msg timestamp="20201030 10:57:45.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.669" endtime="20201030 10:57:45.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.687" endtime="20201030 10:57:45.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.693" endtime="20201030 10:57:45.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.662" endtime="20201030 10:57:45.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.658" endtime="20201030 10:57:45.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.716" endtime="20201030 10:57:46.062"></status>
</kw>
<msg timestamp="20201030 10:57:46.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.661117486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.661117958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.713" endtime="20201030 10:57:46.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.661117486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.661117958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.073" endtime="20201030 10:57:46.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.095" endtime="20201030 10:57:46.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.706" endtime="20201030 10:57:46.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.701" endtime="20201030 10:57:46.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.114" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:57:46.104" endtime="20201030 10:57:46.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:46.125" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07,...</msg>
<status status="PASS" starttime="20201030 10:57:46.116" endtime="20201030 10:57:46.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:46.133" endtime="20201030 10:57:46.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.141" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:46.138" endtime="20201030 10:57:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.127" endtime="20201030 10:57:46.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.654" endtime="20201030 10:57:46.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.653" endtime="20201030 10:57:46.145"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.166" endtime="20201030 10:57:46.176"></status>
</kw>
<msg timestamp="20201030 10:57:46.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.162" endtime="20201030 10:57:46.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.180" endtime="20201030 10:57:46.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.186" endtime="20201030 10:57:46.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.155" endtime="20201030 10:57:46.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.151" endtime="20201030 10:57:46.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.209" endtime="20201030 10:57:46.566"></status>
</kw>
<msg timestamp="20201030 10:57:46.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.148781583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.148782056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.206" endtime="20201030 10:57:46.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.148781583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.148782056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.578" endtime="20201030 10:57:46.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.600" endtime="20201030 10:57:46.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.199" endtime="20201030 10:57:46.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.194" endtime="20201030 10:57:46.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.620" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.410000003536197e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:57:46.609" endtime="20201030 10:57:46.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:46.630" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:57:46.622" endtime="20201030 10:57:46.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.641" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:46.638" endtime="20201030 10:57:46.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.646" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:46.643" endtime="20201030 10:57:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.632" endtime="20201030 10:57:46.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.147" endtime="20201030 10:57:46.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.146" endtime="20201030 10:57:46.650"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.670" endtime="20201030 10:57:46.681"></status>
</kw>
<msg timestamp="20201030 10:57:46.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.667" endtime="20201030 10:57:46.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.685" endtime="20201030 10:57:46.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.691" endtime="20201030 10:57:46.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.660" endtime="20201030 10:57:46.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.655" endtime="20201030 10:57:46.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.715" endtime="20201030 10:57:47.085"></status>
</kw>
<msg timestamp="20201030 10:57:47.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.632748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.632748778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.712" endtime="20201030 10:57:47.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.632748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.632748778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.096" endtime="20201030 10:57:47.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.118" endtime="20201030 10:57:47.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.703" endtime="20201030 10:57:47.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.699" endtime="20201030 10:57:47.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.136" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 10:57:47.127" endtime="20201030 10:57:47.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:47.147" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:57:47.138" endtime="20201030 10:57:47.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.157" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:47.155" endtime="20201030 10:57:47.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.163" level="INFO">VALUE: [5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:47.159" endtime="20201030 10:57:47.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.149" endtime="20201030 10:57:47.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.652" endtime="20201030 10:57:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.651" endtime="20201030 10:57:47.167"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.189" endtime="20201030 10:57:47.199"></status>
</kw>
<msg timestamp="20201030 10:57:47.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.185" endtime="20201030 10:57:47.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.203" endtime="20201030 10:57:47.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.209" endtime="20201030 10:57:47.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.178" endtime="20201030 10:57:47.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.172" endtime="20201030 10:57:47.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.232" endtime="20201030 10:57:47.601"></status>
</kw>
<msg timestamp="20201030 10:57:47.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.128471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.128471556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.229" endtime="20201030 10:57:47.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.128471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.128471556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.612" endtime="20201030 10:57:47.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.635" endtime="20201030 10:57:47.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.222" endtime="20201030 10:57:47.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.217" endtime="20201030 10:57:47.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.653" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:57:47.643" endtime="20201030 10:57:47.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:47.665" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 10:57:47.655" endtime="20201030 10:57:47.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.675" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:47.672" endtime="20201030 10:57:47.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.680" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:47.677" endtime="20201030 10:57:47.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.666" endtime="20201030 10:57:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.169" endtime="20201030 10:57:47.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.168" endtime="20201030 10:57:47.685"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.705" endtime="20201030 10:57:47.715"></status>
</kw>
<msg timestamp="20201030 10:57:47.716" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.701" endtime="20201030 10:57:47.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.719" endtime="20201030 10:57:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.725" endtime="20201030 10:57:47.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.694" endtime="20201030 10:57:47.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.690" endtime="20201030 10:57:47.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.748" endtime="20201030 10:57:48.119"></status>
</kw>
<msg timestamp="20201030 10:57:48.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.637611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.637611778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.745" endtime="20201030 10:57:48.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.637611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.637611778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.130" endtime="20201030 10:57:48.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.153" endtime="20201030 10:57:48.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.737" endtime="20201030 10:57:48.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.733" endtime="20201030 10:57:48.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.170" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201030 10:57:48.161" endtime="20201030 10:57:48.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:48.185" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 10:57:48.173" endtime="20201030 10:57:48.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.196" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:48.193" endtime="20201030 10:57:48.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.201" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:48.198" endtime="20201030 10:57:48.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.187" endtime="20201030 10:57:48.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.686" endtime="20201030 10:57:48.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.685" endtime="20201030 10:57:48.205"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.225" endtime="20201030 10:57:48.236"></status>
</kw>
<msg timestamp="20201030 10:57:48.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.222" endtime="20201030 10:57:48.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.240" endtime="20201030 10:57:48.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.246" endtime="20201030 10:57:48.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.215" endtime="20201030 10:57:48.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.211" endtime="20201030 10:57:48.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.269" endtime="20201030 10:57:48.639"></status>
</kw>
<msg timestamp="20201030 10:57:48.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.142696569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.142697042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.266" endtime="20201030 10:57:48.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.142696569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.142697042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.651" endtime="20201030 10:57:48.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.673" endtime="20201030 10:57:48.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.259" endtime="20201030 10:57:48.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.254" endtime="20201030 10:57:48.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.691" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:48.682" endtime="20201030 10:57:48.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:48.702" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 10:57:48.693" endtime="20201030 10:57:48.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.712" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:48.709" endtime="20201030 10:57:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.717" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:48.714" endtime="20201030 10:57:48.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.703" endtime="20201030 10:57:48.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.207" endtime="20201030 10:57:48.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.206" endtime="20201030 10:57:48.722"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.743" endtime="20201030 10:57:48.754"></status>
</kw>
<msg timestamp="20201030 10:57:48.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.738" endtime="20201030 10:57:48.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.757" endtime="20201030 10:57:48.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.763" endtime="20201030 10:57:48.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.731" endtime="20201030 10:57:48.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.727" endtime="20201030 10:57:48.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.786" endtime="20201030 10:57:49.147"></status>
</kw>
<msg timestamp="20201030 10:57:49.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.653569042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.653569514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.783" endtime="20201030 10:57:49.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.653569042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.653569514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.159" endtime="20201030 10:57:49.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.182" endtime="20201030 10:57:49.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.776" endtime="20201030 10:57:49.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.771" endtime="20201030 10:57:49.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.199" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.409999994654413e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201030 10:57:49.190" endtime="20201030 10:57:49.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:49.211" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:57:49.202" endtime="20201030 10:57:49.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.221" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:49.219" endtime="20201030 10:57:49.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.227" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:49.223" endtime="20201030 10:57:49.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.213" endtime="20201030 10:57:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.723" endtime="20201030 10:57:49.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.722" endtime="20201030 10:57:49.231"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.251" endtime="20201030 10:57:49.262"></status>
</kw>
<msg timestamp="20201030 10:57:49.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.248" endtime="20201030 10:57:49.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.265" endtime="20201030 10:57:49.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.272" endtime="20201030 10:57:49.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.241" endtime="20201030 10:57:49.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.236" endtime="20201030 10:57:49.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.295" endtime="20201030 10:57:49.652"></status>
</kw>
<msg timestamp="20201030 10:57:49.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.161184125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.161184597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.291" endtime="20201030 10:57:49.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.161184125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.161184597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.664" endtime="20201030 10:57:49.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.686" endtime="20201030 10:57:49.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.284" endtime="20201030 10:57:49.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.280" endtime="20201030 10:57:49.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.704" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.420000004363601e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 10:57:49.695" endtime="20201030 10:57:49.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:49.716" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201030 10:57:49.706" endtime="20201030 10:57:49.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.726" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:49.724" endtime="20201030 10:57:49.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.732" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:49.729" endtime="20201030 10:57:49.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.718" endtime="20201030 10:57:49.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.233" endtime="20201030 10:57:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.232" endtime="20201030 10:57:49.736"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.757" endtime="20201030 10:57:49.767"></status>
</kw>
<msg timestamp="20201030 10:57:49.769" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.753" endtime="20201030 10:57:49.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.775" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.771" endtime="20201030 10:57:49.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.777" endtime="20201030 10:57:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.746" endtime="20201030 10:57:49.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.742" endtime="20201030 10:57:49.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.800" endtime="20201030 10:57:50.172"></status>
</kw>
<msg timestamp="20201030 10:57:50.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.657559333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.657559806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.797" endtime="20201030 10:57:50.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.657559333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.657559806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.184" endtime="20201030 10:57:50.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.206" endtime="20201030 10:57:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.790" endtime="20201030 10:57:50.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.785" endtime="20201030 10:57:50.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.224" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:57:50.214" endtime="20201030 10:57:50.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:50.234" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:57:50.226" endtime="20201030 10:57:50.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.244" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:50.242" endtime="20201030 10:57:50.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.250" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:50.247" endtime="20201030 10:57:50.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.236" endtime="20201030 10:57:50.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.738" endtime="20201030 10:57:50.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.737" endtime="20201030 10:57:50.254"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.274" endtime="20201030 10:57:50.287"></status>
</kw>
<msg timestamp="20201030 10:57:50.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.271" endtime="20201030 10:57:50.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.290" endtime="20201030 10:57:50.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.296" endtime="20201030 10:57:50.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.264" endtime="20201030 10:57:50.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.259" endtime="20201030 10:57:50.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.320" endtime="20201030 10:57:50.691"></status>
</kw>
<msg timestamp="20201030 10:57:50.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.153941833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.153942306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.316" endtime="20201030 10:57:50.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.153941833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.153942306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.702" endtime="20201030 10:57:50.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.724" endtime="20201030 10:57:50.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.309" endtime="20201030 10:57:50.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.305" endtime="20201030 10:57:50.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.742" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:50.733" endtime="20201030 10:57:50.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:50.754" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719999...</msg>
<status status="PASS" starttime="20201030 10:57:50.744" endtime="20201030 10:57:50.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.764" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:50.762" endtime="20201030 10:57:50.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.770" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:50.766" endtime="20201030 10:57:50.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.756" endtime="20201030 10:57:50.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.256" endtime="20201030 10:57:50.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.255" endtime="20201030 10:57:50.774"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.794" endtime="20201030 10:57:50.805"></status>
</kw>
<msg timestamp="20201030 10:57:50.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.791" endtime="20201030 10:57:50.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.812" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.808" endtime="20201030 10:57:50.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.814" endtime="20201030 10:57:50.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.784" endtime="20201030 10:57:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.779" endtime="20201030 10:57:50.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.838" endtime="20201030 10:57:51.212"></status>
</kw>
<msg timestamp="20201030 10:57:51.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.663400625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.663401097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.834" endtime="20201030 10:57:51.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.663400625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.663401097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.223" endtime="20201030 10:57:51.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.245" endtime="20201030 10:57:51.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.827" endtime="20201030 10:57:51.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.822" endtime="20201030 10:57:51.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.263" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:57:51.254" endtime="20201030 10:57:51.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:51.275" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:57:51.265" endtime="20201030 10:57:51.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:51.283" endtime="20201030 10:57:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.291" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:51.287" endtime="20201030 10:57:51.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.277" endtime="20201030 10:57:51.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.776" endtime="20201030 10:57:51.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.775" endtime="20201030 10:57:51.295"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.315" endtime="20201030 10:57:51.326"></status>
</kw>
<msg timestamp="20201030 10:57:51.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.312" endtime="20201030 10:57:51.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.330" endtime="20201030 10:57:51.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.336" endtime="20201030 10:57:51.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.305" endtime="20201030 10:57:51.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.300" endtime="20201030 10:57:51.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.360" endtime="20201030 10:57:51.735"></status>
</kw>
<msg timestamp="20201030 10:57:51.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.172210722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.172211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.356" endtime="20201030 10:57:51.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.172210722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.172211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.746" endtime="20201030 10:57:51.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.769" endtime="20201030 10:57:51.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.348" endtime="20201030 10:57:51.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.344" endtime="20201030 10:57:51.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.786" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201030 10:57:51.777" endtime="20201030 10:57:51.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:51.797" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 10:57:51.788" endtime="20201030 10:57:51.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:51.805" endtime="20201030 10:57:51.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.813" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:51.809" endtime="20201030 10:57:51.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.799" endtime="20201030 10:57:51.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.297" endtime="20201030 10:57:51.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.296" endtime="20201030 10:57:51.817"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.837" endtime="20201030 10:57:51.849"></status>
</kw>
<msg timestamp="20201030 10:57:51.851" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.834" endtime="20201030 10:57:51.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.853" endtime="20201030 10:57:51.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.859" endtime="20201030 10:57:51.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.827" endtime="20201030 10:57:51.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.822" endtime="20201030 10:57:51.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.883" endtime="20201030 10:57:52.245"></status>
</kw>
<msg timestamp="20201030 10:57:52.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.683798167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.683798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.879" endtime="20201030 10:57:52.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.683798167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.683798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.256" endtime="20201030 10:57:52.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.278" endtime="20201030 10:57:52.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.872" endtime="20201030 10:57:52.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.867" endtime="20201030 10:57:52.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.296" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:57:52.286" endtime="20201030 10:57:52.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:52.308" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 10:57:52.298" endtime="20201030 10:57:52.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.318" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:52.315" endtime="20201030 10:57:52.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.323" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:52.320" endtime="20201030 10:57:52.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.309" endtime="20201030 10:57:52.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.819" endtime="20201030 10:57:52.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.818" endtime="20201030 10:57:52.328"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.348" endtime="20201030 10:57:52.359"></status>
</kw>
<msg timestamp="20201030 10:57:52.360" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.344" endtime="20201030 10:57:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.362" endtime="20201030 10:57:52.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.368" endtime="20201030 10:57:52.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.337" endtime="20201030 10:57:52.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.333" endtime="20201030 10:57:52.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.392" endtime="20201030 10:57:52.751"></status>
</kw>
<msg timestamp="20201030 10:57:52.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.197823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.197824181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.389" endtime="20201030 10:57:52.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.197823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.197824181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.762" endtime="20201030 10:57:52.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.784" endtime="20201030 10:57:52.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.382" endtime="20201030 10:57:52.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.377" endtime="20201030 10:57:52.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.802" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000017499615e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 10:57:52.793" endtime="20201030 10:57:52.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:52.818" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:57:52.804" endtime="20201030 10:57:52.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:52.826" endtime="20201030 10:57:52.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.833" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999986600033e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:52.830" endtime="20201030 10:57:52.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.820" endtime="20201030 10:57:52.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.329" endtime="20201030 10:57:52.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.329" endtime="20201030 10:57:52.838"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.858" endtime="20201030 10:57:52.868"></status>
</kw>
<msg timestamp="20201030 10:57:52.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.854" endtime="20201030 10:57:52.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.872" endtime="20201030 10:57:52.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.878" endtime="20201030 10:57:52.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.847" endtime="20201030 10:57:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.843" endtime="20201030 10:57:52.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.902" endtime="20201030 10:57:53.284"></status>
</kw>
<msg timestamp="20201030 10:57:53.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.696216875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.696217347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.898" endtime="20201030 10:57:53.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.696216875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.696217347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.295" endtime="20201030 10:57:53.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.319" endtime="20201030 10:57:53.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.891" endtime="20201030 10:57:53.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.887" endtime="20201030 10:57:53.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.339" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000017499615e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:57:53.329" endtime="20201030 10:57:53.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:53.350" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:57:53.341" endtime="20201030 10:57:53.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.360" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:53.358" endtime="20201030 10:57:53.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.366" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999982799882e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:57:53.363" endtime="20201030 10:57:53.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.352" endtime="20201030 10:57:53.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.839" endtime="20201030 10:57:53.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.839" endtime="20201030 10:57:53.371"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.391" endtime="20201030 10:57:53.403"></status>
</kw>
<msg timestamp="20201030 10:57:53.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.387" endtime="20201030 10:57:53.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.406" endtime="20201030 10:57:53.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.413" endtime="20201030 10:57:53.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.380" endtime="20201030 10:57:53.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.375" endtime="20201030 10:57:53.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.437" endtime="20201030 10:57:53.817"></status>
</kw>
<msg timestamp="20201030 10:57:53.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.196185472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.196185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.434" endtime="20201030 10:57:53.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.196185472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.196185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.828" endtime="20201030 10:57:53.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.851" endtime="20201030 10:57:53.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.426" endtime="20201030 10:57:53.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.422" endtime="20201030 10:57:53.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.869" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:57:53.859" endtime="20201030 10:57:53.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:53.880" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 10:57:53.871" endtime="20201030 10:57:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.890" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:53.888" endtime="20201030 10:57:53.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.896" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:53.893" endtime="20201030 10:57:53.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.882" endtime="20201030 10:57:53.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.372" endtime="20201030 10:57:53.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.371" endtime="20201030 10:57:53.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.652" endtime="20201030 10:57:53.901"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:43.464" endtime="20201030 10:57:53.904" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.925" endtime="20201030 10:57:53.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.922" endtime="20201030 10:57:53.949"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.982" endtime="20201030 10:57:54.003"></status>
</kw>
<msg timestamp="20201030 10:57:54.005" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.979" endtime="20201030 10:57:54.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.007" endtime="20201030 10:57:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.018" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:54.013" endtime="20201030 10:57:54.018"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:53.972" endtime="20201030 10:57:54.020"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:53.966" endtime="20201030 10:57:54.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.962" endtime="20201030 10:57:54.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:54.030" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:54.029" endtime="20201030 10:57:54.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.024" endtime="20201030 10:57:54.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.961" endtime="20201030 10:57:54.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.959" endtime="20201030 10:57:54.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.034" endtime="20201030 10:57:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.955" endtime="20201030 10:57:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.950" endtime="20201030 10:57:54.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.919" endtime="20201030 10:57:54.041"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.068" endtime="20201030 10:57:54.082"></status>
</kw>
<msg timestamp="20201030 10:57:54.084" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.064" endtime="20201030 10:57:54.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.086" endtime="20201030 10:57:54.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.093" endtime="20201030 10:57:54.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.055" endtime="20201030 10:57:54.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.049" endtime="20201030 10:57:54.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.116" endtime="20201030 10:57:54.473"></status>
</kw>
<msg timestamp="20201030 10:57:54.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134383944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134393028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.113" endtime="20201030 10:57:54.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134383944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134393028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.483" endtime="20201030 10:57:54.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.504" endtime="20201030 10:57:54.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.106" endtime="20201030 10:57:54.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.101" endtime="20201030 10:57:54.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.521" level="INFO">${RESULT} = [{'diff': 9.083999999992542e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.929999999990335e-06}, {'diff': 8.388999999997537e-06}, {'diff': 9.0969999999857e-06}, {'diff': 8.750000000001812e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:54.512" endtime="20201030 10:57:54.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:54.531" level="INFO">${OVERHEAD} = {'diff': [9.083999999992542e-06, 8.806000000000092e-06, 8.929999999990335e-06, 8.388999999997537e-06, 9.0969999999857e-06, 8.750000000001812e-06, 8.458999999988448e-06, 8.709000000023392e-06, 8.972999...</msg>
<status status="PASS" starttime="20201030 10:57:54.523" endtime="20201030 10:57:54.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.541" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:54.538" endtime="20201030 10:57:54.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.548" level="INFO">VALUE: [9.083999999992542e-06, 8.806000000000092e-06, 8.929999999990335e-06, 8.388999999997537e-06, 9.0969999999857e-06, 8.750000000001812e-06, 8.458999999988448e-06, 8.709000000023392e-06, 8.972999999995457e-06, 9.319999999979345e-06, 9.05600000000728e-06, 8.818999999993249e-06, 8.417000000010555e-06, 8.583000000006447e-06, 8.777999999987074e-06, 9.084000000020298e-06, 8.736000000009181e-06, 8.429999999975957e-06, 8.58400000000592e-06, 8.750000000001812e-06, 8.458999999988448e-06, 9.26400000000882e-06, 9.291999999994083e-06, 8.915999999997704e-06, 9.25000000001619e-06, 8.403000000017924e-06, 9.069999999999911e-06, 8.930999999989808e-06, 9.235999999995803e-06, 9.26400000000882e-06, 9.124999999998717e-06, 8.903000000004546e-06, 9.25000000001619e-06, 8.916999999997177e-06, 8.903000000004546e-06, 8.403000000017924e-06, 8.555999999992903e-06, 8.916999999997177e-06, 8.750000000001812e-06, 8.90299999997679e-06, 9.083999999992542e-06, 9.069999999999911e-06, 9.417000000011555e-06, 9.237000000023032e-06, 9.027999999994263e-06, 8.973000000023212e-06, 9.249999999988434e-06, 8.403000000017924e-06, 9.278000000001452e-06, 9.25000000001619e-06]</msg>
<status status="PASS" starttime="20201030 10:57:54.544" endtime="20201030 10:57:54.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.532" endtime="20201030 10:57:54.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.046" endtime="20201030 10:57:54.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.045" endtime="20201030 10:57:54.552"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.572" endtime="20201030 10:57:54.584"></status>
</kw>
<msg timestamp="20201030 10:57:54.586" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.569" endtime="20201030 10:57:54.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.588" endtime="20201030 10:57:54.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.594" endtime="20201030 10:57:54.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.562" endtime="20201030 10:57:54.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.557" endtime="20201030 10:57:54.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.618" endtime="20201030 10:57:54.989"></status>
</kw>
<msg timestamp="20201030 10:57:54.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1349775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134986056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:54.614" endtime="20201030 10:57:54.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1349775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134986056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:55.000" endtime="20201030 10:57:55.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.022" endtime="20201030 10:57:55.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.607" endtime="20201030 10:57:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.602" endtime="20201030 10:57:55.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.041" level="INFO">${RESULT} = [{'diff': 8.555999999992903e-06}, {'diff': 8.916999999997177e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.90299999997679e-06}, {'diff': 9.083999999992542e-06}, {'diff': 9.069999999999911e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:55.032" endtime="20201030 10:57:55.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:55.055" level="INFO">${OVERHEAD} = {'diff': [8.555999999992903e-06, 8.916999999997177e-06, 8.750000000001812e-06, 8.90299999997679e-06, 9.083999999992542e-06, 9.069999999999911e-06, 9.417000000011555e-06, 9.237000000023032e-06, 9.02799...</msg>
<status status="PASS" starttime="20201030 10:57:55.043" endtime="20201030 10:57:55.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.068" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:55.065" endtime="20201030 10:57:55.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.074" level="INFO">VALUE: [8.555999999992903e-06, 8.916999999997177e-06, 8.750000000001812e-06, 8.90299999997679e-06, 9.083999999992542e-06, 9.069999999999911e-06, 9.417000000011555e-06, 9.237000000023032e-06, 9.027999999994263e-06, 8.973000000023212e-06, 9.249999999988434e-06, 8.403000000017924e-06, 9.278000000001452e-06, 9.25000000001619e-06, 8.750000000001812e-06, 9.070000000055423e-06, 9.083000000020824e-06, 8.639000000032482e-06, 8.429999999948201e-06, 9.27799999994594e-06, 9.028000000022018e-06, 8.569000000013816e-06, 8.40300000004568e-06, 9.083999999992542e-06, 8.4169999999828e-06, 9.250000000071701e-06, 9.083000000020824e-06, 9.429999999976957e-06, 8.582999999950935e-06, 8.416000000011081e-06, 9.429999999976957e-06, 9.236000000023559e-06, 8.596999999999078e-06, 9.221999999975417e-06, 8.73599999995367e-06, 8.777999999987074e-06, 9.0699999999444e-06, 9.05600000000728e-06, 9.249999999960679e-06, 9.250000000071701e-06, 8.930999999989808e-06, 8.916999999941666e-06, 9.236000000023559e-06, 8.750000000001812e-06, 8.569999999985534e-06, 8.750000000001812e-06, 9.430999999948675e-06, 8.903000000004546e-06, 8.763999999938932e-06, 8.597999999970796e-06, 9.26400000000882e-06, 8.4169999999828e-06, 9.083000000020824e-06, 9.236999999995277e-06, 8.583000000061958e-06, 8.666000000046026e-06, 9.083000000020824e-06, 8.750000000001812e-06, 8.526999999980411e-06, 9.124999999943206e-06, 8.750000000001812e-06, 8.903000000004546e-06, 9.083000000020824e-06, 8.51400000001501e-06]</msg>
<status status="PASS" starttime="20201030 10:57:55.071" endtime="20201030 10:57:55.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.057" endtime="20201030 10:57:55.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.554" endtime="20201030 10:57:55.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.553" endtime="20201030 10:57:55.079"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.099" endtime="20201030 10:57:55.113"></status>
</kw>
<msg timestamp="20201030 10:57:55.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.096" endtime="20201030 10:57:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.116" endtime="20201030 10:57:55.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.122" endtime="20201030 10:57:55.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.089" endtime="20201030 10:57:55.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.084" endtime="20201030 10:57:55.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.145" endtime="20201030 10:57:55.518"></status>
</kw>
<msg timestamp="20201030 10:57:55.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.628559889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.628569153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.142" endtime="20201030 10:57:55.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.628559889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.628569153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.529" endtime="20201030 10:57:55.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.551" endtime="20201030 10:57:55.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.135" endtime="20201030 10:57:55.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.130" endtime="20201030 10:57:55.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.571" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 8.4169999999828e-06}, {'diff': 9.083000000020824e-06}, {'diff': 9.236999999995277e-06}, {'diff': 8.583000000061958e-06}, {'diff': 8.666000000046026e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:55.560" endtime="20201030 10:57:55.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:55.581" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 8.4169999999828e-06, 9.083000000020824e-06, 9.236999999995277e-06, 8.583000000061958e-06, 8.666000000046026e-06, 9.083000000020824e-06, 8.750000000001812e-06, 8.5269999...</msg>
<status status="PASS" starttime="20201030 10:57:55.573" endtime="20201030 10:57:55.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.591" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:55.589" endtime="20201030 10:57:55.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.597" level="INFO">VALUE: [9.26400000000882e-06, 8.4169999999828e-06, 9.083000000020824e-06, 9.236999999995277e-06, 8.583000000061958e-06, 8.666000000046026e-06, 9.083000000020824e-06, 8.750000000001812e-06, 8.526999999980411e-06, 9.124999999943206e-06, 8.750000000001812e-06, 8.903000000004546e-06, 9.083000000020824e-06, 8.51400000001501e-06, 8.556000000048414e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.916999999941666e-06, 9.083000000131847e-06, 8.776999999904334e-06, 8.74999999989079e-06, 8.72200000001655e-06, 9.249999999960679e-06, 8.916999999941666e-06, 8.944999999815906e-06, 9.236999999995277e-06, 9.26400000000882e-06, 8.583000000061958e-06, 8.596999999888055e-06, 9.096999999957944e-06, 9.096999999957944e-06, 9.250000000182723e-06, 8.40300000004568e-06, 8.40300000004568e-06, 8.388999999997537e-06, 9.096999999957944e-06, 8.902000000032828e-06, 9.250000000182723e-06, 8.930999999989808e-06, 9.250000000182723e-06, 8.5970000001101e-06, 8.72200000001655e-06, 9.249999999960679e-06, 8.74999999989079e-06, 9.249999999960679e-06, 9.417000000011555e-06, 8.416999999871777e-06, 8.388999999997537e-06, 8.569000000013816e-06, 9.082999999909802e-06, 8.91600000008097e-06, 8.889000000067426e-06, 8.597999999970796e-06, 9.069000000083705e-06, 8.583999999922654e-06, 9.276999999974223e-06, 9.249999999960679e-06, 8.471999999981605e-06, 9.083000000131847e-06, 9.26400000000882e-06, 8.583000000061958e-06, 9.249999999960679e-06, 8.750000000112834e-06, 8.568999999791771e-06]</msg>
<status status="PASS" starttime="20201030 10:57:55.593" endtime="20201030 10:57:55.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.583" endtime="20201030 10:57:55.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.081" endtime="20201030 10:57:55.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.080" endtime="20201030 10:57:55.601"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.621" endtime="20201030 10:57:55.635"></status>
</kw>
<msg timestamp="20201030 10:57:55.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.618" endtime="20201030 10:57:55.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.642" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.638" endtime="20201030 10:57:55.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.644" endtime="20201030 10:57:55.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.611" endtime="20201030 10:57:55.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.606" endtime="20201030 10:57:55.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.671" endtime="20201030 10:57:56.035"></status>
</kw>
<msg timestamp="20201030 10:57:56.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.145516931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.145525847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.667" endtime="20201030 10:57:56.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.145516931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.145525847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.046" endtime="20201030 10:57:56.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.069" endtime="20201030 10:57:56.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.658" endtime="20201030 10:57:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.653" endtime="20201030 10:57:56.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.086" level="INFO">${RESULT} = [{'diff': 8.91600000008097e-06}, {'diff': 8.889000000067426e-06}, {'diff': 8.597999999970796e-06}, {'diff': 9.069000000083705e-06}, {'diff': 8.583999999922654e-06}, {'diff': 9.276999999974223e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:56.077" endtime="20201030 10:57:56.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:56.097" level="INFO">${OVERHEAD} = {'diff': [8.91600000008097e-06, 8.889000000067426e-06, 8.597999999970796e-06, 9.069000000083705e-06, 8.583999999922654e-06, 9.276999999974223e-06, 9.249999999960679e-06, 8.471999999981605e-06, 9.08300...</msg>
<status status="PASS" starttime="20201030 10:57:56.088" endtime="20201030 10:57:56.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.107" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:56.105" endtime="20201030 10:57:56.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.113" level="INFO">VALUE: [8.91600000008097e-06, 8.889000000067426e-06, 8.597999999970796e-06, 9.069000000083705e-06, 8.583999999922654e-06, 9.276999999974223e-06, 9.249999999960679e-06, 8.471999999981605e-06, 9.083000000131847e-06, 9.26400000000882e-06, 8.583000000061958e-06, 9.249999999960679e-06, 8.750000000112834e-06, 8.568999999791771e-06, 8.777999999987074e-06, 9.249999999960679e-06, 8.929999999907068e-06, 8.583000000061958e-06, 8.736000000064692e-06, 8.597999999970796e-06, 8.5970000001101e-06, 8.610999999936197e-06, 9.249999999960679e-06, 9.069000000083705e-06, 9.097000000179989e-06, 9.235999999912536e-06, 8.596999999888055e-06, 8.416999999871777e-06, 8.583000000061958e-06, 9.249999999960679e-06, 8.583000000061958e-06, 8.750000000112834e-06, 8.736000000064692e-06, 9.083000000131847e-06, 8.792000000035216e-06, 8.43099999991992e-06, 9.09799999981864e-06, 8.569000000013816e-06, 9.111000000006086e-06, 8.417000000093822e-06, 9.26400000000882e-06, 8.74999999989079e-06, 9.249999999960679e-06, 8.916999999941666e-06, 9.083999999992542e-06, 9.055000000035562e-06, 8.763999999938932e-06, 8.930000000129112e-06, 9.29199999988306e-06, 9.26400000000882e-06, 8.91600000008097e-06, 8.583999999922654e-06, 9.236000000134581e-06, 8.582999999839913e-06, 9.429999999976957e-06, 9.250000000182723e-06, 9.096999999957944e-06, 8.569000000013816e-06, 8.583000000061958e-06, 9.26400000000882e-06, 8.763999999938932e-06, 8.62499999998434e-06, 8.87499999979724e-06, 8.736000000064692e-06]</msg>
<status status="PASS" starttime="20201030 10:57:56.109" endtime="20201030 10:57:56.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.099" endtime="20201030 10:57:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.603" endtime="20201030 10:57:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.602" endtime="20201030 10:57:56.117"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.139" endtime="20201030 10:57:56.152"></status>
</kw>
<msg timestamp="20201030 10:57:56.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.135" endtime="20201030 10:57:56.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.155" endtime="20201030 10:57:56.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.162" endtime="20201030 10:57:56.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.128" endtime="20201030 10:57:56.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.122" endtime="20201030 10:57:56.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.185" endtime="20201030 10:57:56.542"></status>
</kw>
<msg timestamp="20201030 10:57:56.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.658417681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.658426597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.181" endtime="20201030 10:57:56.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.658417681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.658426597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.553" endtime="20201030 10:57:56.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.576" endtime="20201030 10:57:56.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.174" endtime="20201030 10:57:56.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.170" endtime="20201030 10:57:56.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.593" level="INFO">${RESULT} = [{'diff': 8.91600000008097e-06}, {'diff': 8.583999999922654e-06}, {'diff': 9.236000000134581e-06}, {'diff': 8.582999999839913e-06}, {'diff': 9.429999999976957e-06}, {'diff': 9.250000000182723e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:56.584" endtime="20201030 10:57:56.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:56.605" level="INFO">${OVERHEAD} = {'diff': [8.91600000008097e-06, 8.583999999922654e-06, 9.236000000134581e-06, 8.582999999839913e-06, 9.429999999976957e-06, 9.250000000182723e-06, 9.096999999957944e-06, 8.569000000013816e-06, 8.58300...</msg>
<status status="PASS" starttime="20201030 10:57:56.595" endtime="20201030 10:57:56.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.615" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:56.613" endtime="20201030 10:57:56.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.621" level="INFO">VALUE: [8.91600000008097e-06, 8.583999999922654e-06, 9.236000000134581e-06, 8.582999999839913e-06, 9.429999999976957e-06, 9.250000000182723e-06, 9.096999999957944e-06, 8.569000000013816e-06, 8.583000000061958e-06, 9.26400000000882e-06, 8.763999999938932e-06, 8.62499999998434e-06, 8.87499999979724e-06, 8.736000000064692e-06, 8.583999999700609e-06, 8.43099999991992e-06, 8.596999999888055e-06, 9.014000000195921e-06, 8.91700000016371e-06, 8.833999999957598e-06, 9.250000000182723e-06, 8.37500000017144e-06, 8.568999999791771e-06, 9.06899999986166e-06, 9.06899999986166e-06, 8.62499999998434e-06, 8.902999999893524e-06, 8.91700000016371e-06, 8.556000000048414e-06, 9.082999999687758e-06, 8.568999999791771e-06, 9.041999999848116e-06, 8.750000000112834e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.736999999925388e-06, 9.06899999986166e-06, 9.402999999963413e-06, 8.431000000364008e-06, 8.790999999952476e-06, 9.430999999615608e-06, 9.041999999848116e-06, 9.250000000182723e-06, 9.374999999867129e-06, 8.569999999874511e-06, 8.736000000286737e-06, 9.26400000000882e-06, 8.583000000061958e-06, 8.860999999971142e-06, 8.916999999719621e-06, 8.958999999642003e-06, 8.97299999991219e-06, 9.250000000182723e-06, 9.110999999784042e-06, 9.056000000118303e-06, 8.458000000377552e-06, 8.611999999796893e-06, 8.417000000093822e-06, 8.583000000061958e-06, 8.403000000267724e-06, 8.805999999861314e-06, 8.958000000003352e-06, 8.417000000093822e-06, 9.250000000182723e-06]</msg>
<status status="PASS" starttime="20201030 10:57:56.617" endtime="20201030 10:57:56.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.607" endtime="20201030 10:57:56.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.119" endtime="20201030 10:57:56.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.118" endtime="20201030 10:57:56.625"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.645" endtime="20201030 10:57:56.659"></status>
</kw>
<msg timestamp="20201030 10:57:56.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.642" endtime="20201030 10:57:56.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.662" endtime="20201030 10:57:56.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.668" endtime="20201030 10:57:56.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.635" endtime="20201030 10:57:56.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.630" endtime="20201030 10:57:56.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.692" endtime="20201030 10:57:57.060"></status>
</kw>
<msg timestamp="20201030 10:57:57.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.165670958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.165679917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.689" endtime="20201030 10:57:57.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.165670958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.165679917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.072" endtime="20201030 10:57:57.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.094" endtime="20201030 10:57:57.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.681" endtime="20201030 10:57:57.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.676" endtime="20201030 10:57:57.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.112" level="INFO">${RESULT} = [{'diff': 8.958999999642003e-06}, {'diff': 8.97299999991219e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.056000000118303e-06}, {'diff': 8.458000000377552e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:57.102" endtime="20201030 10:57:57.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:57.124" level="INFO">${OVERHEAD} = {'diff': [8.958999999642003e-06, 8.97299999991219e-06, 9.250000000182723e-06, 9.110999999784042e-06, 9.056000000118303e-06, 8.458000000377552e-06, 8.611999999796893e-06, 8.417000000093822e-06, 8.58300...</msg>
<status status="PASS" starttime="20201030 10:57:57.114" endtime="20201030 10:57:57.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.134" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:57.132" endtime="20201030 10:57:57.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.139" level="INFO">VALUE: [8.958999999642003e-06, 8.97299999991219e-06, 9.250000000182723e-06, 9.110999999784042e-06, 9.056000000118303e-06, 8.458000000377552e-06, 8.611999999796893e-06, 8.417000000093822e-06, 8.583000000061958e-06, 8.403000000267724e-06, 8.805999999861314e-06, 8.958000000003352e-06, 8.417000000093822e-06, 9.250000000182723e-06, 8.583000000061958e-06, 9.096999999957944e-06, 8.583000000061958e-06, 9.431000000059697e-06, 8.62499999998434e-06, 8.597999999970796e-06, 8.736999999925388e-06, 9.153000000150513e-06, 8.916999999719621e-06, 9.0699999999444e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.250000000182723e-06, 8.930999999989808e-06, 8.750000000112834e-06, 8.401999999740895e-06, 9.235999999912536e-06, 8.91600000008097e-06, 9.084000000214587e-06, 8.749999999668745e-06, 8.958000000003352e-06, 9.4170000002336e-06, 9.083999999770498e-06, 8.916999999719621e-06, 8.763999999938932e-06, 8.790999999952476e-06, 9.250000000182723e-06, 8.457999999933463e-06, 9.429999999976957e-06, 8.708999999829103e-06, 8.417000000093822e-06, 9.250000000182723e-06, 8.402000000184984e-06, 9.096999999957944e-06, 8.499999999855845e-06, 8.792000000035216e-06, 9.082999999687758e-06, 8.388999999997537e-06, 8.944000000177255e-06, 8.750000000112834e-06, 8.915999999636881e-06, 9.082999999687758e-06, 8.556000000048414e-06, 9.082999999687758e-06, 8.583000000061958e-06, 8.416999999649732e-06, 9.250000000182723e-06, 9.083000000131847e-06, 8.91700000016371e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201030 10:57:57.136" endtime="20201030 10:57:57.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.126" endtime="20201030 10:57:57.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.627" endtime="20201030 10:57:57.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.626" endtime="20201030 10:57:57.144"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.164" endtime="20201030 10:57:57.176"></status>
</kw>
<msg timestamp="20201030 10:57:57.177" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.160" endtime="20201030 10:57:57.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.179" endtime="20201030 10:57:57.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.185" endtime="20201030 10:57:57.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.153" endtime="20201030 10:57:57.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.149" endtime="20201030 10:57:57.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.208" endtime="20201030 10:57:57.586"></status>
</kw>
<msg timestamp="20201030 10:57:57.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.663262125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.663271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.205" endtime="20201030 10:57:57.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.663262125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.663271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.597" endtime="20201030 10:57:57.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.620" endtime="20201030 10:57:57.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.198" endtime="20201030 10:57:57.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.193" endtime="20201030 10:57:57.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.637" level="INFO">${RESULT} = [{'diff': 9.082999999687758e-06}, {'diff': 8.388999999997537e-06}, {'diff': 8.944000000177255e-06}, {'diff': 8.750000000112834e-06}, {'diff': 8.915999999636881e-06}, {'diff': 9.082999999687758e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:57.628" endtime="20201030 10:57:57.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:57.648" level="INFO">${OVERHEAD} = {'diff': [9.082999999687758e-06, 8.388999999997537e-06, 8.944000000177255e-06, 8.750000000112834e-06, 8.915999999636881e-06, 9.082999999687758e-06, 8.556000000048414e-06, 9.082999999687758e-06, 8.5830...</msg>
<status status="PASS" starttime="20201030 10:57:57.640" endtime="20201030 10:57:57.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.658" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:57.656" endtime="20201030 10:57:57.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.663" level="INFO">VALUE: [9.082999999687758e-06, 8.388999999997537e-06, 8.944000000177255e-06, 8.750000000112834e-06, 8.915999999636881e-06, 9.082999999687758e-06, 8.556000000048414e-06, 9.082999999687758e-06, 8.583000000061958e-06, 8.416999999649732e-06, 9.250000000182723e-06, 9.083000000131847e-06, 8.91700000016371e-06, 9.402999999963413e-06, 9.291999999661016e-06, 9.26400000000882e-06, 9.250000000182723e-06, 8.584000000144698e-06, 8.750000000112834e-06, 9.083000000131847e-06, 9.096999999957944e-06, 9.06899999986166e-06, 9.304999999848462e-06, 8.596999999888055e-06, 8.417000000093822e-06, 9.110999999784042e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.06899999986166e-06, 9.292000000105105e-06, 8.750000000112834e-06, 8.91700000016371e-06, 8.62499999998434e-06, 8.694000000364355e-06, 8.56900000023586e-06, 8.37499999972735e-06, 8.416000000011081e-06, 9.250000000182723e-06, 8.444000000107366e-06, 8.91600000008097e-06, 8.902999999893524e-06, 9.083000000131847e-06, 9.083000000131847e-06, 8.91700000016371e-06, 8.416000000011081e-06, 9.111000000228131e-06, 9.319000000118649e-06, 9.291999999661016e-06, 8.804999999778573e-06, 8.62499999998434e-06, 8.584000000144698e-06, 9.084000000214587e-06, 8.610999999714153e-06, 8.91700000016371e-06, 8.680999999732819e-06, 9.083000000131847e-06, 9.235999999912536e-06, 8.735999999842647e-06, 8.443999999663276e-06, 9.084000000214587e-06, 9.249999999738634e-06, 8.597999999970796e-06, 8.958000000003352e-06]</msg>
<status status="PASS" starttime="20201030 10:57:57.660" endtime="20201030 10:57:57.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.650" endtime="20201030 10:57:57.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.145" endtime="20201030 10:57:57.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.145" endtime="20201030 10:57:57.668"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.689" endtime="20201030 10:57:57.701"></status>
</kw>
<msg timestamp="20201030 10:57:57.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.685" endtime="20201030 10:57:57.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.705" endtime="20201030 10:57:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.711" endtime="20201030 10:57:57.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.677" endtime="20201030 10:57:57.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.673" endtime="20201030 10:57:57.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.736" endtime="20201030 10:57:58.108"></status>
</kw>
<msg timestamp="20201030 10:57:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.17296425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.172972875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:57.732" endtime="20201030 10:57:58.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.17296425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.172972875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:58.120" endtime="20201030 10:57:58.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.142" endtime="20201030 10:57:58.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.725" endtime="20201030 10:57:58.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.720" endtime="20201030 10:57:58.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.159" level="INFO">${RESULT} = [{'diff': 8.62499999998434e-06}, {'diff': 8.584000000144698e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.610999999714153e-06}, {'diff': 8.91700000016371e-06}, {'diff': 8.680999999732819e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:58.150" endtime="20201030 10:57:58.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:58.171" level="INFO">${OVERHEAD} = {'diff': [8.62499999998434e-06, 8.584000000144698e-06, 9.084000000214587e-06, 8.610999999714153e-06, 8.91700000016371e-06, 8.680999999732819e-06, 9.083000000131847e-06, 9.235999999912536e-06, 8.735999...</msg>
<status status="PASS" starttime="20201030 10:57:58.161" endtime="20201030 10:57:58.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.181" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:58.179" endtime="20201030 10:57:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.187" level="INFO">VALUE: [8.62499999998434e-06, 8.584000000144698e-06, 9.084000000214587e-06, 8.610999999714153e-06, 8.91700000016371e-06, 8.680999999732819e-06, 9.083000000131847e-06, 9.235999999912536e-06, 8.735999999842647e-06, 8.443999999663276e-06, 9.084000000214587e-06, 9.249999999738634e-06, 8.597999999970796e-06, 8.958000000003352e-06, 8.91700000016371e-06, 9.388000000054575e-06, 9.305999999931203e-06, 9.26400000000882e-06, 9.111000000228131e-06, 8.666999999906722e-06, 9.26400000000882e-06, 8.735999999842647e-06, 8.77799999976503e-06, 8.583000000061958e-06, 8.91700000016371e-06, 8.91700000016371e-06, 8.916999999719621e-06, 8.360999999901253e-06, 8.901999999810783e-06, 8.763999999938932e-06, 9.26400000000882e-06, 9.084000000214587e-06, 8.750000000112834e-06, 8.903000000337613e-06, 9.402999999963413e-06, 8.930999999989808e-06, 8.403000000267724e-06, 8.736000000286737e-06, 8.736000000286737e-06, 9.084000000214587e-06, 8.403000000267724e-06, 9.250000000182723e-06, 8.416000000011081e-06, 8.388999999997537e-06, 9.0699999999444e-06, 9.06899999986166e-06, 8.763999999938932e-06, 9.26400000000882e-06, 9.278000000279008e-06, 8.554999999965673e-06, 9.26400000000882e-06, 8.583000000061958e-06, 9.277999999834918e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.096999999957944e-06, 8.750000000112834e-06, 8.56900000023586e-06, 9.084000000214587e-06, 8.930999999989808e-06, 8.91600000008097e-06, 8.431000000364008e-06, 9.444999999885795e-06, 8.583000000061958e-06]</msg>
<status status="PASS" starttime="20201030 10:57:58.183" endtime="20201030 10:57:58.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.173" endtime="20201030 10:57:58.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.670" endtime="20201030 10:57:58.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.669" endtime="20201030 10:57:58.191"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.211" endtime="20201030 10:57:58.223"></status>
</kw>
<msg timestamp="20201030 10:57:58.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.208" endtime="20201030 10:57:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.226" endtime="20201030 10:57:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.232" endtime="20201030 10:57:58.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.201" endtime="20201030 10:57:58.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.196" endtime="20201030 10:57:58.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.256" endtime="20201030 10:57:58.607"></status>
</kw>
<msg timestamp="20201030 10:57:58.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687613403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.687622667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.252" endtime="20201030 10:57:58.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687613403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.687622667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.619" endtime="20201030 10:57:58.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.641" endtime="20201030 10:57:58.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.245" endtime="20201030 10:57:58.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.240" endtime="20201030 10:57:58.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.658" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 8.583000000061958e-06}, {'diff': 9.277999999834918e-06}, {'diff': 9.402999999963413e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.096999999957944e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:58.649" endtime="20201030 10:57:58.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:58.671" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 8.583000000061958e-06, 9.277999999834918e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.096999999957944e-06, 8.750000000112834e-06, 8.56900000023586e-06, 9.084000...</msg>
<status status="PASS" starttime="20201030 10:57:58.660" endtime="20201030 10:57:58.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:58.678" endtime="20201030 10:57:58.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.686" level="INFO">VALUE: [9.26400000000882e-06, 8.583000000061958e-06, 9.277999999834918e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.096999999957944e-06, 8.750000000112834e-06, 8.56900000023586e-06, 9.084000000214587e-06, 8.930999999989808e-06, 8.91600000008097e-06, 8.431000000364008e-06, 9.444999999885795e-06, 8.583000000061958e-06, 9.250000000626812e-06, 9.4170000002336e-06, 9.429999999532868e-06, 9.249999999738634e-06, 8.388000000358886e-06, 9.250000000626812e-06, 9.26400000000882e-06, 8.750000000112834e-06, 8.457999999933463e-06, 9.250000000626812e-06, 8.66600000026807e-06, 9.013999999751832e-06, 9.097000000402033e-06, 9.249999999738634e-06, 9.250000000626812e-06, 9.249999999738634e-06, 8.583000000506047e-06, 8.638999999810437e-06, 9.082999999243668e-06, 9.249999999738634e-06, 8.902000000254873e-06, 9.084000000214587e-06, 8.722999999655201e-06, 8.66600000026807e-06, 8.750000000112834e-06, 8.569999999430422e-06, 9.291999999661016e-06, 8.930999999989808e-06, 9.11100000067222e-06, 9.26400000000882e-06, 8.582999999617869e-06, 8.792000000035216e-06, 9.41600000015086e-06, 8.929999999907068e-06, 9.26400000000882e-06, 8.750000000112834e-06, 9.249999999738634e-06, 9.0699999999444e-06, 8.916999999719621e-06, 9.22300000016918e-06, 9.084000000214587e-06, 8.541000000583665e-06, 8.56900000023586e-06, 9.26400000000882e-06, 8.582999999617869e-06, 8.417000000093822e-06, 8.596999999888055e-06, 8.736000000730826e-06, 8.499999999855845e-06, 8.56900000023586e-06]</msg>
<status status="PASS" starttime="20201030 10:57:58.683" endtime="20201030 10:57:58.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.672" endtime="20201030 10:57:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.193" endtime="20201030 10:57:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.192" endtime="20201030 10:57:58.691"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.711" endtime="20201030 10:57:58.722"></status>
</kw>
<msg timestamp="20201030 10:57:58.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.707" endtime="20201030 10:57:58.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.726" endtime="20201030 10:57:58.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.732" endtime="20201030 10:57:58.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.700" endtime="20201030 10:57:58.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.696" endtime="20201030 10:57:58.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.756" endtime="20201030 10:57:59.113"></status>
</kw>
<msg timestamp="20201030 10:57:59.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.199102306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.199111556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.753" endtime="20201030 10:57:59.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.199102306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.199111556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.125" endtime="20201030 10:57:59.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.147" endtime="20201030 10:57:59.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.745" endtime="20201030 10:57:59.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.740" endtime="20201030 10:57:59.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.164" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 9.0699999999444e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.22300000016918e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.541000000583665e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:59.155" endtime="20201030 10:57:59.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:59.175" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 9.0699999999444e-06, 8.916999999719621e-06, 9.22300000016918e-06, 9.084000000214587e-06, 8.541000000583665e-06, 8.56900000023586e-06, 9.26400000000882e-06, 8.582999999...</msg>
<status status="PASS" starttime="20201030 10:57:59.166" endtime="20201030 10:57:59.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.185" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:59.183" endtime="20201030 10:57:59.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.191" level="INFO">VALUE: [9.249999999738634e-06, 9.0699999999444e-06, 8.916999999719621e-06, 9.22300000016918e-06, 9.084000000214587e-06, 8.541000000583665e-06, 8.56900000023586e-06, 9.26400000000882e-06, 8.582999999617869e-06, 8.417000000093822e-06, 8.596999999888055e-06, 8.736000000730826e-06, 8.499999999855845e-06, 8.56900000023586e-06, 9.055000000479652e-06, 8.735999999842647e-06, 8.583000000506047e-06, 8.889000000067426e-06, 8.749999999224656e-06, 8.625000000428429e-06, 8.792000000035216e-06, 9.4170000002336e-06, 8.56900000023586e-06, 8.596999999888055e-06, 8.91600000052506e-06, 9.250000000626812e-06, 8.47200000020365e-06, 9.236000000356626e-06, 8.903000000337613e-06, 9.207999999816252e-06, 8.582999999617869e-06, 9.388999999693226e-06, 8.76300000030028e-06, 9.083000000131847e-06, 8.9170000006078e-06, 8.916999999719621e-06, 8.97199999982945e-06, 8.417000000093822e-06, 8.360999999901253e-06, 8.556000000048414e-06, 9.235999999468447e-06, 8.750000000112834e-06, 8.750000000112834e-06, 8.584000000588787e-06, 8.764000000383021e-06, 8.554999999965673e-06, 8.750000000112834e-06, 9.292000000549194e-06, 9.0699999999444e-06, 8.930999999989808e-06, 9.346999999770844e-06, 9.0699999999444e-06, 8.388999999553448e-06, 8.597000000776234e-06, 9.042000000292205e-06, 8.582999999617869e-06, 8.431000000364008e-06, 8.889000000067426e-06, 9.41600000015086e-06, 9.084000000214587e-06, 8.56900000023586e-06, 8.417000000093822e-06, 8.902000000254873e-06, 9.236000000356626e-06]</msg>
<status status="PASS" starttime="20201030 10:57:59.187" endtime="20201030 10:57:59.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.177" endtime="20201030 10:57:59.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.692" endtime="20201030 10:57:59.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.691" endtime="20201030 10:57:59.195"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.215" endtime="20201030 10:57:59.228"></status>
</kw>
<msg timestamp="20201030 10:57:59.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.212" endtime="20201030 10:57:59.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.232" endtime="20201030 10:57:59.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.238" endtime="20201030 10:57:59.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.205" endtime="20201030 10:57:59.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.200" endtime="20201030 10:57:59.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.262" endtime="20201030 10:57:59.618"></status>
</kw>
<msg timestamp="20201030 10:57:59.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.688707, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.688716347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:59.259" endtime="20201030 10:57:59.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.688707, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.688716347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:59.630" endtime="20201030 10:57:59.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.651" endtime="20201030 10:57:59.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.251" endtime="20201030 10:57:59.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.246" endtime="20201030 10:57:59.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.669" level="INFO">${RESULT} = [{'diff': 9.346999999770844e-06}, {'diff': 9.0699999999444e-06}, {'diff': 8.388999999553448e-06}, {'diff': 8.597000000776234e-06}, {'diff': 9.042000000292205e-06}, {'diff': 8.582999999617869e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:59.660" endtime="20201030 10:57:59.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:59.681" level="INFO">${OVERHEAD} = {'diff': [9.346999999770844e-06, 9.0699999999444e-06, 8.388999999553448e-06, 8.597000000776234e-06, 9.042000000292205e-06, 8.582999999617869e-06, 8.431000000364008e-06, 8.889000000067426e-06, 9.416000...</msg>
<status status="PASS" starttime="20201030 10:57:59.671" endtime="20201030 10:57:59.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:59.689" endtime="20201030 10:57:59.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.697" level="INFO">VALUE: [9.346999999770844e-06, 9.0699999999444e-06, 8.388999999553448e-06, 8.597000000776234e-06, 9.042000000292205e-06, 8.582999999617869e-06, 8.431000000364008e-06, 8.889000000067426e-06, 9.41600000015086e-06, 9.084000000214587e-06, 8.56900000023586e-06, 8.417000000093822e-06, 8.902000000254873e-06, 9.236000000356626e-06, 8.416000000011081e-06, 8.763999999494843e-06, 8.388999999553448e-06, 8.763999999494843e-06, 8.417000000093822e-06, 8.903000000337613e-06, 9.4170000002336e-06, 8.471999999315472e-06, 8.750000000112834e-06, 9.208999999898992e-06, 8.903000000337613e-06, 9.083000000131847e-06, 8.735999999842647e-06, 9.236000000356626e-06, 8.596999999888055e-06, 9.389000000581404e-06, 9.056000000562392e-06, 8.750000000112834e-06, 9.26400000000882e-06, 8.417000000093822e-06, 9.0699999999444e-06, 8.957999999559263e-06, 8.903000000337613e-06, 9.096999999513855e-06, 8.902000000254873e-06, 8.776999999682289e-06, 9.055999999674214e-06, 8.915999999636881e-06, 9.06899999986166e-06, 8.916999999719621e-06, 8.889000000067426e-06, 8.582999999617869e-06, 8.722000000460639e-06, 9.277999999390829e-06, 9.0699999999444e-06, 9.083000000131847e-06, 9.332999999500657e-06, 9.06899999986166e-06, 8.763999999494843e-06, 8.764000000383021e-06, 9.249999999738634e-06, 8.416000000011081e-06, 8.582999999617869e-06, 9.083000000131847e-06, 9.249999999738634e-06, 9.250000000626812e-06, 9.249999999738634e-06, 8.389000000441627e-06, 9.22300000016918e-06, 8.792000000035216e-06]</msg>
<status status="PASS" starttime="20201030 10:57:59.693" endtime="20201030 10:57:59.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.683" endtime="20201030 10:57:59.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.197" endtime="20201030 10:57:59.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.196" endtime="20201030 10:57:59.701"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.721" endtime="20201030 10:57:59.733"></status>
</kw>
<msg timestamp="20201030 10:57:59.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.718" endtime="20201030 10:57:59.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.736" endtime="20201030 10:57:59.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.743" endtime="20201030 10:57:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.711" endtime="20201030 10:57:59.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.706" endtime="20201030 10:57:59.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.766" endtime="20201030 10:58:00.128"></status>
</kw>
<msg timestamp="20201030 10:58:00.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.184920389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.184929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.763" endtime="20201030 10:58:00.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.184920389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.184929722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.139" endtime="20201030 10:58:00.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.161" endtime="20201030 10:58:00.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.756" endtime="20201030 10:58:00.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.751" endtime="20201030 10:58:00.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.180" level="INFO">${RESULT} = [{'diff': 9.332999999500657e-06}, {'diff': 9.06899999986166e-06}, {'diff': 8.763999999494843e-06}, {'diff': 8.764000000383021e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.416000000011081e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:00.170" endtime="20201030 10:58:00.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:00.192" level="INFO">${OVERHEAD} = {'diff': [9.332999999500657e-06, 9.06899999986166e-06, 8.763999999494843e-06, 8.764000000383021e-06, 9.249999999738634e-06, 8.416000000011081e-06, 8.582999999617869e-06, 9.083000000131847e-06, 9.24999...</msg>
<status status="PASS" starttime="20201030 10:58:00.182" endtime="20201030 10:58:00.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.202" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:00.199" endtime="20201030 10:58:00.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.207" level="INFO">VALUE: [9.332999999500657e-06, 9.06899999986166e-06, 8.763999999494843e-06, 8.764000000383021e-06, 9.249999999738634e-06, 8.416000000011081e-06, 8.582999999617869e-06, 9.083000000131847e-06, 9.249999999738634e-06, 9.250000000626812e-06, 9.249999999738634e-06, 8.389000000441627e-06, 9.22300000016918e-06, 8.792000000035216e-06, 9.249999999738634e-06, 8.568999999347682e-06, 9.250000000626812e-06, 8.582999999617869e-06, 8.583000000506047e-06, 8.902000000254873e-06, 8.916999999719621e-06, 8.750000000112834e-06, 8.749999999224656e-06, 8.916999999719621e-06, 8.9170000006078e-06, 9.235999999468447e-06, 9.249999999738634e-06, 9.054999999591473e-06, 9.084000000214587e-06, 9.41600000015086e-06, 8.417000000093822e-06, 8.916999999719621e-06, 9.26400000000882e-06, 8.929999999907068e-06, 8.916999999719621e-06, 9.083000000131847e-06, 8.749999999224656e-06, 8.91600000052506e-06, 9.444999999885795e-06, 9.249999999738634e-06, 9.098000000484774e-06, 8.930999999989808e-06, 8.417000000093822e-06, 8.568999999347682e-06, 9.32000000020139e-06, 9.26400000000882e-06, 8.5700000003186e-06, 9.236000000356626e-06, 8.596999999888055e-06, 9.125000000054229e-06, 8.471999999315472e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.763999999494843e-06, 8.584000000588787e-06, 8.764000000383021e-06, 8.930999999989808e-06, 9.4170000002336e-06, 8.417000000093822e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.222000000086439e-06, 8.929999999907068e-06]</msg>
<status status="PASS" starttime="20201030 10:58:00.204" endtime="20201030 10:58:00.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.193" endtime="20201030 10:58:00.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.703" endtime="20201030 10:58:00.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.702" endtime="20201030 10:58:00.212"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.232" endtime="20201030 10:58:00.244"></status>
</kw>
<msg timestamp="20201030 10:58:00.245" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.229" endtime="20201030 10:58:00.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.247" endtime="20201030 10:58:00.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.253" endtime="20201030 10:58:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.222" endtime="20201030 10:58:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.217" endtime="20201030 10:58:00.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.278" endtime="20201030 10:58:00.651"></status>
</kw>
<msg timestamp="20201030 10:58:00.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.679497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.679506028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.274" endtime="20201030 10:58:00.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.679497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.679506028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.662" endtime="20201030 10:58:00.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.684" endtime="20201030 10:58:00.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.267" endtime="20201030 10:58:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.262" endtime="20201030 10:58:00.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.702" level="INFO">${RESULT} = [{'diff': 8.471999999315472e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.083000000131847e-06}, {'diff': 8.763999999494843e-06}, {'diff': 8.584000000588787e-06}, {'diff': 8.764000000383021e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.693" endtime="20201030 10:58:00.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:00.713" level="INFO">${OVERHEAD} = {'diff': [8.471999999315472e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.763999999494843e-06, 8.584000000588787e-06, 8.764000000383021e-06, 8.930999999989808e-06, 9.4170000002336e-06, 8.417000...</msg>
<status status="PASS" starttime="20201030 10:58:00.704" endtime="20201030 10:58:00.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.723" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:00.720" endtime="20201030 10:58:00.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.728" level="INFO">VALUE: [8.471999999315472e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.763999999494843e-06, 8.584000000588787e-06, 8.764000000383021e-06, 8.930999999989808e-06, 9.4170000002336e-06, 8.417000000093822e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.222000000086439e-06, 8.929999999907068e-06, 8.417000000093822e-06, 8.417000000093822e-06, 8.750000000112834e-06, 9.082999999243668e-06, 8.416000000011081e-06, 9.139000000324415e-06, 8.902000000254873e-06, 8.584000000588787e-06, 9.250000000626812e-06, 8.653000000080624e-06, 8.597999999970796e-06, 8.56900000023586e-06, 8.889000000067426e-06, 8.416999999205643e-06, 8.930999999989808e-06, 8.76300000030028e-06, 8.596999999888055e-06, 8.916999999719621e-06, 8.582999999617869e-06, 8.56900000023586e-06, 8.541000000583665e-06, 9.249999999738634e-06, 8.750000000112834e-06, 8.582999999617869e-06, 8.930999999989808e-06, 8.763999999494843e-06, 8.903000000337613e-06, 8.916999999719621e-06, 8.583000000506047e-06, 9.055999999674214e-06, 8.847000000145044e-06, 9.000000000369823e-06, 8.958000000447441e-06, 8.402999999823635e-06, 9.083000000131847e-06, 9.249999999738634e-06, 9.305999999931203e-06, 8.62499999954025e-06, 8.457999999933463e-06, 9.084000000214587e-06, 8.638999999810437e-06, 8.77799999976503e-06, 8.554999999965673e-06, 8.736000000730826e-06, 9.236000000356626e-06, 8.735999999842647e-06, 8.87499999979724e-06, 9.083999999326409e-06, 9.236000000356626e-06, 8.445000000634195e-06]</msg>
<status status="PASS" starttime="20201030 10:58:00.725" endtime="20201030 10:58:00.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.714" endtime="20201030 10:58:00.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.213" endtime="20201030 10:58:00.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.212" endtime="20201030 10:58:00.733"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.753" endtime="20201030 10:58:00.766"></status>
</kw>
<msg timestamp="20201030 10:58:00.767" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.750" endtime="20201030 10:58:00.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.770" endtime="20201030 10:58:00.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.776" endtime="20201030 10:58:00.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.742" endtime="20201030 10:58:00.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.738" endtime="20201030 10:58:00.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.800" endtime="20201030 10:58:01.171"></status>
</kw>
<msg timestamp="20201030 10:58:01.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.179486972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.179496278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.796" endtime="20201030 10:58:01.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.179486972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.179496278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.182" endtime="20201030 10:58:01.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.204" endtime="20201030 10:58:01.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.789" endtime="20201030 10:58:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.785" endtime="20201030 10:58:01.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.222" level="INFO">${RESULT} = [{'diff': 9.305999999931203e-06}, {'diff': 8.62499999954025e-06}, {'diff': 8.457999999933463e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.638999999810437e-06}, {'diff': 8.77799999976503e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:01.212" endtime="20201030 10:58:01.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:01.234" level="INFO">${OVERHEAD} = {'diff': [9.305999999931203e-06, 8.62499999954025e-06, 8.457999999933463e-06, 9.084000000214587e-06, 8.638999999810437e-06, 8.77799999976503e-06, 8.554999999965673e-06, 8.736000000730826e-06, 9.236000...</msg>
<status status="PASS" starttime="20201030 10:58:01.224" endtime="20201030 10:58:01.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.244" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:01.242" endtime="20201030 10:58:01.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.249" level="INFO">VALUE: [9.305999999931203e-06, 8.62499999954025e-06, 8.457999999933463e-06, 9.084000000214587e-06, 8.638999999810437e-06, 8.77799999976503e-06, 8.554999999965673e-06, 8.736000000730826e-06, 9.236000000356626e-06, 8.735999999842647e-06, 8.87499999979724e-06, 9.083999999326409e-06, 9.236000000356626e-06, 8.445000000634195e-06, 8.5700000003186e-06, 9.0699999999444e-06, 8.431000000364008e-06, 9.097999999596595e-06, 8.776999999682289e-06, 9.249999999738634e-06, 9.084000000214587e-06, 8.431000000364008e-06, 8.916999999719621e-06, 8.5700000003186e-06, 9.16699999997661e-06, 8.916999999719621e-06, 9.0699999999444e-06, 8.430000000281268e-06, 9.0699999999444e-06, 8.56900000023586e-06, 8.735999999842647e-06, 9.250000000626812e-06, 9.083000000131847e-06, 8.583000000506047e-06, 8.596999999888055e-06, 9.082999999243668e-06, 8.764000000383021e-06, 8.431000000364008e-06, 8.944999999371817e-06, 9.138999999436237e-06, 9.097000000402033e-06, 9.083000000131847e-06, 8.763999999494843e-06, 8.431000000364008e-06, 9.26400000000882e-06, 8.417000000093822e-06, 9.083000000131847e-06, 8.693999999920266e-06, 9.41600000015086e-06, 9.32000000020139e-06, 9.083000000131847e-06, 9.125000000054229e-06, 8.915999999636881e-06, 8.583000000506047e-06, 9.110999999784042e-06, 8.750000000112834e-06, 8.568999999347682e-06, 9.028000000022018e-06, 9.11100000067222e-06, 9.06899999986166e-06, 9.30500000073664e-06, 8.750000000112834e-06, 8.915999999636881e-06, 8.596999999888055e-06]</msg>
<status status="PASS" starttime="20201030 10:58:01.246" endtime="20201030 10:58:01.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.236" endtime="20201030 10:58:01.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.734" endtime="20201030 10:58:01.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.734" endtime="20201030 10:58:01.254"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.274" endtime="20201030 10:58:01.286"></status>
</kw>
<msg timestamp="20201030 10:58:01.287" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.271" endtime="20201030 10:58:01.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.289" endtime="20201030 10:58:01.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.296" endtime="20201030 10:58:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.263" endtime="20201030 10:58:01.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.259" endtime="20201030 10:58:01.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.319" endtime="20201030 10:58:01.701"></status>
</kw>
<msg timestamp="20201030 10:58:01.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.69083125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.690840333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:01.316" endtime="20201030 10:58:01.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.69083125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.690840333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:01.712" endtime="20201030 10:58:01.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.734" endtime="20201030 10:58:01.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.309" endtime="20201030 10:58:01.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.304" endtime="20201030 10:58:01.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.752" level="INFO">${RESULT} = [{'diff': 9.083000000131847e-06}, {'diff': 9.125000000054229e-06}, {'diff': 8.915999999636881e-06}, {'diff': 8.583000000506047e-06}, {'diff': 9.110999999784042e-06}, {'diff': 8.750000000112834e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:01.743" endtime="20201030 10:58:01.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:01.764" level="INFO">${OVERHEAD} = {'diff': [9.083000000131847e-06, 9.125000000054229e-06, 8.915999999636881e-06, 8.583000000506047e-06, 9.110999999784042e-06, 8.750000000112834e-06, 8.568999999347682e-06, 9.028000000022018e-06, 9.1110...</msg>
<status status="PASS" starttime="20201030 10:58:01.754" endtime="20201030 10:58:01.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.774" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:01.772" endtime="20201030 10:58:01.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.780" level="INFO">VALUE: [9.083000000131847e-06, 9.125000000054229e-06, 8.915999999636881e-06, 8.583000000506047e-06, 9.110999999784042e-06, 8.750000000112834e-06, 8.568999999347682e-06, 9.028000000022018e-06, 9.11100000067222e-06, 9.06899999986166e-06, 9.30500000073664e-06, 8.750000000112834e-06, 8.915999999636881e-06, 8.596999999888055e-06, 9.055999999674214e-06, 8.597999999970796e-06, 8.957999999559263e-06, 9.097000000402033e-06, 9.083000000131847e-06, 8.583999999700609e-06, 9.4170000002336e-06, 9.097000000402033e-06, 9.083000000131847e-06, 9.250000000626812e-06, 9.236999999551188e-06, 8.763999999494843e-06, 8.76300000030028e-06, 8.556000000048414e-06, 8.596999999888055e-06, 8.77799999976503e-06, 8.875000000685418e-06, 8.596999999888055e-06, 8.916999999719621e-06, 8.597999999970796e-06, 9.110999999784042e-06, 8.402999999823635e-06, 9.416999999345421e-06, 8.930999999989808e-06, 8.540999999695487e-06, 8.749999999224656e-06, 8.528000000396219e-06, 8.695000000003006e-06, 8.56900000023586e-06, 8.5700000003186e-06, 9.097000000402033e-06, 9.249999999738634e-06, 8.415999999122903e-06, 8.583000000506047e-06, 8.416000000011081e-06, 8.5700000003186e-06, 8.916999999719621e-06, 8.722999999655201e-06, 8.749999999224656e-06, 8.47200000020365e-06, 9.237000000439366e-06, 8.763999999494843e-06, 8.735999999842647e-06, 9.235999999468447e-06, 8.735999999842647e-06, 8.610999999270064e-06, 8.929999999907068e-06, 8.764000000383021e-06, 9.0699999999444e-06, 8.417000000093822e-06]</msg>
<status status="PASS" starttime="20201030 10:58:01.776" endtime="20201030 10:58:01.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.766" endtime="20201030 10:58:01.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.255" endtime="20201030 10:58:01.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.255" endtime="20201030 10:58:01.784"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.804" endtime="20201030 10:58:01.816"></status>
</kw>
<msg timestamp="20201030 10:58:01.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.801" endtime="20201030 10:58:01.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.819" endtime="20201030 10:58:01.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.827" endtime="20201030 10:58:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.794" endtime="20201030 10:58:01.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.789" endtime="20201030 10:58:01.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.850" endtime="20201030 10:58:02.216"></status>
</kw>
<msg timestamp="20201030 10:58:02.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.200669611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.200678528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.846" endtime="20201030 10:58:02.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.200669611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.200678528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.228" endtime="20201030 10:58:02.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.250" endtime="20201030 10:58:02.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.839" endtime="20201030 10:58:02.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.835" endtime="20201030 10:58:02.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.267" level="INFO">${RESULT} = [{'diff': 8.916999999719621e-06}, {'diff': 8.722999999655201e-06}, {'diff': 8.749999999224656e-06}, {'diff': 8.47200000020365e-06}, {'diff': 9.237000000439366e-06}, {'diff': 8.763999999494843e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:02.258" endtime="20201030 10:58:02.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:02.278" level="INFO">${OVERHEAD} = {'diff': [8.916999999719621e-06, 8.722999999655201e-06, 8.749999999224656e-06, 8.47200000020365e-06, 9.237000000439366e-06, 8.763999999494843e-06, 8.735999999842647e-06, 9.235999999468447e-06, 8.73599...</msg>
<status status="PASS" starttime="20201030 10:58:02.270" endtime="20201030 10:58:02.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.288" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:02.286" endtime="20201030 10:58:02.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.294" level="INFO">VALUE: [8.916999999719621e-06, 8.722999999655201e-06, 8.749999999224656e-06, 8.47200000020365e-06, 9.237000000439366e-06, 8.763999999494843e-06, 8.735999999842647e-06, 9.235999999468447e-06, 8.735999999842647e-06, 8.610999999270064e-06, 8.929999999907068e-06, 8.764000000383021e-06, 9.0699999999444e-06, 8.417000000093822e-06, 8.735999999842647e-06, 9.222000000086439e-06, 8.97199999982945e-06, 8.930999999989808e-06, 8.915999999636881e-06, 9.070000000832579e-06, 9.084000000214587e-06, 9.304999999848462e-06, 9.083000000131847e-06, 9.250000000626812e-06, 9.083999999326409e-06, 8.9170000006078e-06, 9.277000000196267e-06, 9.26400000000882e-06, 8.915999999636881e-06, 8.387999999470708e-06, 8.735999999842647e-06, 9.263000000814259e-06, 8.417000000093822e-06, 8.916999999719621e-06, 8.416000000011081e-06, 9.083000000131847e-06, 8.416000000011081e-06, 9.26400000000882e-06, 8.596999999888055e-06, 8.569999999430422e-06, 8.597999999970796e-06, 9.32000000020139e-06, 8.750000000112834e-06, 8.56900000023586e-06, 9.083000000131847e-06, 9.250000000626812e-06, 8.764000000383021e-06, 8.750000000112834e-06, 9.249999999738634e-06, 8.916999999719621e-06, 9.250000000626812e-06, 9.097999999596595e-06, 8.903000000337613e-06, 8.679999999650079e-06, 9.416999999345421e-06, 8.763999999494843e-06, 9.097000000402033e-06, 8.736000000730826e-06, 9.26400000000882e-06, 8.763999999494843e-06, 9.249999999738634e-06, 8.583000000506047e-06, 8.43099999947583e-06, 8.750000000112834e-06]</msg>
<status status="PASS" starttime="20201030 10:58:02.290" endtime="20201030 10:58:02.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.280" endtime="20201030 10:58:02.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.786" endtime="20201030 10:58:02.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.785" endtime="20201030 10:58:02.298"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.318" endtime="20201030 10:58:02.332"></status>
</kw>
<msg timestamp="20201030 10:58:02.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.315" endtime="20201030 10:58:02.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.340" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.336" endtime="20201030 10:58:02.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.342" endtime="20201030 10:58:02.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.308" endtime="20201030 10:58:02.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.303" endtime="20201030 10:58:02.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.365" endtime="20201030 10:58:02.725"></status>
</kw>
<msg timestamp="20201030 10:58:02.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.719928667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.719937917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.362" endtime="20201030 10:58:02.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.719928667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.719937917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.736" endtime="20201030 10:58:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.758" endtime="20201030 10:58:02.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.354" endtime="20201030 10:58:02.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.350" endtime="20201030 10:58:02.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.776" level="INFO">${RESULT} = [{'diff': 9.250000000626812e-06}, {'diff': 9.097999999596595e-06}, {'diff': 8.903000000337613e-06}, {'diff': 8.679999999650079e-06}, {'diff': 9.416999999345421e-06}, {'diff': 8.763999999494843e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:02.766" endtime="20201030 10:58:02.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:02.788" level="INFO">${OVERHEAD} = {'diff': [9.250000000626812e-06, 9.097999999596595e-06, 8.903000000337613e-06, 8.679999999650079e-06, 9.416999999345421e-06, 8.763999999494843e-06, 9.097000000402033e-06, 8.736000000730826e-06, 9.2640...</msg>
<status status="PASS" starttime="20201030 10:58:02.778" endtime="20201030 10:58:02.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.797" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:02.795" endtime="20201030 10:58:02.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.803" level="INFO">VALUE: [9.250000000626812e-06, 9.097999999596595e-06, 8.903000000337613e-06, 8.679999999650079e-06, 9.416999999345421e-06, 8.763999999494843e-06, 9.097000000402033e-06, 8.736000000730826e-06, 9.26400000000882e-06, 8.763999999494843e-06, 9.249999999738634e-06, 8.583000000506047e-06, 8.43099999947583e-06, 8.750000000112834e-06, 8.416000000011081e-06, 8.583999999700609e-06, 9.097999999596595e-06, 8.77799999976503e-06, 8.860999999527053e-06, 8.360999999013075e-06, 8.930999999989808e-06, 9.083000000131847e-06, 9.083000000131847e-06, 9.08299999835549e-06, 9.069999999056222e-06, 9.068999998973482e-06, 8.56900000023586e-06, 8.582999999617869e-06, 8.9170000006078e-06, 8.749999999224656e-06, 8.750000001001013e-06, 8.735999999842647e-06, 8.583000001394225e-06, 8.361000000789431e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.5700000003186e-06, 8.749999999224656e-06, 8.929999999907068e-06, 9.249999999738634e-06, 9.096999999513855e-06, 9.249999999738634e-06, 8.582999999617869e-06, 8.91600000052506e-06, 8.417000000093822e-06, 9.084000000214587e-06, 9.11100000067222e-06, 8.541999999778227e-06, 8.541999999778227e-06, 8.638000000615875e-06, 8.402000000629073e-06, 9.08299999835549e-06, 8.583000001394225e-06, 8.457999999933463e-06, 8.402000000629073e-06, 8.403000000711813e-06, 8.958000000447441e-06, 8.9170000006078e-06, 8.568999998459503e-06, 8.416000000011081e-06, 8.902999999449435e-06, 9.249999999738634e-06, 8.792000000923395e-06, 9.277000000196267e-06]</msg>
<status status="PASS" starttime="20201030 10:58:02.800" endtime="20201030 10:58:02.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.789" endtime="20201030 10:58:02.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.300" endtime="20201030 10:58:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.299" endtime="20201030 10:58:02.807"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.827" endtime="20201030 10:58:02.839"></status>
</kw>
<msg timestamp="20201030 10:58:02.841" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.824" endtime="20201030 10:58:02.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.843" endtime="20201030 10:58:02.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.850" endtime="20201030 10:58:02.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.817" endtime="20201030 10:58:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.812" endtime="20201030 10:58:02.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.873" endtime="20201030 10:58:03.245"></status>
</kw>
<msg timestamp="20201030 10:58:03.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.224381931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.224390333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.869" endtime="20201030 10:58:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.224381931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.224390333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.257" endtime="20201030 10:58:03.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.279" endtime="20201030 10:58:03.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.862" endtime="20201030 10:58:03.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.858" endtime="20201030 10:58:03.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.297" level="INFO">${RESULT} = [{'diff': 8.402000000629073e-06}, {'diff': 9.08299999835549e-06}, {'diff': 8.583000001394225e-06}, {'diff': 8.457999999933463e-06}, {'diff': 8.402000000629073e-06}, {'diff': 8.403000000711813e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:03.287" endtime="20201030 10:58:03.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:03.309" level="INFO">${OVERHEAD} = {'diff': [8.402000000629073e-06, 9.08299999835549e-06, 8.583000001394225e-06, 8.457999999933463e-06, 8.402000000629073e-06, 8.403000000711813e-06, 8.958000000447441e-06, 8.9170000006078e-06, 8.5689999...</msg>
<status status="PASS" starttime="20201030 10:58:03.299" endtime="20201030 10:58:03.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.319" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:03.316" endtime="20201030 10:58:03.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.324" level="INFO">VALUE: [8.402000000629073e-06, 9.08299999835549e-06, 8.583000001394225e-06, 8.457999999933463e-06, 8.402000000629073e-06, 8.403000000711813e-06, 8.958000000447441e-06, 8.9170000006078e-06, 8.568999998459503e-06, 8.416000000011081e-06, 8.902999999449435e-06, 9.249999999738634e-06, 8.792000000923395e-06, 9.277000000196267e-06, 9.25000000151499e-06, 8.722000000460639e-06, 8.582999999617869e-06, 9.055999999674214e-06, 8.722000000460639e-06, 8.596999998999877e-06, 8.528000000396219e-06, 9.249999999738634e-06, 8.417000000093822e-06, 8.959000000530182e-06, 8.818999999604671e-06, 9.084000000214587e-06, 8.444000000551455e-06, 8.597000000776234e-06, 9.069999999056222e-06, 9.097999999596595e-06, 8.9170000006078e-06, 8.582999999617869e-06, 8.597000000776234e-06, 8.930000001683425e-06, 8.929999999907068e-06, 9.0269999990511e-06, 9.306000000819381e-06, 8.763999998606664e-06, 8.76300000030028e-06, 9.249999999738634e-06, 8.5700000003186e-06, 8.430000001169446e-06, 8.722000000460639e-06, 8.930999999989808e-06, 9.249999999738634e-06, 9.083000000131847e-06, 8.402999998935456e-06, 8.931000001766165e-06, 9.110999998895863e-06, 9.236000000356626e-06, 8.9170000006078e-06, 8.582999999617869e-06, 9.236000000356626e-06, 8.37500000017144e-06, 8.611000000158242e-06, 8.875000000685418e-06, 9.16599999989387e-06, 8.402000000629073e-06, 8.750000001001013e-06, 9.249999999738634e-06, 9.237000000439366e-06, 8.749999999224656e-06, 8.402999998935456e-06, 9.08399999843823e-06]</msg>
<status status="PASS" starttime="20201030 10:58:03.321" endtime="20201030 10:58:03.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.311" endtime="20201030 10:58:03.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.809" endtime="20201030 10:58:03.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.808" endtime="20201030 10:58:03.329"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.349" endtime="20201030 10:58:03.361"></status>
</kw>
<msg timestamp="20201030 10:58:03.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.345" endtime="20201030 10:58:03.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.369" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.365" endtime="20201030 10:58:03.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.371" endtime="20201030 10:58:03.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.338" endtime="20201030 10:58:03.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.334" endtime="20201030 10:58:03.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.394" endtime="20201030 10:58:03.768"></status>
</kw>
<msg timestamp="20201030 10:58:03.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.724295069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.724303986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.391" endtime="20201030 10:58:03.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.724295069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.724303986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.779" endtime="20201030 10:58:03.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.801" endtime="20201030 10:58:03.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.384" endtime="20201030 10:58:03.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.379" endtime="20201030 10:58:03.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.819" level="INFO">${RESULT} = [{'diff': 8.9170000006078e-06}, {'diff': 8.582999999617869e-06}, {'diff': 9.236000000356626e-06}, {'diff': 8.37500000017144e-06}, {'diff': 8.611000000158242e-06}, {'diff': 8.875000000685418e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:03.809" endtime="20201030 10:58:03.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:03.829" level="INFO">${OVERHEAD} = {'diff': [8.9170000006078e-06, 8.582999999617869e-06, 9.236000000356626e-06, 8.37500000017144e-06, 8.611000000158242e-06, 8.875000000685418e-06, 9.16599999989387e-06, 8.402000000629073e-06, 8.75000000...</msg>
<status status="PASS" starttime="20201030 10:58:03.821" endtime="20201030 10:58:03.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.839" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:03.837" endtime="20201030 10:58:03.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.845" level="INFO">VALUE: [8.9170000006078e-06, 8.582999999617869e-06, 9.236000000356626e-06, 8.37500000017144e-06, 8.611000000158242e-06, 8.875000000685418e-06, 9.16599999989387e-06, 8.402000000629073e-06, 8.750000001001013e-06, 9.249999999738634e-06, 9.237000000439366e-06, 8.749999999224656e-06, 8.402999998935456e-06, 9.08399999843823e-06, 8.707999999302274e-06, 8.764000000383021e-06, 8.62499999954025e-06, 9.290999999578275e-06, 8.42999999939309e-06, 8.9170000006078e-06, 9.249999999738634e-06, 8.596999998999877e-06, 9.097000001290212e-06, 9.30500000073664e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.430000000421046e-06, 8.764000000383021e-06, 9.096999999513855e-06, 8.42999999939309e-06, 8.97199999982945e-06, 9.070000000832579e-06, 9.249999999738634e-06, 8.417000000093822e-06, 8.42999999939309e-06, 8.43099999947583e-06, 8.638999998922259e-06, 8.722000000460639e-06, 9.084000000214587e-06, 8.750000001001013e-06, 8.77799999976503e-06, 8.555999999160235e-06, 8.749999999224656e-06, 9.083000000131847e-06, 8.9170000006078e-06, 9.249999999738634e-06, 8.749999999224656e-06, 9.070000000832579e-06, 9.264000000897e-06, 9.278000000279008e-06, 8.417000000093822e-06, 8.902999999449435e-06, 8.902999999449435e-06, 9.30500000073664e-06, 9.416000001039038e-06, 8.944999999371817e-06, 9.249999999738634e-06, 8.584000001476966e-06, 9.235999998580269e-06, 9.264000000897e-06, 8.43099999947583e-06, 8.625000001316607e-06, 9.125000000054229e-06, 8.875000000685418e-06]</msg>
<status status="PASS" starttime="20201030 10:58:03.842" endtime="20201030 10:58:03.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.831" endtime="20201030 10:58:03.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.330" endtime="20201030 10:58:03.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.329" endtime="20201030 10:58:03.849"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.870" endtime="20201030 10:58:03.883"></status>
</kw>
<msg timestamp="20201030 10:58:03.885" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.866" endtime="20201030 10:58:03.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.887" endtime="20201030 10:58:03.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.893" endtime="20201030 10:58:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.859" endtime="20201030 10:58:03.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.854" endtime="20201030 10:58:03.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.916" endtime="20201030 10:58:04.288"></status>
</kw>
<msg timestamp="20201030 10:58:04.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.236165125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.236173542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.913" endtime="20201030 10:58:04.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.236165125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.236173542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.300" endtime="20201030 10:58:04.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.321" endtime="20201030 10:58:04.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.906" endtime="20201030 10:58:04.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.901" endtime="20201030 10:58:04.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.340" level="INFO">${RESULT} = [{'diff': 8.417000000093822e-06}, {'diff': 8.902999999449435e-06}, {'diff': 8.902999999449435e-06}, {'diff': 9.30500000073664e-06}, {'diff': 9.416000001039038e-06}, {'diff': 8.944999999371817e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:04.330" endtime="20201030 10:58:04.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:04.351" level="INFO">${OVERHEAD} = {'diff': [8.417000000093822e-06, 8.902999999449435e-06, 8.902999999449435e-06, 9.30500000073664e-06, 9.416000001039038e-06, 8.944999999371817e-06, 9.249999999738634e-06, 8.584000001476966e-06, 9.23599...</msg>
<status status="PASS" starttime="20201030 10:58:04.342" endtime="20201030 10:58:04.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.361" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:58:04.359" endtime="20201030 10:58:04.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.367" level="INFO">VALUE: [8.417000000093822e-06, 8.902999999449435e-06, 8.902999999449435e-06, 9.30500000073664e-06, 9.416000001039038e-06, 8.944999999371817e-06, 9.249999999738634e-06, 8.584000001476966e-06, 9.235999998580269e-06, 9.264000000897e-06, 8.43099999947583e-06, 8.625000001316607e-06, 9.125000000054229e-06, 8.875000000685418e-06, 9.263999999120642e-06, 8.750000001001013e-06, 9.263999999120642e-06, 8.388999999553448e-06, 9.098000001372952e-06, 9.096999999513855e-06, 9.37499999942304e-06, 8.735999999842647e-06, 8.443999998775098e-06, 8.582999999617869e-06, 8.929999999907068e-06, 8.417000000093822e-06, 8.583999999700609e-06, 9.249999999738634e-06, 9.083000000131847e-06, 8.902999999449435e-06, 9.069000000749838e-06, 9.416999999345421e-06, 9.416000001039038e-06, 8.819999999687411e-06, 8.611000000158242e-06, 8.736999999925388e-06, 9.25000000151499e-06, 9.249999999738634e-06, 9.08299999835549e-06, 9.236000000356626e-06, 9.16699999997661e-06, 9.084000000214587e-06, 9.222999999281e-06, 8.403000000711813e-06, 8.416000000011081e-06, 9.084000000214587e-06, 9.416000001039038e-06, 9.277000000196267e-06, 8.91600000052506e-06, 8.403000000711813e-06, 8.750000001001013e-06, 9.083000000131847e-06, 9.264000000897e-06, 8.750000001001013e-06, 8.653000000080624e-06, 8.388000001247065e-06, 8.611000000158242e-06, 9.249999999738634e-06, 9.263999999120642e-06, 9.083000000131847e-06, 8.597999999082617e-06, 8.791000000840654e-06, 9.389000000581404e-06, 8.417000000093822e-06]</msg>
<status status="PASS" starttime="20201030 10:58:04.364" endtime="20201030 10:58:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.353" endtime="20201030 10:58:04.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.851" endtime="20201030 10:58:04.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.850" endtime="20201030 10:58:04.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.043" endtime="20201030 10:58:04.372"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:53.912" endtime="20201030 10:58:04.374" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.394" endtime="20201030 10:58:04.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.390" endtime="20201030 10:58:04.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.451" endtime="20201030 10:58:04.469"></status>
</kw>
<msg timestamp="20201030 10:58:04.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.448" endtime="20201030 10:58:04.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.476" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.472" endtime="20201030 10:58:04.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.483" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:04.478" endtime="20201030 10:58:04.483"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:04.440" endtime="20201030 10:58:04.485"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:04.434" endtime="20201030 10:58:04.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.431" endtime="20201030 10:58:04.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:04.495" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:04.494" endtime="20201030 10:58:04.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.489" endtime="20201030 10:58:04.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.429" endtime="20201030 10:58:04.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.427" endtime="20201030 10:58:04.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.499" endtime="20201030 10:58:04.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.423" endtime="20201030 10:58:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.419" endtime="20201030 10:58:04.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.388" endtime="20201030 10:58:04.506"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.532" endtime="20201030 10:58:04.552"></status>
</kw>
<msg timestamp="20201030 10:58:04.553" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.528" endtime="20201030 10:58:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.559" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.555" endtime="20201030 10:58:04.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.561" endtime="20201030 10:58:04.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.519" endtime="20201030 10:58:04.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.513" endtime="20201030 10:58:04.568"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.572" endtime="20201030 10:58:04.577"></status>
</kw>
<msg timestamp="20201030 10:58:04.578" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:04.570" endtime="20201030 10:58:04.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.589" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:04.587" endtime="20201030 10:58:04.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.593" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:04.591" endtime="20201030 10:58:04.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.581" endtime="20201030 10:58:04.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.605" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:04.603" endtime="20201030 10:58:04.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.609" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:04.607" endtime="20201030 10:58:04.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.597" endtime="20201030 10:58:04.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.628" endtime="20201030 10:58:04.971"></status>
</kw>
<msg timestamp="20201030 10:58:04.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129297153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129312944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.625" endtime="20201030 10:58:04.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129297153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129312944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.981" endtime="20201030 10:58:04.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.000" endtime="20201030 10:58:05.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.618" endtime="20201030 10:58:05.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.613" endtime="20201030 10:58:05.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.018" level="INFO">${RESULT} = [{'diff': 1.5791000000014987e-05}, {'diff': 1.594499999998944e-05}, {'diff': 1.5777999999994075e-05}, {'diff': 1.6652999999977602e-05}, {'diff': 1.6125000000005718e-05}, {'diff': 1.6445000000003818e-0...</msg>
<status status="PASS" starttime="20201030 10:58:05.009" endtime="20201030 10:58:05.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:05.029" level="INFO">${OVERHEAD} = {'diff': [1.5791000000014987e-05, 1.594499999998944e-05, 1.5777999999994075e-05, 1.6652999999977602e-05, 1.6125000000005718e-05, 1.6445000000003818e-05, 1.5958000000010353e-05, 1.661099999999971e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:05.020" endtime="20201030 10:58:05.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.040" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:58:05.038" endtime="20201030 10:58:05.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.045" level="INFO">VALUE: [1.5791000000014987e-05, 1.594499999998944e-05, 1.5777999999994075e-05, 1.6652999999977602e-05, 1.6125000000005718e-05, 1.6445000000003818e-05, 1.5958000000010353e-05, 1.661099999999971e-05, 1.576300000000197e-05, 1.5957999999982597e-05, 1.594499999998944e-05, 1.6305999999993714e-05, 1.5929999999997335e-05, 1.6445000000003818e-05, 1.6791999999987706e-05, 1.5791999999986706e-05, 1.5764000000001444e-05, 1.6276999999981223e-05, 1.5943999999989966e-05, 1.6124999999977963e-05, 1.645899999999645e-05, 1.579200000001446e-05, 1.6625000000020096e-05, 1.5916999999976422e-05, 1.6222000000010173e-05, 1.587499999999853e-05, 1.661099999999971e-05, 1.629100000000161e-05, 1.5917000000004178e-05, 1.6457999999996975e-05, 1.661099999999971e-05, 1.6097999999992174e-05, 1.629100000000161e-05, 1.6305999999993714e-05, 1.6499999999974868e-05, 1.5958000000010353e-05, 1.627700000000898e-05, 1.5917000000004178e-05, 1.6375000000012907e-05, 1.5791999999986706e-05, 1.6125000000005718e-05, 1.5958000000010353e-05, 1.5959000000009826e-05, 1.5957999999982597e-05, 1.5958000000010353e-05, 1.661099999999971e-05, 1.6444000000004344e-05, 1.6263999999988066e-05, 1.645899999999645e-05, 1.6763999999974688e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.042" endtime="20201030 10:58:05.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.030" endtime="20201030 10:58:05.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.508" endtime="20201030 10:58:05.049"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:04.380" endtime="20201030 10:58:05.052" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.072" endtime="20201030 10:58:05.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.068" endtime="20201030 10:58:05.095"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.128" endtime="20201030 10:58:05.146"></status>
</kw>
<msg timestamp="20201030 10:58:05.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.125" endtime="20201030 10:58:05.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.149" endtime="20201030 10:58:05.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.160" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:05.156" endtime="20201030 10:58:05.161"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:05.118" endtime="20201030 10:58:05.163"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:05.111" endtime="20201030 10:58:05.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.109" endtime="20201030 10:58:05.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:05.173" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:05.171" endtime="20201030 10:58:05.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.167" endtime="20201030 10:58:05.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.107" endtime="20201030 10:58:05.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.105" endtime="20201030 10:58:05.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.176" endtime="20201030 10:58:05.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.101" endtime="20201030 10:58:05.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.097" endtime="20201030 10:58:05.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.065" endtime="20201030 10:58:05.183"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.209" endtime="20201030 10:58:05.316"></status>
</kw>
<msg timestamp="20201030 10:58:05.317" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.206" endtime="20201030 10:58:05.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.323" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.319" endtime="20201030 10:58:05.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.325" endtime="20201030 10:58:05.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.198" endtime="20201030 10:58:05.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.191" endtime="20201030 10:58:05.332"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.337" endtime="20201030 10:58:05.341"></status>
</kw>
<msg timestamp="20201030 10:58:05.342" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:05.334" endtime="20201030 10:58:05.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.353" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:05.351" endtime="20201030 10:58:05.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.357" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:05.355" endtime="20201030 10:58:05.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.345" endtime="20201030 10:58:05.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.369" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:05.367" endtime="20201030 10:58:05.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.373" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:05.371" endtime="20201030 10:58:05.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.361" endtime="20201030 10:58:05.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.392" endtime="20201030 10:58:05.738"></status>
</kw>
<msg timestamp="20201030 10:58:05.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130426014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130480764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.389" endtime="20201030 10:58:05.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130426014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130480764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.748" endtime="20201030 10:58:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.766" endtime="20201030 10:58:05.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.382" endtime="20201030 10:58:05.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.377" endtime="20201030 10:58:05.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.783" level="INFO">${RESULT} = [{'diff': 5.4749999999992305e-05}, {'diff': 5.5013999999992125e-05}, {'diff': 5.502800000001251e-05}, {'diff': 5.504200000000514e-05}, {'diff': 5.502800000001251e-05}, {'diff': 5.502800000001251e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:05.774" endtime="20201030 10:58:05.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:05.794" level="INFO">${OVERHEAD} = {'diff': [5.4749999999992305e-05, 5.5013999999992125e-05, 5.502800000001251e-05, 5.504200000000514e-05, 5.502800000001251e-05, 5.502800000001251e-05, 5.507000000001816e-05, 5.4999999999999494e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 10:58:05.785" endtime="20201030 10:58:05.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.805" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:58:05.803" endtime="20201030 10:58:05.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.810" level="INFO">VALUE: [5.4749999999992305e-05, 5.5013999999992125e-05, 5.502800000001251e-05, 5.504200000000514e-05, 5.502800000001251e-05, 5.502800000001251e-05, 5.507000000001816e-05, 5.4999999999999494e-05, 5.504100000000567e-05, 5.4999999999999494e-05, 5.5027999999984756e-05, 5.504200000000514e-05, 5.502700000001304e-05, 5.4944000000001214e-05, 5.506899999999093e-05, 5.506899999999093e-05, 5.5027999999984756e-05, 5.504200000000514e-05, 5.502700000001304e-05, 5.504199999997739e-05, 5.505599999999777e-05, 5.504200000000514e-05, 5.505599999999777e-05, 5.504199999997739e-05, 5.504200000000514e-05, 5.50549999999983e-05, 5.50549999999983e-05, 5.5027999999984756e-05, 5.5013999999992125e-05, 5.5013999999992125e-05, 5.5027999999984756e-05, 5.5027999999984756e-05, 5.507000000001816e-05, 5.4957999999993845e-05, 5.504200000000514e-05, 5.5027999999984756e-05, 5.502800000001251e-05, 5.504100000000567e-05, 5.5069999999990404e-05, 5.5027999999984756e-05, 5.498599999997911e-05, 5.4999999999999494e-05, 5.5027999999984756e-05, 5.504100000000567e-05, 5.5027999999984756e-05, 5.502700000001304e-05, 5.502800000001251e-05, 5.502800000001251e-05, 5.5055000000026055e-05, 5.504200000000514e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.807" endtime="20201030 10:58:05.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.795" endtime="20201030 10:58:05.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.186" endtime="20201030 10:58:05.814"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:05.058" endtime="20201030 10:58:05.817" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.837" endtime="20201030 10:58:05.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.832" endtime="20201030 10:58:05.860"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.893" endtime="20201030 10:58:05.911"></status>
</kw>
<msg timestamp="20201030 10:58:05.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.890" endtime="20201030 10:58:05.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.914" endtime="20201030 10:58:05.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:05.921" endtime="20201030 10:58:05.926"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:05.883" endtime="20201030 10:58:05.927"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:05.876" endtime="20201030 10:58:05.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.874" endtime="20201030 10:58:05.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:05.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:05.936" endtime="20201030 10:58:05.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.932" endtime="20201030 10:58:05.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.872" endtime="20201030 10:58:05.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.870" endtime="20201030 10:58:05.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.943" endtime="20201030 10:58:05.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.866" endtime="20201030 10:58:05.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.862" endtime="20201030 10:58:05.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.830" endtime="20201030 10:58:05.951"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.974" endtime="20201030 10:58:06.283"></status>
</kw>
<msg timestamp="20201030 10:58:06.284" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.971" endtime="20201030 10:58:06.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.291" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.286" endtime="20201030 10:58:06.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.293" endtime="20201030 10:58:06.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.964" endtime="20201030 10:58:06.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.958" endtime="20201030 10:58:06.300"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.304" endtime="20201030 10:58:06.309"></status>
</kw>
<msg timestamp="20201030 10:58:06.310" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:06.301" endtime="20201030 10:58:06.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.321" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:06.318" endtime="20201030 10:58:06.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.325" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:06.323" endtime="20201030 10:58:06.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.311" endtime="20201030 10:58:06.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.337" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:06.335" endtime="20201030 10:58:06.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.342" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:06.340" endtime="20201030 10:58:06.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.329" endtime="20201030 10:58:06.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.361" endtime="20201030 10:58:06.703"></status>
</kw>
<msg timestamp="20201030 10:58:06.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13399525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134092958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.358" endtime="20201030 10:58:06.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13399525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134092958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.712" endtime="20201030 10:58:06.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.729" endtime="20201030 10:58:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.350" endtime="20201030 10:58:06.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.346" endtime="20201030 10:58:06.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.747" level="INFO">${RESULT} = [{'diff': 9.77080000000019e-05}, {'diff': 9.700000000001374e-05}, {'diff': 9.715300000001648e-05}, {'diff': 9.706899999997742e-05}, {'diff': 9.715300000001648e-05}, {'diff': 9.713799999999662e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:06.738" endtime="20201030 10:58:06.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:06.761" level="INFO">${OVERHEAD} = {'diff': [9.77080000000019e-05, 9.700000000001374e-05, 9.715300000001648e-05, 9.706899999997742e-05, 9.715300000001648e-05, 9.713799999999662e-05, 9.716700000000911e-05, 9.697200000000072e-05, 9.70979...</msg>
<status status="PASS" starttime="20201030 10:58:06.749" endtime="20201030 10:58:06.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.772" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:58:06.770" endtime="20201030 10:58:06.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.777" level="INFO">VALUE: [9.77080000000019e-05, 9.700000000001374e-05, 9.715300000001648e-05, 9.706899999997742e-05, 9.715300000001648e-05, 9.713799999999662e-05, 9.716700000000911e-05, 9.697200000000072e-05, 9.709799999998991e-05, 9.694499999998718e-05, 9.716600000000963e-05, 9.720800000001528e-05, 9.698599999999336e-05, 9.716700000000911e-05, 9.713800000002437e-05, 9.713900000002385e-05, 9.718000000000226e-05, 9.713899999999609e-05, 9.69439999999877e-05, 9.718100000000174e-05, 9.719400000002265e-05, 9.713899999996833e-05, 9.712500000003121e-05, 9.708299999999781e-05, 9.715199999998925e-05, 9.71669999999536e-05, 9.700000000001374e-05, 9.711100000003858e-05, 9.71669999999536e-05, 9.71249999999757e-05, 9.71669999999536e-05, 9.697200000002848e-05, 9.715199999998925e-05, 9.70699999999769e-05, 9.718100000000174e-05, 9.716599999998188e-05, 9.717999999997451e-05, 9.711099999998307e-05, 9.713899999996833e-05, 9.71669999999536e-05, 9.716700000000911e-05, 9.715300000001648e-05, 9.697200000002848e-05, 9.715300000001648e-05, 9.698600000002111e-05, 9.701400000000637e-05, 9.720800000001528e-05, 9.715300000001648e-05, 9.716700000000911e-05, 9.69859999999656e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.774" endtime="20201030 10:58:06.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.763" endtime="20201030 10:58:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.953" endtime="20201030 10:58:06.781"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:05.823" endtime="20201030 10:58:06.784" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.803" endtime="20201030 10:58:06.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.800" endtime="20201030 10:58:06.827"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.860" endtime="20201030 10:58:06.879"></status>
</kw>
<msg timestamp="20201030 10:58:06.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.857" endtime="20201030 10:58:06.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.887" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.883" endtime="20201030 10:58:06.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:06.889" endtime="20201030 10:58:06.894"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:06.850" endtime="20201030 10:58:06.896"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:06.844" endtime="20201030 10:58:06.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.841" endtime="20201030 10:58:06.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:06.906" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:06.905" endtime="20201030 10:58:06.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.900" endtime="20201030 10:58:06.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.839" endtime="20201030 10:58:06.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.837" endtime="20201030 10:58:06.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.910" endtime="20201030 10:58:06.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.833" endtime="20201030 10:58:06.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.829" endtime="20201030 10:58:06.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.797" endtime="20201030 10:58:06.916"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.940" endtime="20201030 10:58:06.961"></status>
</kw>
<msg timestamp="20201030 10:58:06.962" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.936" endtime="20201030 10:58:06.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.968" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.964" endtime="20201030 10:58:06.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.970" endtime="20201030 10:58:06.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.929" endtime="20201030 10:58:06.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.924" endtime="20201030 10:58:06.977"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.981" endtime="20201030 10:58:06.986"></status>
</kw>
<msg timestamp="20201030 10:58:06.987" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:06.979" endtime="20201030 10:58:06.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.998" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:06.995" endtime="20201030 10:58:06.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.003" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:07.000" endtime="20201030 10:58:07.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.989" endtime="20201030 10:58:07.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.014" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:07.012" endtime="20201030 10:58:07.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.019" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:07.017" endtime="20201030 10:58:07.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.006" endtime="20201030 10:58:07.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.039" endtime="20201030 10:58:07.387"></status>
</kw>
<msg timestamp="20201030 10:58:07.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128548708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.035" endtime="20201030 10:58:07.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128548708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.397" endtime="20201030 10:58:07.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.416" endtime="20201030 10:58:07.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.027" endtime="20201030 10:58:07.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.023" endtime="20201030 10:58:07.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.433" level="INFO">${RESULT} = [{'diff': 2.124999999991717e-06}, {'diff': 2.1390000000121034e-06}, {'diff': 2.1390000000121034e-06}, {'diff': 2.1119999999985595e-06}, {'diff': 2.152000000005261e-06}, {'diff': 2.124999999991717e-06}...</msg>
<status status="PASS" starttime="20201030 10:58:07.424" endtime="20201030 10:58:07.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:07.443" level="INFO">${OVERHEAD} = {'diff': [2.124999999991717e-06, 2.1390000000121034e-06, 2.1390000000121034e-06, 2.1119999999985595e-06, 2.152000000005261e-06, 2.124999999991717e-06, 2.138999999984348e-06, 2.110999999999086e-06, 2.1...</msg>
<status status="PASS" starttime="20201030 10:58:07.435" endtime="20201030 10:58:07.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.454" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:58:07.452" endtime="20201030 10:58:07.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.459" level="INFO">VALUE: [2.124999999991717e-06, 2.1390000000121034e-06, 2.1390000000121034e-06, 2.1119999999985595e-06, 2.152000000005261e-06, 2.124999999991717e-06, 2.138999999984348e-06, 2.110999999999086e-06, 2.124999999991717e-06, 2.2219999999961715e-06, 2.124999999991717e-06, 2.124999999991717e-06, 2.124999999991717e-06, 2.1800000000182784e-06, 2.097999999978173e-06, 2.1390000000121034e-06, 2.1940000000109094e-06, 2.1250000000194724e-06, 2.110999999999086e-06, 2.110999999999086e-06, 2.1390000000121034e-06, 2.138999999984348e-06, 2.0980000000059285e-06, 2.0690000000211928e-06, 2.055000000000806e-06, 2.1250000000194724e-06, 2.124999999991717e-06, 2.1530000000047345e-06, 2.138999999984348e-06, 2.1530000000047345e-06, 2.165999999997892e-06, 2.1800000000182784e-06, 2.138999999984348e-06, 2.138999999984348e-06, 2.1390000000121034e-06, 2.1530000000047345e-06, 2.124999999991717e-06, 2.1250000000194724e-06, 2.124999999991717e-06, 2.124999999991717e-06, 2.068999999993437e-06, 2.1530000000047345e-06, 2.124999999991717e-06, 2.1250000000194724e-06, 2.124999999991717e-06, 2.138999999984348e-06, 2.13800000001263e-06, 2.1250000000194724e-06, 2.1669999999973655e-06, 2.2219999999961715e-06]</msg>
<status status="PASS" starttime="20201030 10:58:07.456" endtime="20201030 10:58:07.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.444" endtime="20201030 10:58:07.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.919" endtime="20201030 10:58:07.463"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:06.790" endtime="20201030 10:58:07.466" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.485" endtime="20201030 10:58:07.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.481" endtime="20201030 10:58:07.508"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.543" endtime="20201030 10:58:07.560"></status>
</kw>
<msg timestamp="20201030 10:58:07.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.539" endtime="20201030 10:58:07.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.564" endtime="20201030 10:58:07.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.575" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:07.570" endtime="20201030 10:58:07.575"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:07.532" endtime="20201030 10:58:07.577"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:07.525" endtime="20201030 10:58:07.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.522" endtime="20201030 10:58:07.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:07.587" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:07.586" endtime="20201030 10:58:07.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.581" endtime="20201030 10:58:07.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.520" endtime="20201030 10:58:07.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.518" endtime="20201030 10:58:07.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.591" endtime="20201030 10:58:07.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.514" endtime="20201030 10:58:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.510" endtime="20201030 10:58:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.478" endtime="20201030 10:58:07.598"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.621" endtime="20201030 10:58:07.729"></status>
</kw>
<msg timestamp="20201030 10:58:07.730" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.617" endtime="20201030 10:58:07.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.736" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.732" endtime="20201030 10:58:07.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.739" endtime="20201030 10:58:07.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.610" endtime="20201030 10:58:07.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.604" endtime="20201030 10:58:07.745"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.750" endtime="20201030 10:58:07.754"></status>
</kw>
<msg timestamp="20201030 10:58:07.755" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:07.747" endtime="20201030 10:58:07.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.765" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:07.763" endtime="20201030 10:58:07.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.771" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:07.768" endtime="20201030 10:58:07.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.757" endtime="20201030 10:58:07.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.783" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:07.780" endtime="20201030 10:58:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.787" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:07.785" endtime="20201030 10:58:07.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.774" endtime="20201030 10:58:07.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.808" endtime="20201030 10:58:08.152"></status>
</kw>
<msg timestamp="20201030 10:58:08.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130134056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130146417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.804" endtime="20201030 10:58:08.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130134056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130146417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.162" endtime="20201030 10:58:08.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.180" endtime="20201030 10:58:08.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.795" endtime="20201030 10:58:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.791" endtime="20201030 10:58:08.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.197" level="INFO">${RESULT} = [{'diff': 1.236099999998852e-05}, {'diff': 1.236099999998852e-05}, {'diff': 1.2389000000001538e-05}, {'diff': 1.2361000000016276e-05}, {'diff': 1.2361999999987994e-05}, {'diff': 1.236099999998852e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:08.189" endtime="20201030 10:58:08.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:08.207" level="INFO">${OVERHEAD} = {'diff': [1.236099999998852e-05, 1.236099999998852e-05, 1.2389000000001538e-05, 1.2361000000016276e-05, 1.2361999999987994e-05, 1.236099999998852e-05, 1.2346999999995889e-05, 1.2361000000016276e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:08.199" endtime="20201030 10:58:08.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.218" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:58:08.215" endtime="20201030 10:58:08.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.223" level="INFO">VALUE: [1.236099999998852e-05, 1.236099999998852e-05, 1.2389000000001538e-05, 1.2361000000016276e-05, 1.2361999999987994e-05, 1.236099999998852e-05, 1.2346999999995889e-05, 1.2361000000016276e-05, 1.2389000000001538e-05, 1.2361000000016276e-05, 1.2361000000016276e-05, 1.2361000000016276e-05, 1.2346999999995889e-05, 1.2346999999995889e-05, 1.236099999998852e-05, 1.2361000000016276e-05, 1.2361000000016276e-05, 1.236099999998852e-05, 1.2361000000016276e-05, 1.2346999999995889e-05, 1.236099999998852e-05, 1.236099999998852e-05, 1.236099999998852e-05, 1.2346999999995889e-05, 1.2361000000016276e-05, 1.2305999999989714e-05, 1.2375000000008907e-05, 1.2346999999995889e-05, 1.2389000000001538e-05, 1.2361999999987994e-05, 1.2346999999995889e-05, 1.2374999999981151e-05, 1.2305000000017996e-05, 1.236099999998852e-05, 1.230499999999024e-05, 1.2319999999982345e-05, 1.2361000000016276e-05, 1.2401999999994695e-05, 1.2389000000001538e-05, 1.2361000000016276e-05, 1.2361999999987994e-05, 1.2333999999974976e-05, 1.2277000000004978e-05, 1.2389000000001538e-05, 1.2389000000001538e-05, 1.2444000000000344e-05, 1.230600000001747e-05, 1.2361000000016276e-05, 1.2333000000003258e-05, 1.2374999999981151e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.220" endtime="20201030 10:58:08.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.208" endtime="20201030 10:58:08.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.600" endtime="20201030 10:58:08.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:07.472" endtime="20201030 10:58:08.229" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.247" endtime="20201030 10:58:08.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.243" endtime="20201030 10:58:08.271"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.305" endtime="20201030 10:58:08.323"></status>
</kw>
<msg timestamp="20201030 10:58:08.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.302" endtime="20201030 10:58:08.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.326" endtime="20201030 10:58:08.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.337" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:08.333" endtime="20201030 10:58:08.338"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:08.295" endtime="20201030 10:58:08.340"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:08.289" endtime="20201030 10:58:08.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.286" endtime="20201030 10:58:08.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:08.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:08.348" endtime="20201030 10:58:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.344" endtime="20201030 10:58:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.284" endtime="20201030 10:58:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.282" endtime="20201030 10:58:08.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.353" endtime="20201030 10:58:08.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.277" endtime="20201030 10:58:08.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.272" endtime="20201030 10:58:08.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.241" endtime="20201030 10:58:08.360"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.383" endtime="20201030 10:58:08.693"></status>
</kw>
<msg timestamp="20201030 10:58:08.695" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.380" endtime="20201030 10:58:08.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.701" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.697" endtime="20201030 10:58:08.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.703" endtime="20201030 10:58:08.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.373" endtime="20201030 10:58:08.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.367" endtime="20201030 10:58:08.710"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.714" endtime="20201030 10:58:08.719"></status>
</kw>
<msg timestamp="20201030 10:58:08.720" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:08.712" endtime="20201030 10:58:08.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.730" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:08.727" endtime="20201030 10:58:08.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.735" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:08.733" endtime="20201030 10:58:08.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.722" endtime="20201030 10:58:08.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.747" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:08.744" endtime="20201030 10:58:08.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.751" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:08.749" endtime="20201030 10:58:08.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.739" endtime="20201030 10:58:08.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.772" endtime="20201030 10:58:09.113"></status>
</kw>
<msg timestamp="20201030 10:58:09.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133297889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.769" endtime="20201030 10:58:09.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133297889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.122" endtime="20201030 10:58:09.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.140" endtime="20201030 10:58:09.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.761" endtime="20201030 10:58:09.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.757" endtime="20201030 10:58:09.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.157" level="INFO">${RESULT} = [{'diff': 2.2804999999986864e-05}, {'diff': 2.2804999999986864e-05}, {'diff': 2.2805999999986337e-05}, {'diff': 2.2764000000008444e-05}, {'diff': 2.2806000000014093e-05}, {'diff': 2.2791999999993706e-...</msg>
<status status="PASS" starttime="20201030 10:58:09.149" endtime="20201030 10:58:09.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:09.167" level="INFO">${OVERHEAD} = {'diff': [2.2804999999986864e-05, 2.2804999999986864e-05, 2.2805999999986337e-05, 2.2764000000008444e-05, 2.2806000000014093e-05, 2.2791999999993706e-05, 2.2806000000014093e-05, 2.2806000000014093e-05...</msg>
<status status="PASS" starttime="20201030 10:58:09.159" endtime="20201030 10:58:09.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.178" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:58:09.175" endtime="20201030 10:58:09.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.183" level="INFO">VALUE: [2.2804999999986864e-05, 2.2804999999986864e-05, 2.2805999999986337e-05, 2.2764000000008444e-05, 2.2806000000014093e-05, 2.2791999999993706e-05, 2.2806000000014093e-05, 2.2806000000014093e-05, 2.276399999998069e-05, 2.2778000000001075e-05, 2.2791999999993706e-05, 2.2790999999994233e-05, 2.280500000001462e-05, 2.280500000001462e-05, 2.2804999999986864e-05, 2.280500000001462e-05, 2.2792000000021462e-05, 2.276399999998069e-05, 2.276399999998069e-05, 2.2804999999986864e-05, 2.2791999999993706e-05, 2.2778000000001075e-05, 2.2791000000021988e-05, 2.2791999999993706e-05, 2.281900000000725e-05, 2.2764000000008444e-05, 2.2778000000001075e-05, 2.2764000000008444e-05, 2.2805999999986337e-05, 2.2791999999993706e-05, 2.2792000000049217e-05, 2.280500000001462e-05, 2.2764000000008444e-05, 2.2805999999986337e-05, 2.2791999999993706e-05, 2.2790999999966477e-05, 2.281900000000725e-05, 2.2791999999993706e-05, 2.281900000000725e-05, 2.2804999999959108e-05, 2.2805999999986337e-05, 2.2805999999986337e-05, 2.280500000001462e-05, 2.2791000000021988e-05, 2.2790999999966477e-05, 2.280500000001462e-05, 2.2778000000001075e-05, 2.2791999999993706e-05, 2.2776999999973846e-05, 2.283299999999988e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.180" endtime="20201030 10:58:09.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.169" endtime="20201030 10:58:09.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.362" endtime="20201030 10:58:09.187"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:08.234" endtime="20201030 10:58:09.189" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.208" endtime="20201030 10:58:09.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.203" endtime="20201030 10:58:09.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.265" endtime="20201030 10:58:09.283"></status>
</kw>
<msg timestamp="20201030 10:58:09.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.262" endtime="20201030 10:58:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.286" endtime="20201030 10:58:09.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:09.293" endtime="20201030 10:58:09.297"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:09.255" endtime="20201030 10:58:09.299"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:09.248" endtime="20201030 10:58:09.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.246" endtime="20201030 10:58:09.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:09.309" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:09.308" endtime="20201030 10:58:09.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.304" endtime="20201030 10:58:09.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.244" endtime="20201030 10:58:09.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.242" endtime="20201030 10:58:09.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.313" endtime="20201030 10:58:09.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.237" endtime="20201030 10:58:09.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.233" endtime="20201030 10:58:09.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.200" endtime="20201030 10:58:09.320"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.330" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:09.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:11.254" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:09.326" endtime="20201030 10:58:11.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.261" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:11.257" endtime="20201030 10:58:11.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.322" endtime="20201030 10:58:11.263"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.272" endtime="20201030 10:58:11.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.268" endtime="20201030 10:58:11.296"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.320" endtime="20201030 10:58:11.328"></status>
</kw>
<msg timestamp="20201030 10:58:11.329" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.316" endtime="20201030 10:58:11.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.336" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.332" endtime="20201030 10:58:11.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.338" endtime="20201030 10:58:11.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.307" endtime="20201030 10:58:11.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.301" endtime="20201030 10:58:11.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.362" endtime="20201030 10:58:11.697"></status>
</kw>
<msg timestamp="20201030 10:58:11.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037404264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:11.359" endtime="20201030 10:58:11.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037404264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037406875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:11.707" endtime="20201030 10:58:11.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.725" endtime="20201030 10:58:11.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.352" endtime="20201030 10:58:11.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.346" endtime="20201030 10:58:11.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:11.742" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 1.6486000000003054e-05}, {'diff': 1.6333999999999793e-05}, {'diff': 1.6514000000002194e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.634699999999989e-05}, {'diff': 1.651400...</msg>
<status status="PASS" starttime="20201030 10:58:11.734" endtime="20201030 10:58:11.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.751" level="INFO">${RESULT} = {'diff': [0, 1.6486000000003054e-05, 1.6333999999999793e-05, 1.6514000000002194e-05, 1.6485999999996115e-05, 1.634699999999989e-05, 1.6514000000002194e-05, 1.6485999999996115e-05, 1.633300000000032e-0...</msg>
<status status="PASS" starttime="20201030 10:58:11.744" endtime="20201030 10:58:11.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.762" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:11.759" endtime="20201030 10:58:11.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.768" level="INFO">VALUE: [0, 1.6486000000003054e-05, 1.6333999999999793e-05, 1.6514000000002194e-05, 1.6485999999996115e-05, 1.634699999999989e-05, 1.6514000000002194e-05, 1.6485999999996115e-05, 1.633300000000032e-05, 1.652700000000229e-05, 1.633300000000032e-05, 1.6514000000002194e-05, 1.6499999999995685e-05, 1.633300000000032e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6333999999999793e-05, 1.6499999999995685e-05, 1.630499999999424e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.630500000000118e-05, 1.6513999999995255e-05, 1.6500000000002624e-05, 1.633300000000032e-05, 1.6458000000003914e-05, 1.6415999999998265e-05, 1.6485999999996115e-05, 1.6500000000002624e-05, 1.633300000000032e-05, 1.6486000000003054e-05, 1.6443999999997405e-05, 1.6333999999999793e-05, 1.6514000000002194e-05, 1.633300000000032e-05, 1.6500000000002624e-05, 1.6499999999995685e-05, 1.633300000000032e-05, 1.6500000000002624e-05, 1.6486000000003054e-05, 1.636099999999946e-05, 1.6499999999995685e-05, 1.633300000000032e-05, 1.6486000000003054e-05, 1.6431000000004248e-05, 1.631900000000075e-05, 1.6429999999997835e-05, 1.6528000000001764e-05, 1.6306000000000653e-05, 1.6513999999995255e-05]</msg>
<status status="PASS" starttime="20201030 10:58:11.765" endtime="20201030 10:58:11.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.753" endtime="20201030 10:58:11.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.297" endtime="20201030 10:58:11.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.266" endtime="20201030 10:58:11.773"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.779" endtime="20201030 10:58:11.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.775" endtime="20201030 10:58:11.802"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.823" endtime="20201030 10:58:11.832"></status>
</kw>
<msg timestamp="20201030 10:58:11.833" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.819" endtime="20201030 10:58:11.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.839" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.835" endtime="20201030 10:58:11.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.841" endtime="20201030 10:58:11.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.812" endtime="20201030 10:58:11.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.807" endtime="20201030 10:58:11.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.865" endtime="20201030 10:58:12.200"></status>
</kw>
<msg timestamp="20201030 10:58:12.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033902806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033932569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.862" endtime="20201030 10:58:12.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033902806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033932569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.209" endtime="20201030 10:58:12.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.228" endtime="20201030 10:58:12.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.855" endtime="20201030 10:58:12.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.850" endtime="20201030 10:58:12.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.244" level="INFO">${PHILIP_RES} = [{'diff': 2.9763000000002093e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.0277999999994698e-05}, {'diff': 2.9596999999999263e-05}, {'diff': 3.090199999999932e-05...</msg>
<status status="PASS" starttime="20201030 10:58:12.237" endtime="20201030 10:58:12.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.255" level="INFO">${RESULT} = {'diff': [2.9763000000002093e-05, 2.9610999999998833e-05, 3.087499999999965e-05, 3.0277999999994698e-05, 2.9596999999999263e-05, 3.090199999999932e-05, 3.0278000000001637e-05, 2.9624999999998403e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:12.247" endtime="20201030 10:58:12.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.266" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.264" endtime="20201030 10:58:12.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.271" level="INFO">VALUE: [2.9763000000002093e-05, 2.9610999999998833e-05, 3.087499999999965e-05, 3.0277999999994698e-05, 2.9596999999999263e-05, 3.090199999999932e-05, 3.0278000000001637e-05, 2.9624999999998403e-05, 3.090299999999879e-05, 3.0278000000001637e-05, 2.9597999999998736e-05, 3.09170000000053e-05, 3.0277999999994698e-05, 2.9596999999999263e-05, 3.088899999999922e-05, 3.0305000000001303e-05, 2.9555000000000553e-05, 3.088899999999922e-05, 3.0360999999999583e-05, 2.9624999999998403e-05, 3.088900000000616e-05, 3.0291000000001733e-05, 2.9610999999998833e-05, 3.088899999999922e-05, 3.0278000000001637e-05, 2.963900000000491e-05, 3.088899999999922e-05, 3.0291000000001733e-05, 2.9596999999999263e-05, 3.088899999999922e-05, 3.0292000000001207e-05, 2.9624999999998403e-05, 3.083399999999348e-05, 3.0290999999994794e-05, 2.9624999999998403e-05, 3.088899999999922e-05, 3.0292000000001207e-05, 2.963900000000491e-05, 3.088899999999922e-05, 3.0250000000002497e-05, 2.9624999999998403e-05, 3.090300000000573e-05, 3.0292000000001207e-05, 2.9624999999998403e-05, 3.092999999999846e-05, 3.0291999999994268e-05, 2.961100000000577e-05, 3.098599999999674e-05, 3.0291000000001733e-05, 2.9610999999998833e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.268" endtime="20201030 10:58:12.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.257" endtime="20201030 10:58:12.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.803" endtime="20201030 10:58:12.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.774" endtime="20201030 10:58:12.276"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.281" endtime="20201030 10:58:12.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.278" endtime="20201030 10:58:12.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.325" endtime="20201030 10:58:12.335"></status>
</kw>
<msg timestamp="20201030 10:58:12.337" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.322" endtime="20201030 10:58:12.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.343" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.339" endtime="20201030 10:58:12.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.345" endtime="20201030 10:58:12.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.315" endtime="20201030 10:58:12.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.310" endtime="20201030 10:58:12.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.369" endtime="20201030 10:58:12.703"></status>
</kw>
<msg timestamp="20201030 10:58:12.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033993222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.366" endtime="20201030 10:58:12.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033993222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.713" endtime="20201030 10:58:12.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.731" endtime="20201030 10:58:12.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.359" endtime="20201030 10:58:12.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.354" endtime="20201030 10:58:12.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.747" level="INFO">${PHILIP_RES} = [{'diff': 4.494399999999815e-05}, {'diff': 4.474999999999618e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.476399999999575e-05}, {'diff': 4.477799999999532e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:12.739" endtime="20201030 10:58:12.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.758" level="INFO">${RESULT} = {'diff': [4.494399999999815e-05, 4.474999999999618e-05, 4.4833000000001066e-05, 4.479200000000183e-05, 4.476399999999575e-05, 4.477799999999532e-05, 4.479199999999489e-05, 4.474999999999618e-05, 4.476...</msg>
<status status="PASS" starttime="20201030 10:58:12.749" endtime="20201030 10:58:12.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.768" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.766" endtime="20201030 10:58:12.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.774" level="INFO">VALUE: [4.494399999999815e-05, 4.474999999999618e-05, 4.4833000000001066e-05, 4.479200000000183e-05, 4.476399999999575e-05, 4.477799999999532e-05, 4.479199999999489e-05, 4.474999999999618e-05, 4.476399999999575e-05, 4.476399999999575e-05, 4.473599999999661e-05, 4.476399999999575e-05, 4.476399999999575e-05, 4.476299999999628e-05, 4.474999999999618e-05, 4.479199999999489e-05, 4.477799999999532e-05, 4.477699999999585e-05, 4.474999999999618e-05, 4.477800000000226e-05, 4.477699999999585e-05, 4.477800000000226e-05, 4.476399999999575e-05, 4.476400000000269e-05, 4.476400000000269e-05, 4.475000000000312e-05, 4.4737000000003024e-05, 4.475000000000312e-05, 4.476400000000269e-05, 4.4847000000000636e-05, 4.4709000000003885e-05, 4.475000000000312e-05, 4.476400000000269e-05, 4.477800000000226e-05, 4.476400000000269e-05, 4.476400000000269e-05, 4.475000000000312e-05, 4.479200000000183e-05, 4.477800000000226e-05, 4.476300000000322e-05, 4.476400000000269e-05, 4.476400000000269e-05, 4.476300000000322e-05, 4.479200000000183e-05, 4.476400000000269e-05, 4.4819000000001497e-05, 4.473600000000355e-05, 4.48060000000014e-05, 4.477800000000226e-05, 4.476400000000269e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.771" endtime="20201030 10:58:12.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.760" endtime="20201030 10:58:12.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.306" endtime="20201030 10:58:12.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.276" endtime="20201030 10:58:12.778"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.784" endtime="20201030 10:58:12.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.780" endtime="20201030 10:58:12.807"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.827" endtime="20201030 10:58:12.838"></status>
</kw>
<msg timestamp="20201030 10:58:12.839" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.824" endtime="20201030 10:58:12.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.845" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.842" endtime="20201030 10:58:12.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.848" endtime="20201030 10:58:12.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.817" endtime="20201030 10:58:12.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.812" endtime="20201030 10:58:12.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.872" endtime="20201030 10:58:13.213"></status>
</kw>
<msg timestamp="20201030 10:58:13.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033786667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:12.868" endtime="20201030 10:58:13.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033786667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:13.222" endtime="20201030 10:58:13.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.241" endtime="20201030 10:58:13.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.861" endtime="20201030 10:58:13.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.857" endtime="20201030 10:58:13.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:13.258" level="INFO">${PHILIP_RES} = [{'diff': 6.066700000000036e-05}, {'diff': 5.9930000000006645e-05}, {'diff': 5.9929999999999706e-05}, {'diff': 5.994499999999875e-05}, {'diff': 5.994499999999875e-05}, {'diff': 5.990300000000004e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:13.250" endtime="20201030 10:58:13.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.268" level="INFO">${RESULT} = {'diff': [6.066700000000036e-05, 5.9930000000006645e-05, 5.9929999999999706e-05, 5.994499999999875e-05, 5.994499999999875e-05, 5.990300000000004e-05, 5.9986000000004924e-05, 5.993099999999918e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 10:58:13.260" endtime="20201030 10:58:13.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.278" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:13.276" endtime="20201030 10:58:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.284" level="INFO">VALUE: [6.066700000000036e-05, 5.9930000000006645e-05, 5.9929999999999706e-05, 5.994499999999875e-05, 5.994499999999875e-05, 5.990300000000004e-05, 5.9986000000004924e-05, 5.993099999999918e-05, 5.990300000000004e-05, 5.9986000000004924e-05, 5.9999999999997555e-05, 5.998699999999746e-05, 5.991699999999961e-05, 5.993100000000612e-05, 5.993099999999918e-05, 5.990300000000004e-05, 5.9986000000004924e-05, 5.994499999999875e-05, 5.9971999999998415e-05, 5.994499999999875e-05, 5.9943999999999276e-05, 5.994499999999875e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 5.9929999999999706e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 5.9916000000000136e-05, 5.9929999999999706e-05, 5.9957999999998846e-05, 5.993099999999918e-05, 5.994499999999875e-05, 6.0013999999997125e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.9957999999998846e-05, 5.995899999999832e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 5.994499999999875e-05, 6.0000000000004494e-05, 5.995899999999832e-05, 5.9957999999998846e-05, 5.9986000000004924e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.281" endtime="20201030 10:58:13.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.270" endtime="20201030 10:58:13.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.808" endtime="20201030 10:58:13.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.779" endtime="20201030 10:58:13.288"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.294" endtime="20201030 10:58:13.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.290" endtime="20201030 10:58:13.317"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.338" endtime="20201030 10:58:13.351"></status>
</kw>
<msg timestamp="20201030 10:58:13.352" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.334" endtime="20201030 10:58:13.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.359" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.355" endtime="20201030 10:58:13.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.361" endtime="20201030 10:58:13.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.327" endtime="20201030 10:58:13.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.322" endtime="20201030 10:58:13.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.384" endtime="20201030 10:58:13.719"></status>
</kw>
<msg timestamp="20201030 10:58:13.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0353045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:13.381" endtime="20201030 10:58:13.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0353045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:13.728" endtime="20201030 10:58:13.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.747" endtime="20201030 10:58:13.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.374" endtime="20201030 10:58:13.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.369" endtime="20201030 10:58:13.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:13.763" level="INFO">${PHILIP_RES} = [{'diff': 7.730599999999921e-05}, {'diff': 7.815300000000441e-05}, {'diff': 7.715300000000341e-05}, {'diff': 7.716700000000298e-05}, {'diff': 7.80839999999991e-05}, {'diff': 7.713900000000384e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:13.756" endtime="20201030 10:58:13.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.773" level="INFO">${RESULT} = {'diff': [7.730599999999921e-05, 7.815300000000441e-05, 7.715300000000341e-05, 7.716700000000298e-05, 7.80839999999991e-05, 7.713900000000384e-05, 7.716699999999604e-05, 7.80839999999991e-05, 7.713799...</msg>
<status status="PASS" starttime="20201030 10:58:13.765" endtime="20201030 10:58:13.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.783" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:13.781" endtime="20201030 10:58:13.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.788" level="INFO">VALUE: [7.730599999999921e-05, 7.815300000000441e-05, 7.715300000000341e-05, 7.716700000000298e-05, 7.80839999999991e-05, 7.713900000000384e-05, 7.716699999999604e-05, 7.80839999999991e-05, 7.713799999999743e-05, 7.718099999999561e-05, 7.805599999999996e-05, 7.7151999999997e-05, 7.712499999999733e-05, 7.812499999999833e-05, 7.713900000000384e-05, 7.720800000000222e-05, 7.808299999999962e-05, 7.71389999999969e-05, 7.712499999999733e-05, 7.808299999999962e-05, 7.716699999999604e-05, 7.718000000000308e-05, 7.816700000000398e-05, 7.716700000000298e-05, 7.715300000000341e-05, 7.80969999999992e-05, 7.722200000000179e-05, 7.717999999999614e-05, 7.808299999999962e-05, 7.719400000000265e-05, 7.715299999999647e-05, 7.808299999999962e-05, 7.715299999999647e-05, 7.706899999999905e-05, 7.80839999999991e-05, 7.716600000000351e-05, 7.720800000000222e-05, 7.804200000000039e-05, 7.715300000000341e-05, 7.713900000000384e-05, 7.806900000000006e-05, 7.715200000000394e-05, 7.716700000000298e-05, 7.80969999999992e-05, 7.71389999999969e-05, 7.70969999999982e-05, 7.80839999999991e-05, 7.720799999999528e-05, 7.720800000000222e-05, 7.809799999999867e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.785" endtime="20201030 10:58:13.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.774" endtime="20201030 10:58:13.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.318" endtime="20201030 10:58:13.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.289" endtime="20201030 10:58:13.793"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.798" endtime="20201030 10:58:13.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.795" endtime="20201030 10:58:13.822"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.844" endtime="20201030 10:58:13.857"></status>
</kw>
<msg timestamp="20201030 10:58:13.859" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.841" endtime="20201030 10:58:13.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.865" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.861" endtime="20201030 10:58:13.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.867" endtime="20201030 10:58:13.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.834" endtime="20201030 10:58:13.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.828" endtime="20201030 10:58:13.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.890" endtime="20201030 10:58:14.224"></status>
</kw>
<msg timestamp="20201030 10:58:14.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035639194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.887" endtime="20201030 10:58:14.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035639194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.234" endtime="20201030 10:58:14.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.252" endtime="20201030 10:58:14.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.880" endtime="20201030 10:58:14.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.875" endtime="20201030 10:58:14.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:14.268" level="INFO">${PHILIP_RES} = [{'diff': 9.45409999999966e-05}, {'diff': 9.320899999999688e-05}, {'diff': 9.43200000000019e-05}, {'diff': 9.43200000000019e-05}, {'diff': 9.433299999999506e-05}, {'diff': 9.437500000000071e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:14.260" endtime="20201030 10:58:14.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.278" level="INFO">${RESULT} = {'diff': [9.45409999999966e-05, 9.320899999999688e-05, 9.43200000000019e-05, 9.43200000000019e-05, 9.433299999999506e-05, 9.437500000000071e-05, 9.43479999999941e-05, 9.4333000000002e-05, 9.4332999999...</msg>
<status status="PASS" starttime="20201030 10:58:14.270" endtime="20201030 10:58:14.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.289" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:14.286" endtime="20201030 10:58:14.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.296" level="INFO">VALUE: [9.45409999999966e-05, 9.320899999999688e-05, 9.43200000000019e-05, 9.43200000000019e-05, 9.433299999999506e-05, 9.437500000000071e-05, 9.43479999999941e-05, 9.4333000000002e-05, 9.433299999999506e-05, 9.434700000000157e-05, 9.43200000000019e-05, 9.433400000000147e-05, 9.430500000000286e-05, 9.431899999999549e-05, 9.43200000000019e-05, 9.429200000000276e-05, 9.4333000000002e-05, 9.431900000000243e-05, 9.433400000000147e-05, 9.433400000000147e-05, 9.429199999999582e-05, 9.434700000000157e-05, 9.433299999999506e-05, 9.430600000000233e-05, 9.430500000000286e-05, 9.4333000000002e-05, 9.430600000000233e-05, 9.43609999999942e-05, 9.4333000000002e-05, 9.433299999999506e-05, 9.43200000000019e-05, 9.431899999999549e-05, 9.425000000000405e-05, 9.438900000000028e-05, 9.433400000000147e-05, 9.431900000000243e-05, 9.43059999999954e-05, 9.437500000000071e-05, 9.433299999999506e-05, 9.434700000000157e-05, 9.4333000000002e-05, 9.424999999999711e-05, 9.433400000000147e-05, 9.431999999999496e-05, 9.431900000000243e-05, 9.433299999999506e-05, 9.429200000000276e-05, 9.426299999999721e-05, 9.430600000000233e-05, 9.436100000000114e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.292" endtime="20201030 10:58:14.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.280" endtime="20201030 10:58:14.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.823" endtime="20201030 10:58:14.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.793" endtime="20201030 10:58:14.301"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.307" endtime="20201030 10:58:14.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.303" endtime="20201030 10:58:14.330"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.352" endtime="20201030 10:58:14.366"></status>
</kw>
<msg timestamp="20201030 10:58:14.367" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.348" endtime="20201030 10:58:14.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.373" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.369" endtime="20201030 10:58:14.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.375" endtime="20201030 10:58:14.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.341" endtime="20201030 10:58:14.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.336" endtime="20201030 10:58:14.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.398" endtime="20201030 10:58:14.733"></status>
</kw>
<msg timestamp="20201030 10:58:14.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035239847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.395" endtime="20201030 10:58:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035239847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.742" endtime="20201030 10:58:14.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.760" endtime="20201030 10:58:14.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.388" endtime="20201030 10:58:14.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.383" endtime="20201030 10:58:14.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:14.776" level="INFO">${PHILIP_RES} = [{'diff': 0.00011109700000000444}, {'diff': 0.00011245799999999584}, {'diff': 0.00011245800000000278}, {'diff': 0.00011162499999999714}, {'diff': 0.00011144500000000168}, {'diff': 0.000112486000000001...</msg>
<status status="PASS" starttime="20201030 10:58:14.769" endtime="20201030 10:58:14.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.786" level="INFO">${RESULT} = {'diff': [0.00011109700000000444, 0.00011245799999999584, 0.00011245800000000278, 0.00011162499999999714, 0.00011144500000000168, 0.00011248600000000192, 0.00011240199999999756, 0.00011157000000000528...</msg>
<status status="PASS" starttime="20201030 10:58:14.778" endtime="20201030 10:58:14.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.797" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:14.795" endtime="20201030 10:58:14.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.802" level="INFO">VALUE: [0.00011109700000000444, 0.00011245799999999584, 0.00011245800000000278, 0.00011162499999999714, 0.00011144500000000168, 0.00011248600000000192, 0.00011240199999999756, 0.00011157000000000528, 0.00011144399999999527, 0.00011244400000000321, 0.00011240300000000397, 0.00011162499999999714, 0.00011144500000000168, 0.00011247199999999541, 0.00011245800000000278, 0.00011159700000000494, 0.00011140199999999656, 0.00011240300000000397, 0.0001124299999999967, 0.00011166600000000332, 0.00011144500000000168, 0.00011243099999999617, 0.00011248600000000192, 0.00011156899999999886, 0.00011143100000000211, 0.0001123749999999979, 0.00011245800000000278, 0.000111596999999998, 0.00011141700000000254, 0.00011245799999999584, 0.00011244500000000268, 0.00011163899999999671, 0.00011145800000000178, 0.00011245900000000225, 0.00011245800000000278, 0.00011154099999999972, 0.00011144500000000168, 0.00011244400000000321, 0.0001124169999999966, 0.00011161100000000451, 0.00011148600000000092, 0.00011244500000000268, 0.00011243099999999617, 0.00011159700000000494, 0.00011144399999999527, 0.00011245900000000225, 0.00011247200000000235, 0.00011158299999999843, 0.00011143100000000211, 0.00011245799999999584]</msg>
<status status="PASS" starttime="20201030 10:58:14.799" endtime="20201030 10:58:14.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.788" endtime="20201030 10:58:14.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.331" endtime="20201030 10:58:14.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.302" endtime="20201030 10:58:14.806"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.812" endtime="20201030 10:58:14.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.808" endtime="20201030 10:58:14.835"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.857" endtime="20201030 10:58:14.871"></status>
</kw>
<msg timestamp="20201030 10:58:14.873" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.853" endtime="20201030 10:58:14.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.879" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.875" endtime="20201030 10:58:14.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.881" endtime="20201030 10:58:14.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.846" endtime="20201030 10:58:14.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.840" endtime="20201030 10:58:14.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.904" endtime="20201030 10:58:15.239"></status>
</kw>
<msg timestamp="20201030 10:58:15.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034655542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.901" endtime="20201030 10:58:15.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034655542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.249" endtime="20201030 10:58:15.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.267" endtime="20201030 10:58:15.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.894" endtime="20201030 10:58:15.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.889" endtime="20201030 10:58:15.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:15.283" level="INFO">${PHILIP_RES} = [{'diff': 0.00013095899999999994}, {'diff': 0.00012976400000000443}, {'diff': 0.00013072299999999926}, {'diff': 0.00013062500000000227}, {'diff': 0.0001295409999999969}, {'diff': 0.0001296800000000000...</msg>
<status status="PASS" starttime="20201030 10:58:15.276" endtime="20201030 10:58:15.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.295" level="INFO">${RESULT} = {'diff': [0.00013095899999999994, 0.00012976400000000443, 0.00013072299999999926, 0.00013062500000000227, 0.0001295409999999969, 0.00012968000000000007, 0.00013073599999999935, 0.00013068100000000055,...</msg>
<status status="PASS" starttime="20201030 10:58:15.285" endtime="20201030 10:58:15.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.305" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:15.303" endtime="20201030 10:58:15.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.311" level="INFO">VALUE: [0.00013095899999999994, 0.00012976400000000443, 0.00013072299999999926, 0.00013062500000000227, 0.0001295409999999969, 0.00012968000000000007, 0.00013073599999999935, 0.00013068100000000055, 0.00012951399999999724, 0.00012966699999999998, 0.00013068100000000055, 0.0001307080000000002, 0.00012951299999999777, 0.0001296660000000005, 0.00013066700000000098, 0.00013068100000000055, 0.00012952800000000375, 0.00012968099999999955, 0.00013069400000000064, 0.00013068100000000055, 0.00012951400000000418, 0.00012963900000000084, 0.00013065200000000193, 0.00013072199999999978, 0.0001294859999999981, 0.00012969499999999912, 0.00013068000000000107, 0.0001306660000000015, 0.00012955499999999648, 0.00012968000000000007, 0.0001306809999999936, 0.00013069500000000012, 0.00012955499999999648, 0.0001297360000000053, 0.00013068100000000055, 0.00013069400000000064, 0.00012949999999999767, 0.00012968000000000007, 0.00013069499999999318, 0.00013068000000000107, 0.00012951399999999724, 0.00012968000000000007, 0.00013069400000000064, 0.00013063900000000184, 0.0001295000000000046, 0.00012969399999999964, 0.00013066700000000098, 0.00013062500000000227, 0.00012952700000000428, 0.0001296530000000004]</msg>
<status status="PASS" starttime="20201030 10:58:15.308" endtime="20201030 10:58:15.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.296" endtime="20201030 10:58:15.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.836" endtime="20201030 10:58:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.807" endtime="20201030 10:58:15.316"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.322" endtime="20201030 10:58:15.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.318" endtime="20201030 10:58:15.345"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.367" endtime="20201030 10:58:15.383"></status>
</kw>
<msg timestamp="20201030 10:58:15.384" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.364" endtime="20201030 10:58:15.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.390" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.386" endtime="20201030 10:58:15.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.393" endtime="20201030 10:58:15.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.357" endtime="20201030 10:58:15.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.351" endtime="20201030 10:58:15.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.416" endtime="20201030 10:58:15.750"></status>
</kw>
<msg timestamp="20201030 10:58:15.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034992181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035142944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.412" endtime="20201030 10:58:15.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034992181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035142944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.760" endtime="20201030 10:58:15.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.778" endtime="20201030 10:58:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.405" endtime="20201030 10:58:15.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.401" endtime="20201030 10:58:15.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:15.794" level="INFO">${PHILIP_RES} = [{'diff': 0.00015076300000000514}, {'diff': 0.0001509170000000004}, {'diff': 0.00015080600000000333}, {'diff': 0.00015079099999999734}, {'diff': 0.00015081899999999648}, {'diff': 0.0001507499999999981...</msg>
<status status="PASS" starttime="20201030 10:58:15.787" endtime="20201030 10:58:15.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.803" level="INFO">${RESULT} = {'diff': [0.00015076300000000514, 0.0001509170000000004, 0.00015080600000000333, 0.00015079099999999734, 0.00015081899999999648, 0.0001507499999999981, 0.0001509170000000004, 0.00015081899999999648, 0...</msg>
<status status="PASS" starttime="20201030 10:58:15.796" endtime="20201030 10:58:15.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.813" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:15.811" endtime="20201030 10:58:15.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.819" level="INFO">VALUE: [0.00015076300000000514, 0.0001509170000000004, 0.00015080600000000333, 0.00015079099999999734, 0.00015081899999999648, 0.0001507499999999981, 0.0001509170000000004, 0.00015081899999999648, 0.00015081899999999648, 0.00015079199999999682, 0.0001508750000000017, 0.00015094400000000008, 0.00015079200000000376, 0.00015081899999999648, 0.0001508059999999964, 0.00015084699999999562, 0.0001509170000000004, 0.0001508059999999964, 0.00015083299999999605, 0.00015081900000000342, 0.00015080600000000333, 0.00015090300000000084, 0.0001508200000000029, 0.00015080500000000385, 0.00015079200000000376, 0.00015083299999999605, 0.00015094400000000008, 0.00015076399999999768, 0.00015077799999999725, 0.00015079100000000428, 0.00015081900000000342, 0.00015086100000000213, 0.00015081900000000342, 0.00015080600000000333, 0.00015077799999999725, 0.00015084699999999562, 0.000150915999999994, 0.00015084700000000256, 0.0001508479999999951, 0.00015084699999999562, 0.00015081999999999596, 0.0001509170000000004, 0.00015084699999999562, 0.00015081999999999596, 0.00015081900000000342, 0.00015079100000000428, 0.00015090300000000084, 0.0001507770000000047, 0.00015076399999999768, 0.00015077799999999725]</msg>
<status status="PASS" starttime="20201030 10:58:15.816" endtime="20201030 10:58:15.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.805" endtime="20201030 10:58:15.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.347" endtime="20201030 10:58:15.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.317" endtime="20201030 10:58:15.823"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.829" endtime="20201030 10:58:15.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.825" endtime="20201030 10:58:15.858"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.879" endtime="20201030 10:58:15.896"></status>
</kw>
<msg timestamp="20201030 10:58:15.897" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.876" endtime="20201030 10:58:15.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.904" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.900" endtime="20201030 10:58:15.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.906" endtime="20201030 10:58:15.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.869" endtime="20201030 10:58:15.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.864" endtime="20201030 10:58:15.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.930" endtime="20201030 10:58:16.265"></status>
</kw>
<msg timestamp="20201030 10:58:16.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040484958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040656028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.927" endtime="20201030 10:58:16.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040484958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040656028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.274" endtime="20201030 10:58:16.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.292" endtime="20201030 10:58:16.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.920" endtime="20201030 10:58:16.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.915" endtime="20201030 10:58:16.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:16.308" level="INFO">${PHILIP_RES} = [{'diff': 0.0001710699999999954}, {'diff': 0.00017094399999999926}, {'diff': 0.0001701389999999997}, {'diff': 0.00017094399999999926}, {'diff': 0.0001710139999999971}, {'diff': 0.00017012500000000014}...</msg>
<status status="PASS" starttime="20201030 10:58:16.301" endtime="20201030 10:58:16.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.317" level="INFO">${RESULT} = {'diff': [0.0001710699999999954, 0.00017094399999999926, 0.0001701389999999997, 0.00017094399999999926, 0.0001710139999999971, 0.00017012500000000014, 0.0001709719999999984, 0.00017106900000000286, 0....</msg>
<status status="PASS" starttime="20201030 10:58:16.310" endtime="20201030 10:58:16.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.328" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:16.325" endtime="20201030 10:58:16.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.333" level="INFO">VALUE: [0.0001710699999999954, 0.00017094399999999926, 0.0001701389999999997, 0.00017094399999999926, 0.0001710139999999971, 0.00017012500000000014, 0.0001709719999999984, 0.00017106900000000286, 0.00017095799999999883, 0.00017011100000000057, 0.0001709299999999997, 0.00017094399999999926, 0.00017011100000000057, 0.0001709719999999984, 0.0001710699999999954, 0.00017094499999999874, 0.0001701389999999997, 0.0001709719999999984, 0.00017095799999999883, 0.00017011100000000057, 0.00017093099999999917, 0.0001710699999999954, 0.0001709589999999983, 0.00017011100000000057, 0.00017094399999999926, 0.0001709299999999997, 0.00017009800000000047, 0.00017095800000000577, 0.0001710550000000033, 0.00017094399999999926, 0.000170097000000001, 0.00017094399999999926, 0.00017091600000000012, 0.00017008300000000143, 0.00017095800000000577, 0.0001710550000000033, 0.00017094399999999926, 0.0001700829999999945, 0.00017094499999999874, 0.00017100000000000448, 0.00017011100000000057, 0.00017095800000000577, 0.00017104199999999625, 0.00017102800000000362, 0.00017012500000000014, 0.0001709719999999984, 0.0001709589999999983, 0.00017009699999999406, 0.00017094399999999926, 0.00017106899999999592]</msg>
<status status="PASS" starttime="20201030 10:58:16.330" endtime="20201030 10:58:16.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.319" endtime="20201030 10:58:16.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.859" endtime="20201030 10:58:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.824" endtime="20201030 10:58:16.338"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.345" endtime="20201030 10:58:16.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.341" endtime="20201030 10:58:16.368"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.391" endtime="20201030 10:58:16.409"></status>
</kw>
<msg timestamp="20201030 10:58:16.410" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.387" endtime="20201030 10:58:16.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.416" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.412" endtime="20201030 10:58:16.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.419" endtime="20201030 10:58:16.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.380" endtime="20201030 10:58:16.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.375" endtime="20201030 10:58:16.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.442" endtime="20201030 10:58:16.776"></status>
</kw>
<msg timestamp="20201030 10:58:16.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035801083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035993958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.438" endtime="20201030 10:58:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035801083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035993958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.785" endtime="20201030 10:58:16.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.803" endtime="20201030 10:58:16.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.431" endtime="20201030 10:58:16.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.427" endtime="20201030 10:58:16.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:16.819" level="INFO">${PHILIP_RES} = [{'diff': 0.00019287500000000207}, {'diff': 0.00019324999999999898}, {'diff': 0.00019209699999999524}, {'diff': 0.00019330499999999778}, {'diff': 0.0001921390000000009}, {'diff': 0.0001932769999999986...</msg>
<status status="PASS" starttime="20201030 10:58:16.812" endtime="20201030 10:58:16.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.828" level="INFO">${RESULT} = {'diff': [0.00019287500000000207, 0.00019324999999999898, 0.00019209699999999524, 0.00019330499999999778, 0.0001921390000000009, 0.00019327699999999864, 0.00019212500000000132, 0.00019330500000000472,...</msg>
<status status="PASS" starttime="20201030 10:58:16.821" endtime="20201030 10:58:16.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.839" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:16.836" endtime="20201030 10:58:16.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.845" level="INFO">VALUE: [0.00019287500000000207, 0.00019324999999999898, 0.00019209699999999524, 0.00019330499999999778, 0.0001921390000000009, 0.00019327699999999864, 0.00019212500000000132, 0.00019330500000000472, 0.0001921390000000009, 0.0001932919999999977, 0.0001921390000000009, 0.00019326299999999907, 0.00019209700000000218, 0.00019329100000000515, 0.0001920830000000026, 0.00019322199999999984, 0.00019212500000000132, 0.0001932359999999994, 0.00019208400000000209, 0.00019326399999999855, 0.00019209699999999524, 0.00019327699999999864, 0.00019209699999999524, 0.00019322199999999984, 0.00019211200000000123, 0.00019329200000000463, 0.00019211100000000175, 0.00019326399999999855, 0.00019215300000000046, 0.00019322199999999984, 0.00019205600000000295, 0.0001932359999999994, 0.00019211100000000175, 0.00019330499999999778, 0.000192055999999996, 0.00019322199999999984, 0.00019212500000000132, 0.00019329200000000463, 0.00019216600000000056, 0.0001932919999999977, 0.0001921669999999931, 0.00019331899999999735, 0.00019211100000000175, 0.00019330500000000472, 0.00019211100000000175, 0.00019327799999999812, 0.00019208299999999567, 0.00019324999999999898, 0.00019211100000000175, 0.000193263000000006]</msg>
<status status="PASS" starttime="20201030 10:58:16.841" endtime="20201030 10:58:16.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.830" endtime="20201030 10:58:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.369" endtime="20201030 10:58:16.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.339" endtime="20201030 10:58:16.850"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.856" endtime="20201030 10:58:16.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.852" endtime="20201030 10:58:16.879"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.900" endtime="20201030 10:58:16.919"></status>
</kw>
<msg timestamp="20201030 10:58:16.921" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.897" endtime="20201030 10:58:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.927" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.923" endtime="20201030 10:58:16.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.929" endtime="20201030 10:58:16.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.890" endtime="20201030 10:58:16.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.884" endtime="20201030 10:58:16.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.952" endtime="20201030 10:58:17.286"></status>
</kw>
<msg timestamp="20201030 10:58:17.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03388025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034094458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:16.949" endtime="20201030 10:58:17.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03388025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034094458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:17.295" endtime="20201030 10:58:17.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.314" endtime="20201030 10:58:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.942" endtime="20201030 10:58:17.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.937" endtime="20201030 10:58:17.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:17.329" level="INFO">${PHILIP_RES} = [{'diff': 0.00021420800000000045}, {'diff': 0.00021526399999999973}, {'diff': 0.00021447299999999975}, {'diff': 0.00021530599999999844}, {'diff': 0.00021444400000000113}, {'diff': 0.000215263000000000...</msg>
<status status="PASS" starttime="20201030 10:58:17.322" endtime="20201030 10:58:17.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.340" level="INFO">${RESULT} = {'diff': [0.00021420800000000045, 0.00021526399999999973, 0.00021447299999999975, 0.00021530599999999844, 0.00021444400000000113, 0.00021526300000000026, 0.00021451399999999898, 0.00021529199999999887...</msg>
<status status="PASS" starttime="20201030 10:58:17.331" endtime="20201030 10:58:17.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.350" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:17.348" endtime="20201030 10:58:17.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.355" level="INFO">VALUE: [0.00021420800000000045, 0.00021526399999999973, 0.00021447299999999975, 0.00021530599999999844, 0.00021444400000000113, 0.00021526300000000026, 0.00021451399999999898, 0.00021529199999999887, 0.00021452799999999855, 0.0002152909999999994, 0.00021455499999999822, 0.00021531900000000548, 0.00021447200000000027, 0.00021529199999999887, 0.0002144450000000006, 0.00021530499999999897, 0.0002144580000000007, 0.0002153329999999981, 0.00021444499999999367, 0.00021530599999999844, 0.00021448599999999984, 0.00021527699999999983, 0.00021447200000000027, 0.00021529199999999887, 0.00021447200000000027, 0.0002152909999999994, 0.00021444400000000113, 0.00021526399999999973, 0.0002144580000000007, 0.00021527699999999983, 0.0002144580000000007, 0.00021526399999999973, 0.00021447200000000027, 0.00021529199999999887, 0.0002144580000000007, 0.0002153329999999981, 0.00021444400000000113, 0.0002153329999999981, 0.00021448599999999984, 0.00021526399999999973, 0.0002144439999999942, 0.00021525000000000016, 0.00021447200000000027, 0.00021530499999999897, 0.00021444400000000113, 0.00021530600000000538, 0.00021447200000000027, 0.00021533400000000452, 0.00021447200000000027, 0.00021532000000000495]</msg>
<status status="PASS" starttime="20201030 10:58:17.352" endtime="20201030 10:58:17.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.342" endtime="20201030 10:58:17.359"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.881" endtime="20201030 10:58:17.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.851" endtime="20201030 10:58:17.360"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.366" endtime="20201030 10:58:17.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.363" endtime="20201030 10:58:17.390"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.411" endtime="20201030 10:58:17.432"></status>
</kw>
<msg timestamp="20201030 10:58:17.433" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.408" endtime="20201030 10:58:17.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.439" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.435" endtime="20201030 10:58:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.442" endtime="20201030 10:58:17.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.401" endtime="20201030 10:58:17.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.395" endtime="20201030 10:58:17.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.465" endtime="20201030 10:58:17.799"></status>
</kw>
<msg timestamp="20201030 10:58:17.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035255014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.462" endtime="20201030 10:58:17.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035255014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.808" endtime="20201030 10:58:17.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.826" endtime="20201030 10:58:17.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.455" endtime="20201030 10:58:17.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.450" endtime="20201030 10:58:17.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:17.842" level="INFO">${PHILIP_RES} = [{'diff': 0.00023812499999999875}, {'diff': 0.00023863899999999882}, {'diff': 0.00023841699999999771}, {'diff': 0.00023945799999999795}, {'diff': 0.00023763899999999782}, {'diff': 0.000238486000000003...</msg>
<status status="PASS" starttime="20201030 10:58:17.835" endtime="20201030 10:58:17.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.853" level="INFO">${RESULT} = {'diff': [0.00023812499999999875, 0.00023863899999999882, 0.00023841699999999771, 0.00023945799999999795, 0.00023763899999999782, 0.00023848600000000303, 0.00023861099999999968, 0.000238472999999996, ...</msg>
<status status="PASS" starttime="20201030 10:58:17.844" endtime="20201030 10:58:17.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.863" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:17.861" endtime="20201030 10:58:17.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.868" level="INFO">VALUE: [0.00023812499999999875, 0.00023863899999999882, 0.00023841699999999771, 0.00023945799999999795, 0.00023763899999999782, 0.00023848600000000303, 0.00023861099999999968, 0.000238472999999996, 0.00023865199999999892, 0.00023841700000000465, 0.0002394299999999988, 0.00023763899999999782, 0.000238374999999999, 0.00023854100000000183, 0.00023844499999999685, 0.00023861100000000662, 0.00023843000000000475, 0.00023944399999999838, 0.00023761199999999816, 0.00023847300000000293, 0.00023856900000000097, 0.00023847200000000346, 0.00023863899999999882, 0.0002384580000000039, 0.00023945799999999795, 0.00023761099999999868, 0.00023844499999999685, 0.00023849999999999566, 0.0002384580000000039, 0.00023858300000000054, 0.00023843099999999728, 0.00023947199999999752, 0.00023759699999999911, 0.0002384450000000038, 0.00023855499999999447, 0.0002385000000000026, 0.00023862499999999925, 0.00023847199999999652, 0.00023944399999999838, 0.0002375420000000003, 0.00023843099999999728, 0.00023851400000000217, 0.00023843099999999728, 0.00023858400000000002, 0.00023840299999999814, 0.0002394580000000049, 0.00023762499999999825, 0.00023845899999999642, 0.0002385550000000014, 0.00023838899999999857]</msg>
<status status="PASS" starttime="20201030 10:58:17.865" endtime="20201030 10:58:17.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.855" endtime="20201030 10:58:17.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.391" endtime="20201030 10:58:17.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.361" endtime="20201030 10:58:17.873"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.879" endtime="20201030 10:58:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.875" endtime="20201030 10:58:17.903"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.923" endtime="20201030 10:58:17.945"></status>
</kw>
<msg timestamp="20201030 10:58:17.946" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.920" endtime="20201030 10:58:17.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.952" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.948" endtime="20201030 10:58:17.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.955" endtime="20201030 10:58:17.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.913" endtime="20201030 10:58:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.908" endtime="20201030 10:58:17.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.978" endtime="20201030 10:58:18.315"></status>
</kw>
<msg timestamp="20201030 10:58:18.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033871736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.974" endtime="20201030 10:58:18.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033871736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.325" endtime="20201030 10:58:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.343" endtime="20201030 10:58:18.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.967" endtime="20201030 10:58:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.963" endtime="20201030 10:58:18.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:18.359" level="INFO">${PHILIP_RES} = [{'diff': 0.00026179200000000374}, {'diff': 0.0002617079999999994}, {'diff': 0.00026270899999999986}, {'diff': 0.0002618750000000017}, {'diff': 0.0002617499999999981}, {'diff': 0.0002617359999999985},...</msg>
<status status="PASS" starttime="20201030 10:58:18.351" endtime="20201030 10:58:18.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.368" level="INFO">${RESULT} = {'diff': [0.00026179200000000374, 0.0002617079999999994, 0.00026270899999999986, 0.0002618750000000017, 0.0002617499999999981, 0.0002617359999999985, 0.0002617359999999985, 0.00026277799999999824, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:18.361" endtime="20201030 10:58:18.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.378" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:18.376" endtime="20201030 10:58:18.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.383" level="INFO">VALUE: [0.00026179200000000374, 0.0002617079999999994, 0.00026270899999999986, 0.0002618750000000017, 0.0002617499999999981, 0.0002617359999999985, 0.0002617359999999985, 0.00026277799999999824, 0.0002618610000000021, 0.00026176399999999767, 0.00026172300000000537, 0.00026172199999999896, 0.00026268000000000125, 0.0002618200000000029, 0.00026176399999999767, 0.00026175000000000503, 0.00026172199999999896, 0.00026272199999999996, 0.0002617780000000042, 0.00026172199999999896, 0.00026176399999999767, 0.00026179100000000427, 0.0002627359999999995, 0.0002618750000000017, 0.0002617079999999994, 0.00026172199999999896, 0.00026170899999999886, 0.00026261100000000287, 0.0002617499999999981, 0.00026168000000000025, 0.0002617359999999985, 0.0002616949999999993, 0.0002626940000000008, 0.00026177799999999724, 0.0002616939999999998, 0.0002616809999999997, 0.0002617359999999985, 0.0002627499999999991, 0.0002618200000000029, 0.0002617079999999994, 0.0002617079999999994, 0.0002617090000000058, 0.0002627080000000004, 0.0002618059999999964, 0.0002617080000000063, 0.0002617359999999985, 0.0002617359999999985, 0.00026265299999999464, 0.0002617499999999981, 0.00026168000000000025]</msg>
<status status="PASS" starttime="20201030 10:58:18.380" endtime="20201030 10:58:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.370" endtime="20201030 10:58:18.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.904" endtime="20201030 10:58:18.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.874" endtime="20201030 10:58:18.388"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.394" endtime="20201030 10:58:18.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.390" endtime="20201030 10:58:18.417"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.439" endtime="20201030 10:58:18.463"></status>
</kw>
<msg timestamp="20201030 10:58:18.464" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.436" endtime="20201030 10:58:18.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.470" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.466" endtime="20201030 10:58:18.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.473" endtime="20201030 10:58:18.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.428" endtime="20201030 10:58:18.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.423" endtime="20201030 10:58:18.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.498" endtime="20201030 10:58:18.835"></status>
</kw>
<msg timestamp="20201030 10:58:18.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035671597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.494" endtime="20201030 10:58:18.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035671597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.844" endtime="20201030 10:58:18.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.862" endtime="20201030 10:58:18.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.487" endtime="20201030 10:58:18.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.482" endtime="20201030 10:58:18.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:18.878" level="INFO">${PHILIP_RES} = [{'diff': 0.0002877639999999959}, {'diff': 0.0002870140000000021}, {'diff': 0.0002857910000000005}, {'diff': 0.00028697199999999645}, {'diff': 0.0002879580000000048}, {'diff': 0.0002869449999999968}, ...</msg>
<status status="PASS" starttime="20201030 10:58:18.870" endtime="20201030 10:58:18.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.887" level="INFO">${RESULT} = {'diff': [0.0002877639999999959, 0.0002870140000000021, 0.0002857910000000005, 0.00028697199999999645, 0.0002879580000000048, 0.0002869449999999968, 0.000285792, 0.00028687499999999894, 0.000287930999...</msg>
<status status="PASS" starttime="20201030 10:58:18.880" endtime="20201030 10:58:18.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.897" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:18.895" endtime="20201030 10:58:18.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.902" level="INFO">VALUE: [0.0002877639999999959, 0.0002870140000000021, 0.0002857910000000005, 0.00028697199999999645, 0.0002879580000000048, 0.0002869449999999968, 0.000285792, 0.00028687499999999894, 0.0002879309999999982, 0.0002869580000000038, 0.00028584799999999827, 0.00028697199999999645, 0.00028800000000000353, 0.0002870140000000021, 0.0002858469999999988, 0.0002869999999999956, 0.00028800000000000353, 0.0002869720000000034, 0.0002858469999999988, 0.00028697199999999645, 0.0002879579999999979, 0.00028705500000000134, 0.00028580599999999956, 0.00028698600000000296, 0.00028802699999999626, 0.00028702799999999473, 0.00028586099999999837, 0.00028700000000000253, 0.00028798600000000396, 0.00028705500000000134, 0.0002857910000000005, 0.00028697300000000286, 0.0002879999999999966, 0.0002869580000000038, 0.0002857500000000013, 0.00028694400000000425, 0.00028797199999999745, 0.0002869999999999956, 0.0002857909999999936, 0.00028692999999999774, 0.00028797199999999745, 0.0002869450000000037, 0.0002857360000000017, 0.00028698600000000296, 0.0002880140000000031, 0.00028695899999999636, 0.000285792, 0.0002869439999999973, 0.0002879309999999982, 0.0002869720000000034]</msg>
<status status="PASS" starttime="20201030 10:58:18.899" endtime="20201030 10:58:18.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.889" endtime="20201030 10:58:18.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.419" endtime="20201030 10:58:18.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.389" endtime="20201030 10:58:18.907"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.913" endtime="20201030 10:58:18.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.909" endtime="20201030 10:58:18.936"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.958" endtime="20201030 10:58:18.983"></status>
</kw>
<msg timestamp="20201030 10:58:18.984" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.955" endtime="20201030 10:58:18.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.991" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.986" endtime="20201030 10:58:18.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.993" endtime="20201030 10:58:18.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.948" endtime="20201030 10:58:18.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.943" endtime="20201030 10:58:19.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.016" endtime="20201030 10:58:19.350"></status>
</kw>
<msg timestamp="20201030 10:58:19.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035656611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:19.013" endtime="20201030 10:58:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035656611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:19.359" endtime="20201030 10:58:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.377" endtime="20201030 10:58:19.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.006" endtime="20201030 10:58:19.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.001" endtime="20201030 10:58:19.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:19.393" level="INFO">${PHILIP_RES} = [{'diff': 0.0003128609999999976}, {'diff': 0.00031217999999999524}, {'diff': 0.00031205599999999806}, {'diff': 0.00031312499999999743}, {'diff': 0.00031223600000000046}, {'diff': 0.0003110279999999979...</msg>
<status status="PASS" starttime="20201030 10:58:19.386" endtime="20201030 10:58:19.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.402" level="INFO">${RESULT} = {'diff': [0.0003128609999999976, 0.00031217999999999524, 0.00031205599999999806, 0.00031312499999999743, 0.00031223600000000046, 0.0003110279999999979, 0.00031208400000000414, 0.00031306899999999915, ...</msg>
<status status="PASS" starttime="20201030 10:58:19.395" endtime="20201030 10:58:19.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.413" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:19.410" endtime="20201030 10:58:19.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.419" level="INFO">VALUE: [0.0003128609999999976, 0.00031217999999999524, 0.00031205599999999806, 0.00031312499999999743, 0.00031223600000000046, 0.0003110279999999979, 0.00031208400000000414, 0.00031306899999999915, 0.00031223600000000046, 0.00031113900000000194, 0.00031201399999999935, 0.00031312500000000437, 0.0003123059999999983, 0.0003110699999999966, 0.00031206899999999815, 0.00031308300000000566, 0.00031227799999999917, 0.0003110829999999967, 0.0003120969999999973, 0.00031305599999999906, 0.0003122220000000009, 0.0003110419999999975, 0.0003119999999999998, 0.00031301400000000035, 0.0003121530000000025, 0.0003110419999999975, 0.00031205599999999806, 0.0003130829999999987, 0.00031223600000000046, 0.00031105599999999706, 0.0003120969999999973, 0.00031313900000000394, 0.0003122639999999996, 0.00031105599999999706, 0.00031205599999999806, 0.0003130829999999987, 0.00031223600000000046, 0.00031108400000000314, 0.0003120279999999989, 0.00031301400000000035, 0.00031223600000000046, 0.000311040999999998, 0.000312040999999999, 0.0003130419999999995, 0.0003122090000000008, 0.0003110829999999967, 0.00031211099999999686, 0.00031311099999999786, 0.00031230499999999883, 0.0003110549999999976]</msg>
<status status="PASS" starttime="20201030 10:58:19.415" endtime="20201030 10:58:19.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.404" endtime="20201030 10:58:19.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.937" endtime="20201030 10:58:19.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.908" endtime="20201030 10:58:19.424"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.430" endtime="20201030 10:58:19.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.426" endtime="20201030 10:58:19.454"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.476" endtime="20201030 10:58:19.502"></status>
</kw>
<msg timestamp="20201030 10:58:19.503" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.472" endtime="20201030 10:58:19.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.509" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.505" endtime="20201030 10:58:19.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.511" endtime="20201030 10:58:19.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.465" endtime="20201030 10:58:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.459" endtime="20201030 10:58:19.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.535" endtime="20201030 10:58:19.869"></status>
</kw>
<msg timestamp="20201030 10:58:19.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035568097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035907306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.531" endtime="20201030 10:58:19.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035568097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035907306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.878" endtime="20201030 10:58:19.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.896" endtime="20201030 10:58:19.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.524" endtime="20201030 10:58:19.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.520" endtime="20201030 10:58:19.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:19.912" level="INFO">${PHILIP_RES} = [{'diff': 0.00033920900000000004}, {'diff': 0.00033937499999999593}, {'diff': 0.00033931899999999765}, {'diff': 0.0003392909999999985}, {'diff': 0.0003392499999999993}, {'diff': 0.00033932000000000406...</msg>
<status status="PASS" starttime="20201030 10:58:19.904" endtime="20201030 10:58:19.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.922" level="INFO">${RESULT} = {'diff': [0.00033920900000000004, 0.00033937499999999593, 0.00033931899999999765, 0.0003392909999999985, 0.0003392499999999993, 0.00033932000000000406, 0.0003392500000000062, 0.0003392499999999993, 0....</msg>
<status status="PASS" starttime="20201030 10:58:19.914" endtime="20201030 10:58:19.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.933" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:19.930" endtime="20201030 10:58:19.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.938" level="INFO">VALUE: [0.00033920900000000004, 0.00033937499999999593, 0.00033931899999999765, 0.0003392909999999985, 0.0003392499999999993, 0.00033932000000000406, 0.0003392500000000062, 0.0003392499999999993, 0.0003392499999999993, 0.0003392500000000062, 0.0003392359999999997, 0.0003392779999999984, 0.000339291999999998, 0.0003393049999999981, 0.0003392920000000049, 0.00033933300000000416, 0.0003392640000000058, 0.00033933300000000416, 0.000339291999999998, 0.0003392499999999993, 0.0003392229999999996, 0.00033926399999999884, 0.0003392779999999984, 0.00033936099999999636, 0.000339291999999998, 0.0003392499999999993, 0.0003392640000000058, 0.0003393199999999971, 0.0003392229999999996, 0.00033927800000000535, 0.00033932000000000406, 0.00033926299999999937, 0.0003393049999999981, 0.00033930599999999755, 0.0003392499999999993, 0.0003393469999999968, 0.00033927699999999894, 0.00033922200000000013, 0.00033919500000000047, 0.00033931899999999765, 0.0003392779999999984, 0.000339291999999998, 0.0003393610000000033, 0.0003393480000000032, 0.0003392500000000062, 0.0003393610000000033, 0.00033926399999999884, 0.000339291999999998, 0.0003393199999999971, 0.00033926399999999884]</msg>
<status status="PASS" starttime="20201030 10:58:19.935" endtime="20201030 10:58:19.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.924" endtime="20201030 10:58:19.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.455" endtime="20201030 10:58:19.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.425" endtime="20201030 10:58:19.943"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.949" endtime="20201030 10:58:19.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.945" endtime="20201030 10:58:19.972"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.993" endtime="20201030 10:58:20.020"></status>
</kw>
<msg timestamp="20201030 10:58:20.021" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.989" endtime="20201030 10:58:20.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.027" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.024" endtime="20201030 10:58:20.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.030" endtime="20201030 10:58:20.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.982" endtime="20201030 10:58:20.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.977" endtime="20201030 10:58:20.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.053" endtime="20201030 10:58:20.387"></status>
</kw>
<msg timestamp="20201030 10:58:20.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033876847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034243694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.050" endtime="20201030 10:58:20.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033876847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034243694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.396" endtime="20201030 10:58:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.414" endtime="20201030 10:58:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.042" endtime="20201030 10:58:20.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.038" endtime="20201030 10:58:20.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:20.430" level="INFO">${PHILIP_RES} = [{'diff': 0.00036684699999999654}, {'diff': 0.0003664859999999992}, {'diff': 0.00036649999999999877}, {'diff': 0.0003653890000000007}, {'diff': 0.00036551399999999734}, {'diff': 0.0003664729999999991}...</msg>
<status status="PASS" starttime="20201030 10:58:20.423" endtime="20201030 10:58:20.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.441" level="INFO">${RESULT} = {'diff': [0.00036684699999999654, 0.0003664859999999992, 0.00036649999999999877, 0.0003653890000000007, 0.00036551399999999734, 0.0003664729999999991, 0.0003664029999999943, 0.00036552800000000385, 0....</msg>
<status status="PASS" starttime="20201030 10:58:20.432" endtime="20201030 10:58:20.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.452" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:20.449" endtime="20201030 10:58:20.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.457" level="INFO">VALUE: [0.00036684699999999654, 0.0003664859999999992, 0.00036649999999999877, 0.0003653890000000007, 0.00036551399999999734, 0.0003664729999999991, 0.0003664029999999943, 0.00036552800000000385, 0.00036651399999999834, 0.00036652699999999844, 0.000365458000000006, 0.0003665000000000057, 0.0003664310000000004, 0.00036557000000000256, 0.0003665130000000058, 0.00036645800000000006, 0.0003655420000000034, 0.0003665420000000044, 0.00036645800000000006, 0.00036544499999999897, 0.0003664859999999992, 0.0003664170000000008, 0.00036549999999999777, 0.00036649999999999877, 0.00036645800000000006, 0.00036554100000000395, 0.00036651399999999834, 0.00036644499999999997, 0.00036545799999999906, 0.0003665829999999967, 0.0003663750000000021, 0.0003655419999999965, 0.00036649999999999877, 0.0003664170000000008, 0.0003655279999999969, 0.00036645800000000006, 0.0003664729999999991, 0.00036558300000000266, 0.0003665420000000044, 0.0003663890000000017, 0.00036552699999999744, 0.00036651399999999834, 0.00036645899999999954, 0.000365556000000003, 0.000366556000000004, 0.00036651399999999834, 0.0003655699999999956, 0.0003664859999999992, 0.0003665699999999966, 0.0003655549999999966]</msg>
<status status="PASS" starttime="20201030 10:58:20.454" endtime="20201030 10:58:20.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.443" endtime="20201030 10:58:20.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.973" endtime="20201030 10:58:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.944" endtime="20201030 10:58:20.462"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.467" endtime="20201030 10:58:20.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.464" endtime="20201030 10:58:20.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.513" endtime="20201030 10:58:20.542"></status>
</kw>
<msg timestamp="20201030 10:58:20.543" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.510" endtime="20201030 10:58:20.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.549" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.545" endtime="20201030 10:58:20.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.552" endtime="20201030 10:58:20.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.502" endtime="20201030 10:58:20.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.497" endtime="20201030 10:58:20.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.575" endtime="20201030 10:58:20.909"></status>
</kw>
<msg timestamp="20201030 10:58:20.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0350945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035490514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:20.571" endtime="20201030 10:58:20.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0350945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035490514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:20.918" endtime="20201030 10:58:20.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.936" endtime="20201030 10:58:20.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.564" endtime="20201030 10:58:20.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.560" endtime="20201030 10:58:20.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:20.952" level="INFO">${PHILIP_RES} = [{'diff': 0.0003960140000000001}, {'diff': 0.00039565199999999634}, {'diff': 0.00039570900000000103}, {'diff': 0.00039565199999999634}, {'diff': 0.0003956670000000023}, {'diff': 0.0003957360000000007}...</msg>
<status status="PASS" starttime="20201030 10:58:20.945" endtime="20201030 10:58:20.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.961" level="INFO">${RESULT} = {'diff': [0.0003960140000000001, 0.00039565199999999634, 0.00039570900000000103, 0.00039565199999999634, 0.0003956670000000023, 0.0003957360000000007, 0.00039570900000000103, 0.0003956949999999945, 0....</msg>
<status status="PASS" starttime="20201030 10:58:20.954" endtime="20201030 10:58:20.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.971" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:20.969" endtime="20201030 10:58:20.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.976" level="INFO">VALUE: [0.0003960140000000001, 0.00039565199999999634, 0.00039570900000000103, 0.00039565199999999634, 0.0003956670000000023, 0.0003957360000000007, 0.00039570900000000103, 0.0003956949999999945, 0.0003955840000000044, 0.0003956949999999945, 0.00039570900000000103, 0.000395694000000002, 0.000395791999999999, 0.00039572200000000113, 0.000395694000000002, 0.00039572200000000113, 0.00039569399999999505, 0.0003956810000000019, 0.0003958049999999991, 0.0003957360000000007, 0.0003957360000000007, 0.0003957360000000007, 0.00039572200000000113, 0.00039572200000000113, 0.00039572200000000113, 0.0003957360000000007, 0.00039572200000000113, 0.0003956810000000019, 0.00039576300000000036, 0.000395791999999999, 0.00039575000000000027, 0.00039572200000000113, 0.0003957779999999994, 0.0003957909999999995, 0.0003957079999999946, 0.00039577800000000635, 0.00039576300000000036, 0.0003957779999999994, 0.00039575000000000027, 0.0003956250000000036, 0.00039575000000000027, 0.00039572200000000113, 0.0003957219999999942, 0.0003958049999999991, 0.00039566600000000285, 0.00039565300000000275, 0.0003956659999999959, 0.00039575000000000027, 0.000395694000000002, 0.0003957360000000007]</msg>
<status status="PASS" starttime="20201030 10:58:20.973" endtime="20201030 10:58:20.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.963" endtime="20201030 10:58:20.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.493" endtime="20201030 10:58:20.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.463" endtime="20201030 10:58:20.986"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.992" endtime="20201030 10:58:21.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.988" endtime="20201030 10:58:21.015"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.036" endtime="20201030 10:58:21.067"></status>
</kw>
<msg timestamp="20201030 10:58:21.068" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.033" endtime="20201030 10:58:21.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.074" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.070" endtime="20201030 10:58:21.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.076" endtime="20201030 10:58:21.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.026" endtime="20201030 10:58:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.021" endtime="20201030 10:58:21.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.101" endtime="20201030 10:58:21.435"></status>
</kw>
<msg timestamp="20201030 10:58:21.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034292125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034717875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.098" endtime="20201030 10:58:21.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034292125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034717875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.445" endtime="20201030 10:58:21.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.463" endtime="20201030 10:58:21.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.091" endtime="20201030 10:58:21.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.086" endtime="20201030 10:58:21.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:21.479" level="INFO">${PHILIP_RES} = [{'diff': 0.0004257500000000025}, {'diff': 0.00042484699999999903}, {'diff': 0.00042487499999999817}, {'diff': 0.0004249170000000038}, {'diff': 0.0004249029999999973}, {'diff': 0.0004249720000000026},...</msg>
<status status="PASS" starttime="20201030 10:58:21.471" endtime="20201030 10:58:21.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.488" level="INFO">${RESULT} = {'diff': [0.0004257500000000025, 0.00042484699999999903, 0.00042487499999999817, 0.0004249170000000038, 0.0004249029999999973, 0.0004249720000000026, 0.0004249170000000038, 0.00042487499999999817, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:21.481" endtime="20201030 10:58:21.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.498" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:21.496" endtime="20201030 10:58:21.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.504" level="INFO">VALUE: [0.0004257500000000025, 0.00042484699999999903, 0.00042487499999999817, 0.0004249170000000038, 0.0004249029999999973, 0.0004249720000000026, 0.0004249170000000038, 0.00042487499999999817, 0.00042495800000000306, 0.00042494399999999655, 0.0004248890000000047, 0.0004248479999999985, 0.0004248750000000051, 0.0004248619999999981, 0.0004248479999999985, 0.00042484699999999903, 0.00042491600000000435, 0.0004249169999999969, 0.00042490199999999784, 0.0004249029999999973, 0.00042487499999999817, 0.0004249159999999974, 0.0004249170000000038, 0.00042490199999999784, 0.0004248890000000047, 0.0004249029999999973, 0.0004249029999999973, 0.0004248750000000051, 0.00042483299999999946, 0.00042484699999999903, 0.0004249170000000038, 0.0004249029999999973, 0.00042491600000000435, 0.0004249029999999973, 0.0004248750000000051, 0.0004248619999999981, 0.0004248609999999986, 0.0004248890000000047, 0.00042484699999999903, 0.0004248609999999986, 0.0004248609999999986, 0.0004248330000000064, 0.00042487499999999817, 0.00042483299999999946, 0.00042490300000000425, 0.00042494399999999655, 0.00042486100000000554, 0.00042487499999999817, 0.00042488899999999774, 0.0004249020000000048]</msg>
<status status="PASS" starttime="20201030 10:58:21.501" endtime="20201030 10:58:21.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.490" endtime="20201030 10:58:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.017" endtime="20201030 10:58:21.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.987" endtime="20201030 10:58:21.509"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.515" endtime="20201030 10:58:21.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.511" endtime="20201030 10:58:21.539"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.561" endtime="20201030 10:58:21.593"></status>
</kw>
<msg timestamp="20201030 10:58:21.594" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.558" endtime="20201030 10:58:21.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.601" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.597" endtime="20201030 10:58:21.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.603" endtime="20201030 10:58:21.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.551" endtime="20201030 10:58:21.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.545" endtime="20201030 10:58:21.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.626" endtime="20201030 10:58:21.961"></status>
</kw>
<msg timestamp="20201030 10:58:21.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03621875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:21.623" endtime="20201030 10:58:21.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03621875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:21.970" endtime="20201030 10:58:21.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.988" endtime="20201030 10:58:21.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.616" endtime="20201030 10:58:21.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.611" endtime="20201030 10:58:21.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:22.004" level="INFO">${PHILIP_RES} = [{'diff': 0.00045408300000000096}, {'diff': 0.00045408400000000043}, {'diff': 0.00045504100000000325}, {'diff': 0.0004539309999999977}, {'diff': 0.0004530550000000008}, {'diff': 0.0004539999999999961}...</msg>
<status status="PASS" starttime="20201030 10:58:21.996" endtime="20201030 10:58:22.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.013" level="INFO">${RESULT} = {'diff': [0.00045408300000000096, 0.00045408400000000043, 0.00045504100000000325, 0.0004539309999999977, 0.0004530550000000008, 0.0004539999999999961, 0.0004549999999999971, 0.00045302800000000115, 0....</msg>
<status status="PASS" starttime="20201030 10:58:22.006" endtime="20201030 10:58:22.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.023" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:22.021" endtime="20201030 10:58:22.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.030" level="INFO">VALUE: [0.00045408300000000096, 0.00045408400000000043, 0.00045504100000000325, 0.0004539309999999977, 0.0004530550000000008, 0.0004539999999999961, 0.0004549999999999971, 0.00045302800000000115, 0.0004540560000000013, 0.00045504100000000325, 0.0004531390000000052, 0.00045408400000000043, 0.0004550550000000028, 0.00045298600000000244, 0.00045408300000000096, 0.0004550140000000036, 0.00045312499999999867, 0.00045409700000000053, 0.000455000000000004, 0.000453097999999999, 0.00045412499999999967, 0.00045509700000000153, 0.00045312499999999867, 0.00045409700000000053, 0.0004551110000000011, 0.0004530560000000003, 0.00045412499999999967, 0.00045501399999999664, 0.00045311100000000604, 0.0004541110000000001, 0.0004549999999999971, 0.00045308399999999943, 0.00045404100000000225, 0.0004550279999999962, 0.00045306999999999986, 0.00045404100000000225, 0.0004550419999999958, 0.0004531109999999991, 0.0004541529999999988, 0.0004550969999999946, 0.0004531529999999978, 0.0004541529999999988, 0.00045512500000000067, 0.0004532499999999953, 0.0004542079999999976, 0.00045509700000000153, 0.0004531109999999991, 0.0004542219999999972, 0.0004550839999999945, 0.00045313899999999824]</msg>
<status status="PASS" starttime="20201030 10:58:22.026" endtime="20201030 10:58:22.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.015" endtime="20201030 10:58:22.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.540" endtime="20201030 10:58:22.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.510" endtime="20201030 10:58:22.035"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.041" endtime="20201030 10:58:22.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.037" endtime="20201030 10:58:22.064"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.085" endtime="20201030 10:58:22.119"></status>
</kw>
<msg timestamp="20201030 10:58:22.120" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.082" endtime="20201030 10:58:22.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.126" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.123" endtime="20201030 10:58:22.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.129" endtime="20201030 10:58:22.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.074" endtime="20201030 10:58:22.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.069" endtime="20201030 10:58:22.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.152" endtime="20201030 10:58:22.498"></status>
</kw>
<msg timestamp="20201030 10:58:22.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03383525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034320847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:22.149" endtime="20201030 10:58:22.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03383525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034320847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:22.507" endtime="20201030 10:58:22.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.525" endtime="20201030 10:58:22.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.142" endtime="20201030 10:58:22.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.137" endtime="20201030 10:58:22.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:22.541" level="INFO">${PHILIP_RES} = [{'diff': 0.0004855970000000043}, {'diff': 0.0004842779999999977}, {'diff': 0.00048426399999999814}, {'diff': 0.00048398599999999875}, {'diff': 0.0004851940000000013}, {'diff': 0.0004851520000000026},...</msg>
<status status="PASS" starttime="20201030 10:58:22.533" endtime="20201030 10:58:22.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.552" level="INFO">${RESULT} = {'diff': [0.0004855970000000043, 0.0004842779999999977, 0.00048426399999999814, 0.00048398599999999875, 0.0004851940000000013, 0.0004851520000000026, 0.0004851520000000026, 0.00048513899999999555, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:22.543" endtime="20201030 10:58:22.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.563" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:22.561" endtime="20201030 10:58:22.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.569" level="INFO">VALUE: [0.0004855970000000043, 0.0004842779999999977, 0.00048426399999999814, 0.00048398599999999875, 0.0004851940000000013, 0.0004851520000000026, 0.0004851520000000026, 0.00048513899999999555, 0.00048513899999999555, 0.0004851940000000013, 0.0004851659999999952, 0.00048513899999999555, 0.0004851529999999951, 0.0004850979999999963, 0.0004852079999999939, 0.0004851810000000012, 0.00048520900000000033, 0.0004850700000000041, 0.00048516600000000215, 0.0004851799999999948, 0.00048520900000000033, 0.0004851800000000017, 0.00048526399999999914, 0.000485236, 0.00048524999999999957, 0.00048530599999999785, 0.00048533300000000446, 0.0004852909999999988, 0.00048526399999999914, 0.00048520800000000086, 0.0004852779999999987, 0.0004853049999999984, 0.00048526399999999914, 0.00048533400000000393, 0.00048533300000000446, 0.00048533400000000393, 0.00048524999999999957, 0.000485236, 0.000485236, 0.0004853469999999971, 0.0004853060000000048, 0.0004852919999999983, 0.0004853329999999975, 0.0004853050000000053, 0.000485236, 0.0004853199999999974, 0.00048527800000000565, 0.0004853199999999974, 0.00048524999999999957, 0.00048524999999999957]</msg>
<status status="PASS" starttime="20201030 10:58:22.565" endtime="20201030 10:58:22.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.554" endtime="20201030 10:58:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.065" endtime="20201030 10:58:22.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.036" endtime="20201030 10:58:22.574"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.580" endtime="20201030 10:58:22.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.576" endtime="20201030 10:58:22.603"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.624" endtime="20201030 10:58:22.660"></status>
</kw>
<msg timestamp="20201030 10:58:22.661" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.621" endtime="20201030 10:58:22.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.667" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.663" endtime="20201030 10:58:22.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.670" endtime="20201030 10:58:22.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.614" endtime="20201030 10:58:22.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.608" endtime="20201030 10:58:22.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.693" endtime="20201030 10:58:23.033"></status>
</kw>
<msg timestamp="20201030 10:58:23.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034209986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034726722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.689" endtime="20201030 10:58:23.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034209986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034726722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.042" endtime="20201030 10:58:23.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.060" endtime="20201030 10:58:23.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.682" endtime="20201030 10:58:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.677" endtime="20201030 10:58:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:23.076" level="INFO">${PHILIP_RES} = [{'diff': 0.0005167360000000037}, {'diff': 0.0005174580000000054}, {'diff': 0.0005164309999999978}, {'diff': 0.000517389}, {'diff': 0.0005165279999999953}, {'diff': 0.0005163470000000003}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:58:23.069" endtime="20201030 10:58:23.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.087" level="INFO">${RESULT} = {'diff': [0.0005167360000000037, 0.0005174580000000054, 0.0005164309999999978, 0.000517389, 0.0005165279999999953, 0.0005163470000000003, 0.0005164999999999961, 0.0005175269999999968, 0.00051666599999...</msg>
<status status="PASS" starttime="20201030 10:58:23.078" endtime="20201030 10:58:23.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.097" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:23.095" endtime="20201030 10:58:23.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.103" level="INFO">VALUE: [0.0005167360000000037, 0.0005174580000000054, 0.0005164309999999978, 0.000517389, 0.0005165279999999953, 0.0005163470000000003, 0.0005164999999999961, 0.0005175269999999968, 0.000516665999999999, 0.0005165279999999953, 0.0005164439999999978, 0.0005174999999999971, 0.0005166249999999997, 0.0005164439999999978, 0.0005164159999999987, 0.0005174020000000001, 0.0005166249999999997, 0.0005164439999999978, 0.0005164029999999986, 0.0005175410000000033, 0.0005166799999999985, 0.0005164439999999978, 0.0005164449999999973, 0.0005175559999999954, 0.0005166529999999989, 0.0005165139999999957, 0.0005164729999999965, 0.000517471999999998, 0.0005166939999999981, 0.0005164309999999978, 0.0005164999999999961, 0.0005174309999999988, 0.0005166530000000058, 0.0005165280000000022, 0.0005165560000000013, 0.0005175279999999963, 0.0005167229999999967, 0.0005165560000000013, 0.0005164860000000035, 0.0005174720000000049, 0.000516665999999999, 0.0005165420000000018, 0.0005165000000000031, 0.0005174720000000049, 0.0005166389999999993, 0.0005165000000000031, 0.0005165140000000026, 0.0005175140000000036, 0.0005166249999999997, 0.0005164449999999973]</msg>
<status status="PASS" starttime="20201030 10:58:23.100" endtime="20201030 10:58:23.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.088" endtime="20201030 10:58:23.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.604" endtime="20201030 10:58:23.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.575" endtime="20201030 10:58:23.108"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.113" endtime="20201030 10:58:23.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.110" endtime="20201030 10:58:23.137"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.157" endtime="20201030 10:58:23.194"></status>
</kw>
<msg timestamp="20201030 10:58:23.196" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.154" endtime="20201030 10:58:23.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.202" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.198" endtime="20201030 10:58:23.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.204" endtime="20201030 10:58:23.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.147" endtime="20201030 10:58:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.142" endtime="20201030 10:58:23.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.227" endtime="20201030 10:58:23.566"></status>
</kw>
<msg timestamp="20201030 10:58:23.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033787028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034334778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.224" endtime="20201030 10:58:23.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033787028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034334778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.576" endtime="20201030 10:58:23.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.594" endtime="20201030 10:58:23.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.217" endtime="20201030 10:58:23.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.212" endtime="20201030 10:58:23.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:23.611" level="INFO">${PHILIP_RES} = [{'diff': 0.0005477500000000066}, {'diff': 0.0005497360000000021}, {'diff': 0.0005488060000000058}, {'diff': 0.0005497500000000016}, {'diff': 0.0005487779999999998}, {'diff': 0.000548625000000004}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:23.603" endtime="20201030 10:58:23.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.620" level="INFO">${RESULT} = {'diff': [0.0005477500000000066, 0.0005497360000000021, 0.0005488060000000058, 0.0005497500000000016, 0.0005487779999999998, 0.000548625000000004, 0.0005486799999999958, 0.0005497500000000016, 0.00054...</msg>
<status status="PASS" starttime="20201030 10:58:23.613" endtime="20201030 10:58:23.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.630" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:23.628" endtime="20201030 10:58:23.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.635" level="INFO">VALUE: [0.0005477500000000066, 0.0005497360000000021, 0.0005488060000000058, 0.0005497500000000016, 0.0005487779999999998, 0.000548625000000004, 0.0005486799999999958, 0.0005497500000000016, 0.0005487219999999945, 0.0005486520000000036, 0.0005488049999999994, 0.0005497360000000021, 0.0005487500000000006, 0.0005485559999999987, 0.0005488059999999989, 0.0005496669999999967, 0.0005487500000000006, 0.0005484999999999934, 0.0005487360000000011, 0.000549723000000002, 0.0005487220000000015, 0.0005485689999999988, 0.0005487770000000003, 0.0005497219999999955, 0.0005487360000000011, 0.0005485419999999991, 0.0005487220000000015, 0.000549624999999998, 0.0005485419999999991, 0.000548514, 0.0005487779999999998, 0.0005497499999999947, 0.0005487360000000011, 0.000548527, 0.0005487359999999941, 0.0005497640000000012, 0.0005487770000000003, 0.0005486800000000028, 0.0005488060000000058, 0.0005497360000000021, 0.0005488059999999989, 0.0005485560000000056, 0.0005487640000000002, 0.0005497780000000008, 0.0005487220000000015, 0.0005486110000000044, 0.0005487640000000002, 0.0005497500000000016, 0.0005487919999999993, 0.000548514]</msg>
<status status="PASS" starttime="20201030 10:58:23.632" endtime="20201030 10:58:23.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.621" endtime="20201030 10:58:23.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.138" endtime="20201030 10:58:23.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.109" endtime="20201030 10:58:23.640"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.646" endtime="20201030 10:58:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.642" endtime="20201030 10:58:23.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.690" endtime="20201030 10:58:23.729"></status>
</kw>
<msg timestamp="20201030 10:58:23.730" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.687" endtime="20201030 10:58:23.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.736" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.733" endtime="20201030 10:58:23.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.739" endtime="20201030 10:58:23.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.680" endtime="20201030 10:58:23.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.674" endtime="20201030 10:58:23.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.763" endtime="20201030 10:58:24.097"></status>
</kw>
<msg timestamp="20201030 10:58:24.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034030639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034614333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.759" endtime="20201030 10:58:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034030639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034614333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.106" endtime="20201030 10:58:24.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.124" endtime="20201030 10:58:24.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.752" endtime="20201030 10:58:24.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.747" endtime="20201030 10:58:24.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:24.140" level="INFO">${PHILIP_RES} = [{'diff': 0.0005836939999999957}, {'diff': 0.0005828189999999983}, {'diff': 0.0005828749999999966}, {'diff': 0.0005839310000000028}, {'diff': 0.0005840140000000008}, {'diff': 0.0005839450000000024}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.132" endtime="20201030 10:58:24.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.148" level="INFO">${RESULT} = {'diff': [0.0005836939999999957, 0.0005828189999999983, 0.0005828749999999966, 0.0005839310000000028, 0.0005840140000000008, 0.0005839450000000024, 0.0005828749999999966, 0.0005828880000000036, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:58:24.142" endtime="20201030 10:58:24.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.159" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:24.156" endtime="20201030 10:58:24.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.164" level="INFO">VALUE: [0.0005836939999999957, 0.0005828189999999983, 0.0005828749999999966, 0.0005839310000000028, 0.0005840140000000008, 0.0005839450000000024, 0.0005828749999999966, 0.0005828880000000036, 0.0005838329999999989, 0.0005840419999999999, 0.0005838059999999992, 0.0005828330000000048, 0.0005829299999999954, 0.0005839030000000037, 0.0005838889999999972, 0.000583860999999998, 0.0005827909999999992, 0.0005828330000000048, 0.0005839160000000038, 0.0005841389999999974, 0.0005839450000000024, 0.0005830000000000002, 0.0005829730000000005, 0.0005839030000000037, 0.0005839859999999947, 0.0005839310000000028, 0.0005829860000000006, 0.0005828750000000035, 0.0005838749999999976, 0.0005840280000000003, 0.000583860999999998, 0.0005828620000000034, 0.0005829440000000019, 0.0005840140000000008, 0.000583959000000002, 0.0005839170000000032, 0.0005829160000000028, 0.0005829030000000027, 0.0005839170000000032, 0.0005840000000000012, 0.0005838049999999997, 0.000582860999999997, 0.0005828480000000039, 0.0005839030000000037, 0.000584069999999999, 0.0005839440000000029, 0.0005829029999999957, 0.0005829299999999954, 0.0005840410000000074, 0.0005840139999999938]</msg>
<status status="PASS" starttime="20201030 10:58:24.161" endtime="20201030 10:58:24.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.150" endtime="20201030 10:58:24.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.670" endtime="20201030 10:58:24.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.641" endtime="20201030 10:58:24.169"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.175" endtime="20201030 10:58:24.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.171" endtime="20201030 10:58:24.198"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.220" endtime="20201030 10:58:24.261"></status>
</kw>
<msg timestamp="20201030 10:58:24.262" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.217" endtime="20201030 10:58:24.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.268" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.264" endtime="20201030 10:58:24.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.271" endtime="20201030 10:58:24.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.210" endtime="20201030 10:58:24.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.204" endtime="20201030 10:58:24.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.294" endtime="20201030 10:58:24.636"></status>
</kw>
<msg timestamp="20201030 10:58:24.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035432903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036049972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.291" endtime="20201030 10:58:24.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035432903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036049972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.646" endtime="20201030 10:58:24.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.664" endtime="20201030 10:58:24.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.284" endtime="20201030 10:58:24.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.279" endtime="20201030 10:58:24.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:24.679" level="INFO">${PHILIP_RES} = [{'diff': 0.0006170689999999979}, {'diff': 0.0006181530000000032}, {'diff': 0.0006171249999999961}, {'diff': 0.0006172779999999989}, {'diff': 0.0006180549999999993}, {'diff': 0.0006178889999999965}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.672" endtime="20201030 10:58:24.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.689" level="INFO">${RESULT} = {'diff': [0.0006170689999999979, 0.0006181530000000032, 0.0006171249999999961, 0.0006172779999999989, 0.0006180549999999993, 0.0006178889999999965, 0.0006160550000000042, 0.0006169720000000004, 0.0006...</msg>
<status status="PASS" starttime="20201030 10:58:24.682" endtime="20201030 10:58:24.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.699" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:24.697" endtime="20201030 10:58:24.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.706" level="INFO">VALUE: [0.0006170689999999979, 0.0006181530000000032, 0.0006171249999999961, 0.0006172779999999989, 0.0006180549999999993, 0.0006178889999999965, 0.0006160550000000042, 0.0006169720000000004, 0.0006181529999999963, 0.0006170419999999982, 0.0006171109999999966, 0.0006180700000000053, 0.0006179719999999944, 0.0006162360000000061, 0.0006170549999999983, 0.000618208000000002, 0.0006170419999999982, 0.0006171950000000009, 0.0006180140000000001, 0.0006181109999999976, 0.0006162920000000044, 0.0006170279999999986, 0.000618096999999998, 0.0006169859999999999, 0.0006171660000000023, 0.0006180419999999992, 0.0006179720000000014, 0.0006161670000000008, 0.0006170689999999979, 0.0006181810000000024, 0.0006170549999999983, 0.0006172219999999937, 0.0006181110000000045, 0.0006179999999999936, 0.0006161249999999951, 0.0006169450000000007, 0.0006181670000000028, 0.0006170689999999979, 0.0006172910000000059, 0.0006180420000000061, 0.0006180419999999923, 0.0006160689999999969, 0.0006169999999999926, 0.0006180419999999992, 0.000616820000000004, 0.0006170979999999965, 0.0006178609999999973, 0.0006179159999999961, 0.000616125000000009, 0.0006169169999999946]</msg>
<status status="PASS" starttime="20201030 10:58:24.701" endtime="20201030 10:58:24.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.690" endtime="20201030 10:58:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.199" endtime="20201030 10:58:24.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.170" endtime="20201030 10:58:24.711"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.716" endtime="20201030 10:58:24.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.713" endtime="20201030 10:58:24.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.760" endtime="20201030 10:58:24.803"></status>
</kw>
<msg timestamp="20201030 10:58:24.804" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.757" endtime="20201030 10:58:24.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.810" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.806" endtime="20201030 10:58:24.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.812" endtime="20201030 10:58:24.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.750" endtime="20201030 10:58:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.745" endtime="20201030 10:58:24.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.836" endtime="20201030 10:58:25.168"></status>
</kw>
<msg timestamp="20201030 10:58:25.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034478917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.832" endtime="20201030 10:58:25.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034478917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.177" endtime="20201030 10:58:25.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.195" endtime="20201030 10:58:25.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.825" endtime="20201030 10:58:25.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.821" endtime="20201030 10:58:25.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:25.211" level="INFO">${PHILIP_RES} = [{'diff': 0.0006525000000000003}, {'diff': 0.0006521379999999966}, {'diff': 0.0006523470000000045}, {'diff': 0.0006521670000000021}, {'diff': 0.0006522220000000009}, {'diff': 0.000652138999999996}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:25.204" endtime="20201030 10:58:25.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.221" level="INFO">${RESULT} = {'diff': [0.0006525000000000003, 0.0006521379999999966, 0.0006523470000000045, 0.0006521670000000021, 0.0006522220000000009, 0.000652138999999996, 0.0006521529999999956, 0.0006520829999999977, 0.00065...</msg>
<status status="PASS" starttime="20201030 10:58:25.213" endtime="20201030 10:58:25.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.232" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:25.230" endtime="20201030 10:58:25.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.237" level="INFO">VALUE: [0.0006525000000000003, 0.0006521379999999966, 0.0006523470000000045, 0.0006521670000000021, 0.0006522220000000009, 0.000652138999999996, 0.0006521529999999956, 0.0006520829999999977, 0.00065225, 0.000652040999999999, 0.0006522090000000008, 0.0006520549999999986, 0.00065225, 0.000652139000000003, 0.000652332999999998, 0.0006521120000000033, 0.0006523199999999979, 0.0006522360000000005, 0.0006523189999999984, 0.0006520839999999972, 0.0006522779999999992, 0.0006521110000000038, 0.0006522919999999988, 0.0006520970000000043, 0.0006523339999999975, 0.0006520690000000051, 0.0006523749999999967, 0.0006521950000000012, 0.0006523050000000058, 0.000652138999999996, 0.0006523469999999976, 0.0006521110000000038, 0.0006523609999999971, 0.00065225, 0.0006524169999999954, 0.0006523059999999983, 0.0006523750000000036, 0.0006522220000000009, 0.0006523749999999967, 0.0006522090000000008, 0.0006522910000000062, 0.000652250000000007, 0.0006523330000000049, 0.0006522090000000008, 0.0006524160000000029, 0.000652221999999994, 0.0006524029999999958, 0.0006521939999999948, 0.0006523609999999902, 0.0006521109999999969]</msg>
<status status="PASS" starttime="20201030 10:58:25.234" endtime="20201030 10:58:25.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.223" endtime="20201030 10:58:25.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.741" endtime="20201030 10:58:25.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.711" endtime="20201030 10:58:25.242"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.248" endtime="20201030 10:58:25.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.244" endtime="20201030 10:58:25.271"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.292" endtime="20201030 10:58:25.337"></status>
</kw>
<msg timestamp="20201030 10:58:25.338" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.289" endtime="20201030 10:58:25.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.344" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.340" endtime="20201030 10:58:25.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.346" endtime="20201030 10:58:25.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.281" endtime="20201030 10:58:25.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.276" endtime="20201030 10:58:25.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.369" endtime="20201030 10:58:25.714"></status>
</kw>
<msg timestamp="20201030 10:58:25.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034764042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.366" endtime="20201030 10:58:25.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034764042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.723" endtime="20201030 10:58:25.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.741" endtime="20201030 10:58:25.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.359" endtime="20201030 10:58:25.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.354" endtime="20201030 10:58:25.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:25.757" level="INFO">${PHILIP_RES} = [{'diff': 0.0006879310000000027}, {'diff': 0.0006864580000000009}, {'diff': 0.0006872779999999995}, {'diff': 0.0006864720000000005}, {'diff': 0.0006874030000000031}, {'diff': 0.0006865559999999979}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.750" endtime="20201030 10:58:25.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.768" level="INFO">${RESULT} = {'diff': [0.0006879310000000027, 0.0006864580000000009, 0.0006872779999999995, 0.0006864720000000005, 0.0006874030000000031, 0.0006865559999999979, 0.0006873610000000044, 0.000686486, 0.00068749999999...</msg>
<status status="PASS" starttime="20201030 10:58:25.759" endtime="20201030 10:58:25.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.778" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:25.776" endtime="20201030 10:58:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.783" level="INFO">VALUE: [0.0006879310000000027, 0.0006864580000000009, 0.0006872779999999995, 0.0006864720000000005, 0.0006874030000000031, 0.0006865559999999979, 0.0006873610000000044, 0.000686486, 0.0006874999999999937, 0.0006866109999999967, 0.0006874999999999937, 0.0006866109999999967, 0.0006874309999999953, 0.000686666999999995, 0.0006873199999999982, 0.0006865830000000045, 0.0006874730000000009, 0.0006866660000000024, 0.0006874590000000014, 0.0006865969999999971, 0.0006874720000000015, 0.0006865829999999976, 0.0006875140000000002, 0.0006864590000000004, 0.0006872909999999996, 0.0006865550000000054, 0.0006874170000000027, 0.0006866110000000036, 0.0006873889999999966, 0.0006866249999999963, 0.0006875279999999998, 0.0006866530000000023, 0.0006874440000000023, 0.0006865970000000041, 0.0006873889999999966, 0.0006865559999999979, 0.0006873480000000043, 0.0006866109999999967, 0.000687457999999995, 0.0006865560000000048, 0.0006874440000000093, 0.0006865700000000113, 0.000687472999999994, 0.0006866670000000019, 0.0006872640000000069, 0.0006865690000000119, 0.0006873480000000043, 0.0006864309999999874, 0.0006873329999999983, 0.000686486]</msg>
<status status="PASS" starttime="20201030 10:58:25.780" endtime="20201030 10:58:25.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.769" endtime="20201030 10:58:25.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.272" endtime="20201030 10:58:25.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.243" endtime="20201030 10:58:25.788"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.794" endtime="20201030 10:58:25.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.790" endtime="20201030 10:58:25.817"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.838" endtime="20201030 10:58:25.884"></status>
</kw>
<msg timestamp="20201030 10:58:25.886" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.835" endtime="20201030 10:58:25.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.892" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.888" endtime="20201030 10:58:25.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.894" endtime="20201030 10:58:25.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.827" endtime="20201030 10:58:25.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.822" endtime="20201030 10:58:25.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.917" endtime="20201030 10:58:26.255"></status>
</kw>
<msg timestamp="20201030 10:58:26.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033929319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034653597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.914" endtime="20201030 10:58:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033929319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034653597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.265" endtime="20201030 10:58:26.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.282" endtime="20201030 10:58:26.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.907" endtime="20201030 10:58:26.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.902" endtime="20201030 10:58:26.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:26.298" level="INFO">${PHILIP_RES} = [{'diff': 0.0007242780000000018}, {'diff': 0.0007257640000000037}, {'diff': 0.0007245140000000025}, {'diff': 0.0007246950000000044}, {'diff': 0.0007255970000000014}, {'diff': 0.0007254720000000048}, {...</msg>
<status status="PASS" starttime="20201030 10:58:26.291" endtime="20201030 10:58:26.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.307" level="INFO">${RESULT} = {'diff': [0.0007242780000000018, 0.0007257640000000037, 0.0007245140000000025, 0.0007246950000000044, 0.0007255970000000014, 0.0007254720000000048, 0.0007238620000000057, 0.0007246249999999996, 0.0007...</msg>
<status status="PASS" starttime="20201030 10:58:26.300" endtime="20201030 10:58:26.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.318" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:26.315" endtime="20201030 10:58:26.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.323" level="INFO">VALUE: [0.0007242780000000018, 0.0007257640000000037, 0.0007245140000000025, 0.0007246950000000044, 0.0007255970000000014, 0.0007254720000000048, 0.0007238620000000057, 0.0007246249999999996, 0.0007256669999999993, 0.0007245830000000009, 0.0007248190000000015, 0.000725611000000001, 0.0007256250000000006, 0.0007238609999999993, 0.0007245970000000004, 0.000725722000000005, 0.0007246119999999995, 0.0007247640000000027, 0.0007256799999999994, 0.0007256380000000007, 0.0007238749999999988, 0.0007247219999999971, 0.0007257779999999964, 0.000724820000000001, 0.000724931000000005, 0.0007257359999999977, 0.0007257779999999964, 0.0007238469999999997, 0.0007247780000000023, 0.0007258750000000008, 0.0007248060000000014, 0.0007249579999999978, 0.0007257920000000029, 0.0007257779999999964, 0.0007239439999999972, 0.0007245979999999999, 0.0007258059999999955, 0.0007247360000000036, 0.0007248190000000015, 0.0007257779999999964, 0.0007256810000000058, 0.0007239720000000033, 0.0007248749999999998, 0.0007258889999999935, 0.000724693999999998, 0.0007249299999999986, 0.0007257499999999972, 0.0007257360000000046, 0.000723902999999998, 0.000724722000000011]</msg>
<status status="PASS" starttime="20201030 10:58:26.320" endtime="20201030 10:58:26.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.309" endtime="20201030 10:58:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.818" endtime="20201030 10:58:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.789" endtime="20201030 10:58:26.333"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.339" endtime="20201030 10:58:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.335" endtime="20201030 10:58:26.362"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.383" endtime="20201030 10:58:26.433"></status>
</kw>
<msg timestamp="20201030 10:58:26.434" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.379" endtime="20201030 10:58:26.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.440" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.436" endtime="20201030 10:58:26.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.442" endtime="20201030 10:58:26.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.372" endtime="20201030 10:58:26.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.367" endtime="20201030 10:58:26.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.466" endtime="20201030 10:58:26.805"></status>
</kw>
<msg timestamp="20201030 10:58:26.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035328528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.462" endtime="20201030 10:58:26.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035328528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036092236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.814" endtime="20201030 10:58:26.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.832" endtime="20201030 10:58:26.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.455" endtime="20201030 10:58:26.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.451" endtime="20201030 10:58:26.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:26.848" level="INFO">${PHILIP_RES} = [{'diff': 0.0007637080000000018}, {'diff': 0.0007618749999999952}, {'diff': 0.0007619310000000004}, {'diff': 0.0007629999999999998}, {'diff': 0.0007631670000000021}, {'diff': 0.000763041000000006}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:26.840" endtime="20201030 10:58:26.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.857" level="INFO">${RESULT} = {'diff': [0.0007637080000000018, 0.0007618749999999952, 0.0007619310000000004, 0.0007629999999999998, 0.0007631670000000021, 0.000763041000000006, 0.0007620830000000037, 0.0007620839999999962, 0.00076...</msg>
<status status="PASS" starttime="20201030 10:58:26.850" endtime="20201030 10:58:26.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.867" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:26.865" endtime="20201030 10:58:26.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.872" level="INFO">VALUE: [0.0007637080000000018, 0.0007618749999999952, 0.0007619310000000004, 0.0007629999999999998, 0.0007631670000000021, 0.000763041000000006, 0.0007620830000000037, 0.0007620839999999962, 0.000763138999999996, 0.000763139000000003, 0.0007630700000000046, 0.0007620830000000037, 0.0007619589999999996, 0.0007629579999999941, 0.0007632090000000008, 0.0007629300000000019, 0.0007621250000000024, 0.0007620689999999972, 0.0007630839999999972, 0.0007632080000000013, 0.0007630559999999981, 0.0007620979999999958, 0.0007620699999999966, 0.0007629580000000011, 0.0007631800000000022, 0.000763040999999999, 0.0007619719999999996, 0.0007620969999999963, 0.0007631110000000038, 0.0007632079999999944, 0.000763139000000003, 0.0007619859999999992, 0.0007619589999999996, 0.0007629440000000084, 0.0007630829999999977, 0.0007630279999999989, 0.0007620420000000044, 0.0007620409999999911, 0.0007629999999999998, 0.0007630140000000063, 0.0007629309999999945, 0.0007618890000000017, 0.0007619999999999988, 0.0007628330000000044, 0.0007630969999999904, 0.0007629440000000015, 0.0007619310000000074, 0.0007619310000000074, 0.0007628610000000036, 0.0007629859999999933]</msg>
<status status="PASS" starttime="20201030 10:58:26.869" endtime="20201030 10:58:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.858" endtime="20201030 10:58:26.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.363" endtime="20201030 10:58:26.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.334" endtime="20201030 10:58:26.877"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.883" endtime="20201030 10:58:26.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.879" endtime="20201030 10:58:26.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.929" endtime="20201030 10:58:26.980"></status>
</kw>
<msg timestamp="20201030 10:58:26.981" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.925" endtime="20201030 10:58:26.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.987" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.983" endtime="20201030 10:58:26.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.990" endtime="20201030 10:58:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.918" endtime="20201030 10:58:26.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.913" endtime="20201030 10:58:26.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.013" endtime="20201030 10:58:27.359"></status>
</kw>
<msg timestamp="20201030 10:58:27.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036565222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.010" endtime="20201030 10:58:27.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036565222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.368" endtime="20201030 10:58:27.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.386" endtime="20201030 10:58:27.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.002" endtime="20201030 10:58:27.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.998" endtime="20201030 10:58:27.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:27.402" level="INFO">${PHILIP_RES} = [{'diff': 0.0008025280000000037}, {'diff': 0.0008011799999999986}, {'diff': 0.0008010139999999957}, {'diff': 0.0008011940000000051}, {'diff': 0.000802166}, {'diff': 0.000801181000000005}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:27.394" endtime="20201030 10:58:27.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.411" level="INFO">${RESULT} = {'diff': [0.0008025280000000037, 0.0008011799999999986, 0.0008010139999999957, 0.0008011940000000051, 0.000802166, 0.000801181000000005, 0.0008011249999999998, 0.0008012079999999977, 0.000802194999999...</msg>
<status status="PASS" starttime="20201030 10:58:27.404" endtime="20201030 10:58:27.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.421" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:27.419" endtime="20201030 10:58:27.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.428" level="INFO">VALUE: [0.0008025280000000037, 0.0008011799999999986, 0.0008010139999999957, 0.0008011940000000051, 0.000802166, 0.000801181000000005, 0.0008011249999999998, 0.0008012079999999977, 0.0008021949999999986, 0.000801181000000005, 0.0008010140000000027, 0.0008011389999999993, 0.0008022499999999974, 0.0008011669999999985, 0.0008010690000000015, 0.0008012640000000029, 0.0008022220000000052, 0.000801263999999996, 0.0008010280000000022, 0.0008013190000000017, 0.0008022910000000036, 0.0008012360000000038, 0.0008011110000000002, 0.0008012080000000046, 0.000802180999999999, 0.0008011519999999994, 0.0008009579999999974, 0.000801070000000001, 0.0008022919999999961, 0.0008012640000000029, 0.0008010139999999957, 0.0008011949999999976, 0.0008021669999999925, 0.0008012499999999895, 0.000801070000000001, 0.0008012230000000037, 0.0008023060000000026, 0.0008013340000000008, 0.0008010970000000006, 0.000801263999999996, 0.0008022220000000052, 0.000801263999999996, 0.0008010280000000092, 0.0008013060000000016, 0.000802180999999999, 0.000801263999999996, 0.000801070000000001, 0.0008011670000000054, 0.0008021939999999922, 0.000801277000000003]</msg>
<status status="PASS" starttime="20201030 10:58:27.423" endtime="20201030 10:58:27.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.412" endtime="20201030 10:58:27.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.907" endtime="20201030 10:58:27.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.878" endtime="20201030 10:58:27.433"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.438" endtime="20201030 10:58:27.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.435" endtime="20201030 10:58:27.462"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.482" endtime="20201030 10:58:27.535"></status>
</kw>
<msg timestamp="20201030 10:58:27.536" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.479" endtime="20201030 10:58:27.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.542" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.539" endtime="20201030 10:58:27.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.545" endtime="20201030 10:58:27.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.472" endtime="20201030 10:58:27.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.467" endtime="20201030 10:58:27.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.568" endtime="20201030 10:58:27.901"></status>
</kw>
<msg timestamp="20201030 10:58:27.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033919819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034760556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.564" endtime="20201030 10:58:27.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033919819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034760556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.910" endtime="20201030 10:58:27.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.928" endtime="20201030 10:58:27.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.557" endtime="20201030 10:58:27.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.553" endtime="20201030 10:58:27.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:27.944" level="INFO">${PHILIP_RES} = [{'diff': 0.0008407370000000011}, {'diff': 0.0008402220000000016}, {'diff': 0.0008402640000000003}, {'diff': 0.0008411659999999974}, {'diff': 0.0008403330000000056}, {'diff': 0.0008402779999999999}, {...</msg>
<status status="PASS" starttime="20201030 10:58:27.936" endtime="20201030 10:58:27.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.954" level="INFO">${RESULT} = {'diff': [0.0008407370000000011, 0.0008402220000000016, 0.0008402640000000003, 0.0008411659999999974, 0.0008403330000000056, 0.0008402779999999999, 0.0008402229999999941, 0.0008412640000000013, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:58:27.946" endtime="20201030 10:58:27.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.965" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:27.962" endtime="20201030 10:58:27.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.970" level="INFO">VALUE: [0.0008407370000000011, 0.0008402220000000016, 0.0008402640000000003, 0.0008411659999999974, 0.0008403330000000056, 0.0008402779999999999, 0.0008402229999999941, 0.0008412640000000013, 0.000840500000000001, 0.0008402640000000003, 0.0008402360000000011, 0.0008413749999999984, 0.0008404440000000027, 0.0008402500000000007, 0.0008402779999999999, 0.0008413050000000005, 0.0008404860000000014, 0.0008402640000000003, 0.0008402360000000011, 0.0008411800000000039, 0.0008404439999999958, 0.0008403470000000052, 0.0008402359999999942, 0.0008411390000000046, 0.0008403469999999982, 0.0008401800000000029, 0.0008401799999999959, 0.0008412089999999955, 0.0008404720000000018, 0.0008402220000000016, 0.0008402220000000016, 0.0008413190000000001, 0.0008404310000000026, 0.000840305999999999, 0.0008403049999999995, 0.0008413189999999932, 0.0008404860000000014, 0.0008402640000000072, 0.0008403469999999913, 0.0008413750000000053, 0.0008404439999999958, 0.0008402359999999942, 0.0008403890000000108, 0.000841306, 0.0008403749999999904, 0.0008403049999999995, 0.0008402220000000016, 0.0008412770000000014, 0.0008404300000000031, 0.0008403890000000108]</msg>
<status status="PASS" starttime="20201030 10:58:27.967" endtime="20201030 10:58:27.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.956" endtime="20201030 10:58:27.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.463" endtime="20201030 10:58:27.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.434" endtime="20201030 10:58:27.975"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.981" endtime="20201030 10:58:28.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.977" endtime="20201030 10:58:28.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.025" endtime="20201030 10:58:28.079"></status>
</kw>
<msg timestamp="20201030 10:58:28.081" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.022" endtime="20201030 10:58:28.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.087" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.083" endtime="20201030 10:58:28.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.089" endtime="20201030 10:58:28.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.014" endtime="20201030 10:58:28.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.009" endtime="20201030 10:58:28.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.112" endtime="20201030 10:58:28.446"></status>
</kw>
<msg timestamp="20201030 10:58:28.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034010403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034891694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.109" endtime="20201030 10:58:28.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034010403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034891694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.456" endtime="20201030 10:58:28.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.474" endtime="20201030 10:58:28.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.102" endtime="20201030 10:58:28.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.097" endtime="20201030 10:58:28.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:28.489" level="INFO">${PHILIP_RES} = [{'diff': 0.0008812909999999993}, {'diff': 0.000882542}, {'diff': 0.0008825829999999993}, {'diff': 0.0008826390000000045}, {'diff': 0.0008826109999999984}, {'diff': 0.0008826660000000042}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:58:28.482" endtime="20201030 10:58:28.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.500" level="INFO">${RESULT} = {'diff': [0.0008812909999999993, 0.000882542, 0.0008825829999999993, 0.0008826390000000045, 0.0008826109999999984, 0.0008826660000000042, 0.0008825280000000005, 0.000882542, 0.0008825550000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:28.491" endtime="20201030 10:58:28.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.510" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:28.508" endtime="20201030 10:58:28.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.516" level="INFO">VALUE: [0.0008812909999999993, 0.000882542, 0.0008825829999999993, 0.0008826390000000045, 0.0008826109999999984, 0.0008826660000000042, 0.0008825280000000005, 0.000882542, 0.0008825550000000001, 0.0008826670000000036, 0.0008826800000000037, 0.0008826809999999963, 0.0008827080000000029, 0.0008825969999999989, 0.000882736000000002, 0.0008826660000000042, 0.0008825969999999989, 0.0008826670000000036, 0.0008825689999999997, 0.0008825969999999989, 0.0008826670000000036, 0.0008825969999999989, 0.0008825829999999993, 0.000882624999999998, 0.0008825969999999989, 0.000882542, 0.000882542, 0.0008825689999999997, 0.0008826939999999964, 0.0008826809999999963, 0.0008826250000000049, 0.0008825969999999989, 0.0008825279999999935, 0.0008826110000000054, 0.0008825550000000071, 0.0008825969999999989, 0.0008825559999999927, 0.0008825560000000066, 0.0008826109999999915, 0.0008826809999999963, 0.0008827500000000016, 0.0008826390000000045, 0.0008825969999999989, 0.0008825969999999989, 0.0008826950000000028, 0.0008827500000000016, 0.000882624999999998, 0.0008826110000000054, 0.0008825980000000122, 0.0008826389999999906]</msg>
<status status="PASS" starttime="20201030 10:58:28.513" endtime="20201030 10:58:28.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.502" endtime="20201030 10:58:28.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.005" endtime="20201030 10:58:28.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.976" endtime="20201030 10:58:28.521"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.526" endtime="20201030 10:58:28.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.523" endtime="20201030 10:58:28.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.570" endtime="20201030 10:58:28.627"></status>
</kw>
<msg timestamp="20201030 10:58:28.628" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.567" endtime="20201030 10:58:28.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.634" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.631" endtime="20201030 10:58:28.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.637" endtime="20201030 10:58:28.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.560" endtime="20201030 10:58:28.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.555" endtime="20201030 10:58:28.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.660" endtime="20201030 10:58:29.008"></status>
</kw>
<msg timestamp="20201030 10:58:29.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033947792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034871139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.656" endtime="20201030 10:58:29.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033947792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034871139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.017" endtime="20201030 10:58:29.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.035" endtime="20201030 10:58:29.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.649" endtime="20201030 10:58:29.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.645" endtime="20201030 10:58:29.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:29.051" level="INFO">${PHILIP_RES} = [{'diff': 0.0009233470000000049}, {'diff': 0.0009215409999999979}, {'diff': 0.0009208059999999962}, {'diff': 0.0009216939999999937}, {'diff': 0.0009226669999999951}, {'diff': 0.0009206939999999997}, {...</msg>
<status status="PASS" starttime="20201030 10:58:29.043" endtime="20201030 10:58:29.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.060" level="INFO">${RESULT} = {'diff': [0.0009233470000000049, 0.0009215409999999979, 0.0009208059999999962, 0.0009216939999999937, 0.0009226669999999951, 0.0009206939999999997, 0.000921667000000001, 0.0009227090000000007, 0.00092...</msg>
<status status="PASS" starttime="20201030 10:58:29.053" endtime="20201030 10:58:29.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.070" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:29.068" endtime="20201030 10:58:29.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.075" level="INFO">VALUE: [0.0009233470000000049, 0.0009215409999999979, 0.0009208059999999962, 0.0009216939999999937, 0.0009226669999999951, 0.0009206939999999997, 0.000921667000000001, 0.0009227090000000007, 0.0009207639999999975, 0.0009217920000000046, 0.0009226810000000016, 0.0009207779999999971, 0.0009217919999999977, 0.0009228190000000053, 0.000920958999999999, 0.0009218890000000021, 0.0009227779999999991, 0.0009208750000000016, 0.0009218200000000037, 0.0009226810000000016, 0.0009207220000000058, 0.0009216950000000002, 0.0009226530000000024, 0.0009207779999999971, 0.0009217359999999994, 0.0009225830000000046, 0.0009205700000000025, 0.0009217080000000002, 0.0009226800000000021, 0.0009206249999999944, 0.0009216390000000019, 0.000922555999999991, 0.000920749999999998, 0.0009216950000000002, 0.0009226110000000037, 0.0009206529999999935, 0.0009216660000000015, 0.0009226110000000037, 0.0009206250000000082, 0.0009217080000000072, 0.0009227779999999991, 0.0009208329999999959, 0.0009217779999999981, 0.0009227769999999996, 0.0009208199999999889, 0.0009217219999999998, 0.00092275, 0.0009208469999999885, 0.0009218329999999969, 0.0009228750000000036]</msg>
<status status="PASS" starttime="20201030 10:58:29.072" endtime="20201030 10:58:29.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.061" endtime="20201030 10:58:29.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.551" endtime="20201030 10:58:29.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.521" endtime="20201030 10:58:29.080"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.085" endtime="20201030 10:58:29.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.082" endtime="20201030 10:58:29.109"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.130" endtime="20201030 10:58:29.191"></status>
</kw>
<msg timestamp="20201030 10:58:29.192" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.126" endtime="20201030 10:58:29.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.198" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.194" endtime="20201030 10:58:29.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.200" endtime="20201030 10:58:29.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.119" endtime="20201030 10:58:29.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.114" endtime="20201030 10:58:29.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.223" endtime="20201030 10:58:29.569"></status>
</kw>
<msg timestamp="20201030 10:58:29.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035377625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03634175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:29.220" endtime="20201030 10:58:29.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035377625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03634175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:29.578" endtime="20201030 10:58:29.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.595" endtime="20201030 10:58:29.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.213" endtime="20201030 10:58:29.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.208" endtime="20201030 10:58:29.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:29.611" level="INFO">${PHILIP_RES} = [{'diff': 0.0009641249999999962}, {'diff': 0.0009637359999999998}, {'diff': 0.0009637780000000054}, {'diff': 0.0009638469999999968}, {'diff': 0.0009637369999999992}, {'diff': 0.0009637780000000054}, {...</msg>
<status status="PASS" starttime="20201030 10:58:29.604" endtime="20201030 10:58:29.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.620" level="INFO">${RESULT} = {'diff': [0.0009641249999999962, 0.0009637359999999998, 0.0009637780000000054, 0.0009638469999999968, 0.0009637369999999992, 0.0009637780000000054, 0.0009638340000000037, 0.0009638189999999977, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:58:29.613" endtime="20201030 10:58:29.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.630" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:29.628" endtime="20201030 10:58:29.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.636" level="INFO">VALUE: [0.0009641249999999962, 0.0009637359999999998, 0.0009637780000000054, 0.0009638469999999968, 0.0009637369999999992, 0.0009637780000000054, 0.0009638340000000037, 0.0009638189999999977, 0.0009638339999999967, 0.0009638329999999973, 0.000963694000000001, 0.0009638060000000045, 0.0009639030000000021, 0.0009639030000000021, 0.0009638470000000038, 0.000963986, 0.0009639590000000003, 0.0009640139999999991, 0.0009639029999999951, 0.0009639999999999996, 0.0009639720000000004, 0.0009639720000000004, 0.000964068999999998, 0.0009639720000000004, 0.0009639720000000004, 0.0009639579999999939, 0.000963986, 0.0009640560000000048, 0.0009639310000000012, 0.0009638750000000029, 0.0009640550000000053, 0.0009639590000000003, 0.0009640000000000065, 0.0009639169999999947, 0.0009639440000000082, 0.0009639310000000012, 0.0009640270000000062, 0.0009639160000000091, 0.0009638329999999973, 0.0009637220000000002, 0.0009638610000000103, 0.0009639159999999952, 0.0009638190000000046, 0.000963763999999992, 0.000963874999999989, 0.0009639030000000021, 0.0009638059999999976, 0.0009638609999999964, 0.0009640139999999991, 0.0009638889999999956]</msg>
<status status="PASS" starttime="20201030 10:58:29.633" endtime="20201030 10:58:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.622" endtime="20201030 10:58:29.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.110" endtime="20201030 10:58:29.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.081" endtime="20201030 10:58:29.641"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.646" endtime="20201030 10:58:29.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.643" endtime="20201030 10:58:29.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.692" endtime="20201030 10:58:29.754"></status>
</kw>
<msg timestamp="20201030 10:58:29.755" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.689" endtime="20201030 10:58:29.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.762" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.757" endtime="20201030 10:58:29.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.764" endtime="20201030 10:58:29.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.682" endtime="20201030 10:58:29.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.677" endtime="20201030 10:58:29.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.787" endtime="20201030 10:58:30.137"></status>
</kw>
<msg timestamp="20201030 10:58:30.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035699917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.784" endtime="20201030 10:58:30.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035699917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.146" endtime="20201030 10:58:30.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.164" endtime="20201030 10:58:30.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.776" endtime="20201030 10:58:30.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.772" endtime="20201030 10:58:30.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:30.180" level="INFO">${PHILIP_RES} = [{'diff': 0.0010065270000000001}, {'diff': 0.0010059860000000004}, {'diff': 0.0010060689999999983}, {'diff': 0.0010059590000000007}, {'diff': 0.0010059720000000008}, {'diff': 0.0010060840000000043}, {...</msg>
<status status="PASS" starttime="20201030 10:58:30.173" endtime="20201030 10:58:30.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.189" level="INFO">${RESULT} = {'diff': [0.0010065270000000001, 0.0010059860000000004, 0.0010060689999999983, 0.0010059590000000007, 0.0010059720000000008, 0.0010060840000000043, 0.0010061250000000035, 0.0010061670000000023, 0.0010...</msg>
<status status="PASS" starttime="20201030 10:58:30.182" endtime="20201030 10:58:30.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.200" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:30.197" endtime="20201030 10:58:30.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.206" level="INFO">VALUE: [0.0010065270000000001, 0.0010059860000000004, 0.0010060689999999983, 0.0010059590000000007, 0.0010059720000000008, 0.0010060840000000043, 0.0010061250000000035, 0.0010061670000000023, 0.0010061389999999962, 0.0010060969999999975, 0.0010059439999999947, 0.0010059580000000012, 0.0010060419999999987, 0.001006, 0.001006111000000004, 0.0010058750000000033, 0.001006013, 0.0010060689999999983, 0.0010059450000000011, 0.001006111000000004, 0.0010061249999999966, 0.0010063059999999985, 0.0010061669999999953, 0.0010063059999999985, 0.0010061949999999945, 0.0010061390000000031, 0.0010061949999999875, 0.0010060269999999927, 0.0010062769999999999, 0.0010062639999999928, 0.001006222000000001, 0.0010061390000000031, 0.0010061519999999963, 0.0010060970000000113, 0.0010062080000000084, 0.0010062639999999928, 0.001006194000000002, 0.0010062500000000002, 0.0010061249999999966, 0.0010061249999999966, 0.0010062910000000064, 0.0010061670000000023, 0.0010061380000000036, 0.0010061799999999954, 0.00100611099999999, 0.0010061389999999892, 0.0010061119999999896, 0.001005999999999993, 0.0010060689999999983, 0.0010060139999999995]</msg>
<status status="PASS" starttime="20201030 10:58:30.202" endtime="20201030 10:58:30.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.191" endtime="20201030 10:58:30.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.671" endtime="20201030 10:58:30.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.641" endtime="20201030 10:58:30.211"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.217" endtime="20201030 10:58:30.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.214" endtime="20201030 10:58:30.241"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.263" endtime="20201030 10:58:30.327"></status>
</kw>
<msg timestamp="20201030 10:58:30.328" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.259" endtime="20201030 10:58:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.334" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.330" endtime="20201030 10:58:30.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.336" endtime="20201030 10:58:30.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.252" endtime="20201030 10:58:30.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.246" endtime="20201030 10:58:30.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.360" endtime="20201030 10:58:30.703"></status>
</kw>
<msg timestamp="20201030 10:58:30.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035200236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036249306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.356" endtime="20201030 10:58:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035200236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036249306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.712" endtime="20201030 10:58:30.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.730" endtime="20201030 10:58:30.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.349" endtime="20201030 10:58:30.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.345" endtime="20201030 10:58:30.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:30.745" level="INFO">${PHILIP_RES} = [{'diff': 0.0010490699999999992}, {'diff': 0.0010503889999999988}, {'diff': 0.0010511670000000056}, {'diff': 0.001049334000000006}, {'diff': 0.0010505140000000024}, {'diff': 0.001051347000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:30.738" endtime="20201030 10:58:30.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.756" level="INFO">${RESULT} = {'diff': [0.0010490699999999992, 0.0010503889999999988, 0.0010511670000000056, 0.001049334000000006, 0.0010505140000000024, 0.001051347000000001, 0.0010494029999999974, 0.0010504579999999972, 0.001051...</msg>
<status status="PASS" starttime="20201030 10:58:30.747" endtime="20201030 10:58:30.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.766" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:30.764" endtime="20201030 10:58:30.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.772" level="INFO">VALUE: [0.0010490699999999992, 0.0010503889999999988, 0.0010511670000000056, 0.001049334000000006, 0.0010505140000000024, 0.001051347000000001, 0.0010494029999999974, 0.0010504579999999972, 0.0010513750000000002, 0.0010493050000000004, 0.001050318999999994, 0.0010512640000000031, 0.0010493749999999982, 0.0010502780000000017, 0.0010512919999999953, 0.0010494590000000026, 0.0010504030000000053, 0.0010514029999999994, 0.0010492630000000017, 0.0010502780000000017, 0.0010511810000000052, 0.0010491810000000032, 0.0010501809999999973, 0.0010511659999999992, 0.0010492910000000008, 0.0010501529999999981, 0.0010512500000000036, 0.001049318999999993, 0.001050416999999998, 0.0010512779999999888, 0.0010493059999999998, 0.0010503889999999988, 0.0010511389999999926, 0.0010493889999999978, 0.0010503610000000135, 0.0010513199999999945, 0.0010492780000000007, 0.0010503889999999988, 0.0010513610000000007, 0.001049347000000006, 0.0010504590000000036, 0.0010512639999999962, 0.0010493059999999998, 0.0010502220000000034, 0.001051207999999998, 0.001049333999999999, 0.0010501939999999904, 0.0010511390000000065, 0.0010492089999999954, 0.0010502920000000082]</msg>
<status status="PASS" starttime="20201030 10:58:30.769" endtime="20201030 10:58:30.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.758" endtime="20201030 10:58:30.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.242" endtime="20201030 10:58:30.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.212" endtime="20201030 10:58:30.776"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.782" endtime="20201030 10:58:30.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.779" endtime="20201030 10:58:30.805"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.827" endtime="20201030 10:58:30.894"></status>
</kw>
<msg timestamp="20201030 10:58:30.895" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.824" endtime="20201030 10:58:30.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.901" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.897" endtime="20201030 10:58:30.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.903" endtime="20201030 10:58:30.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.816" endtime="20201030 10:58:30.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.811" endtime="20201030 10:58:30.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.926" endtime="20201030 10:58:31.261"></status>
</kw>
<msg timestamp="20201030 10:58:31.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035186764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036281847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.923" endtime="20201030 10:58:31.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035186764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036281847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.270" endtime="20201030 10:58:31.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.288" endtime="20201030 10:58:31.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.916" endtime="20201030 10:58:31.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.911" endtime="20201030 10:58:31.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:31.304" level="INFO">${PHILIP_RES} = [{'diff': 0.0010950829999999967}, {'diff': 0.001094526999999998}, {'diff': 0.0010944579999999995}, {'diff': 0.0010956390000000024}, {'diff': 0.0010954580000000005}, {'diff': 0.0010954720000000001}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:31.296" endtime="20201030 10:58:31.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.315" level="INFO">${RESULT} = {'diff': [0.0010950829999999967, 0.001094526999999998, 0.0010944579999999995, 0.0010956390000000024, 0.0010954580000000005, 0.0010954720000000001, 0.0010954029999999948, 0.0010955129999999993, 0.00109...</msg>
<status status="PASS" starttime="20201030 10:58:31.306" endtime="20201030 10:58:31.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.325" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:31.323" endtime="20201030 10:58:31.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.330" level="INFO">VALUE: [0.0010950829999999967, 0.001094526999999998, 0.0010944579999999995, 0.0010956390000000024, 0.0010954580000000005, 0.0010954720000000001, 0.0010954029999999948, 0.0010955129999999993, 0.001095444000000001, 0.0010953469999999965, 0.0010953890000000022, 0.0010953889999999952, 0.0010953750000000026, 0.0010954999999999993, 0.0010955559999999975, 0.0010954869999999992, 0.0010954859999999997, 0.0010955690000000046, 0.0010955559999999975, 0.001095569999999997, 0.0010955140000000058, 0.0010955279999999984, 0.0010955559999999975, 0.0010955829999999972, 0.0010956529999999881, 0.0010956800000000017, 0.0010955829999999972, 0.0010954860000000066, 0.0010954860000000066, 0.0010955409999999915, 0.0010954720000000001, 0.001095554999999998, 0.0010955970000000037, 0.0010954580000000075, 0.0010954169999999874, 0.0010955140000000058, 0.0010954030000000087, 0.0010955279999999984, 0.001095570000000004, 0.0010956529999999881, 0.001095583000000011, 0.0010955139999999919, 0.0010956800000000017, 0.0010955690000000046, 0.0010955559999999975, 0.0010955690000000046, 0.0010956109999999963, 0.001095554999999998, 0.0010954999999999993, 0.0010955139999999919]</msg>
<status status="PASS" starttime="20201030 10:58:31.327" endtime="20201030 10:58:31.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.316" endtime="20201030 10:58:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.807" endtime="20201030 10:58:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.777" endtime="20201030 10:58:31.340"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.346" endtime="20201030 10:58:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.342" endtime="20201030 10:58:31.369"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.390" endtime="20201030 10:58:31.459"></status>
</kw>
<msg timestamp="20201030 10:58:31.460" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.387" endtime="20201030 10:58:31.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.466" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.462" endtime="20201030 10:58:31.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.468" endtime="20201030 10:58:31.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.379" endtime="20201030 10:58:31.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.374" endtime="20201030 10:58:31.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.492" endtime="20201030 10:58:31.841"></status>
</kw>
<msg timestamp="20201030 10:58:31.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033993931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035133333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.488" endtime="20201030 10:58:31.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033993931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035133333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.850" endtime="20201030 10:58:31.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.869" endtime="20201030 10:58:31.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.481" endtime="20201030 10:58:31.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.476" endtime="20201030 10:58:31.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:31.886" level="INFO">${PHILIP_RES} = [{'diff': 0.0011394020000000046}, {'diff': 0.0011419449999999984}, {'diff': 0.0011409159999999988}, {'diff': 0.0011418050000000027}, {'diff': 0.0011407640000000024}, {'diff': 0.0011419169999999992}, {...</msg>
<status status="PASS" starttime="20201030 10:58:31.878" endtime="20201030 10:58:31.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.895" level="INFO">${RESULT} = {'diff': [0.0011394020000000046, 0.0011419449999999984, 0.0011409159999999988, 0.0011418050000000027, 0.0011407640000000024, 0.0011419169999999992, 0.0011410280000000023, 0.0011409309999999978, 0.0011...</msg>
<status status="PASS" starttime="20201030 10:58:31.888" endtime="20201030 10:58:31.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.905" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:31.903" endtime="20201030 10:58:31.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.910" level="INFO">VALUE: [0.0011394020000000046, 0.0011419449999999984, 0.0011409159999999988, 0.0011418050000000027, 0.0011407640000000024, 0.0011419169999999992, 0.0011410280000000023, 0.0011409309999999978, 0.0011408749999999995, 0.001141943999999999, 0.001141055000000002, 0.0011408470000000004, 0.0011409299999999983, 0.0011419159999999998, 0.0011411249999999998, 0.001140943999999998, 0.001140861, 0.0011419860000000046, 0.0011411389999999993, 0.0011410000000000031, 0.0011409169999999982, 0.0011418190000000022, 0.001140972000000004, 0.0011408749999999995, 0.0011409170000000052, 0.0011418750000000005, 0.0011409309999999978, 0.0011408749999999995, 0.0011408750000000134, 0.0011418470000000014, 0.0011409029999999987, 0.001140860999999993, 0.00114097199999999, 0.001141860999999994, 0.001141069999999994, 0.0011408200000000007, 0.0011408059999999942, 0.001141943999999992, 0.001141041999999995, 0.0011408479999999999, 0.0011408200000000007, 0.001141777999999996, 0.0011409590000000108, 0.0011409160000000057, 0.0011409579999999975, 0.001141972000000005, 0.0011410000000000031, 0.0011409579999999975, 0.0011410139999999958, 0.001141972000000005]</msg>
<status status="PASS" starttime="20201030 10:58:31.907" endtime="20201030 10:58:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.896" endtime="20201030 10:58:31.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.370" endtime="20201030 10:58:31.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.340" endtime="20201030 10:58:31.915"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.921" endtime="20201030 10:58:31.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.917" endtime="20201030 10:58:31.945"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.966" endtime="20201030 10:58:32.039"></status>
</kw>
<msg timestamp="20201030 10:58:32.040" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.962" endtime="20201030 10:58:32.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.046" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.042" endtime="20201030 10:58:32.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.048" endtime="20201030 10:58:32.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.955" endtime="20201030 10:58:32.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.950" endtime="20201030 10:58:32.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.071" endtime="20201030 10:58:32.416"></status>
</kw>
<msg timestamp="20201030 10:58:32.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037009208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.068" endtime="20201030 10:58:32.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037009208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.426" endtime="20201030 10:58:32.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.444" endtime="20201030 10:58:32.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.061" endtime="20201030 10:58:32.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.056" endtime="20201030 10:58:32.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:32.460" level="INFO">${PHILIP_RES} = [{'diff': 0.0011858610000000033}, {'diff': 0.0011877780000000004}, {'diff': 0.0011869590000000013}, {'diff': 0.0011870559999999988}, {'diff': 0.0011870000000000006}, {'diff': 0.0011868470000000048}, {...</msg>
<status status="PASS" starttime="20201030 10:58:32.452" endtime="20201030 10:58:32.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.469" level="INFO">${RESULT} = {'diff': [0.0011858610000000033, 0.0011877780000000004, 0.0011869590000000013, 0.0011870559999999988, 0.0011870000000000006, 0.0011868470000000048, 0.0011869590000000013, 0.0011868619999999969, 0.0011...</msg>
<status status="PASS" starttime="20201030 10:58:32.462" endtime="20201030 10:58:32.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.479" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:32.477" endtime="20201030 10:58:32.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.484" level="INFO">VALUE: [0.0011858610000000033, 0.0011877780000000004, 0.0011869590000000013, 0.0011870559999999988, 0.0011870000000000006, 0.0011868470000000048, 0.0011869590000000013, 0.0011868619999999969, 0.0011868619999999969, 0.0011867230000000006, 0.0011869580000000018, 0.0011870419999999993, 0.0011870690000000059, 0.0011867220000000012, 0.0011870419999999993, 0.001187097000000005, 0.0011870279999999997, 0.001186903000000003, 0.0011869580000000018, 0.0011869590000000013, 0.001186986000000001, 0.0011868199999999982, 0.0011869169999999957, 0.001187068999999999, 0.0011870270000000072, 0.0011870000000000075, 0.0011871529999999964, 0.0011872090000000085, 0.0011871390000000037, 0.0011869719999999945, 0.001187097000000012, 0.0011870409999999998, 0.0011871390000000037, 0.001186820000000005, 0.0011871529999999964, 0.0011872219999999878, 0.0011871809999999955, 0.0011869159999999962, 0.001187278, 0.0011873199999999917, 0.0011873480000000047, 0.0011870140000000001, 0.0011872079999999952, 0.0011871249999999972, 0.0011872220000000017, 0.0011871390000000037, 0.001187096999999998, 0.0011871389999999898, 0.0011871390000000037, 0.001186986000000001]</msg>
<status status="PASS" starttime="20201030 10:58:32.481" endtime="20201030 10:58:32.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.470" endtime="20201030 10:58:32.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.946" endtime="20201030 10:58:32.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.916" endtime="20201030 10:58:32.489"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.495" endtime="20201030 10:58:32.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.491" endtime="20201030 10:58:32.518"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.541" endtime="20201030 10:58:32.614"></status>
</kw>
<msg timestamp="20201030 10:58:32.615" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.537" endtime="20201030 10:58:32.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.622" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.618" endtime="20201030 10:58:32.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.624" endtime="20201030 10:58:32.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.530" endtime="20201030 10:58:32.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.525" endtime="20201030 10:58:32.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.647" endtime="20201030 10:58:32.995"></status>
</kw>
<msg timestamp="20201030 10:58:33.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036996361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.644" endtime="20201030 10:58:33.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036996361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.004" endtime="20201030 10:58:33.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.022" endtime="20201030 10:58:33.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.637" endtime="20201030 10:58:33.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.632" endtime="20201030 10:58:33.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:33.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0012338469999999963}, {'diff': 0.0012344440000000012}, {'diff': 0.0012355979999999975}, {'diff': 0.001235486000000001}, {'diff': 0.001234416000000002}, {'diff': 0.0012343890000000024}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:33.031" endtime="20201030 10:58:33.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.047" level="INFO">${RESULT} = {'diff': [0.0012338469999999963, 0.0012344440000000012, 0.0012355979999999975, 0.001235486000000001, 0.001234416000000002, 0.0012343890000000024, 0.0012344720000000003, 0.0012355829999999984, 0.001235...</msg>
<status status="PASS" starttime="20201030 10:58:33.040" endtime="20201030 10:58:33.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.057" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:33.055" endtime="20201030 10:58:33.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.064" level="INFO">VALUE: [0.0012338469999999963, 0.0012344440000000012, 0.0012355979999999975, 0.001235486000000001, 0.001234416000000002, 0.0012343890000000024, 0.0012344720000000003, 0.0012355829999999984, 0.0012356389999999967, 0.0012346389999999957, 0.0012345700000000043, 0.0012345840000000038, 0.0012357220000000016, 0.0012354019999999966, 0.001234403000000002, 0.001234596999999997, 0.0012344999999999995, 0.001235514, 0.0012355409999999997, 0.0012344170000000015, 0.001234762999999993, 0.001234806000000005, 0.0012357229999999941, 0.0012356810000000024, 0.0012347499999999928, 0.0012347500000000067, 0.0012345279999999986, 0.0012357360000000012, 0.0012356530000000032, 0.0012347640000000132, 0.0012346380000000101, 0.0012347090000000005, 0.001235625000000004, 0.001235485999999994, 0.0012346950000000079, 0.0012343610000000033, 0.001234305000000005, 0.001235416000000003, 0.001235348000000011, 0.001234304999999991, 0.0012342359999999997, 0.0012343340000000036, 0.0012353890000000034, 0.0012353890000000034, 0.0012343610000000033, 0.0012345560000000116, 0.0012345420000000051, 0.001235374999999997, 0.0012353479999999972, 0.0012342499999999923]</msg>
<status status="PASS" starttime="20201030 10:58:33.060" endtime="20201030 10:58:33.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.049" endtime="20201030 10:58:33.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.519" endtime="20201030 10:58:33.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.490" endtime="20201030 10:58:33.069"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.075" endtime="20201030 10:58:33.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.071" endtime="20201030 10:58:33.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.119" endtime="20201030 10:58:33.196"></status>
</kw>
<msg timestamp="20201030 10:58:33.197" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.116" endtime="20201030 10:58:33.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.203" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.199" endtime="20201030 10:58:33.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.205" endtime="20201030 10:58:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.109" endtime="20201030 10:58:33.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.104" endtime="20201030 10:58:33.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.228" endtime="20201030 10:58:33.565"></status>
</kw>
<msg timestamp="20201030 10:58:33.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034443097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035725389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.225" endtime="20201030 10:58:33.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034443097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035725389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.574" endtime="20201030 10:58:33.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.592" endtime="20201030 10:58:33.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.218" endtime="20201030 10:58:33.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.213" endtime="20201030 10:58:33.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:33.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0012822920000000043}, {'diff': 0.0012814030000000004}, {'diff': 0.0012804029999999994}, {'diff': 0.0012814160000000005}, {'diff': 0.0012823750000000023}, {'diff': 0.0012814309999999995}, {...</msg>
<status status="PASS" starttime="20201030 10:58:33.602" endtime="20201030 10:58:33.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.621" level="INFO">${RESULT} = {'diff': [0.0012822920000000043, 0.0012814030000000004, 0.0012804029999999994, 0.0012814160000000005, 0.0012823750000000023, 0.0012814309999999995, 0.0012816530000000007, 0.001282430000000001, 0.00128...</msg>
<status status="PASS" starttime="20201030 10:58:33.612" endtime="20201030 10:58:33.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.631" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:33.629" endtime="20201030 10:58:33.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.636" level="INFO">VALUE: [0.0012822920000000043, 0.0012814030000000004, 0.0012804029999999994, 0.0012814160000000005, 0.0012823750000000023, 0.0012814309999999995, 0.0012816530000000007, 0.001282430000000001, 0.0012814439999999996, 0.0012806249999999936, 0.0012813060000000029, 0.0012823470000000031, 0.001281334000000002, 0.001281639000000001, 0.0012825140000000054, 0.001281499999999998, 0.0012806250000000005, 0.0012814579999999992, 0.0012826249999999956, 0.0012814729999999983, 0.0012816389999999941, 0.001282401999999988, 0.001281528000000004, 0.001280721999999998, 0.001281611000000002, 0.0012825980000000098, 0.0012814859999999983, 0.0012815969999999954, 0.0012821949999999999, 0.0012812499999999977, 0.0012805830000000018, 0.0012813619999999942, 0.001282611000000003, 0.0012814719999999918, 0.0012816949999999994, 0.0012824440000000076, 0.0012814859999999983, 0.001280611000000001, 0.0012813469999999882, 0.0012823610000000096, 0.001281236000000005, 0.00128143, 0.0012825419999999976, 0.0012814449999999922, 0.0012804719999999908, 0.0012813050000000104, 0.0012823480000000026, 0.001281208000000006, 0.0012814030000000004, 0.0012822499999999987]</msg>
<status status="PASS" starttime="20201030 10:58:33.633" endtime="20201030 10:58:33.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.622" endtime="20201030 10:58:33.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.100" endtime="20201030 10:58:33.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.070" endtime="20201030 10:58:33.641"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.647" endtime="20201030 10:58:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.643" endtime="20201030 10:58:33.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.691" endtime="20201030 10:58:33.769"></status>
</kw>
<msg timestamp="20201030 10:58:33.771" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.688" endtime="20201030 10:58:33.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.777" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.773" endtime="20201030 10:58:33.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.779" endtime="20201030 10:58:33.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.681" endtime="20201030 10:58:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.675" endtime="20201030 10:58:33.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.802" endtime="20201030 10:58:34.148"></status>
</kw>
<msg timestamp="20201030 10:58:34.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033983042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035313403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.799" endtime="20201030 10:58:34.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033983042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035313403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.157" endtime="20201030 10:58:34.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.175" endtime="20201030 10:58:34.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.792" endtime="20201030 10:58:34.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.787" endtime="20201030 10:58:34.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:34.191" level="INFO">${PHILIP_RES} = [{'diff': 0.0013303610000000021}, {'diff': 0.001330027999999997}, {'diff': 0.0013307919999999973}, {'diff': 0.001330027999999997}, {'diff': 0.0013308059999999969}, {'diff': 0.001329917}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 10:58:34.184" endtime="20201030 10:58:34.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.202" level="INFO">${RESULT} = {'diff': [0.0013303610000000021, 0.001330027999999997, 0.0013307919999999973, 0.001330027999999997, 0.0013308059999999969, 0.001329917, 0.001330653000000001, 0.0013300419999999966, 0.00133063900000000...</msg>
<status status="PASS" starttime="20201030 10:58:34.193" endtime="20201030 10:58:34.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.212" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:34.210" endtime="20201030 10:58:34.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.217" level="INFO">VALUE: [0.0013303610000000021, 0.001330027999999997, 0.0013307919999999973, 0.001330027999999997, 0.0013308059999999969, 0.001329917, 0.001330653000000001, 0.0013300419999999966, 0.0013306390000000015, 0.001329958000000006, 0.001330818999999997, 0.0013298880000000013, 0.0013306519999999947, 0.0013299439999999996, 0.0013306110000000024, 0.0013298469999999951, 0.0013305700000000031, 0.0013297909999999968, 0.0013304999999999984, 0.0013297219999999985, 0.001330624999999995, 0.0013297920000000102, 0.0013306940000000073, 0.0013299020000000078, 0.0013308469999999961, 0.0013298469999999951, 0.0013309440000000006, 0.0013299860000000052, 0.0013307500000000055, 0.0013300549999999967, 0.0013307089999999994, 0.0013297089999999984, 0.001330624999999988, 0.0013297079999999989, 0.001330653000000001, 0.0013296809999999992, 0.0013305279999999975, 0.0013295829999999953, 0.0013304020000000083, 0.0013295409999999896, 0.001330416000000001, 0.0013297089999999984, 0.0013305829999999963, 0.0013297499999999907, 0.0013305410000000045, 0.0013297630000000116, 0.0013306109999999954, 0.001329653, 0.001330625000000002, 0.0013297780000000037]</msg>
<status status="PASS" starttime="20201030 10:58:34.214" endtime="20201030 10:58:34.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.203" endtime="20201030 10:58:34.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.672" endtime="20201030 10:58:34.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.642" endtime="20201030 10:58:34.222"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.228" endtime="20201030 10:58:34.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.224" endtime="20201030 10:58:34.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.272" endtime="20201030 10:58:34.354"></status>
</kw>
<msg timestamp="20201030 10:58:34.355" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.269" endtime="20201030 10:58:34.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.361" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.357" endtime="20201030 10:58:34.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.363" endtime="20201030 10:58:34.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.262" endtime="20201030 10:58:34.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.257" endtime="20201030 10:58:34.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.386" endtime="20201030 10:58:34.740"></status>
</kw>
<msg timestamp="20201030 10:58:34.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034210542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035591139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.383" endtime="20201030 10:58:34.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034210542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035591139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.749" endtime="20201030 10:58:34.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.767" endtime="20201030 10:58:34.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.376" endtime="20201030 10:58:34.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.371" endtime="20201030 10:58:34.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:34.783" level="INFO">${PHILIP_RES} = [{'diff': 0.0013805970000000042}, {'diff': 0.0013790699999999961}, {'diff': 0.0013798890000000022}, {'diff': 0.0013791810000000002}, {'diff': 0.0013802220000000004}, {'diff': 0.0013790139999999979}, {...</msg>
<status status="PASS" starttime="20201030 10:58:34.775" endtime="20201030 10:58:34.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.791" level="INFO">${RESULT} = {'diff': [0.0013805970000000042, 0.0013790699999999961, 0.0013798890000000022, 0.0013791810000000002, 0.0013802220000000004, 0.0013790139999999979, 0.001380054999999998, 0.0013793610000000026, 0.00138...</msg>
<status status="PASS" starttime="20201030 10:58:34.785" endtime="20201030 10:58:34.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.802" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:34.800" endtime="20201030 10:58:34.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.807" level="INFO">VALUE: [0.0013805970000000042, 0.0013790699999999961, 0.0013798890000000022, 0.0013791810000000002, 0.0013802220000000004, 0.0013790139999999979, 0.001380054999999998, 0.0013793610000000026, 0.0013800139999999989, 0.0013792499999999985, 0.001379944000000001, 0.0013791390000000014, 0.001379959, 0.001379263999999998, 0.0013799999999999993, 0.0013791110000000023, 0.0013800829999999972, 0.001379263999999998, 0.0013798750000000026, 0.0013790560000000035, 0.0013799029999999879, 0.0013790980000000091, 0.001380041999999998, 0.0013793190000000038, 0.0013801670000000016, 0.0013793200000000033, 0.001380041999999998, 0.0013793200000000033, 0.0013801390000000024, 0.001379264000000005, 0.0013801670000000016, 0.0013793190000000038, 0.0013800409999999985, 0.0013790829999999893, 0.0013800280000000054, 0.001379236000000006, 0.001380137999999989, 0.0013793190000000038, 0.0013799030000000018, 0.0013791940000000003, 0.0013800270000000059, 0.0013794170000000078, 0.001380236000000007, 0.0013792639999999912, 0.0013800559999999906, 0.0013792920000000042, 0.0013800000000000062, 0.0013791670000000006, 0.0013798609999999961, 0.0013790559999999896]</msg>
<status status="PASS" starttime="20201030 10:58:34.804" endtime="20201030 10:58:34.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.793" endtime="20201030 10:58:34.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.253" endtime="20201030 10:58:34.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.223" endtime="20201030 10:58:34.812"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.818" endtime="20201030 10:58:34.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.814" endtime="20201030 10:58:34.841"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.862" endtime="20201030 10:58:34.947"></status>
</kw>
<msg timestamp="20201030 10:58:34.949" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.859" endtime="20201030 10:58:34.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.955" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.951" endtime="20201030 10:58:34.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.957" endtime="20201030 10:58:34.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.852" endtime="20201030 10:58:34.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.846" endtime="20201030 10:58:34.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.982" endtime="20201030 10:58:35.330"></status>
</kw>
<msg timestamp="20201030 10:58:35.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035585722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037016458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.978" endtime="20201030 10:58:35.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035585722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037016458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.339" endtime="20201030 10:58:35.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.357" endtime="20201030 10:58:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.971" endtime="20201030 10:58:35.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.966" endtime="20201030 10:58:35.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:35.373" level="INFO">${PHILIP_RES} = [{'diff': 0.001430736000000002}, {'diff': 0.0014314019999999983}, {'diff': 0.0014324019999999993}, {'diff': 0.0014312910000000012}, {'diff': 0.0014316939999999972}, {'diff': 0.0014324300000000054}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:35.366" endtime="20201030 10:58:35.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.384" level="INFO">${RESULT} = {'diff': [0.001430736000000002, 0.0014314019999999983, 0.0014324019999999993, 0.0014312910000000012, 0.0014316939999999972, 0.0014324300000000054, 0.0014313469999999995, 0.001430653000000004, 0.001431...</msg>
<status status="PASS" starttime="20201030 10:58:35.375" endtime="20201030 10:58:35.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.395" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:35.392" endtime="20201030 10:58:35.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.401" level="INFO">VALUE: [0.001430736000000002, 0.0014314019999999983, 0.0014324019999999993, 0.0014312910000000012, 0.0014316939999999972, 0.0014324300000000054, 0.0014313469999999995, 0.001430653000000004, 0.0014315139999999948, 0.0014326110000000003, 0.0014315280000000014, 0.0014316800000000046, 0.0014325970000000007, 0.001431360999999999, 0.0014305829999999992, 0.0014315139999999948, 0.0014326669999999986, 0.0014314729999999956, 0.001431458999999996, 0.0014323749999999996, 0.0014313620000000055, 0.0014305140000000077, 0.0014313469999999995, 0.001432472000000004, 0.0014312779999999942, 0.0014313749999999986, 0.0014323060000000082, 0.0014313469999999995, 0.0014305000000000012, 0.0014313469999999995, 0.0014323880000000067, 0.0014313190000000003, 0.0014315409999999945, 0.0014323889999999923, 0.0014313049999999938, 0.0014305280000000004, 0.0014312079999999894, 0.0014325280000000024, 0.001431458999999996, 0.0014315000000000022, 0.0014324029999999988, 0.001431541999999994, 0.001430736000000002, 0.001431570000000007, 0.0014325140000000097, 0.0014313340000000063, 0.0014314579999999966, 0.0014322219999999969, 0.001431361000000006, 0.001430555]</msg>
<status status="PASS" starttime="20201030 10:58:35.397" endtime="20201030 10:58:35.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.385" endtime="20201030 10:58:35.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.842" endtime="20201030 10:58:35.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.813" endtime="20201030 10:58:35.406"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.412" endtime="20201030 10:58:35.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.408" endtime="20201030 10:58:35.435"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.458" endtime="20201030 10:58:35.545"></status>
</kw>
<msg timestamp="20201030 10:58:35.546" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.455" endtime="20201030 10:58:35.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.552" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.548" endtime="20201030 10:58:35.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.555" endtime="20201030 10:58:35.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.448" endtime="20201030 10:58:35.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.442" endtime="20201030 10:58:35.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.578" endtime="20201030 10:58:35.927"></status>
</kw>
<msg timestamp="20201030 10:58:35.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036113306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03759725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:35.575" endtime="20201030 10:58:35.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036113306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03759725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:35.936" endtime="20201030 10:58:35.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.954" endtime="20201030 10:58:35.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.567" endtime="20201030 10:58:35.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.563" endtime="20201030 10:58:35.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:35.970" level="INFO">${PHILIP_RES} = [{'diff': 0.001483944000000001}, {'diff': 0.0014836950000000002}, {'diff': 0.001482652000000001}, {'diff': 0.0014826390000000009}, {'diff': 0.001482472999999998}, {'diff': 0.0014835980000000026}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:35.962" endtime="20201030 10:58:35.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.979" level="INFO">${RESULT} = {'diff': [0.001483944000000001, 0.0014836950000000002, 0.001482652000000001, 0.0014826390000000009, 0.001482472999999998, 0.0014835980000000026, 0.001483667000000001, 0.0014827090000000057, 0.00148265...</msg>
<status status="PASS" starttime="20201030 10:58:35.972" endtime="20201030 10:58:35.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.990" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:35.987" endtime="20201030 10:58:35.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.997" level="INFO">VALUE: [0.001483944000000001, 0.0014836950000000002, 0.001482652000000001, 0.0014826390000000009, 0.001482472999999998, 0.0014835980000000026, 0.001483667000000001, 0.0014827090000000057, 0.0014826530000000004, 0.0014827079999999992, 0.0014837639999999985, 0.0014837080000000002, 0.001482762999999998, 0.001482750000000005, 0.0014828199999999958, 0.0014838059999999972, 0.0014835699999999966, 0.0014825279999999968, 0.0014825139999999903, 0.0014827359999999984, 0.0014837919999999977, 0.001483666999999994, 0.0014825829999999957, 0.0014826249999999874, 0.0014826809999999996, 0.0014837919999999977, 0.001483569000000004, 0.0014823890000000006, 0.0014823060000000027, 0.0014823330000000023, 0.0014834309999999934, 0.0014834440000000004, 0.001482555999999996, 0.001482667000000007, 0.001482652000000001, 0.001483750000000006, 0.0014836530000000014, 0.0014824859999999912, 0.0014823749999999941, 0.0014825970000000022, 0.0014836109999999958, 0.0014834160000000013, 0.001482346999999995, 0.0014823610000000015, 0.0014823199999999953, 0.0014837779999999912, 0.0014834310000000073, 0.0014824029999999933, 0.0014823050000000032, 0.0014825420000000034]</msg>
<status status="PASS" starttime="20201030 10:58:35.992" endtime="20201030 10:58:35.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.981" endtime="20201030 10:58:36.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.437" endtime="20201030 10:58:36.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.407" endtime="20201030 10:58:36.002"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.008" endtime="20201030 10:58:36.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.004" endtime="20201030 10:58:36.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.053" endtime="20201030 10:58:36.142"></status>
</kw>
<msg timestamp="20201030 10:58:36.143" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.050" endtime="20201030 10:58:36.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.150" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.145" endtime="20201030 10:58:36.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.152" endtime="20201030 10:58:36.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.043" endtime="20201030 10:58:36.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.037" endtime="20201030 10:58:36.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.175" endtime="20201030 10:58:36.522"></status>
</kw>
<msg timestamp="20201030 10:58:36.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034262472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.172" endtime="20201030 10:58:36.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034262472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.532" endtime="20201030 10:58:36.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.549" endtime="20201030 10:58:36.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.165" endtime="20201030 10:58:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.160" endtime="20201030 10:58:36.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:36.565" level="INFO">${PHILIP_RES} = [{'diff': 0.001534652999999997}, {'diff': 0.0015359719999999966}, {'diff': 0.0015358330000000003}, {'diff': 0.001535083999999999}, {'diff': 0.0015348199999999992}, {'diff': 0.001535861999999999}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:36.558" endtime="20201030 10:58:36.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.576" level="INFO">${RESULT} = {'diff': [0.001534652999999997, 0.0015359719999999966, 0.0015358330000000003, 0.001535083999999999, 0.0015348199999999992, 0.001535861999999999, 0.00153557, 0.0015346950000000026, 0.001534598000000005...</msg>
<status status="PASS" starttime="20201030 10:58:36.567" endtime="20201030 10:58:36.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.586" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:36.584" endtime="20201030 10:58:36.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.591" level="INFO">VALUE: [0.001534652999999997, 0.0015359719999999966, 0.0015358330000000003, 0.001535083999999999, 0.0015348199999999992, 0.001535861999999999, 0.00153557, 0.0015346950000000026, 0.001534598000000005, 0.001535652999999998, 0.001535471999999996, 0.0015347079999999957, 0.0015346949999999956, 0.0015358060000000007, 0.001535555000000001, 0.0015349170000000037, 0.0015347780000000005, 0.0015357360000000028, 0.0015354159999999978, 0.0015345689999999995, 0.001534764000000008, 0.0015357079999999967, 0.0015355969999999997, 0.0015345829999999921, 0.0015347220000000023, 0.0015356249999999988, 0.001535500000000009, 0.001534652999999997, 0.0015347780000000005, 0.0015357500000000024, 0.0015355969999999997, 0.001534792000000007, 0.0015347359999999949, 0.0015357919999999942, 0.0015356799999999976, 0.0015348329999999993, 0.0015349169999999968, 0.0015357919999999942, 0.0015358609999999995, 0.001534944999999996, 0.0015345839999999916, 0.0015356389999999914, 0.00153557, 0.0015346109999999913, 0.0015346249999999978, 0.0015357220000000033, 0.0015354999999999952, 0.0015347219999999884, 0.001534777000000001, 0.0015357500000000024]</msg>
<status status="PASS" starttime="20201030 10:58:36.588" endtime="20201030 10:58:36.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.577" endtime="20201030 10:58:36.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.033" endtime="20201030 10:58:36.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.003" endtime="20201030 10:58:36.596"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.602" endtime="20201030 10:58:36.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.598" endtime="20201030 10:58:36.625"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.646" endtime="20201030 10:58:36.737"></status>
</kw>
<msg timestamp="20201030 10:58:36.739" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.643" endtime="20201030 10:58:36.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.745" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.741" endtime="20201030 10:58:36.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.747" endtime="20201030 10:58:36.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.636" endtime="20201030 10:58:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.630" endtime="20201030 10:58:36.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.770" endtime="20201030 10:58:37.108"></status>
</kw>
<msg timestamp="20201030 10:58:37.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033915889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035504444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.767" endtime="20201030 10:58:37.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033915889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035504444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.117" endtime="20201030 10:58:37.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.135" endtime="20201030 10:58:37.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.760" endtime="20201030 10:58:37.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.755" endtime="20201030 10:58:37.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:37.151" level="INFO">${PHILIP_RES} = [{'diff': 0.0015885550000000054}, {'diff': 0.0015873060000000036}, {'diff': 0.0015874170000000007}, {'diff': 0.001588263999999999}, {'diff': 0.001588375000000003}, {'diff': 0.001587375000000002}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:37.143" endtime="20201030 10:58:37.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.162" level="INFO">${RESULT} = {'diff': [0.0015885550000000054, 0.0015873060000000036, 0.0015874170000000007, 0.001588263999999999, 0.001588375000000003, 0.001587375000000002, 0.001587485999999999, 0.001588458000000001, 0.001588402...</msg>
<status status="PASS" starttime="20201030 10:58:37.153" endtime="20201030 10:58:37.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.172" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:37.170" endtime="20201030 10:58:37.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.177" level="INFO">VALUE: [0.0015885550000000054, 0.0015873060000000036, 0.0015874170000000007, 0.001588263999999999, 0.001588375000000003, 0.001587375000000002, 0.001587485999999999, 0.001588458000000001, 0.0015884029999999952, 0.001587375000000002, 0.0015878469999999964, 0.001588652000000003, 0.0015886110000000037, 0.0015878189999999973, 0.0015878889999999951, 0.0015887639999999995, 0.0015884450000000008, 0.001587346999999996, 0.0015875419999999973, 0.001588458000000001, 0.0015885279999999918, 0.0015874440000000073, 0.0015875969999999962, 0.001588209000000007, 0.0015881670000000014, 0.001587152999999994, 0.0015872219999999992, 0.0015881519999999955, 0.001588180999999994, 0.001587264000000005, 0.001587568999999997, 0.0015883889999999956, 0.0015882220000000002, 0.0015872910000000046, 0.0015875280000000047, 0.0015884450000000078, 0.001588486, 0.001587568999999997, 0.0015877360000000063, 0.001588486, 0.001588263999999992, 0.001587181000000007, 0.0015873610000000093, 0.0015885000000000066, 0.001588375000000003, 0.0015874300000000008, 0.0015874439999999934, 0.0015882499999999994, 0.0015884590000000004, 0.0015873889999999946]</msg>
<status status="PASS" starttime="20201030 10:58:37.174" endtime="20201030 10:58:37.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.163" endtime="20201030 10:58:37.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.626" endtime="20201030 10:58:37.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.597" endtime="20201030 10:58:37.182"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.188" endtime="20201030 10:58:37.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.184" endtime="20201030 10:58:37.211"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.232" endtime="20201030 10:58:37.326"></status>
</kw>
<msg timestamp="20201030 10:58:37.327" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.229" endtime="20201030 10:58:37.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.334" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.330" endtime="20201030 10:58:37.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.336" endtime="20201030 10:58:37.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.222" endtime="20201030 10:58:37.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.216" endtime="20201030 10:58:37.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.359" endtime="20201030 10:58:37.701"></status>
</kw>
<msg timestamp="20201030 10:58:37.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03383975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035482306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:37.356" endtime="20201030 10:58:37.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03383975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035482306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:37.710" endtime="20201030 10:58:37.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.728" endtime="20201030 10:58:37.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.349" endtime="20201030 10:58:37.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.344" endtime="20201030 10:58:37.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:37.744" level="INFO">${PHILIP_RES} = [{'diff': 0.0016425559999999964}, {'diff': 0.0016430549999999974}, {'diff': 0.0016432919999999976}, {'diff': 0.0016433190000000042}, {'diff': 0.0016435969999999966}, {'diff': 0.0016437080000000007}, {...</msg>
<status status="PASS" starttime="20201030 10:58:37.737" endtime="20201030 10:58:37.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.753" level="INFO">${RESULT} = {'diff': [0.0016425559999999964, 0.0016430549999999974, 0.0016432919999999976, 0.0016433190000000042, 0.0016435969999999966, 0.0016437080000000007, 0.0016435129999999992, 0.001643569999999997, 0.00164...</msg>
<status status="PASS" starttime="20201030 10:58:37.746" endtime="20201030 10:58:37.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.763" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:37.761" endtime="20201030 10:58:37.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.769" level="INFO">VALUE: [0.0016425559999999964, 0.0016430549999999974, 0.0016432919999999976, 0.0016433190000000042, 0.0016435969999999966, 0.0016437080000000007, 0.0016435129999999992, 0.001643569999999997, 0.0016437499999999994, 0.0016437499999999994, 0.0016433750000000025, 0.0016434999999999991, 0.001643361000000003, 0.0016437220000000002, 0.0016435559999999974, 0.001643277999999998, 0.001643582999999997, 0.00164359800000001, 0.0016434029999999877, 0.0016435689999999975, 0.0016434859999999996, 0.0016436250000000097, 0.0016434020000000021, 0.0016433610000000098, 0.0016435279999999913, 0.0016434030000000016, 0.0016434440000000078, 0.0016434859999999996, 0.0016435689999999975, 0.0016433329999999968, 0.0016435139999999987, 0.0016435969999999966, 0.0016433610000000098, 0.001643388999999995, 0.0016436250000000097, 0.0016433190000000042, 0.0016433059999999972, 0.001643388999999995, 0.0016434160000000086, 0.0016433200000000037, 0.0016434170000000081, 0.0016434449999999934, 0.001643569999999997, 0.001643389000000009, 0.0016434170000000081, 0.0016433330000000107, 0.0016433470000000033, 0.0016434019999999883, 0.0016434449999999934, 0.0016435829999999901]</msg>
<status status="PASS" starttime="20201030 10:58:37.766" endtime="20201030 10:58:37.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.755" endtime="20201030 10:58:37.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.212" endtime="20201030 10:58:37.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.183" endtime="20201030 10:58:37.774"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.779" endtime="20201030 10:58:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.776" endtime="20201030 10:58:37.803"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.824" endtime="20201030 10:58:37.922"></status>
</kw>
<msg timestamp="20201030 10:58:37.923" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.820" endtime="20201030 10:58:37.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.929" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.925" endtime="20201030 10:58:37.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.932" endtime="20201030 10:58:37.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.813" endtime="20201030 10:58:37.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.808" endtime="20201030 10:58:37.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.955" endtime="20201030 10:58:38.294"></status>
</kw>
<msg timestamp="20201030 10:58:38.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035563611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037261431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.951" endtime="20201030 10:58:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035563611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037261431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.303" endtime="20201030 10:58:38.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.321" endtime="20201030 10:58:38.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.944" endtime="20201030 10:58:38.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.940" endtime="20201030 10:58:38.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:38.337" level="INFO">${PHILIP_RES} = [{'diff': 0.0016978199999999957}, {'diff': 0.001695708000000004}, {'diff': 0.0016954590000000033}, {'diff': 0.0016972359999999978}, {'diff': 0.0016952500000000023}, {'diff': 0.001695292000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:38.329" endtime="20201030 10:58:38.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.346" level="INFO">${RESULT} = {'diff': [0.0016978199999999957, 0.001695708000000004, 0.0016954590000000033, 0.0016972359999999978, 0.0016952500000000023, 0.001695292000000001, 0.0016973060000000026, 0.001695402999999998, 0.0016954...</msg>
<status status="PASS" starttime="20201030 10:58:38.339" endtime="20201030 10:58:38.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.356" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:38.354" endtime="20201030 10:58:38.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.361" level="INFO">VALUE: [0.0016978199999999957, 0.001695708000000004, 0.0016954590000000033, 0.0016972359999999978, 0.0016952500000000023, 0.001695292000000001, 0.0016973060000000026, 0.001695402999999998, 0.0016954449999999968, 0.0016973050000000031, 0.0016954439999999973, 0.0016954590000000033, 0.0016974299999999998, 0.0016953060000000006, 0.001695165999999998, 0.001697193999999999, 0.0016952360000000027, 0.0016954869999999955, 0.00169726399999999, 0.0016953329999999933, 0.0016953329999999933, 0.0016972780000000104, 0.0016951250000000057, 0.0016951389999999983, 0.0016972640000000039, 0.0016958059999999942, 0.001695666999999998, 0.0016976390000000008, 0.0016958330000000077, 0.0016955129999999957, 0.0016975000000000046, 0.0016956389999999988, 0.0016957229999999962, 0.0016975420000000102, 0.0016955000000000026, 0.001695597000000007, 0.001697375000000001, 0.001695457999999997, 0.0016954019999999986, 0.0016973049999999962, 0.0016954309999999972, 0.001695193999999997, 0.001697181000000006, 0.0016952919999999871, 0.001695181000000004, 0.0016972499999999974, 0.001695568999999994, 0.0016954019999999986, 0.001697473000000005, 0.0016955409999999949]</msg>
<status status="PASS" starttime="20201030 10:58:38.358" endtime="20201030 10:58:38.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.347" endtime="20201030 10:58:38.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.804" endtime="20201030 10:58:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.774" endtime="20201030 10:58:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.264" endtime="20201030 10:58:38.367"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:09.194" endtime="20201030 10:58:38.369" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:40.951" endtime="20201030 10:58:38.392"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.572" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:38.588" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:40.514" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:38.568" endtime="20201030 10:58:40.515"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.521" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:40.517" endtime="20201030 10:58:40.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.566" endtime="20201030 10:58:40.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.527" endtime="20201030 10:58:40.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.525" endtime="20201030 10:58:40.854"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.884" endtime="20201030 10:58:40.902"></status>
</kw>
<msg timestamp="20201030 10:58:40.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.880" endtime="20201030 10:58:40.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.905" endtime="20201030 10:58:40.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.917" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:40.911" endtime="20201030 10:58:40.918"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:40.874" endtime="20201030 10:58:40.920"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:40.869" endtime="20201030 10:58:40.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.866" endtime="20201030 10:58:40.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:40.930" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:40.929" endtime="20201030 10:58:40.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.924" endtime="20201030 10:58:40.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.864" endtime="20201030 10:58:40.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.862" endtime="20201030 10:58:40.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.934" endtime="20201030 10:58:40.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.859" endtime="20201030 10:58:40.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.940" endtime="20201030 10:58:40.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.855" endtime="20201030 10:58:40.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.563" endtime="20201030 10:58:40.946"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.960" endtime="20201030 10:58:40.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.956" endtime="20201030 10:58:40.984"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.017" endtime="20201030 10:58:41.035"></status>
</kw>
<msg timestamp="20201030 10:58:41.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.014" endtime="20201030 10:58:41.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.038" endtime="20201030 10:58:41.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:41.045" endtime="20201030 10:58:41.050"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:41.007" endtime="20201030 10:58:41.051"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:41.000" endtime="20201030 10:58:41.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.998" endtime="20201030 10:58:41.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:41.062" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:41.060" endtime="20201030 10:58:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.055" endtime="20201030 10:58:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.996" endtime="20201030 10:58:41.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.994" endtime="20201030 10:58:41.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.067" endtime="20201030 10:58:41.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.990" endtime="20201030 10:58:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.986" endtime="20201030 10:58:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.954" endtime="20201030 10:58:41.074"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.099" endtime="20201030 10:58:41.114"></status>
</kw>
<msg timestamp="20201030 10:58:41.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.096" endtime="20201030 10:58:41.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.117" endtime="20201030 10:58:41.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.123" endtime="20201030 10:58:41.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.089" endtime="20201030 10:58:41.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.083" endtime="20201030 10:58:41.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.146" endtime="20201030 10:58:41.498"></status>
</kw>
<msg timestamp="20201030 10:58:41.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130644458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.130654792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:41.143" endtime="20201030 10:58:41.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130644458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.130654792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:58:41.509" endtime="20201030 10:58:41.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.527" endtime="20201030 10:58:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.136" endtime="20201030 10:58:41.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.131" endtime="20201030 10:58:41.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.544" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6680000000018902e-05}, {'diff': 1.6985999999996615e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.6861000000006898e-05}, {'diff': 1.6542000000008272e-05}, {'diff': 1.67779...</msg>
<status status="PASS" starttime="20201030 10:58:41.536" endtime="20201030 10:58:41.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.556" level="INFO">${ACCURACY} = {'diff': [0, 1.6680000000018902e-05, 1.6985999999996615e-05, 1.7028000000002264e-05, 1.6861000000006898e-05, 1.6542000000008272e-05, 1.6777999999995075e-05, 1.7028000000002264e-05, 1.672299999999627e-...</msg>
<status status="PASS" starttime="20201030 10:58:41.546" endtime="20201030 10:58:41.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.567" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.565" endtime="20201030 10:58:41.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.573" level="INFO">VALUE: [0, 1.6680000000018902e-05, 1.6985999999996615e-05, 1.7028000000002264e-05, 1.6861000000006898e-05, 1.6542000000008272e-05, 1.6777999999995075e-05, 1.7028000000002264e-05, 1.672299999999627e-05, 1.636200000001975e-05, 1.687499999999953e-05, 1.634699999999989e-05, 1.7000000000017e-05, 1.634699999999989e-05, 1.630499999999424e-05, 1.663899999998497e-05, 1.636099999999252e-05, 1.633300000000726e-05, 1.634699999999989e-05, 1.6847000000014267e-05, 1.6693999999983777e-05, 1.680500000000862e-05, 1.6653000000005358e-05, 1.637499999998515e-05, 1.6861000000006898e-05, 1.7193999999998155e-05, 1.670799999997641e-05, 1.7028000000002264e-05, 1.6709000000003638e-05, 1.7401999999999695e-05, 1.7041000000023176e-05, 1.7028000000002264e-05, 1.684800000001374e-05, 1.6709000000003638e-05, 1.7013999999981877e-05, 1.6862000000006372e-05, 1.6694000000011533e-05, 1.6861000000006898e-05, 1.7028000000002264e-05, 1.668099999999062e-05, 1.6861000000006898e-05, 1.715299999999198e-05, 1.7028000000002264e-05, 1.6527999999987886e-05, 1.6709000000003638e-05, 1.7181000000004998e-05, 1.6833999999993354e-05, 1.630600000002147e-05, 1.702700000000279e-05, 1.6527999999987886e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.570" endtime="20201030 10:58:41.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.558" endtime="20201030 10:58:41.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.584" endtime="20201030 10:58:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.580" endtime="20201030 10:58:41.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.578" endtime="20201030 10:58:41.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.079" endtime="20201030 10:58:41.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.077" endtime="20201030 10:58:41.609"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.632" endtime="20201030 10:58:41.646"></status>
</kw>
<msg timestamp="20201030 10:58:41.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.629" endtime="20201030 10:58:41.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.650" endtime="20201030 10:58:41.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.656" endtime="20201030 10:58:41.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.622" endtime="20201030 10:58:41.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.616" endtime="20201030 10:58:41.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.685" endtime="20201030 10:58:42.020"></status>
</kw>
<msg timestamp="20201030 10:58:42.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039283292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.676" endtime="20201030 10:58:42.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039283292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.029" endtime="20201030 10:58:42.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.048" endtime="20201030 10:58:42.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.669" endtime="20201030 10:58:42.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.664" endtime="20201030 10:58:42.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.065" level="INFO">${RESULT} = [{'diff': 1.669499999999713e-05}, {'diff': 1.7193999999998155e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.6693999999997655e-05}, {'diff': 1.659700000000014e-05}, {'diff': 1.6569999999993534e-05...</msg>
<status status="PASS" starttime="20201030 10:58:42.056" endtime="20201030 10:58:42.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.076" level="INFO">${ACCURACY} = {'diff': [1.669499999999713e-05, 1.7193999999998155e-05, 1.7014000000002694e-05, 1.6693999999997655e-05, 1.659700000000014e-05, 1.6569999999993534e-05, 1.6679999999998085e-05, 1.7000000000003124e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:42.067" endtime="20201030 10:58:42.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.086" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.084" endtime="20201030 10:58:42.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.092" level="INFO">VALUE: [1.669499999999713e-05, 1.7193999999998155e-05, 1.7014000000002694e-05, 1.6693999999997655e-05, 1.659700000000014e-05, 1.6569999999993534e-05, 1.6679999999998085e-05, 1.7000000000003124e-05, 1.634699999999989e-05, 1.6694000000004594e-05, 1.6514000000002194e-05, 1.6679999999998085e-05, 1.705500000000193e-05, 1.6806000000001153e-05, 1.7027999999995325e-05, 1.6693999999997655e-05, 1.6499999999995685e-05, 1.7014000000002694e-05, 1.663899999999885e-05, 1.734700000000089e-05, 1.7014000000002694e-05, 1.6693999999997655e-05, 1.6347999999999363e-05, 1.7221999999997295e-05, 1.6693999999997655e-05, 1.716699999999849e-05, 1.702700000000279e-05, 1.6527999999994825e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.634699999999989e-05, 1.686099999999996e-05, 1.634699999999989e-05, 1.716699999999849e-05, 1.6834000000000293e-05, 1.6514000000002194e-05, 1.701300000000322e-05, 1.734700000000089e-05, 1.6387999999999125e-05, 1.668099999999756e-05, 1.6513999999995255e-05, 1.7208000000004664e-05, 1.636099999999946e-05, 1.63889999999986e-05, 1.668099999999756e-05, 1.687499999999953e-05, 1.733300000000132e-05, 1.666699999999799e-05, 1.7014000000002694e-05, 1.683299999999388e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.089" endtime="20201030 10:58:42.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.077" endtime="20201030 10:58:42.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.104" endtime="20201030 10:58:42.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.099" endtime="20201030 10:58:42.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.097" endtime="20201030 10:58:42.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.612" endtime="20201030 10:58:42.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.610" endtime="20201030 10:58:42.129"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.151" endtime="20201030 10:58:42.165"></status>
</kw>
<msg timestamp="20201030 10:58:42.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.148" endtime="20201030 10:58:42.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.169" endtime="20201030 10:58:42.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.175" endtime="20201030 10:58:42.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.141" endtime="20201030 10:58:42.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.135" endtime="20201030 10:58:42.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.199" endtime="20201030 10:58:42.536"></status>
</kw>
<msg timestamp="20201030 10:58:42.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038872931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.196" endtime="20201030 10:58:42.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038872931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.546" endtime="20201030 10:58:42.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.564" endtime="20201030 10:58:42.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.188" endtime="20201030 10:58:42.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.183" endtime="20201030 10:58:42.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.582" level="INFO">${RESULT} = [{'diff': 1.6693999999997655e-05}, {'diff': 1.734700000000089e-05}, {'diff': 1.7013999999995755e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.683300000000082e-05}, {'diff': 1.662499999999928e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:42.573" endtime="20201030 10:58:42.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.591" level="INFO">${ACCURACY} = {'diff': [1.6693999999997655e-05, 1.734700000000089e-05, 1.7013999999995755e-05, 1.6528000000001764e-05, 1.683300000000082e-05, 1.662499999999928e-05, 1.684700000000039e-05, 1.679100000000211e-05, 1.6...</msg>
<status status="PASS" starttime="20201030 10:58:42.584" endtime="20201030 10:58:42.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.602" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.599" endtime="20201030 10:58:42.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.607" level="INFO">VALUE: [1.6693999999997655e-05, 1.734700000000089e-05, 1.7013999999995755e-05, 1.6528000000001764e-05, 1.683300000000082e-05, 1.662499999999928e-05, 1.684700000000039e-05, 1.679100000000211e-05, 1.687499999999953e-05, 1.633300000000032e-05, 1.6527999999994825e-05, 1.7014000000002694e-05, 1.719499999999763e-05, 1.6693999999997655e-05, 1.6514000000002194e-05, 1.669499999999713e-05, 1.6500000000002624e-05, 1.734700000000089e-05, 1.7014000000002694e-05, 1.719499999999763e-05, 1.7194000000005094e-05, 1.6500000000002624e-05, 1.6528000000001764e-05, 1.7028000000002264e-05, 1.733300000000132e-05, 1.6693999999997655e-05, 1.718099999999806e-05, 1.683300000000082e-05, 1.641699999999774e-05, 1.684700000000039e-05, 1.6681000000004498e-05, 1.6847999999999863e-05, 1.7014000000002694e-05, 1.6514000000002194e-05, 1.6681000000004498e-05, 1.7028000000002264e-05, 1.6999999999996185e-05, 1.6401999999998695e-05, 1.691699999999824e-05, 1.686099999999996e-05, 1.702700000000279e-05, 1.6681000000004498e-05, 1.683300000000082e-05, 1.704100000000236e-05, 1.6708000000004164e-05, 1.631900000000075e-05, 1.7014000000002694e-05, 1.7334000000000793e-05, 1.634699999999989e-05, 1.7013999999995755e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.604" endtime="20201030 10:58:42.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.593" endtime="20201030 10:58:42.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.620" endtime="20201030 10:58:42.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.615" endtime="20201030 10:58:42.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.613" endtime="20201030 10:58:42.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.131" endtime="20201030 10:58:42.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.129" endtime="20201030 10:58:42.645"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.667" endtime="20201030 10:58:42.683"></status>
</kw>
<msg timestamp="20201030 10:58:42.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.664" endtime="20201030 10:58:42.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.687" endtime="20201030 10:58:42.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.694" endtime="20201030 10:58:42.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.657" endtime="20201030 10:58:42.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.651" endtime="20201030 10:58:42.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.717" endtime="20201030 10:58:43.049"></status>
</kw>
<msg timestamp="20201030 10:58:43.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040765778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.713" endtime="20201030 10:58:43.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040765778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.059" endtime="20201030 10:58:43.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.078" endtime="20201030 10:58:43.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.706" endtime="20201030 10:58:43.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.702" endtime="20201030 10:58:43.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.095" level="INFO">${RESULT} = [{'diff': 1.6679999999998085e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.6333999999999793e-05}, {'diff': 1.6514000000002194e-05}, {'diff': 1.6972000000003984e-05}, {'diff': 1.6514000000002194e-...</msg>
<status status="PASS" starttime="20201030 10:58:43.086" endtime="20201030 10:58:43.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.105" level="INFO">${ACCURACY} = {'diff': [1.6679999999998085e-05, 1.6500000000002624e-05, 1.6333999999999793e-05, 1.6514000000002194e-05, 1.6972000000003984e-05, 1.6514000000002194e-05, 1.6681000000004498e-05, 1.6667000000004928e-05...</msg>
<status status="PASS" starttime="20201030 10:58:43.097" endtime="20201030 10:58:43.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.115" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.113" endtime="20201030 10:58:43.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.121" level="INFO">VALUE: [1.6679999999998085e-05, 1.6500000000002624e-05, 1.6333999999999793e-05, 1.6514000000002194e-05, 1.6972000000003984e-05, 1.6514000000002194e-05, 1.6681000000004498e-05, 1.6667000000004928e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.63889999999986e-05, 1.719499999999763e-05, 1.7167000000005428e-05, 1.6820000000000723e-05, 1.7070000000000973e-05, 1.6348000000006302e-05, 1.7028000000002264e-05, 1.6681000000004498e-05, 1.656899999999406e-05, 1.6528000000001764e-05, 1.672299999999627e-05, 1.6791999999994645e-05, 1.6500000000002624e-05, 1.684700000000039e-05, 1.6875000000006468e-05, 1.686099999999996e-05, 1.718099999999806e-05, 1.6528000000001764e-05, 1.7179999999998585e-05, 1.6693999999997655e-05, 1.687499999999953e-05, 1.6528000000001764e-05, 1.6570000000000473e-05, 1.686099999999996e-05, 1.661099999999971e-05, 1.6514000000002194e-05, 1.734700000000089e-05, 1.6889000000006038e-05, 1.651300000000272e-05, 1.7028000000002264e-05, 1.7401999999999695e-05, 1.684700000000039e-05, 1.6513999999995255e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.6499999999995685e-05, 1.686099999999996e-05, 1.6667000000004928e-05, 1.7028000000002264e-05, 1.6500000000002624e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.118" endtime="20201030 10:58:43.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.107" endtime="20201030 10:58:43.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.134" endtime="20201030 10:58:43.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.128" endtime="20201030 10:58:43.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.126" endtime="20201030 10:58:43.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.647" endtime="20201030 10:58:43.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.646" endtime="20201030 10:58:43.159"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.182" endtime="20201030 10:58:43.197"></status>
</kw>
<msg timestamp="20201030 10:58:43.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.178" endtime="20201030 10:58:43.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.200" endtime="20201030 10:58:43.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.206" endtime="20201030 10:58:43.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.171" endtime="20201030 10:58:43.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.165" endtime="20201030 10:58:43.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.230" endtime="20201030 10:58:43.567"></status>
</kw>
<msg timestamp="20201030 10:58:43.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039672028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.226" endtime="20201030 10:58:43.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039672028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.576" endtime="20201030 10:58:43.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.595" endtime="20201030 10:58:43.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.219" endtime="20201030 10:58:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.214" endtime="20201030 10:58:43.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.612" level="INFO">${RESULT} = [{'diff': 1.684700000000039e-05}, {'diff': 1.7207999999997725e-05}, {'diff': 1.7000000000003124e-05}, {'diff': 1.6499999999995685e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.68889999999991e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:43.603" endtime="20201030 10:58:43.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.622" level="INFO">${ACCURACY} = {'diff': [1.684700000000039e-05, 1.7207999999997725e-05, 1.7000000000003124e-05, 1.6499999999995685e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.6709000000003638e-05, 1.6707999999997225e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:43.614" endtime="20201030 10:58:43.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.633" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.631" endtime="20201030 10:58:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.639" level="INFO">VALUE: [1.684700000000039e-05, 1.7207999999997725e-05, 1.7000000000003124e-05, 1.6499999999995685e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.6709000000003638e-05, 1.6707999999997225e-05, 1.666699999999799e-05, 1.6514000000002194e-05, 1.7361999999999933e-05, 1.668099999999756e-05, 1.630500000000118e-05, 1.6806000000001153e-05, 1.6292000000001083e-05, 1.6541999999994395e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.637499999999903e-05, 1.6401999999998695e-05, 1.668099999999756e-05, 1.7195000000004568e-05, 1.634699999999989e-05, 1.6528000000001764e-05, 1.716699999999849e-05, 1.72089999999972e-05, 1.662499999999928e-05, 1.6681000000004498e-05, 1.6693999999997655e-05, 1.669499999999713e-05, 1.633300000000032e-05, 1.7207999999997725e-05, 1.6278000000001513e-05, 1.718099999999806e-05, 1.686099999999996e-05, 1.7193999999998155e-05, 1.636099999999946e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.718099999999806e-05, 1.686099999999996e-05, 1.659700000000014e-05, 1.7013999999995755e-05, 1.716699999999849e-05, 1.668099999999756e-05, 1.7167000000005428e-05, 1.6528000000001764e-05, 1.740299999999917e-05, 1.634699999999989e-05, 1.701300000000322e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.635" endtime="20201030 10:58:43.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.624" endtime="20201030 10:58:43.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.650" endtime="20201030 10:58:43.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.646" endtime="20201030 10:58:43.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.644" endtime="20201030 10:58:43.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.161" endtime="20201030 10:58:43.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.160" endtime="20201030 10:58:43.675"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.699" endtime="20201030 10:58:43.713"></status>
</kw>
<msg timestamp="20201030 10:58:43.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.695" endtime="20201030 10:58:43.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.717" endtime="20201030 10:58:43.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.723" endtime="20201030 10:58:43.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.688" endtime="20201030 10:58:43.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.682" endtime="20201030 10:58:43.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.746" endtime="20201030 10:58:44.080"></status>
</kw>
<msg timestamp="20201030 10:58:44.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040201764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040218611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.743" endtime="20201030 10:58:44.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040201764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040218611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.090" endtime="20201030 10:58:44.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.108" endtime="20201030 10:58:44.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.735" endtime="20201030 10:58:44.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.731" endtime="20201030 10:58:44.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.125" level="INFO">${RESULT} = [{'diff': 1.684700000000039e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.7193999999998155e-05}, {'diff': 1.668099999999756e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:44.116" endtime="20201030 10:58:44.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.136" level="INFO">${ACCURACY} = {'diff': [1.684700000000039e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.686099999999996e-05, 1.7193999999998155e-05, 1.668099999999756e-05, 1.6847999999999863e-05, 1.6487000000002527e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:44.127" endtime="20201030 10:58:44.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.147" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.145" endtime="20201030 10:58:44.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.152" level="INFO">VALUE: [1.684700000000039e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.686099999999996e-05, 1.7193999999998155e-05, 1.668099999999756e-05, 1.6847999999999863e-05, 1.6487000000002527e-05, 1.683300000000082e-05, 1.6666000000005454e-05, 1.6514000000002194e-05, 1.6347999999999363e-05, 1.684700000000039e-05, 1.718099999999806e-05, 1.63889999999986e-05, 1.7042000000001833e-05, 1.704100000000236e-05, 1.6665999999998515e-05, 1.6971999999997045e-05, 1.7042000000001833e-05, 1.7013999999995755e-05, 1.718099999999806e-05, 1.6679999999998085e-05, 1.686099999999996e-05, 1.634699999999989e-05, 1.7013999999995755e-05, 1.7013999999995755e-05, 1.659700000000014e-05, 1.6834000000000293e-05, 1.669499999999713e-05, 1.686099999999996e-05, 1.6778000000002014e-05, 1.7027999999995325e-05, 1.6584000000000043e-05, 1.719499999999763e-05, 1.637499999999903e-05, 1.736100000000046e-05, 1.668099999999756e-05, 1.7193999999998155e-05, 1.6986000000003554e-05, 1.7027999999995325e-05, 1.6514000000002194e-05, 1.684700000000039e-05, 1.6500000000002624e-05, 1.6514000000002194e-05, 1.7179999999998585e-05, 1.718099999999806e-05, 1.6847999999999863e-05, 1.733300000000132e-05, 1.713899999999935e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.149" endtime="20201030 10:58:44.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.138" endtime="20201030 10:58:44.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.164" endtime="20201030 10:58:44.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.160" endtime="20201030 10:58:44.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.157" endtime="20201030 10:58:44.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.677" endtime="20201030 10:58:44.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.676" endtime="20201030 10:58:44.190"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.212" endtime="20201030 10:58:44.226"></status>
</kw>
<msg timestamp="20201030 10:58:44.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.209" endtime="20201030 10:58:44.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.230" endtime="20201030 10:58:44.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.236" endtime="20201030 10:58:44.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.202" endtime="20201030 10:58:44.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.196" endtime="20201030 10:58:44.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.259" endtime="20201030 10:58:44.595"></status>
</kw>
<msg timestamp="20201030 10:58:44.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038951889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.256" endtime="20201030 10:58:44.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038951889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.605" endtime="20201030 10:58:44.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.624" endtime="20201030 10:58:44.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.249" endtime="20201030 10:58:44.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.244" endtime="20201030 10:58:44.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.641" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.6347999999999363e-05}, {'diff': 1.7000000000003124e-05}, {'diff': 1.684700000000039e-05}, {'diff': 1.7165999999999015e-05}, {'diff': 1.6527999999994825e-05...</msg>
<status status="PASS" starttime="20201030 10:58:44.632" endtime="20201030 10:58:44.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.650" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.6347999999999363e-05, 1.7000000000003124e-05, 1.684700000000039e-05, 1.7165999999999015e-05, 1.6527999999994825e-05, 1.7014000000002694e-05, 1.712499999999978e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:44.643" endtime="20201030 10:58:44.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.661" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.658" endtime="20201030 10:58:44.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.666" level="INFO">VALUE: [1.713899999999935e-05, 1.6347999999999363e-05, 1.7000000000003124e-05, 1.684700000000039e-05, 1.7165999999999015e-05, 1.6527999999994825e-05, 1.7014000000002694e-05, 1.712499999999978e-05, 1.634699999999989e-05, 1.6999999999996185e-05, 1.6820000000000723e-05, 1.665299999999842e-05, 1.6514000000002194e-05, 1.63889999999986e-05, 1.668099999999756e-05, 1.7027999999995325e-05, 1.719499999999763e-05, 1.7014000000002694e-05, 1.6694000000004594e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.684700000000039e-05, 1.6915999999998765e-05, 1.631900000000075e-05, 1.7223000000003708e-05, 1.6500000000002624e-05, 1.6679999999998085e-05, 1.686099999999996e-05, 1.7165999999999015e-05, 1.677700000000254e-05, 1.6693999999997655e-05, 1.629100000000161e-05, 1.6806000000001153e-05, 1.666699999999799e-05, 1.6834000000000293e-05, 1.7166000000005954e-05, 1.637499999999903e-05, 1.7193999999998155e-05, 1.718099999999806e-05, 1.7167000000005428e-05, 1.6528000000001764e-05, 1.734699999999395e-05, 1.6584000000000043e-05, 1.6513999999995255e-05, 1.7028000000002264e-05, 1.665299999999842e-05, 1.654100000000186e-05, 1.6485999999996115e-05, 1.636099999999946e-05, 1.6750000000002874e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.663" endtime="20201030 10:58:44.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.652" endtime="20201030 10:58:44.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.678" endtime="20201030 10:58:44.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.674" endtime="20201030 10:58:44.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.672" endtime="20201030 10:58:44.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.192" endtime="20201030 10:58:44.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.191" endtime="20201030 10:58:44.703"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.726" endtime="20201030 10:58:44.741"></status>
</kw>
<msg timestamp="20201030 10:58:44.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.723" endtime="20201030 10:58:44.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.744" endtime="20201030 10:58:44.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.750" endtime="20201030 10:58:44.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.715" endtime="20201030 10:58:44.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.710" endtime="20201030 10:58:44.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.775" endtime="20201030 10:58:45.109"></status>
</kw>
<msg timestamp="20201030 10:58:45.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038868458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038892111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.772" endtime="20201030 10:58:45.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038868458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038892111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.118" endtime="20201030 10:58:45.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.137" endtime="20201030 10:58:45.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.765" endtime="20201030 10:58:45.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.760" endtime="20201030 10:58:45.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.154" level="INFO">${RESULT} = [{'diff': 2.365299999999848e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.363900000000585e-05}, {'diff': 2.42770000000031e-05}, {'diff': 2.347299999999608e-05}, {'diff': 2.3306000000000715e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:45.145" endtime="20201030 10:58:45.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.163" level="INFO">${ACCURACY} = {'diff': [2.365299999999848e-05, 2.338899999999866e-05, 2.363900000000585e-05, 2.42770000000031e-05, 2.347299999999608e-05, 2.3306000000000715e-05, 2.368100000000456e-05, 2.362499999999934e-05, 2.3624...</msg>
<status status="PASS" starttime="20201030 10:58:45.156" endtime="20201030 10:58:45.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.174" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.172" endtime="20201030 10:58:45.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.179" level="INFO">VALUE: [2.365299999999848e-05, 2.338899999999866e-05, 2.363900000000585e-05, 2.42770000000031e-05, 2.347299999999608e-05, 2.3306000000000715e-05, 2.368100000000456e-05, 2.362499999999934e-05, 2.362499999999934e-05, 2.416699999999855e-05, 2.383300000000088e-05, 2.3971999999997107e-05, 2.3778000000002075e-05, 2.3486000000003115e-05, 2.3457999999997037e-05, 2.4291999999995206e-05, 2.3971999999997107e-05, 2.366700000000499e-05, 2.330500000000124e-05, 2.39169999999983e-05, 2.3971999999997107e-05, 2.3763999999995566e-05, 2.3457999999997037e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.388899999999916e-05, 2.365300000000542e-05, 2.365299999999848e-05, 2.3665999999998577e-05, 2.3820000000000785e-05, 2.395899999999701e-05, 2.3971999999997107e-05, 2.3777999999995136e-05, 2.397299999999658e-05, 2.3944000000004906e-05, 2.3972000000004046e-05, 2.412499999999984e-05, 2.363899999999891e-05, 2.381900000000131e-05, 2.348700000000259e-05, 2.3971999999997107e-05, 2.412499999999984e-05, 2.3472000000003546e-05, 2.3471999999996607e-05, 2.363899999999891e-05, 2.416699999999855e-05, 2.362499999999934e-05, 2.345900000000345e-05, 2.363900000000585e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.176" endtime="20201030 10:58:45.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.165" endtime="20201030 10:58:45.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.193" endtime="20201030 10:58:45.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.188" endtime="20201030 10:58:45.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.185" endtime="20201030 10:58:45.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.706" endtime="20201030 10:58:45.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.704" endtime="20201030 10:58:45.218"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.241" endtime="20201030 10:58:45.255"></status>
</kw>
<msg timestamp="20201030 10:58:45.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.237" endtime="20201030 10:58:45.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.259" endtime="20201030 10:58:45.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.265" endtime="20201030 10:58:45.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.230" endtime="20201030 10:58:45.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.225" endtime="20201030 10:58:45.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.288" endtime="20201030 10:58:45.622"></status>
</kw>
<msg timestamp="20201030 10:58:45.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0390245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039048306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:45.285" endtime="20201030 10:58:45.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0390245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039048306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:45.631" endtime="20201030 10:58:45.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.650" endtime="20201030 10:58:45.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.278" endtime="20201030 10:58:45.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.273" endtime="20201030 10:58:45.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.667" level="INFO">${RESULT} = [{'diff': 2.3806000000001215e-05}, {'diff': 2.3792000000001645e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.4250000000003435e-05}, {'diff': 2.4000000000003185e-05}, {'diff': 2.413899999999941e-0...</msg>
<status status="PASS" starttime="20201030 10:58:45.658" endtime="20201030 10:58:45.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.677" level="INFO">${ACCURACY} = {'diff': [2.3806000000001215e-05, 2.3792000000001645e-05, 2.3292000000001145e-05, 2.4250000000003435e-05, 2.4000000000003185e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:45.669" endtime="20201030 10:58:45.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.688" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.686" endtime="20201030 10:58:45.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.694" level="INFO">VALUE: [2.3806000000001215e-05, 2.3792000000001645e-05, 2.3292000000001145e-05, 2.4250000000003435e-05, 2.4000000000003185e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.3820000000000785e-05, 2.413899999999941e-05, 2.4026999999995913e-05, 2.358300000000063e-05, 2.3472000000003546e-05, 2.372300000000327e-05, 2.4040999999995483e-05, 2.3971999999997107e-05, 2.3804999999994803e-05, 2.381900000000131e-05, 2.386100000000002e-05, 2.3472000000003546e-05, 2.3250000000002435e-05, 2.395900000000395e-05, 2.394499999999744e-05, 2.391700000000524e-05, 2.3457999999997037e-05, 2.4137999999999937e-05, 2.413899999999941e-05, 2.3972000000004046e-05, 2.3472000000003546e-05, 2.4306000000001715e-05, 2.3778000000002075e-05, 2.3347999999999425e-05, 2.3264000000002005e-05, 2.3320000000000285e-05, 2.3707999999997287e-05, 2.394500000000438e-05, 2.4292000000002145e-05, 2.3985999999996677e-05, 2.4304999999995303e-05, 2.4305999999994776e-05, 2.345899999999651e-05, 2.362499999999934e-05, 2.412499999999984e-05, 2.4334000000000855e-05, 2.3957999999997537e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.361099999999977e-05, 2.330500000000124e-05, 2.3986000000003616e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.690" endtime="20201030 10:58:45.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.679" endtime="20201030 10:58:45.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.706" endtime="20201030 10:58:45.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.702" endtime="20201030 10:58:45.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.699" endtime="20201030 10:58:45.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.220" endtime="20201030 10:58:45.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.219" endtime="20201030 10:58:45.731"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.753" endtime="20201030 10:58:45.768"></status>
</kw>
<msg timestamp="20201030 10:58:45.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.750" endtime="20201030 10:58:45.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.772" endtime="20201030 10:58:45.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.778" endtime="20201030 10:58:45.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.743" endtime="20201030 10:58:45.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.737" endtime="20201030 10:58:45.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.801" endtime="20201030 10:58:46.135"></status>
</kw>
<msg timestamp="20201030 10:58:46.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039064792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03908875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:45.798" endtime="20201030 10:58:46.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039064792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03908875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:46.145" endtime="20201030 10:58:46.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.163" endtime="20201030 10:58:46.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.791" endtime="20201030 10:58:46.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.786" endtime="20201030 10:58:46.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.180" level="INFO">${RESULT} = [{'diff': 2.3957999999997537e-05}, {'diff': 2.3971999999997107e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.3472000000003546e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.412499999999984e-05...</msg>
<status status="PASS" starttime="20201030 10:58:46.172" endtime="20201030 10:58:46.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.191" level="INFO">${ACCURACY} = {'diff': [2.3957999999997537e-05, 2.3971999999997107e-05, 2.412499999999984e-05, 2.3472000000003546e-05, 2.3985999999996677e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.3957999999997537e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:46.182" endtime="20201030 10:58:46.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.202" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.200" endtime="20201030 10:58:46.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.207" level="INFO">VALUE: [2.3957999999997537e-05, 2.3971999999997107e-05, 2.412499999999984e-05, 2.3472000000003546e-05, 2.3985999999996677e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.3957999999997537e-05, 2.3291999999994206e-05, 2.4304999999995303e-05, 2.4320000000001285e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.3292000000001145e-05, 2.3985999999996677e-05, 2.380500000000174e-05, 2.3457999999997037e-05, 2.412499999999984e-05, 2.363899999999891e-05, 2.3972000000004046e-05, 2.394500000000438e-05, 2.3458000000003976e-05, 2.3471999999996607e-05, 2.3806000000001215e-05, 2.361099999999977e-05, 2.381900000000131e-05, 2.3333999999999855e-05, 2.363899999999891e-05, 2.3472000000003546e-05, 2.4111999999999745e-05, 2.379100000000217e-05, 2.3999999999996247e-05, 2.3472000000003546e-05, 2.329100000000167e-05, 2.3818999999994372e-05, 2.4026999999995913e-05, 2.345900000000345e-05, 2.3972000000004046e-05, 2.3472000000003546e-05, 2.3471999999996607e-05, 2.340299999999823e-05, 2.3792000000001645e-05, 2.3820000000000785e-05, 2.340299999999823e-05, 2.413899999999941e-05, 2.4292000000002145e-05, 2.3637999999999437e-05, 2.34169999999978e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.204" endtime="20201030 10:58:46.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.193" endtime="20201030 10:58:46.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.220" endtime="20201030 10:58:46.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.216" endtime="20201030 10:58:46.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.213" endtime="20201030 10:58:46.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.733" endtime="20201030 10:58:46.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.732" endtime="20201030 10:58:46.245"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.267" endtime="20201030 10:58:46.282"></status>
</kw>
<msg timestamp="20201030 10:58:46.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.264" endtime="20201030 10:58:46.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.286" endtime="20201030 10:58:46.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.292" endtime="20201030 10:58:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.257" endtime="20201030 10:58:46.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.251" endtime="20201030 10:58:46.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.315" endtime="20201030 10:58:46.656"></status>
</kw>
<msg timestamp="20201030 10:58:46.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039339181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039363431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.312" endtime="20201030 10:58:46.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039339181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039363431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.665" endtime="20201030 10:58:46.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.684" endtime="20201030 10:58:46.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.305" endtime="20201030 10:58:46.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.300" endtime="20201030 10:58:46.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.701" level="INFO">${RESULT} = [{'diff': 2.4249999999996497e-05}, {'diff': 2.429100000000267e-05}, {'diff': 2.369499999999719e-05}, {'diff': 2.355500000000149e-05}, {'diff': 2.3806000000001215e-05}, {'diff': 2.3318999999993872e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:46.692" endtime="20201030 10:58:46.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.710" level="INFO">${ACCURACY} = {'diff': [2.4249999999996497e-05, 2.429100000000267e-05, 2.369499999999719e-05, 2.355500000000149e-05, 2.3806000000001215e-05, 2.3318999999993872e-05, 2.3806000000001215e-05, 2.3971999999997107e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:46.703" endtime="20201030 10:58:46.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.721" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.719" endtime="20201030 10:58:46.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.726" level="INFO">VALUE: [2.4249999999996497e-05, 2.429100000000267e-05, 2.369499999999719e-05, 2.355500000000149e-05, 2.3806000000001215e-05, 2.3318999999993872e-05, 2.3806000000001215e-05, 2.3971999999997107e-05, 2.415299999999898e-05, 2.3972000000004046e-05, 2.3764000000002505e-05, 2.413899999999941e-05, 2.3929999999998397e-05, 2.3764000000002505e-05, 2.3486000000003115e-05, 2.3971999999997107e-05, 2.3957999999997537e-05, 2.3791999999994706e-05, 2.363899999999891e-05, 2.3471999999996607e-05, 2.3637999999999437e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.363899999999891e-05, 2.3806000000001215e-05, 2.3499999999995747e-05, 2.3972000000004046e-05, 2.4151999999999507e-05, 2.336099999999952e-05, 2.4068999999994622e-05, 2.3499999999995747e-05, 2.330500000000124e-05, 2.365299999999848e-05, 2.3805999999994276e-05, 2.3749999999995997e-05, 2.4292000000002145e-05, 2.3792000000001645e-05, 2.362499999999934e-05, 2.4291999999995206e-05, 2.4041999999994956e-05, 2.3735999999996427e-05, 2.347300000000302e-05, 2.3651999999999007e-05, 2.363900000000585e-05, 2.366699999999805e-05, 2.3443999999997467e-05, 2.3651999999999007e-05, 2.397300000000352e-05, 2.329100000000167e-05, 2.395900000000395e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.723" endtime="20201030 10:58:46.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.712" endtime="20201030 10:58:46.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.744" endtime="20201030 10:58:46.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.739" endtime="20201030 10:58:46.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.737" endtime="20201030 10:58:46.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.247" endtime="20201030 10:58:46.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.246" endtime="20201030 10:58:46.768"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.791" endtime="20201030 10:58:46.807"></status>
</kw>
<msg timestamp="20201030 10:58:46.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.787" endtime="20201030 10:58:46.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.811" endtime="20201030 10:58:46.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.817" endtime="20201030 10:58:46.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.780" endtime="20201030 10:58:46.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.775" endtime="20201030 10:58:46.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.840" endtime="20201030 10:58:47.175"></status>
</kw>
<msg timestamp="20201030 10:58:47.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040366444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040390639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.837" endtime="20201030 10:58:47.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040366444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040390639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.184" endtime="20201030 10:58:47.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.202" endtime="20201030 10:58:47.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.830" endtime="20201030 10:58:47.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.825" endtime="20201030 10:58:47.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.219" level="INFO">${RESULT} = [{'diff': 2.419499999999769e-05}, {'diff': 2.3471999999996607e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.394499999999744e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.3985999999996677e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:47.211" endtime="20201030 10:58:47.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.229" level="INFO">${ACCURACY} = {'diff': [2.419499999999769e-05, 2.3471999999996607e-05, 2.3292000000001145e-05, 2.394499999999744e-05, 2.412499999999984e-05, 2.3985999999996677e-05, 2.4137999999999937e-05, 2.380500000000174e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:47.221" endtime="20201030 10:58:47.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.240" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.237" endtime="20201030 10:58:47.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.245" level="INFO">VALUE: [2.419499999999769e-05, 2.3471999999996607e-05, 2.3292000000001145e-05, 2.394499999999744e-05, 2.412499999999984e-05, 2.3985999999996677e-05, 2.4137999999999937e-05, 2.380500000000174e-05, 2.3972000000004046e-05, 2.3792000000001645e-05, 2.363899999999891e-05, 2.418099999999812e-05, 2.413900000000635e-05, 2.3472000000003546e-05, 2.3763999999995566e-05, 2.3306000000000715e-05, 2.397299999999658e-05, 2.3804999999994803e-05, 2.429100000000267e-05, 2.4098000000000175e-05, 2.415299999999898e-05, 2.3792000000001645e-05, 2.3804999999994803e-05, 2.3485999999996177e-05, 2.4000000000003185e-05, 2.397300000000352e-05, 2.411100000000027e-05, 2.3429999999997897e-05, 2.3485999999996177e-05, 2.3820000000000785e-05, 2.362499999999934e-05, 2.345899999999651e-05, 2.3972000000004046e-05, 2.3971999999997107e-05, 2.394499999999744e-05, 2.3292000000001145e-05, 2.3472000000003546e-05, 2.4306000000001715e-05, 2.3500000000002685e-05, 2.3958000000004476e-05, 2.3637999999999437e-05, 2.329100000000167e-05, 2.3680000000005086e-05, 2.416700000000549e-05, 2.3277999999994636e-05, 2.362499999999934e-05, 2.362499999999934e-05, 2.429100000000267e-05, 2.380500000000174e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.242" endtime="20201030 10:58:47.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.230" endtime="20201030 10:58:47.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.259" endtime="20201030 10:58:47.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.253" endtime="20201030 10:58:47.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.251" endtime="20201030 10:58:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.771" endtime="20201030 10:58:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.769" endtime="20201030 10:58:47.284"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.306" endtime="20201030 10:58:47.321"></status>
</kw>
<msg timestamp="20201030 10:58:47.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.303" endtime="20201030 10:58:47.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.325" endtime="20201030 10:58:47.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.331" endtime="20201030 10:58:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.296" endtime="20201030 10:58:47.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.290" endtime="20201030 10:58:47.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.354" endtime="20201030 10:58:47.688"></status>
</kw>
<msg timestamp="20201030 10:58:47.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039142306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039166111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.351" endtime="20201030 10:58:47.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039142306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039166111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.697" endtime="20201030 10:58:47.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.716" endtime="20201030 10:58:47.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.344" endtime="20201030 10:58:47.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.339" endtime="20201030 10:58:47.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.733" level="INFO">${RESULT} = [{'diff': 2.380500000000174e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.331900000000081e-05}, {'diff': 2.3972000000004046e-05}, {'diff': 2.3457999999997037e-05}, {'diff': 2.3568999999994122e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:47.724" endtime="20201030 10:58:47.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.743" level="INFO">${ACCURACY} = {'diff': [2.380500000000174e-05, 2.412499999999984e-05, 2.331900000000081e-05, 2.3972000000004046e-05, 2.3457999999997037e-05, 2.3568999999994122e-05, 2.365300000000542e-05, 2.411100000000027e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 10:58:47.735" endtime="20201030 10:58:47.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.754" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.752" endtime="20201030 10:58:47.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.760" level="INFO">VALUE: [2.380500000000174e-05, 2.412499999999984e-05, 2.331900000000081e-05, 2.3972000000004046e-05, 2.3457999999997037e-05, 2.3568999999994122e-05, 2.365300000000542e-05, 2.411100000000027e-05, 2.3971999999997107e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.3457999999997037e-05, 2.4278000000002575e-05, 2.415299999999898e-05, 2.340299999999823e-05, 2.3778000000002075e-05, 2.379100000000217e-05, 2.3806000000001215e-05, 2.4278000000002575e-05, 2.380500000000174e-05, 2.3972000000004046e-05, 2.362499999999934e-05, 2.354100000000192e-05, 2.412499999999984e-05, 2.380500000000174e-05, 2.363899999999891e-05, 2.418100000000506e-05, 2.3806000000001215e-05, 2.362499999999934e-05, 2.4028000000002325e-05, 2.3651999999999007e-05, 2.363899999999891e-05, 2.390299999999873e-05, 2.4137999999999937e-05, 2.3804999999994803e-05, 2.363899999999891e-05, 2.3790999999995233e-05, 2.394500000000438e-05, 2.4137999999999937e-05, 2.393099999999787e-05, 2.3749999999995997e-05, 2.3457999999997037e-05, 2.37770000000026e-05, 2.3999999999996247e-05, 2.4306000000001715e-05, 2.363900000000585e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.3806000000001215e-05, 2.3429999999997897e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.756" endtime="20201030 10:58:47.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.745" endtime="20201030 10:58:47.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.772" endtime="20201030 10:58:47.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.768" endtime="20201030 10:58:47.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.765" endtime="20201030 10:58:47.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.286" endtime="20201030 10:58:47.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.285" endtime="20201030 10:58:47.797"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.819" endtime="20201030 10:58:47.834"></status>
</kw>
<msg timestamp="20201030 10:58:47.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.816" endtime="20201030 10:58:47.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.838" endtime="20201030 10:58:47.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.844" endtime="20201030 10:58:47.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.809" endtime="20201030 10:58:47.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.803" endtime="20201030 10:58:47.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.867" endtime="20201030 10:58:48.201"></status>
</kw>
<msg timestamp="20201030 10:58:48.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039037444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03906125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:47.864" endtime="20201030 10:58:48.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039037444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03906125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:48.210" endtime="20201030 10:58:48.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.229" endtime="20201030 10:58:48.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.856" endtime="20201030 10:58:48.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.852" endtime="20201030 10:58:48.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.246" level="INFO">${RESULT} = [{'diff': 2.3806000000001215e-05}, {'diff': 2.3749999999995997e-05}, {'diff': 2.4292000000002145e-05}, {'diff': 2.3972000000004046e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.365299999999848e-05...</msg>
<status status="PASS" starttime="20201030 10:58:48.237" endtime="20201030 10:58:48.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.257" level="INFO">${ACCURACY} = {'diff': [2.3806000000001215e-05, 2.3749999999995997e-05, 2.4292000000002145e-05, 2.3972000000004046e-05, 2.412499999999984e-05, 2.365299999999848e-05, 2.344499999999694e-05, 2.3971999999997107e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:48.248" endtime="20201030 10:58:48.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.268" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.266" endtime="20201030 10:58:48.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.273" level="INFO">VALUE: [2.3806000000001215e-05, 2.3749999999995997e-05, 2.4292000000002145e-05, 2.3972000000004046e-05, 2.412499999999984e-05, 2.365299999999848e-05, 2.344499999999694e-05, 2.3971999999997107e-05, 2.380500000000174e-05, 2.4151999999999507e-05, 2.362499999999934e-05, 2.413899999999941e-05, 2.362499999999934e-05, 2.362499999999934e-05, 2.345899999999651e-05, 2.4291999999995206e-05, 2.4290999999995733e-05, 2.411100000000027e-05, 2.3957999999997537e-05, 2.3457999999997037e-05, 2.397299999999658e-05, 2.3458000000003976e-05, 2.3820000000000785e-05, 2.412499999999984e-05, 2.3820000000000785e-05, 2.340300000000517e-05, 2.362499999999934e-05, 2.363900000000585e-05, 2.412499999999984e-05, 2.3485999999996177e-05, 2.380500000000174e-05, 2.3471999999996607e-05, 2.393099999999787e-05, 2.3792000000001645e-05, 2.411100000000027e-05, 2.3444000000004406e-05, 2.411100000000027e-05, 2.3777999999995136e-05, 2.3584000000000105e-05, 2.418100000000506e-05, 2.362500000000628e-05, 2.3541999999994456e-05, 2.344500000000388e-05, 2.4151999999999507e-05, 2.3292000000001145e-05, 2.3472000000003546e-05, 2.3444000000004406e-05, 2.4278000000002575e-05, 2.3778000000002075e-05, 2.413899999999941e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.270" endtime="20201030 10:58:48.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.259" endtime="20201030 10:58:48.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.286" endtime="20201030 10:58:48.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.281" endtime="20201030 10:58:48.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.279" endtime="20201030 10:58:48.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.799" endtime="20201030 10:58:48.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.798" endtime="20201030 10:58:48.311"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.333" endtime="20201030 10:58:48.349"></status>
</kw>
<msg timestamp="20201030 10:58:48.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.330" endtime="20201030 10:58:48.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.352" endtime="20201030 10:58:48.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.358" endtime="20201030 10:58:48.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.323" endtime="20201030 10:58:48.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.317" endtime="20201030 10:58:48.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.381" endtime="20201030 10:58:48.716"></status>
</kw>
<msg timestamp="20201030 10:58:48.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039205056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.378" endtime="20201030 10:58:48.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039205056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.726" endtime="20201030 10:58:48.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.744" endtime="20201030 10:58:48.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.371" endtime="20201030 10:58:48.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.366" endtime="20201030 10:58:48.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.761" level="INFO">${RESULT} = [{'diff': 3.120900000000426e-05}, {'diff': 3.105599999999459e-05}, {'diff': 3.0750000000003e-05}, {'diff': 3.126399999999613e-05}, {'diff': 3.12500000000035e-05}, {'diff': 3.0750000000003e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 10:58:48.753" endtime="20201030 10:58:48.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.771" level="INFO">${ACCURACY} = {'diff': [3.120900000000426e-05, 3.105599999999459e-05, 3.0750000000003e-05, 3.126399999999613e-05, 3.12500000000035e-05, 3.0750000000003e-05, 3.066600000000558e-05, 3.040199999999882e-05, 3.041699999...</msg>
<status status="PASS" starttime="20201030 10:58:48.763" endtime="20201030 10:58:48.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.781" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.779" endtime="20201030 10:58:48.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.787" level="INFO">VALUE: [3.120900000000426e-05, 3.105599999999459e-05, 3.0750000000003e-05, 3.126399999999613e-05, 3.12500000000035e-05, 3.0750000000003e-05, 3.066600000000558e-05, 3.040199999999882e-05, 3.0416999999997862e-05, 3.056900000000112e-05, 3.041599999999839e-05, 3.091699999999836e-05, 3.109700000000076e-05, 3.123600000000393e-05, 3.090199999999932e-05, 3.1054999999995114e-05, 3.0388999999998723e-05, 3.1098000000000237e-05, 3.1098000000000237e-05, 3.09170000000053e-05, 3.097200000000411e-05, 3.10700000000011e-05, 3.131900000000187e-05, 3.12500000000035e-05, 3.12500000000035e-05, 3.106900000000162e-05, 3.077800000000214e-05, 3.1082999999994254e-05, 3.12500000000035e-05, 3.041599999999839e-05, 3.0584000000000167e-05, 3.0402999999998293e-05, 3.10700000000011e-05, 3.058300000000069e-05, 3.090200000000626e-05, 3.070800000000429e-05, 3.0750000000003e-05, 3.074999999999606e-05, 3.041599999999839e-05, 3.123600000000393e-05, 3.043100000000437e-05, 3.090199999999932e-05, 3.059700000000026e-05, 3.0444000000004467e-05, 3.043100000000437e-05, 3.076400000000257e-05, 3.074999999999606e-05, 3.059700000000026e-05, 3.05700000000006e-05, 3.091699999999836e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.784" endtime="20201030 10:58:48.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.772" endtime="20201030 10:58:48.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.799" endtime="20201030 10:58:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.795" endtime="20201030 10:58:48.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.792" endtime="20201030 10:58:48.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.313" endtime="20201030 10:58:48.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.312" endtime="20201030 10:58:48.824"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.847" endtime="20201030 10:58:48.862"></status>
</kw>
<msg timestamp="20201030 10:58:48.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.843" endtime="20201030 10:58:48.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.865" endtime="20201030 10:58:48.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.871" endtime="20201030 10:58:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.836" endtime="20201030 10:58:48.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.830" endtime="20201030 10:58:48.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.896" endtime="20201030 10:58:49.228"></status>
</kw>
<msg timestamp="20201030 10:58:49.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039316458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.893" endtime="20201030 10:58:49.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039316458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.238" endtime="20201030 10:58:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.256" endtime="20201030 10:58:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.886" endtime="20201030 10:58:49.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.881" endtime="20201030 10:58:49.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.273" level="INFO">${RESULT} = [{'diff': 3.122199999999742e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.076400000000257e-05}, {'diff': 3.111100000000033e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:49.265" endtime="20201030 10:58:49.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.283" level="INFO">${ACCURACY} = {'diff': [3.122199999999742e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.076400000000257e-05, 3.111100000000033e-05, 3.0472000000003607e-05, 3.0416999999997862e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:49.276" endtime="20201030 10:58:49.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.294" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.291" endtime="20201030 10:58:49.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.299" level="INFO">VALUE: [3.122199999999742e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.076400000000257e-05, 3.111100000000033e-05, 3.0472000000003607e-05, 3.0416999999997862e-05, 3.072199999999692e-05, 3.059700000000026e-05, 3.123599999999699e-05, 3.122199999999742e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.076400000000257e-05, 3.090199999999932e-05, 3.073600000000343e-05, 3.12500000000035e-05, 3.074999999999606e-05, 3.05700000000006e-05, 3.12500000000035e-05, 3.108300000000119e-05, 3.1098000000000237e-05, 3.123599999999699e-05, 3.092999999999846e-05, 3.126400000000307e-05, 3.0763000000003093e-05, 3.077800000000214e-05, 3.0750000000003e-05, 3.111100000000033e-05, 3.067999999999821e-05, 3.126399999999613e-05, 3.091600000000583e-05, 3.091599999999889e-05, 3.076400000000257e-05, 3.106900000000162e-05, 3.080600000000128e-05, 3.1082999999994254e-05, 3.130599999999484e-05, 3.123699999999646e-05, 3.058300000000069e-05, 3.0430000000004898e-05, 3.106999999999416e-05, 3.058300000000069e-05, 3.080600000000128e-05, 3.0347000000000013e-05, 3.126400000000307e-05, 3.10700000000011e-05, 3.076399999999563e-05, 3.123599999999699e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.296" endtime="20201030 10:58:49.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.284" endtime="20201030 10:58:49.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.313" endtime="20201030 10:58:49.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.307" endtime="20201030 10:58:49.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.305" endtime="20201030 10:58:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.826" endtime="20201030 10:58:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.825" endtime="20201030 10:58:49.338"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.360" endtime="20201030 10:58:49.376"></status>
</kw>
<msg timestamp="20201030 10:58:49.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.357" endtime="20201030 10:58:49.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.379" endtime="20201030 10:58:49.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.385" endtime="20201030 10:58:49.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.350" endtime="20201030 10:58:49.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.344" endtime="20201030 10:58:49.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.408" endtime="20201030 10:58:49.741"></status>
</kw>
<msg timestamp="20201030 10:58:49.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039379264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.405" endtime="20201030 10:58:49.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039379264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.751" endtime="20201030 10:58:49.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.769" endtime="20201030 10:58:49.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.398" endtime="20201030 10:58:49.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.393" endtime="20201030 10:58:49.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.786" level="INFO">${RESULT} = [{'diff': 3.058300000000069e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.055600000000103e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.068099999999768e-05}, {'diff': 3.09170000000053e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:49.777" endtime="20201030 10:58:49.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.797" level="INFO">${ACCURACY} = {'diff': [3.058300000000069e-05, 3.087499999999965e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.068099999999768e-05, 3.09170000000053e-05, 3.0750000000003e-05, 3.0402999999998293e-05, 3.0403000...</msg>
<status status="PASS" starttime="20201030 10:58:49.788" endtime="20201030 10:58:49.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.808" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.805" endtime="20201030 10:58:49.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.813" level="INFO">VALUE: [3.058300000000069e-05, 3.087499999999965e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.068099999999768e-05, 3.09170000000053e-05, 3.0750000000003e-05, 3.0402999999998293e-05, 3.040300000000523e-05, 3.123600000000393e-05, 3.12500000000035e-05, 3.123599999999699e-05, 3.076399999999563e-05, 3.11249999999999e-05, 3.04170000000048e-05, 3.124999999999656e-05, 3.073599999999649e-05, 3.093099999999793e-05, 3.0582999999993754e-05, 3.133399999999398e-05, 3.038799999999925e-05, 3.1068999999994684e-05, 3.091699999999836e-05, 3.0750000000003e-05, 3.088899999999922e-05, 3.1082999999994254e-05, 3.058300000000069e-05, 3.0584000000000167e-05, 3.063900000000591e-05, 3.058300000000069e-05, 3.091599999999889e-05, 3.074999999999606e-05, 3.1096999999993824e-05, 3.092999999999846e-05, 3.052800000000189e-05, 3.0402999999998293e-05, 3.108300000000119e-05, 3.043100000000437e-05, 3.108300000000119e-05, 3.12500000000035e-05, 3.0750000000003e-05, 3.055500000000155e-05, 3.074999999999606e-05, 3.090299999999879e-05, 3.126399999999613e-05, 3.069399999999778e-05, 3.088899999999922e-05, 3.05700000000006e-05, 3.12500000000035e-05, 3.073599999999649e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.810" endtime="20201030 10:58:49.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.799" endtime="20201030 10:58:49.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.825" endtime="20201030 10:58:49.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.821" endtime="20201030 10:58:49.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.819" endtime="20201030 10:58:49.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.340" endtime="20201030 10:58:49.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.339" endtime="20201030 10:58:49.850"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.873" endtime="20201030 10:58:49.888"></status>
</kw>
<msg timestamp="20201030 10:58:49.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.870" endtime="20201030 10:58:49.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.891" endtime="20201030 10:58:49.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.898" endtime="20201030 10:58:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.862" endtime="20201030 10:58:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.857" endtime="20201030 10:58:49.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.921" endtime="20201030 10:58:50.254"></status>
</kw>
<msg timestamp="20201030 10:58:50.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039103514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03913425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:49.917" endtime="20201030 10:58:50.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039103514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03913425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:50.264" endtime="20201030 10:58:50.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.282" endtime="20201030 10:58:50.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.910" endtime="20201030 10:58:50.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.906" endtime="20201030 10:58:50.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.300" level="INFO">${RESULT} = [{'diff': 3.073600000000343e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.12500000000035e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.091699999999836e-05}, {'diff': 3.076400000000257e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:50.291" endtime="20201030 10:58:50.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.311" level="INFO">${ACCURACY} = {'diff': [3.073600000000343e-05, 3.0430999999997432e-05, 3.12500000000035e-05, 3.042999999999796e-05, 3.091699999999836e-05, 3.076400000000257e-05, 3.077700000000266e-05, 3.0430999999997432e-05, 3.074...</msg>
<status status="PASS" starttime="20201030 10:58:50.302" endtime="20201030 10:58:50.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.321" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.319" endtime="20201030 10:58:50.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.327" level="INFO">VALUE: [3.073600000000343e-05, 3.0430999999997432e-05, 3.12500000000035e-05, 3.042999999999796e-05, 3.091699999999836e-05, 3.076400000000257e-05, 3.077700000000266e-05, 3.0430999999997432e-05, 3.074999999999606e-05, 3.0847999999999987e-05, 3.069499999999725e-05, 3.0402999999998293e-05, 3.058300000000069e-05, 3.0402999999998293e-05, 3.126399999999613e-05, 3.090300000000573e-05, 3.0430000000004898e-05, 3.076399999999563e-05, 3.040199999999882e-05, 3.077800000000214e-05, 3.124999999999656e-05, 3.076399999999563e-05, 3.102800000000239e-05, 3.073599999999649e-05, 3.123599999999699e-05, 3.05700000000006e-05, 3.0402999999998293e-05, 3.11249999999999e-05, 3.0388999999998723e-05, 3.080600000000128e-05, 3.073599999999649e-05, 3.091599999999889e-05, 3.058300000000069e-05, 3.0430999999997432e-05, 3.106900000000162e-05, 3.063900000000591e-05, 3.06249999999994e-05, 3.109700000000076e-05, 3.0416000000005328e-05, 3.108300000000119e-05, 3.058300000000069e-05, 3.086100000000008e-05, 3.106900000000162e-05, 3.119399999999828e-05, 3.10700000000011e-05, 3.076399999999563e-05, 3.061099999999983e-05, 3.040300000000523e-05, 3.087499999999965e-05, 3.0750000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.324" endtime="20201030 10:58:50.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.312" endtime="20201030 10:58:50.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.339" endtime="20201030 10:58:50.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.335" endtime="20201030 10:58:50.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.332" endtime="20201030 10:58:50.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.852" endtime="20201030 10:58:50.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.851" endtime="20201030 10:58:50.364"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.386" endtime="20201030 10:58:50.402"></status>
</kw>
<msg timestamp="20201030 10:58:50.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.383" endtime="20201030 10:58:50.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.405" endtime="20201030 10:58:50.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.412" endtime="20201030 10:58:50.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.376" endtime="20201030 10:58:50.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.370" endtime="20201030 10:58:50.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.434" endtime="20201030 10:58:50.770"></status>
</kw>
<msg timestamp="20201030 10:58:50.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039094083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039124986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.431" endtime="20201030 10:58:50.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039094083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039124986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.779" endtime="20201030 10:58:50.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.798" endtime="20201030 10:58:50.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.424" endtime="20201030 10:58:50.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.420" endtime="20201030 10:58:50.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.815" level="INFO">${RESULT} = [{'diff': 3.090299999999879e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.127800000000264e-05}, {'diff': 3.124999999999656e-05}, {'diff': 3.0750000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:50.806" endtime="20201030 10:58:50.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.824" level="INFO">${ACCURACY} = {'diff': [3.090299999999879e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.127800000000264e-05, 3.124999999999656e-05, 3.0750000000003e-05, 3.0430999999997432e-05, 3.123600000000393e-05, 3.1249...</msg>
<status status="PASS" starttime="20201030 10:58:50.817" endtime="20201030 10:58:50.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.835" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.833" endtime="20201030 10:58:50.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.840" level="INFO">VALUE: [3.090299999999879e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.127800000000264e-05, 3.124999999999656e-05, 3.0750000000003e-05, 3.0430999999997432e-05, 3.123600000000393e-05, 3.124999999999656e-05, 3.0597999999999737e-05, 3.0750000000003e-05, 3.056900000000112e-05, 3.0750000000003e-05, 3.05700000000006e-05, 3.0374999999999153e-05, 3.12500000000035e-05, 3.059700000000026e-05, 3.12500000000035e-05, 3.09300000000054e-05, 3.0388999999998723e-05, 3.130599999999484e-05, 3.0416999999997862e-05, 3.040300000000523e-05, 3.090299999999879e-05, 3.105599999999459e-05, 3.108300000000119e-05, 3.074999999999606e-05, 3.041599999999839e-05, 3.108400000000067e-05, 3.0402999999998293e-05, 3.059700000000026e-05, 3.09170000000053e-05, 3.0416999999997862e-05, 3.058300000000069e-05, 3.045900000000351e-05, 3.094500000000444e-05, 3.056900000000112e-05, 3.04170000000048e-05, 3.073600000000343e-05, 3.076400000000257e-05, 3.059700000000026e-05, 3.080600000000128e-05, 3.12500000000035e-05, 3.1068999999994684e-05, 3.074999999999606e-05, 3.094500000000444e-05, 3.090299999999879e-05, 3.042999999999796e-05, 3.05700000000006e-05, 3.120899999999732e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.837" endtime="20201030 10:58:50.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.826" endtime="20201030 10:58:50.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.853" endtime="20201030 10:58:50.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.848" endtime="20201030 10:58:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.846" endtime="20201030 10:58:50.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.366" endtime="20201030 10:58:50.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.365" endtime="20201030 10:58:50.878"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.900" endtime="20201030 10:58:50.915"></status>
</kw>
<msg timestamp="20201030 10:58:50.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.897" endtime="20201030 10:58:50.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.919" endtime="20201030 10:58:50.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.925" endtime="20201030 10:58:50.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.890" endtime="20201030 10:58:50.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.884" endtime="20201030 10:58:50.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.948" endtime="20201030 10:58:51.283"></status>
</kw>
<msg timestamp="20201030 10:58:51.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.945" endtime="20201030 10:58:51.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039232458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.292" endtime="20201030 10:58:51.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.311" endtime="20201030 10:58:51.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.938" endtime="20201030 10:58:51.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.933" endtime="20201030 10:58:51.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.328" level="INFO">${RESULT} = [{'diff': 3.092999999999846e-05}, {'diff': 3.076400000000257e-05}, {'diff': 3.092999999999846e-05}, {'diff': 3.126399999999613e-05}, {'diff': 3.076399999999563e-05}, {'diff': 3.102800000000239e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:51.319" endtime="20201030 10:58:51.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.337" level="INFO">${ACCURACY} = {'diff': [3.092999999999846e-05, 3.076400000000257e-05, 3.092999999999846e-05, 3.126399999999613e-05, 3.076399999999563e-05, 3.102800000000239e-05, 3.091699999999836e-05, 3.042999999999796e-05, 3.0584...</msg>
<status status="PASS" starttime="20201030 10:58:51.330" endtime="20201030 10:58:51.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.348" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.345" endtime="20201030 10:58:51.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.353" level="INFO">VALUE: [3.092999999999846e-05, 3.076400000000257e-05, 3.092999999999846e-05, 3.126399999999613e-05, 3.076399999999563e-05, 3.102800000000239e-05, 3.091699999999836e-05, 3.042999999999796e-05, 3.0584000000000167e-05, 3.058300000000069e-05, 3.073599999999649e-05, 3.073699999999596e-05, 3.1082999999994254e-05, 3.040199999999882e-05, 3.10700000000011e-05, 3.12500000000035e-05, 3.0750000000003e-05, 3.074999999999606e-05, 3.126400000000307e-05, 3.069400000000472e-05, 3.073599999999649e-05, 3.04170000000048e-05, 3.090199999999932e-05, 3.059700000000026e-05, 3.073600000000343e-05, 3.1068999999994684e-05, 3.12500000000035e-05, 3.1096999999993824e-05, 3.043100000000437e-05, 3.055600000000103e-05, 3.0750000000003e-05, 3.047199999999667e-05, 3.0750000000003e-05, 3.0584000000000167e-05, 3.124999999999656e-05, 3.04170000000048e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.09170000000053e-05, 3.091599999999889e-05, 3.104200000000196e-05, 3.12500000000035e-05, 3.091599999999889e-05, 3.0568999999994184e-05, 3.0512999999995905e-05, 3.098600000000368e-05, 3.126400000000307e-05, 3.073599999999649e-05, 3.0416999999997862e-05, 3.101400000000282e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.350" endtime="20201030 10:58:51.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.339" endtime="20201030 10:58:51.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.371" endtime="20201030 10:58:51.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.361" endtime="20201030 10:58:51.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.359" endtime="20201030 10:58:51.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.880" endtime="20201030 10:58:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.879" endtime="20201030 10:58:51.396"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.419" endtime="20201030 10:58:51.434"></status>
</kw>
<msg timestamp="20201030 10:58:51.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.415" endtime="20201030 10:58:51.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.438" endtime="20201030 10:58:51.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.444" endtime="20201030 10:58:51.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.408" endtime="20201030 10:58:51.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.402" endtime="20201030 10:58:51.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.467" endtime="20201030 10:58:51.802"></status>
</kw>
<msg timestamp="20201030 10:58:51.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.464" endtime="20201030 10:58:51.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.811" endtime="20201030 10:58:51.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.830" endtime="20201030 10:58:51.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.457" endtime="20201030 10:58:51.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.452" endtime="20201030 10:58:51.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.847" level="INFO">${RESULT} = [{'diff': 3.092999999999846e-05}, {'diff': 3.04579999999971e-05}, {'diff': 3.091699999999836e-05}, {'diff': 3.12500000000035e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.126400000000307e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:51.838" endtime="20201030 10:58:51.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.857" level="INFO">${ACCURACY} = {'diff': [3.092999999999846e-05, 3.04579999999971e-05, 3.091699999999836e-05, 3.12500000000035e-05, 3.11249999999999e-05, 3.126400000000307e-05, 3.0402999999998293e-05, 3.095900000000401e-05, 3.127700...</msg>
<status status="PASS" starttime="20201030 10:58:51.849" endtime="20201030 10:58:51.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.868" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.866" endtime="20201030 10:58:51.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.874" level="INFO">VALUE: [3.092999999999846e-05, 3.04579999999971e-05, 3.091699999999836e-05, 3.12500000000035e-05, 3.11249999999999e-05, 3.126400000000307e-05, 3.0402999999998293e-05, 3.095900000000401e-05, 3.127700000000316e-05, 3.061099999999983e-05, 3.094399999999803e-05, 3.043100000000437e-05, 3.0374999999999153e-05, 3.088900000000616e-05, 3.111100000000033e-05, 3.0750000000003e-05, 3.092999999999846e-05, 3.127800000000264e-05, 3.0347000000000013e-05, 3.122199999999742e-05, 3.126400000000307e-05, 3.040199999999882e-05, 3.055599999999409e-05, 3.044399999999753e-05, 3.0750000000003e-05, 3.0597999999999737e-05, 3.052800000000189e-05, 3.074999999999606e-05, 3.088899999999922e-05, 3.081900000000137e-05, 3.099999999999631e-05, 3.081900000000137e-05, 3.0430000000004898e-05, 3.042999999999796e-05, 3.058300000000069e-05, 3.0762999999996155e-05, 3.1111999999999806e-05, 3.12500000000035e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.111100000000033e-05, 3.123600000000393e-05, 3.0513999999995378e-05, 3.113899999999947e-05, 3.074999999999606e-05, 3.076400000000257e-05, 3.0597999999999737e-05, 3.0750000000003e-05, 3.079200000000171e-05, 3.126400000000307e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.871" endtime="20201030 10:58:51.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.859" endtime="20201030 10:58:51.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.891" endtime="20201030 10:58:51.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.887" endtime="20201030 10:58:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.884" endtime="20201030 10:58:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.398" endtime="20201030 10:58:51.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.397" endtime="20201030 10:58:51.916"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.939" endtime="20201030 10:58:51.954"></status>
</kw>
<msg timestamp="20201030 10:58:51.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.935" endtime="20201030 10:58:51.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.958" endtime="20201030 10:58:51.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.964" endtime="20201030 10:58:51.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.928" endtime="20201030 10:58:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.923" endtime="20201030 10:58:51.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.987" endtime="20201030 10:58:52.320"></status>
</kw>
<msg timestamp="20201030 10:58:52.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039127556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.984" endtime="20201030 10:58:52.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039127556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.329" endtime="20201030 10:58:52.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.348" endtime="20201030 10:58:52.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.977" endtime="20201030 10:58:52.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.972" endtime="20201030 10:58:52.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.365" level="INFO">${RESULT} = [{'diff': 3.732000000000041e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.8319000000001935e-05}, {'diff': 3.769400000000478e-05}, {'diff': 3.806999999999422e-05}, {'diff': 3.8375000000000214e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:52.356" endtime="20201030 10:58:52.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.376" level="INFO">${ACCURACY} = {'diff': [3.732000000000041e-05, 3.7847000000000575e-05, 3.8319000000001935e-05, 3.769400000000478e-05, 3.806999999999422e-05, 3.8375000000000214e-05, 3.7874999999999714e-05, 3.8082999999994316e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:58:52.367" endtime="20201030 10:58:52.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.386" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.384" endtime="20201030 10:58:52.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.392" level="INFO">VALUE: [3.732000000000041e-05, 3.7847000000000575e-05, 3.8319000000001935e-05, 3.769400000000478e-05, 3.806999999999422e-05, 3.8375000000000214e-05, 3.7874999999999714e-05, 3.8082999999994316e-05, 3.773600000000349e-05, 3.769399999999784e-05, 3.7360999999999644e-05, 3.801399999999594e-05, 3.769500000000425e-05, 3.7861000000000145e-05, 3.7569000000001185e-05, 3.8347000000001075e-05, 3.769399999999784e-05, 3.76659999999987e-05, 3.752800000000195e-05, 3.8026999999996036e-05, 3.8208999999997384e-05, 3.826400000000313e-05, 3.802800000000245e-05, 3.769399999999784e-05, 3.801400000000288e-05, 3.7902999999998854e-05, 3.7861000000000145e-05, 3.817999999999877e-05, 3.7874999999999714e-05, 3.7694999999997314e-05, 3.804199999999508e-05, 3.757000000000066e-05, 3.772200000000392e-05, 3.7374999999999214e-05, 3.754200000000152e-05, 3.817999999999877e-05, 3.7374999999999214e-05, 3.752799999999501e-05, 3.802799999999551e-05, 3.7861000000000145e-05, 3.7777000000002725e-05, 3.7360999999999644e-05, 3.819400000000528e-05, 3.736199999999912e-05, 3.801399999999594e-05, 3.7638999999999034e-05, 3.765300000000554e-05, 3.752799999999501e-05, 3.8180999999998244e-05, 3.817999999999877e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.389" endtime="20201030 10:58:52.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.377" endtime="20201030 10:58:52.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.404" endtime="20201030 10:58:52.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.400" endtime="20201030 10:58:52.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.397" endtime="20201030 10:58:52.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.918" endtime="20201030 10:58:52.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.917" endtime="20201030 10:58:52.429"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.452" endtime="20201030 10:58:52.468"></status>
</kw>
<msg timestamp="20201030 10:58:52.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.449" endtime="20201030 10:58:52.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.471" endtime="20201030 10:58:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.477" endtime="20201030 10:58:52.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.441" endtime="20201030 10:58:52.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.435" endtime="20201030 10:58:52.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.500" endtime="20201030 10:58:52.838"></status>
</kw>
<msg timestamp="20201030 10:58:52.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039412236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.497" endtime="20201030 10:58:52.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039412236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.848" endtime="20201030 10:58:52.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.866" endtime="20201030 10:58:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.490" endtime="20201030 10:58:52.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.485" endtime="20201030 10:58:52.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.883" level="INFO">${RESULT} = [{'diff': 3.802800000000245e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.770900000000382e-05}, {'diff': 3.8040999999995606e-05}, {'diff': 3.8388999999999784e-05}, {'diff': 3.7888999999999284e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:52.874" endtime="20201030 10:58:52.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.892" level="INFO">${ACCURACY} = {'diff': [3.802800000000245e-05, 3.754200000000152e-05, 3.770900000000382e-05, 3.8040999999995606e-05, 3.8388999999999784e-05, 3.7888999999999284e-05, 3.804200000000202e-05, 3.808400000000073e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 10:58:52.885" endtime="20201030 10:58:52.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.903" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.901" endtime="20201030 10:58:52.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.909" level="INFO">VALUE: [3.802800000000245e-05, 3.754200000000152e-05, 3.770900000000382e-05, 3.8040999999995606e-05, 3.8388999999999784e-05, 3.7888999999999284e-05, 3.804200000000202e-05, 3.808400000000073e-05, 3.826400000000313e-05, 3.749999999999587e-05, 3.734799999999955e-05, 3.770800000000435e-05, 3.7708999999996884e-05, 3.7540999999995106e-05, 3.769399999999784e-05, 3.801399999999594e-05, 3.747200000000367e-05, 3.769399999999784e-05, 3.770900000000382e-05, 3.8027000000002975e-05, 3.7916999999998424e-05, 3.7902999999998854e-05, 3.819400000000528e-05, 3.7527000000002475e-05, 3.754200000000152e-05, 3.7569000000001185e-05, 3.7541000000002045e-05, 3.755600000000109e-05, 3.7555000000001615e-05, 3.8402999999999354e-05, 3.7861000000000145e-05, 3.767999999999827e-05, 3.820799999999791e-05, 3.7902999999998854e-05, 3.7374999999999214e-05, 3.820799999999791e-05, 3.7874999999999714e-05, 3.772200000000392e-05, 3.784800000000005e-05, 3.772200000000392e-05, 3.8375000000000214e-05, 3.802800000000245e-05, 3.754200000000152e-05, 3.769399999999784e-05, 3.769500000000425e-05, 3.755600000000109e-05, 3.7874999999999714e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.755600000000109e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.906" endtime="20201030 10:58:52.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.894" endtime="20201030 10:58:52.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.921" endtime="20201030 10:58:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.917" endtime="20201030 10:58:52.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.914" endtime="20201030 10:58:52.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.431" endtime="20201030 10:58:52.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.430" endtime="20201030 10:58:52.946"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.968" endtime="20201030 10:58:52.986"></status>
</kw>
<msg timestamp="20201030 10:58:52.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.965" endtime="20201030 10:58:52.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.989" endtime="20201030 10:58:52.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.995" endtime="20201030 10:58:52.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.958" endtime="20201030 10:58:53.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.952" endtime="20201030 10:58:53.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.019" endtime="20201030 10:58:53.354"></status>
</kw>
<msg timestamp="20201030 10:58:53.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040688611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.015" endtime="20201030 10:58:53.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040688611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.363" endtime="20201030 10:58:53.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.382" endtime="20201030 10:58:53.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.008" endtime="20201030 10:58:53.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.004" endtime="20201030 10:58:53.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.401" level="INFO">${RESULT} = [{'diff': 3.7347000000000075e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.770799999999741e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.802800000000245e-05}, {'diff': 3.752799999999501e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:53.392" endtime="20201030 10:58:53.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.411" level="INFO">${ACCURACY} = {'diff': [3.7347000000000075e-05, 3.7874999999999714e-05, 3.770799999999741e-05, 3.754200000000152e-05, 3.802800000000245e-05, 3.752799999999501e-05, 3.802799999999551e-05, 3.8333000000001505e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 10:58:53.403" endtime="20201030 10:58:53.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.422" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.419" endtime="20201030 10:58:53.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.427" level="INFO">VALUE: [3.7347000000000075e-05, 3.7874999999999714e-05, 3.770799999999741e-05, 3.754200000000152e-05, 3.802800000000245e-05, 3.752799999999501e-05, 3.802799999999551e-05, 3.8333000000001505e-05, 3.7694999999997314e-05, 3.7374999999999214e-05, 3.7888999999999284e-05, 3.7680999999997744e-05, 3.792999999999852e-05, 3.8180999999998244e-05, 3.754200000000152e-05, 3.7874999999999714e-05, 3.799999999999637e-05, 3.815199999999963e-05, 3.7874999999999714e-05, 3.8360999999993706e-05, 3.769500000000425e-05, 3.769400000000478e-05, 3.7526999999995536e-05, 3.7680999999997744e-05, 3.776400000000263e-05, 3.8124999999999964e-05, 3.7874999999999714e-05, 3.8180999999998244e-05, 3.786199999999962e-05, 3.802800000000245e-05, 3.7861000000000145e-05, 3.7847000000000575e-05, 3.819399999999834e-05, 3.805600000000159e-05, 3.8055000000002115e-05, 3.7319000000000935e-05, 3.7318999999993996e-05, 3.754200000000152e-05, 3.801400000000288e-05, 3.825000000000356e-05, 3.7833000000001005e-05, 3.766700000000511e-05, 3.805600000000159e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.769500000000425e-05, 3.7847000000000575e-05, 3.7610999999999895e-05, 3.7861000000000145e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.424" endtime="20201030 10:58:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.412" endtime="20201030 10:58:53.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.441" endtime="20201030 10:58:53.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.435" endtime="20201030 10:58:53.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.433" endtime="20201030 10:58:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.948" endtime="20201030 10:58:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.947" endtime="20201030 10:58:53.467"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.491" endtime="20201030 10:58:53.508"></status>
</kw>
<msg timestamp="20201030 10:58:53.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.487" endtime="20201030 10:58:53.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.512" endtime="20201030 10:58:53.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.518" endtime="20201030 10:58:53.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.480" endtime="20201030 10:58:53.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.474" endtime="20201030 10:58:53.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.541" endtime="20201030 10:58:53.878"></status>
</kw>
<msg timestamp="20201030 10:58:53.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041426181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.538" endtime="20201030 10:58:53.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041426181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.887" endtime="20201030 10:58:53.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.906" endtime="20201030 10:58:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.531" endtime="20201030 10:58:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.526" endtime="20201030 10:58:53.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.923" level="INFO">${RESULT} = [{'diff': 3.804200000000202e-05}, {'diff': 3.7569000000001185e-05}, {'diff': 3.767999999999827e-05}, {'diff': 3.7902999999998854e-05}, {'diff': 3.7347000000000075e-05}, {'diff': 3.766700000000511e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:53.915" endtime="20201030 10:58:53.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.934" level="INFO">${ACCURACY} = {'diff': [3.804200000000202e-05, 3.7569000000001185e-05, 3.767999999999827e-05, 3.7902999999998854e-05, 3.7347000000000075e-05, 3.766700000000511e-05, 3.772200000000392e-05, 3.7888999999999284e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:53.925" endtime="20201030 10:58:53.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.945" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.942" endtime="20201030 10:58:53.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.950" level="INFO">VALUE: [3.804200000000202e-05, 3.7569000000001185e-05, 3.767999999999827e-05, 3.7902999999998854e-05, 3.7347000000000075e-05, 3.766700000000511e-05, 3.772200000000392e-05, 3.7888999999999284e-05, 3.819400000000528e-05, 3.736199999999912e-05, 3.752800000000195e-05, 3.8361000000000645e-05, 3.7360999999999644e-05, 3.7847000000000575e-05, 3.752800000000195e-05, 3.7388999999998784e-05, 3.8222999999996954e-05, 3.734799999999955e-05, 3.801400000000288e-05, 3.770800000000435e-05, 3.820800000000485e-05, 3.754200000000152e-05, 3.767999999999827e-05, 3.819399999999834e-05, 3.7388999999998784e-05, 3.7374999999999214e-05, 3.7360999999999644e-05, 3.804199999999508e-05, 3.7360999999999644e-05, 3.804199999999508e-05, 3.820799999999791e-05, 3.8360999999993706e-05, 3.757000000000066e-05, 3.752800000000195e-05, 3.772199999999698e-05, 3.802800000000245e-05, 3.8375000000000214e-05, 3.7916999999998424e-05, 3.8346999999994136e-05, 3.8041000000002545e-05, 3.8040999999995606e-05, 3.802800000000245e-05, 3.786199999999962e-05, 3.8347000000001075e-05, 3.7861000000000145e-05, 3.8152999999999104e-05, 3.7347000000000075e-05, 3.752800000000195e-05, 3.7374999999999214e-05, 3.7513000000002905e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.947" endtime="20201030 10:58:53.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.936" endtime="20201030 10:58:53.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.962" endtime="20201030 10:58:53.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.958" endtime="20201030 10:58:53.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.956" endtime="20201030 10:58:53.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.469" endtime="20201030 10:58:53.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.468" endtime="20201030 10:58:53.987"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.010" endtime="20201030 10:58:54.026"></status>
</kw>
<msg timestamp="20201030 10:58:54.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.007" endtime="20201030 10:58:54.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.029" endtime="20201030 10:58:54.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.035" endtime="20201030 10:58:54.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.000" endtime="20201030 10:58:54.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.994" endtime="20201030 10:58:54.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.058" endtime="20201030 10:58:54.394"></status>
</kw>
<msg timestamp="20201030 10:58:54.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039352028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.055" endtime="20201030 10:58:54.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039352028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.403" endtime="20201030 10:58:54.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.422" endtime="20201030 10:58:54.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.048" endtime="20201030 10:58:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.043" endtime="20201030 10:58:54.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.439" level="INFO">${RESULT} = [{'diff': 3.8388999999999784e-05}, {'diff': 3.7527000000002475e-05}, {'diff': 3.817999999999877e-05}, {'diff': 3.7318999999993996e-05}, {'diff': 3.7555000000001615e-05}, {'diff': 3.752800000000195e-05...</msg>
<status status="PASS" starttime="20201030 10:58:54.430" endtime="20201030 10:58:54.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.450" level="INFO">${ACCURACY} = {'diff': [3.8388999999999784e-05, 3.7527000000002475e-05, 3.817999999999877e-05, 3.7318999999993996e-05, 3.7555000000001615e-05, 3.752800000000195e-05, 3.7263000000002655e-05, 3.748700000000271e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:58:54.441" endtime="20201030 10:58:54.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.461" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.459" endtime="20201030 10:58:54.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.466" level="INFO">VALUE: [3.8388999999999784e-05, 3.7527000000002475e-05, 3.817999999999877e-05, 3.7318999999993996e-05, 3.7555000000001615e-05, 3.752800000000195e-05, 3.7263000000002655e-05, 3.748700000000271e-05, 3.8375000000000214e-05, 3.770800000000435e-05, 3.8027000000002975e-05, 3.7347000000000075e-05, 3.823600000000399e-05, 3.799999999999637e-05, 3.7624999999999464e-05, 3.802800000000245e-05, 3.8040999999995606e-05, 3.802800000000245e-05, 3.737500000000615e-05, 3.8319000000001935e-05, 3.820900000000432e-05, 3.817999999999877e-05, 3.8416999999998924e-05, 3.7874999999999714e-05, 3.7861000000000145e-05, 3.7555000000001615e-05, 3.752800000000195e-05, 3.7847000000000575e-05, 3.8388999999999784e-05, 3.7527000000002475e-05, 3.75979999999998e-05, 3.8026999999996036e-05, 3.8375000000000214e-05, 3.801399999999594e-05, 3.754199999999458e-05, 3.770799999999741e-05, 3.822199999999748e-05, 3.804200000000202e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.819399999999834e-05, 3.7360999999999644e-05, 3.755600000000109e-05, 3.8208999999997384e-05, 3.7652999999998604e-05, 3.7888999999999284e-05, 3.7360999999999644e-05, 3.802800000000245e-05, 3.820800000000485e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.463" endtime="20201030 10:58:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.452" endtime="20201030 10:58:54.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.479" endtime="20201030 10:58:54.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.474" endtime="20201030 10:58:54.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.472" endtime="20201030 10:58:54.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.990" endtime="20201030 10:58:54.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.988" endtime="20201030 10:58:54.504"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.526" endtime="20201030 10:58:54.542"></status>
</kw>
<msg timestamp="20201030 10:58:54.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.523" endtime="20201030 10:58:54.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.545" endtime="20201030 10:58:54.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.551" endtime="20201030 10:58:54.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.516" endtime="20201030 10:58:54.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.510" endtime="20201030 10:58:54.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.574" endtime="20201030 10:58:54.910"></status>
</kw>
<msg timestamp="20201030 10:58:54.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039219625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0392575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:54.571" endtime="20201030 10:58:54.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039219625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0392575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:54.919" endtime="20201030 10:58:54.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.938" endtime="20201030 10:58:54.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.564" endtime="20201030 10:58:54.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.559" endtime="20201030 10:58:54.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.955" level="INFO">${RESULT} = [{'diff': 3.7874999999999714e-05}, {'diff': 3.772199999999698e-05}, {'diff': 3.741599999999845e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.823599999999705e-05}, {'diff': 3.76659999999987e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:54.946" endtime="20201030 10:58:54.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.964" level="INFO">${ACCURACY} = {'diff': [3.7874999999999714e-05, 3.772199999999698e-05, 3.741599999999845e-05, 3.7847000000000575e-05, 3.823599999999705e-05, 3.76659999999987e-05, 3.824999999999662e-05, 3.750000000000281e-05, 3.824...</msg>
<status status="PASS" starttime="20201030 10:58:54.957" endtime="20201030 10:58:54.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.975" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.973" endtime="20201030 10:58:54.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.980" level="INFO">VALUE: [3.7874999999999714e-05, 3.772199999999698e-05, 3.741599999999845e-05, 3.7847000000000575e-05, 3.823599999999705e-05, 3.76659999999987e-05, 3.824999999999662e-05, 3.750000000000281e-05, 3.824999999999662e-05, 3.7888999999999284e-05, 3.7374999999999214e-05, 3.8222999999996954e-05, 3.800000000000331e-05, 3.7569000000001185e-05, 3.769399999999784e-05, 3.7874999999999714e-05, 3.757000000000066e-05, 3.7874999999999714e-05, 3.804200000000202e-05, 3.819500000000475e-05, 3.826400000000313e-05, 3.7874999999999714e-05, 3.72780000000017e-05, 3.7374999999999214e-05, 3.769399999999784e-05, 3.7694999999997314e-05, 3.802800000000245e-05, 3.7388999999998784e-05, 3.7694999999997314e-05, 3.755600000000109e-05, 3.7708999999996884e-05, 3.754199999999458e-05, 3.7638999999999034e-05, 3.752800000000195e-05, 3.7569000000001185e-05, 3.8041000000002545e-05, 3.7374999999999214e-05, 3.801400000000288e-05, 3.8361000000000645e-05, 3.736199999999912e-05, 3.7916999999998424e-05, 3.825000000000356e-05, 3.770799999999741e-05, 3.7861000000000145e-05, 3.8055000000002115e-05, 3.834800000000055e-05, 3.748600000000324e-05, 3.752800000000195e-05, 3.788799999999981e-05, 3.772199999999698e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.977" endtime="20201030 10:58:54.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.966" endtime="20201030 10:58:54.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.993" endtime="20201030 10:58:55.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.988" endtime="20201030 10:58:55.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.986" endtime="20201030 10:58:55.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.506" endtime="20201030 10:58:55.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.505" endtime="20201030 10:58:55.018"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.040" endtime="20201030 10:58:55.057"></status>
</kw>
<msg timestamp="20201030 10:58:55.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.037" endtime="20201030 10:58:55.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.061" endtime="20201030 10:58:55.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.067" endtime="20201030 10:58:55.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.030" endtime="20201030 10:58:55.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.024" endtime="20201030 10:58:55.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.090" endtime="20201030 10:58:55.422"></status>
</kw>
<msg timestamp="20201030 10:58:55.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040701181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.087" endtime="20201030 10:58:55.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040701181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.432" endtime="20201030 10:58:55.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.450" endtime="20201030 10:58:55.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.080" endtime="20201030 10:58:55.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.075" endtime="20201030 10:58:55.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.467" level="INFO">${RESULT} = [{'diff': 3.7861000000000145e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.802799999999551e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.802800000000245e-05...</msg>
<status status="PASS" starttime="20201030 10:58:55.459" endtime="20201030 10:58:55.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.477" level="INFO">${ACCURACY} = {'diff': [3.7861000000000145e-05, 3.8361000000000645e-05, 3.7388999999998784e-05, 3.802799999999551e-05, 3.7388999999998784e-05, 3.802800000000245e-05, 3.7360999999999644e-05, 3.7527000000002475e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:55.470" endtime="20201030 10:58:55.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.487" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:55.485" endtime="20201030 10:58:55.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.493" level="INFO">VALUE: [3.7861000000000145e-05, 3.8361000000000645e-05, 3.7388999999998784e-05, 3.802799999999551e-05, 3.7388999999998784e-05, 3.802800000000245e-05, 3.7360999999999644e-05, 3.7527000000002475e-05, 3.769399999999784e-05, 3.7624999999999464e-05, 3.801399999999594e-05, 3.804199999999508e-05, 3.805600000000159e-05, 3.770800000000435e-05, 3.745900000000357e-05, 3.772300000000339e-05, 3.7888999999999284e-05, 3.754199999999458e-05, 3.8194999999997814e-05, 3.77780000000022e-05, 3.805599999999465e-05, 3.8041000000002545e-05, 3.754200000000152e-05, 3.757000000000066e-05, 3.822200000000442e-05, 3.8361000000000645e-05, 3.8388999999999784e-05, 3.824999999999662e-05, 3.805599999999465e-05, 3.804199999999508e-05, 3.7861000000000145e-05, 3.754199999999458e-05, 3.770799999999741e-05, 3.820799999999791e-05, 3.804200000000202e-05, 3.805600000000159e-05, 3.799999999999637e-05, 3.8180999999998244e-05, 3.757000000000066e-05, 3.7888999999999284e-05, 3.802800000000245e-05, 3.7541000000002045e-05, 3.822200000000442e-05, 3.7388999999998784e-05, 3.8041000000002545e-05, 3.7874999999999714e-05, 3.769399999999784e-05, 3.804200000000202e-05, 3.8208999999997384e-05, 3.800000000000331e-05]</msg>
<status status="PASS" starttime="20201030 10:58:55.490" endtime="20201030 10:58:55.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.478" endtime="20201030 10:58:55.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:55.507" endtime="20201030 10:58:55.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.501" endtime="20201030 10:58:55.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.499" endtime="20201030 10:58:55.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.020" endtime="20201030 10:58:55.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.019" endtime="20201030 10:58:55.532"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.554" endtime="20201030 10:58:55.570"></status>
</kw>
<msg timestamp="20201030 10:58:55.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.551" endtime="20201030 10:58:55.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.573" endtime="20201030 10:58:55.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.580" endtime="20201030 10:58:55.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.544" endtime="20201030 10:58:55.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.538" endtime="20201030 10:58:55.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.603" endtime="20201030 10:58:55.937"></status>
</kw>
<msg timestamp="20201030 10:58:55.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039003542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039048514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.599" endtime="20201030 10:58:55.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039003542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039048514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.946" endtime="20201030 10:58:55.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.965" endtime="20201030 10:58:55.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.592" endtime="20201030 10:58:55.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.588" endtime="20201030 10:58:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.982" level="INFO">${RESULT} = [{'diff': 4.497199999999729e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.5361000000000706e-05}, {'diff': 4.4333000000000566e-05}, {'diff': 4.4652999999998666e-05}, {'diff': 4.495799999999772e-05...</msg>
<status status="PASS" starttime="20201030 10:58:55.973" endtime="20201030 10:58:55.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.993" level="INFO">${ACCURACY} = {'diff': [4.497199999999729e-05, 4.5138999999999596e-05, 4.5361000000000706e-05, 4.4333000000000566e-05, 4.4652999999998666e-05, 4.495799999999772e-05, 4.4305000000001427e-05, 4.4638999999999096e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:55.984" endtime="20201030 10:58:55.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.004" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.001" endtime="20201030 10:58:56.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.009" level="INFO">VALUE: [4.497199999999729e-05, 4.5138999999999596e-05, 4.5361000000000706e-05, 4.4333000000000566e-05, 4.4652999999998666e-05, 4.495799999999772e-05, 4.4305000000001427e-05, 4.4638999999999096e-05, 4.445800000000416e-05, 4.4973000000003704e-05, 4.482000000000097e-05, 4.451400000000244e-05, 4.472199999999704e-05, 4.4874999999999776e-05, 4.5181000000005245e-05, 4.449999999999593e-05, 4.450000000000287e-05, 4.481999999999403e-05, 4.4888999999999346e-05, 4.500000000000337e-05, 4.4819000000001497e-05, 4.477799999999532e-05, 4.4680999999997806e-05, 4.4666999999998236e-05, 4.498599999999686e-05, 4.5166999999998736e-05, 4.501300000000347e-05, 4.4652999999998666e-05, 4.466599999999876e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.5347000000001136e-05, 4.451400000000244e-05, 4.472200000000398e-05, 4.497199999999729e-05, 4.5152999999999166e-05, 4.450000000000287e-05, 4.4237000000002524e-05, 4.497200000000423e-05, 4.49860000000038e-05, 4.45269999999956e-05, 4.5138999999999596e-05, 4.4319000000000996e-05, 4.5069000000001747e-05, 4.5152999999999166e-05, 4.515199999999969e-05, 4.499999999999643e-05, 4.530500000000243e-05, 4.479099999999542e-05, 4.4319000000000996e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.006" endtime="20201030 10:58:56.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.994" endtime="20201030 10:58:56.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.021" endtime="20201030 10:58:56.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.017" endtime="20201030 10:58:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.015" endtime="20201030 10:58:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.534" endtime="20201030 10:58:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.533" endtime="20201030 10:58:56.046"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.069" endtime="20201030 10:58:56.086"></status>
</kw>
<msg timestamp="20201030 10:58:56.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.066" endtime="20201030 10:58:56.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.090" endtime="20201030 10:58:56.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.096" endtime="20201030 10:58:56.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.059" endtime="20201030 10:58:56.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.053" endtime="20201030 10:58:56.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.119" endtime="20201030 10:58:56.452"></status>
</kw>
<msg timestamp="20201030 10:58:56.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039139764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.116" endtime="20201030 10:58:56.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039139764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.462" endtime="20201030 10:58:56.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.480" endtime="20201030 10:58:56.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.109" endtime="20201030 10:58:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.104" endtime="20201030 10:58:56.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.497" level="INFO">${RESULT} = [{'diff': 4.8417000000001986e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.838899999999591e-05}, {'diff': 4.830500000000543e-05}, {'diff': 4.8417000000001986e-05}, {'diff': 4.887499999999684e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:56.488" endtime="20201030 10:58:56.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.512" level="INFO">${ACCURACY} = {'diff': [4.8417000000001986e-05, 4.85139999999995e-05, 4.838899999999591e-05, 4.830500000000543e-05, 4.8417000000001986e-05, 4.887499999999684e-05, 4.849999999999993e-05, 4.8125000000003026e-05, 4.89...</msg>
<status status="PASS" starttime="20201030 10:58:56.499" endtime="20201030 10:58:56.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.523" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.521" endtime="20201030 10:58:56.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.528" level="INFO">VALUE: [4.8417000000001986e-05, 4.85139999999995e-05, 4.838899999999591e-05, 4.830500000000543e-05, 4.8417000000001986e-05, 4.887499999999684e-05, 4.849999999999993e-05, 4.8125000000003026e-05, 4.893099999999512e-05, 4.863899999999616e-05, 4.876300000000028e-05, 4.829099999999892e-05, 4.8681000000001806e-05, 4.86669999999953e-05, 4.893099999999512e-05, 4.826399999999925e-05, 4.8473000000000266e-05, 4.8917000000002486e-05, 4.8473000000000266e-05, 4.8417000000001986e-05, 4.908399999999785e-05, 4.8389000000002846e-05, 4.906999999999828e-05, 4.851400000000644e-05, 4.876399999999975e-05, 4.83339999999971e-05, 4.827800000000576e-05, 4.909700000000489e-05, 4.86940000000019e-05, 4.9014e-05, 4.873600000000061e-05, 4.880599999999846e-05, 4.826400000000619e-05, 4.8153000000002166e-05, 4.8153000000002166e-05, 4.855600000000515e-05, 4.8167000000001736e-05, 4.8389000000002846e-05, 4.898600000000086e-05, 4.826399999999925e-05, 4.906899999999881e-05, 4.811099999999652e-05, 4.8959000000001196e-05, 4.824999999999968e-05, 4.815200000000269e-05, 4.829199999999839e-05, 4.891699999999555e-05, 4.809699999999695e-05, 4.908399999999785e-05, 4.8207999999994033e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.525" endtime="20201030 10:58:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.514" endtime="20201030 10:58:56.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.541" endtime="20201030 10:58:56.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.536" endtime="20201030 10:58:56.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.534" endtime="20201030 10:58:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.049" endtime="20201030 10:58:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.047" endtime="20201030 10:58:56.566"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.588" endtime="20201030 10:58:56.605"></status>
</kw>
<msg timestamp="20201030 10:58:56.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.585" endtime="20201030 10:58:56.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.609" endtime="20201030 10:58:56.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.615" endtime="20201030 10:58:56.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.578" endtime="20201030 10:58:56.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.572" endtime="20201030 10:58:56.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.638" endtime="20201030 10:58:56.974"></status>
</kw>
<msg timestamp="20201030 10:58:56.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039134597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03918375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:56.635" endtime="20201030 10:58:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039134597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03918375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:56.984" endtime="20201030 10:58:57.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.002" endtime="20201030 10:58:57.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.628" endtime="20201030 10:58:57.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.623" endtime="20201030 10:58:57.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.019" level="INFO">${RESULT} = [{'diff': 4.9153000000003166e-05}, {'diff': 4.909700000000489e-05}, {'diff': 4.961100000000496e-05}, {'diff': 4.981999999999903e-05}, {'diff': 5.0014000000001e-05}, {'diff': 4.941600000000351e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:57.011" endtime="20201030 10:58:57.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.028" level="INFO">${ACCURACY} = {'diff': [4.9153000000003166e-05, 4.909700000000489e-05, 4.961100000000496e-05, 4.981999999999903e-05, 5.0014000000001e-05, 4.941600000000351e-05, 4.954100000000017e-05, 5.004100000000067e-05, 4.98749...</msg>
<status status="PASS" starttime="20201030 10:58:57.021" endtime="20201030 10:58:57.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.039" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.037" endtime="20201030 10:58:57.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.044" level="INFO">VALUE: [4.9153000000003166e-05, 4.909700000000489e-05, 4.961100000000496e-05, 4.981999999999903e-05, 5.0014000000001e-05, 4.941600000000351e-05, 4.954100000000017e-05, 5.004100000000067e-05, 4.987499999999784e-05, 4.9153000000003166e-05, 4.972200000000204e-05, 4.9679999999996394e-05, 4.973600000000161e-05, 4.918000000000283e-05, 4.925000000000068e-05, 4.941699999999605e-05, 4.987500000000478e-05, 4.987499999999784e-05, 4.954199999999964e-05, 4.93060000000059e-05, 4.980599999999946e-05, 4.915200000000369e-05, 4.9957999999995784e-05, 4.915200000000369e-05, 4.911099999999752e-05, 4.9625000000004527e-05, 4.93469999999982e-05, 4.955600000000615e-05, 4.956999999999878e-05, 4.9459000000001696e-05, 4.931899999999906e-05, 4.9237000000000586e-05, 5.006899999999981e-05, 4.912499999999709e-05, 4.973600000000161e-05, 4.91940000000024e-05, 4.933299999999863e-05, 4.968000000000333e-05, 4.920800000000197e-05, 4.988899999999741e-05, 5.006899999999981e-05, 4.987499999999784e-05, 5.004200000000014e-05, 4.9637999999997684e-05, 4.909799999999742e-05, 4.927799999999982e-05, 4.959699999999845e-05, 4.984799999999817e-05, 4.937499999999734e-05, 4.941600000000351e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.041" endtime="20201030 10:58:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.030" endtime="20201030 10:58:57.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.063" endtime="20201030 10:58:57.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.059" endtime="20201030 10:58:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.056" endtime="20201030 10:58:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.568" endtime="20201030 10:58:57.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.567" endtime="20201030 10:58:57.088"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.111" endtime="20201030 10:58:57.130"></status>
</kw>
<msg timestamp="20201030 10:58:57.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.107" endtime="20201030 10:58:57.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.133" endtime="20201030 10:58:57.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.139" endtime="20201030 10:58:57.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.100" endtime="20201030 10:58:57.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.095" endtime="20201030 10:58:57.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.162" endtime="20201030 10:58:57.497"></status>
</kw>
<msg timestamp="20201030 10:58:57.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.159" endtime="20201030 10:58:57.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.506" endtime="20201030 10:58:57.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.525" endtime="20201030 10:58:57.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.152" endtime="20201030 10:58:57.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.147" endtime="20201030 10:58:57.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.542" level="INFO">${RESULT} = [{'diff': 5.0235999999995173e-05}, {'diff': 5.0707999999996534e-05}, {'diff': 5.015299999999723e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.027800000000082e-05}, {'diff': 5.056900000000031e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:57.533" endtime="20201030 10:58:57.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.551" level="INFO">${ACCURACY} = {'diff': [5.0235999999995173e-05, 5.0707999999996534e-05, 5.015299999999723e-05, 5.079200000000089e-05, 5.027800000000082e-05, 5.056900000000031e-05, 5.076399999999481e-05, 5.052799999999413e-05, 5.03...</msg>
<status status="PASS" starttime="20201030 10:58:57.544" endtime="20201030 10:58:57.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.562" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.560" endtime="20201030 10:58:57.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.567" level="INFO">VALUE: [5.0235999999995173e-05, 5.0707999999996534e-05, 5.015299999999723e-05, 5.079200000000089e-05, 5.027800000000082e-05, 5.056900000000031e-05, 5.076399999999481e-05, 5.052799999999413e-05, 5.036099999999877e-05, 5.013899999999766e-05, 5.070800000000347e-05, 5.022200000000254e-05, 5.0417000000003986e-05, 5.012499999999809e-05, 5.029200000000039e-05, 5.025000000000168e-05, 5.097200000000329e-05, 5.0153000000004166e-05, 5.091699999999755e-05, 5.079200000000089e-05, 5.036099999999877e-05, 5.065299999999773e-05, 5.013899999999766e-05, 5.029199999999345e-05, 5.025000000000168e-05, 5.062499999999859e-05, 5.044400000000365e-05, 5.065299999999773e-05, 5.095800000000372e-05, 5.104200000000114e-05, 5.102800000000157e-05, 5.041699999999705e-05, 5.036099999999877e-05, 5.026400000000125e-05, 5.041699999999705e-05, 5.104200000000114e-05, 5.105600000000071e-05, 5.075000000000218e-05, 5.012499999999809e-05, 5.041699999999705e-05, 5.061099999999902e-05, 5.0221999999995603e-05, 5.03469999999992e-05, 5.050000000000193e-05, 5.08339999999996e-05, 5.074999999999524e-05, 5.061099999999902e-05, 5.0681000000003806e-05, 5.01940000000034e-05, 5.052800000000107e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.564" endtime="20201030 10:58:57.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.553" endtime="20201030 10:58:57.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.581" endtime="20201030 10:58:57.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.575" endtime="20201030 10:58:57.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.573" endtime="20201030 10:58:57.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.090" endtime="20201030 10:58:57.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.089" endtime="20201030 10:58:57.606"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.629" endtime="20201030 10:58:57.646"></status>
</kw>
<msg timestamp="20201030 10:58:57.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.625" endtime="20201030 10:58:57.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.650" endtime="20201030 10:58:57.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.656" endtime="20201030 10:58:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.618" endtime="20201030 10:58:57.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.613" endtime="20201030 10:58:57.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.679" endtime="20201030 10:58:58.014"></status>
</kw>
<msg timestamp="20201030 10:58:58.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039336625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039388028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.676" endtime="20201030 10:58:58.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039336625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039388028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.024" endtime="20201030 10:58:58.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.042" endtime="20201030 10:58:58.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.669" endtime="20201030 10:58:58.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.664" endtime="20201030 10:58:58.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.059" level="INFO">${RESULT} = [{'diff': 5.140299999999848e-05}, {'diff': 5.1471999999996854e-05}, {'diff': 5.173699999999615e-05}, {'diff': 5.2014000000003e-05}, {'diff': 5.1929999999998644e-05}, {'diff': 5.119499999999694e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:58.050" endtime="20201030 10:58:58.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.070" level="INFO">${ACCURACY} = {'diff': [5.140299999999848e-05, 5.1471999999996854e-05, 5.173699999999615e-05, 5.2014000000003e-05, 5.1929999999998644e-05, 5.119499999999694e-05, 5.177800000000232e-05, 5.186100000000027e-05, 5.1457...</msg>
<status status="PASS" starttime="20201030 10:58:58.061" endtime="20201030 10:58:58.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.081" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.078" endtime="20201030 10:58:58.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.086" level="INFO">VALUE: [5.140299999999848e-05, 5.1471999999996854e-05, 5.173699999999615e-05, 5.2014000000003e-05, 5.1929999999998644e-05, 5.119499999999694e-05, 5.177800000000232e-05, 5.186100000000027e-05, 5.1457999999997284e-05, 5.161100000000002e-05, 5.1429999999998144e-05, 5.138899999999891e-05, 5.177800000000232e-05, 5.208299999999444e-05, 5.113899999999866e-05, 5.112499999999909e-05, 5.1679999999998394e-05, 5.181899999999462e-05, 5.1207999999997034e-05, 5.134699999999326e-05, 5.1999999999996493e-05, 5.130500000000149e-05, 5.137499999999934e-05, 5.11669999999978e-05, 5.130600000000096e-05, 5.1401999999999004e-05, 5.154100000000217e-05, 5.159700000000045e-05, 5.115299999999823e-05, 5.108300000000038e-05, 5.197200000000429e-05, 5.16669999999983e-05, 5.11669999999978e-05, 5.201300000000353e-05, 5.154100000000217e-05, 5.1915999999999074e-05, 5.188899999999941e-05, 5.1445000000004126e-05, 5.162499999999959e-05, 5.176399999999581e-05, 5.175000000000318e-05, 5.193099999999812e-05, 5.179199999999495e-05, 5.13470000000002e-05, 5.140299999999848e-05, 5.131900000000106e-05, 5.120800000000397e-05, 5.115299999999823e-05, 5.1917000000005487e-05, 5.137499999999934e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.083" endtime="20201030 10:58:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.072" endtime="20201030 10:58:58.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.098" endtime="20201030 10:58:58.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.094" endtime="20201030 10:58:58.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.092" endtime="20201030 10:58:58.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.608" endtime="20201030 10:58:58.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.607" endtime="20201030 10:58:58.123"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.146" endtime="20201030 10:58:58.163"></status>
</kw>
<msg timestamp="20201030 10:58:58.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.142" endtime="20201030 10:58:58.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.167" endtime="20201030 10:58:58.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.173" endtime="20201030 10:58:58.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.135" endtime="20201030 10:58:58.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.130" endtime="20201030 10:58:58.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.196" endtime="20201030 10:58:58.529"></status>
</kw>
<msg timestamp="20201030 10:58:58.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03906625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039118639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:58.193" endtime="20201030 10:58:58.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03906625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039118639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:58.539" endtime="20201030 10:58:58.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.557" endtime="20201030 10:58:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.186" endtime="20201030 10:58:58.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.181" endtime="20201030 10:58:58.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.574" level="INFO">${RESULT} = [{'diff': 5.238899999999991e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.28749999999939e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.233300000000163e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:58.565" endtime="20201030 10:58:58.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.585" level="INFO">${ACCURACY} = {'diff': [5.238899999999991e-05, 5.236100000000077e-05, 5.28749999999939e-05, 5.286100000000127e-05, 5.259700000000145e-05, 5.233300000000163e-05, 5.244400000000565e-05, 5.211100000000052e-05, 5.29309...</msg>
<status status="PASS" starttime="20201030 10:58:58.576" endtime="20201030 10:58:58.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.596" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.594" endtime="20201030 10:58:58.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.601" level="INFO">VALUE: [5.238899999999991e-05, 5.236100000000077e-05, 5.28749999999939e-05, 5.286100000000127e-05, 5.259700000000145e-05, 5.233300000000163e-05, 5.244400000000565e-05, 5.211100000000052e-05, 5.293099999999912e-05, 5.2221999999997604e-05, 5.244499999999819e-05, 5.304200000000314e-05, 5.2263999999996313e-05, 5.226300000000378e-05, 5.2165999999999324e-05, 5.236099999999383e-05, 5.281899999999562e-05, 5.293099999999912e-05, 5.28470000000017e-05, 5.294499999999869e-05, 5.252799999999613e-05, 5.245899999999776e-05, 5.21669999999988e-05, 5.2721999999998104e-05, 5.2485999999997424e-05, 5.2165999999999324e-05, 5.213899999999966e-05, 5.279100000000342e-05, 5.25549999999958e-05, 5.281900000000256e-05, 5.233300000000163e-05, 5.2985999999997924e-05, 5.23470000000012e-05, 5.312500000000109e-05, 5.277799999999638e-05, 5.257000000000178e-05, 5.220800000000497e-05, 5.245899999999776e-05, 5.280600000000246e-05, 5.306900000000281e-05, 5.262500000000059e-05, 5.256900000000231e-05, 5.241699999999905e-05, 5.208400000000085e-05, 5.206900000000181e-05, 5.2513999999996563e-05, 5.283300000000213e-05, 5.236099999999383e-05, 5.21669999999988e-05, 5.23470000000012e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.598" endtime="20201030 10:58:58.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.587" endtime="20201030 10:58:58.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.614" endtime="20201030 10:58:58.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.609" endtime="20201030 10:58:58.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.607" endtime="20201030 10:58:58.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.125" endtime="20201030 10:58:58.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.124" endtime="20201030 10:58:58.639"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.661" endtime="20201030 10:58:58.679"></status>
</kw>
<msg timestamp="20201030 10:58:58.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.658" endtime="20201030 10:58:58.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.682" endtime="20201030 10:58:58.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.688" endtime="20201030 10:58:58.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.651" endtime="20201030 10:58:58.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.645" endtime="20201030 10:58:58.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.711" endtime="20201030 10:58:59.047"></status>
</kw>
<msg timestamp="20201030 10:58:59.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039123667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039177208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.708" endtime="20201030 10:58:59.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039123667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039177208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.057" endtime="20201030 10:58:59.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.075" endtime="20201030 10:58:59.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.701" endtime="20201030 10:58:59.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.696" endtime="20201030 10:58:59.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.092" level="INFO">${RESULT} = [{'diff': 5.354099999999723e-05}, {'diff': 5.359700000000245e-05}, {'diff': 5.379099999999748e-05}, {'diff': 5.406900000000381e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.365300000000073e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:59.083" endtime="20201030 10:58:59.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.101" level="INFO">${ACCURACY} = {'diff': [5.354099999999723e-05, 5.359700000000245e-05, 5.379099999999748e-05, 5.406900000000381e-05, 5.4013999999998064e-05, 5.365300000000073e-05, 5.36670000000003e-05, 5.3693999999999964e-05, 5.311...</msg>
<status status="PASS" starttime="20201030 10:58:59.094" endtime="20201030 10:58:59.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.112" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.110" endtime="20201030 10:58:59.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.117" level="INFO">VALUE: [5.354099999999723e-05, 5.359700000000245e-05, 5.379099999999748e-05, 5.406900000000381e-05, 5.4013999999998064e-05, 5.365300000000073e-05, 5.36670000000003e-05, 5.3693999999999964e-05, 5.311100000000152e-05, 5.3971999999999354e-05, 5.3707999999999534e-05, 5.405600000000371e-05, 5.347299999999833e-05, 5.3415999999993635e-05, 5.327700000000435e-05, 5.330600000000296e-05, 5.4027999999997633e-05, 5.3249999999997744e-05, 5.35140000000045e-05, 5.337500000000134e-05, 5.340300000000048e-05, 5.397299999999883e-05, 5.309700000000195e-05, 5.338900000000091e-05, 5.35419999999967e-05, 5.338900000000091e-05, 5.35140000000045e-05, 5.311099999999458e-05, 5.31669999999998e-05, 5.3985999999998924e-05, 5.406900000000381e-05, 5.3693999999999964e-05, 5.393100000000012e-05, 5.369499999999944e-05, 5.341700000000005e-05, 5.361200000000149e-05, 5.356899999999637e-05, 5.3666000000000824e-05, 5.352699999999766e-05, 5.3999999999998494e-05, 5.409699999999601e-05, 5.334800000000167e-05, 5.329200000000339e-05, 5.383399999999566e-05, 5.3235999999998174e-05, 5.388900000000141e-05, 5.388900000000141e-05, 5.337500000000134e-05, 5.308300000000238e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.114" endtime="20201030 10:58:59.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.103" endtime="20201030 10:58:59.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.130" endtime="20201030 10:58:59.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.126" endtime="20201030 10:58:59.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.123" endtime="20201030 10:58:59.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.641" endtime="20201030 10:58:59.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.640" endtime="20201030 10:58:59.155"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.177" endtime="20201030 10:58:59.196"></status>
</kw>
<msg timestamp="20201030 10:58:59.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.174" endtime="20201030 10:58:59.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.200" endtime="20201030 10:58:59.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.206" endtime="20201030 10:58:59.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.167" endtime="20201030 10:58:59.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.161" endtime="20201030 10:58:59.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.229" endtime="20201030 10:58:59.564"></status>
</kw>
<msg timestamp="20201030 10:58:59.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.226" endtime="20201030 10:58:59.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.573" endtime="20201030 10:58:59.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.592" endtime="20201030 10:58:59.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.219" endtime="20201030 10:58:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.214" endtime="20201030 10:58:59.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.609" level="INFO">${RESULT} = [{'diff': 5.418100000000037e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.447200000000679e-05}, {'diff': 5.491699999999461e-05}, {'diff': 5.4235999999999174e-05}, {'diff': 5.4458000000000284e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:59.600" endtime="20201030 10:58:59.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.618" level="INFO">${ACCURACY} = {'diff': [5.418100000000037e-05, 5.4735999999999674e-05, 5.447200000000679e-05, 5.491699999999461e-05, 5.4235999999999174e-05, 5.4458000000000284e-05, 5.4527999999998134e-05, 5.5014000000006e-05, 5.50...</msg>
<status status="PASS" starttime="20201030 10:58:59.611" endtime="20201030 10:58:59.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.629" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.627" endtime="20201030 10:58:59.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.634" level="INFO">VALUE: [5.418100000000037e-05, 5.4735999999999674e-05, 5.447200000000679e-05, 5.491699999999461e-05, 5.4235999999999174e-05, 5.4458000000000284e-05, 5.4527999999998134e-05, 5.5014000000006e-05, 5.5013999999999064e-05, 5.418100000000037e-05, 5.486099999999633e-05, 5.502800000000557e-05, 5.444500000000019e-05, 5.505599999999777e-05, 5.481899999999762e-05, 5.4221999999999604e-05, 5.465300000000173e-05, 5.4930000000001644e-05, 5.443100000000062e-05, 5.490300000000198e-05, 5.48470000000037e-05, 5.4749999999999244e-05, 5.43340000000031e-05, 5.4485999999999424e-05, 5.483399999999666e-05, 5.4722000000000104e-05, 5.465299999999479e-05, 5.458299999999694e-05, 5.4471999999999854e-05, 5.4471999999999854e-05, 5.409700000000295e-05, 5.4972000000000354e-05, 5.43470000000032e-05, 5.409700000000295e-05, 5.4263999999998314e-05, 5.434800000000267e-05, 5.494500000000069e-05, 5.462500000000259e-05, 5.4708000000000534e-05, 5.462500000000259e-05, 5.4416000000001574e-05, 5.4249999999998744e-05, 5.459699999999651e-05, 5.456900000000431e-05, 5.418100000000037e-05, 5.4763999999998814e-05, 5.463900000000216e-05, 5.4680000000001394e-05, 5.508299999999744e-05, 5.511200000000299e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.631" endtime="20201030 10:58:59.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.620" endtime="20201030 10:58:59.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.648" endtime="20201030 10:58:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.642" endtime="20201030 10:58:59.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.640" endtime="20201030 10:58:59.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.157" endtime="20201030 10:58:59.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.156" endtime="20201030 10:58:59.673"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.696" endtime="20201030 10:58:59.713"></status>
</kw>
<msg timestamp="20201030 10:58:59.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.692" endtime="20201030 10:58:59.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.717" endtime="20201030 10:58:59.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.723" endtime="20201030 10:58:59.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.685" endtime="20201030 10:58:59.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.680" endtime="20201030 10:58:59.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.746" endtime="20201030 10:59:00.082"></status>
</kw>
<msg timestamp="20201030 10:59:00.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039233083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.743" endtime="20201030 10:59:00.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039233083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.091" endtime="20201030 10:59:00.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.110" endtime="20201030 10:59:00.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.736" endtime="20201030 10:59:00.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.731" endtime="20201030 10:59:00.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.127" level="INFO">${RESULT} = [{'diff': 5.5236000000000174e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.545900000000076e-05}, {'diff': 5.5263999999999314e-0...</msg>
<status status="PASS" starttime="20201030 10:59:00.118" endtime="20201030 10:59:00.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.137" level="INFO">${ACCURACY} = {'diff': [5.5236000000000174e-05, 5.5458000000001284e-05, 5.5263999999999314e-05, 5.5791999999998954e-05, 5.545900000000076e-05, 5.5263999999999314e-05, 5.533299999999769e-05, 5.5901999999996566e-05, ...</msg>
<status status="PASS" starttime="20201030 10:59:00.129" endtime="20201030 10:59:00.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.148" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.146" endtime="20201030 10:59:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.154" level="INFO">VALUE: [5.5236000000000174e-05, 5.5458000000001284e-05, 5.5263999999999314e-05, 5.5791999999998954e-05, 5.545900000000076e-05, 5.5263999999999314e-05, 5.533299999999769e-05, 5.5901999999996566e-05, 5.558399999999741e-05, 5.5291999999998453e-05, 5.538899999999597e-05, 5.540299999999554e-05, 5.511100000000352e-05, 5.587500000000384e-05, 5.5930000000002644e-05, 5.5249999999999744e-05, 5.581899999999862e-05, 5.5944000000002214e-05, 5.515300000000223e-05, 5.590299999999604e-05, 5.6027999999999634e-05, 5.543100000000162e-05, 5.6014000000000064e-05, 5.515299999999529e-05, 5.5750000000000244e-05, 5.5236000000000174e-05, 5.5986000000000924e-05, 5.529099999999898e-05, 5.511100000000352e-05, 5.60549999999993e-05, 5.543099999999468e-05, 5.54869999999999e-05, 5.569500000000144e-05, 5.588900000000341e-05, 5.56670000000023e-05, 5.5027999999998634e-05, 5.5263999999999314e-05, 5.5791999999998954e-05, 5.6027999999999634e-05, 5.562499999999665e-05, 5.511100000000352e-05, 5.6027999999999634e-05, 5.5263999999999314e-05, 5.556900000000531e-05, 5.583300000000513e-05, 5.588900000000341e-05, 5.5944000000002214e-05, 5.53749999999964e-05, 5.538900000000291e-05, 5.5930000000002644e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.151" endtime="20201030 10:59:00.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.139" endtime="20201030 10:59:00.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.166" endtime="20201030 10:59:00.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.162" endtime="20201030 10:59:00.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.159" endtime="20201030 10:59:00.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.675" endtime="20201030 10:59:00.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.674" endtime="20201030 10:59:00.191"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.213" endtime="20201030 10:59:00.231"></status>
</kw>
<msg timestamp="20201030 10:59:00.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.210" endtime="20201030 10:59:00.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.234" endtime="20201030 10:59:00.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.241" endtime="20201030 10:59:00.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.203" endtime="20201030 10:59:00.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.197" endtime="20201030 10:59:00.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.264" endtime="20201030 10:59:00.597"></status>
</kw>
<msg timestamp="20201030 10:59:00.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039040792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039097306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.260" endtime="20201030 10:59:00.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039040792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039097306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.607" endtime="20201030 10:59:00.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.625" endtime="20201030 10:59:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.253" endtime="20201030 10:59:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.249" endtime="20201030 10:59:00.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.642" level="INFO">${RESULT} = [{'diff': 5.6514000000000564e-05}, {'diff': 5.690299999999704e-05}, {'diff': 5.638899999999697e-05}, {'diff': 5.68749999999979e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.633299999999869e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:00.634" endtime="20201030 10:59:00.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.653" level="INFO">${ACCURACY} = {'diff': [5.6514000000000564e-05, 5.690299999999704e-05, 5.638899999999697e-05, 5.68749999999979e-05, 5.6500000000000994e-05, 5.633299999999869e-05, 5.631899999999912e-05, 5.7000000000001494e-05, 5.65...</msg>
<status status="PASS" starttime="20201030 10:59:00.644" endtime="20201030 10:59:00.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.664" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.662" endtime="20201030 10:59:00.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.670" level="INFO">VALUE: [5.6514000000000564e-05, 5.690299999999704e-05, 5.638899999999697e-05, 5.68749999999979e-05, 5.6500000000000994e-05, 5.633299999999869e-05, 5.631899999999912e-05, 5.7000000000001494e-05, 5.656899999999937e-05, 5.6929999999996705e-05, 5.659699999999851e-05, 5.6528000000000134e-05, 5.609699999999801e-05, 5.638900000000391e-05, 5.691699999999661e-05, 5.613899999999672e-05, 5.691700000000355e-05, 5.6528000000000134e-05, 5.658299999999894e-05, 5.663900000000416e-05, 5.7042000000000204e-05, 5.6193999999995525e-05, 5.630499999999955e-05, 5.6264000000000314e-05, 5.615300000000323e-05, 5.641700000000305e-05, 5.618099999999543e-05, 5.615299999999629e-05, 5.688899999999747e-05, 5.6277999999999884e-05, 5.645900000000176e-05, 5.709699999999901e-05, 5.63749999999974e-05, 5.6471999999994915e-05, 5.688900000000441e-05, 5.611099999999758e-05, 5.6486000000001424e-05, 5.6528000000000134e-05, 5.629099999999998e-05, 5.6264000000000314e-05, 5.6708000000002534e-05, 5.634699999999826e-05, 5.6985999999994985e-05, 5.6500000000000994e-05, 5.6887999999997996e-05, 5.6401999999997066e-05, 5.662500000000459e-05, 5.68470000000057e-05, 5.6750000000001244e-05, 5.6930000000003644e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.666" endtime="20201030 10:59:00.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.655" endtime="20201030 10:59:00.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.682" endtime="20201030 10:59:00.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.678" endtime="20201030 10:59:00.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.675" endtime="20201030 10:59:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.193" endtime="20201030 10:59:00.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.192" endtime="20201030 10:59:00.707"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.730" endtime="20201030 10:59:00.747"></status>
</kw>
<msg timestamp="20201030 10:59:00.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.726" endtime="20201030 10:59:00.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.751" endtime="20201030 10:59:00.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.757" endtime="20201030 10:59:00.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.719" endtime="20201030 10:59:00.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.713" endtime="20201030 10:59:00.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.780" endtime="20201030 10:59:01.117"></status>
</kw>
<msg timestamp="20201030 10:59:01.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039425444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.777" endtime="20201030 10:59:01.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039425444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.127" endtime="20201030 10:59:01.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.145" endtime="20201030 10:59:01.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.770" endtime="20201030 10:59:01.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.765" endtime="20201030 10:59:01.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.162" level="INFO">${RESULT} = [{'diff': 5.7401999999998066e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.738899999999797e-05}, {'diff': 5.762499999999865e-05}, {'diff': 5.718100000000337e-05}, {'diff': 5.797300000000283e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:01.154" endtime="20201030 10:59:01.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.172" level="INFO">${ACCURACY} = {'diff': [5.7401999999998066e-05, 5.73749999999984e-05, 5.738899999999797e-05, 5.762499999999865e-05, 5.718100000000337e-05, 5.797300000000283e-05, 5.793099999999718e-05, 5.7486000000002424e-05, 5.759...</msg>
<status status="PASS" starttime="20201030 10:59:01.165" endtime="20201030 10:59:01.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.183" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.180" endtime="20201030 10:59:01.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.188" level="INFO">VALUE: [5.7401999999998066e-05, 5.73749999999984e-05, 5.738899999999797e-05, 5.762499999999865e-05, 5.718100000000337e-05, 5.797300000000283e-05, 5.793099999999718e-05, 5.7486000000002424e-05, 5.759700000000645e-05, 5.733299999999969e-05, 5.786099999999933e-05, 5.7569999999999844e-05, 5.7319999999999593e-05, 5.802700000000216e-05, 5.713899999999772e-05, 5.754100000000123e-05, 5.798699999999546e-05, 5.7249999999994805e-05, 5.762499999999865e-05, 5.7651999999998316e-05, 5.8042000000001204e-05, 5.7306000000000024e-05, 5.7319999999999593e-05, 5.7333999999999163e-05, 5.713899999999772e-05, 5.733299999999969e-05, 5.7292000000000454e-05, 5.794499999999675e-05, 5.7236000000002174e-05, 5.790300000000498e-05, 5.71670000000038e-05, 5.8000000000002494e-05, 5.7637999999998746e-05, 5.752700000000166e-05, 5.715300000000423e-05, 5.718099999999643e-05, 5.769500000000344e-05, 5.7042000000000204e-05, 5.7486000000002424e-05, 5.7499999999995055e-05, 5.7415999999997636e-05, 5.7778000000001384e-05, 5.7319999999999593e-05, 5.790299999999804e-05, 5.7194000000003464e-05, 5.7999999999995555e-05, 5.7528000000001134e-05, 5.7278000000000884e-05, 5.720900000000251e-05, 5.7806000000000524e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.185" endtime="20201030 10:59:01.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.174" endtime="20201030 10:59:01.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.200" endtime="20201030 10:59:01.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.196" endtime="20201030 10:59:01.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.194" endtime="20201030 10:59:01.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.709" endtime="20201030 10:59:01.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.708" endtime="20201030 10:59:01.226"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.248" endtime="20201030 10:59:01.271"></status>
</kw>
<msg timestamp="20201030 10:59:01.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.245" endtime="20201030 10:59:01.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.275" endtime="20201030 10:59:01.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.281" endtime="20201030 10:59:01.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.238" endtime="20201030 10:59:01.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.232" endtime="20201030 10:59:01.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.304" endtime="20201030 10:59:01.647"></status>
</kw>
<msg timestamp="20201030 10:59:01.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044849847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044908292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.301" endtime="20201030 10:59:01.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044849847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044908292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.657" endtime="20201030 10:59:01.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.675" endtime="20201030 10:59:01.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.294" endtime="20201030 10:59:01.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.289" endtime="20201030 10:59:01.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.693" level="INFO">${RESULT} = [{'diff': 5.844500000000419e-05}, {'diff': 5.856899999999443e-05}, {'diff': 5.8820000000001094e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.833300000000069e-05}, {'diff': 5.8292000000001454e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:01.684" endtime="20201030 10:59:01.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.702" level="INFO">${ACCURACY} = {'diff': [5.844500000000419e-05, 5.856899999999443e-05, 5.8820000000001094e-05, 5.891699999999861e-05, 5.833300000000069e-05, 5.8292000000001454e-05, 5.8513999999995625e-05, 5.844499999999725e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 10:59:01.695" endtime="20201030 10:59:01.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.713" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.710" endtime="20201030 10:59:01.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.718" level="INFO">VALUE: [5.844500000000419e-05, 5.856899999999443e-05, 5.8820000000001094e-05, 5.891699999999861e-05, 5.833300000000069e-05, 5.8292000000001454e-05, 5.8513999999995625e-05, 5.844499999999725e-05, 5.844500000000419e-05, 5.8236000000003174e-05, 5.8764000000002814e-05, 5.893099999999818e-05, 5.9056000000001774e-05, 5.8777999999995445e-05, 5.884700000000076e-05, 5.9013999999996125e-05, 5.841699999999811e-05, 5.8485999999996485e-05, 5.883299999999425e-05, 5.866699999999836e-05, 5.847299999999639e-05, 5.8278000000001884e-05, 5.8278000000001884e-05, 5.861100000000008e-05, 5.9069999999994405e-05, 5.870899999999707e-05, 5.894499999999775e-05, 5.836099999999983e-05, 5.859700000000051e-05, 5.8707999999997595e-05, 5.8777999999995445e-05, 5.8735999999996735e-05, 5.827699999999547e-05, 5.829100000000198e-05, 5.886100000000033e-05, 5.8264000000002314e-05, 5.886100000000033e-05, 5.9000000000003494e-05, 5.8985999999996985e-05, 5.8388000000006435e-05, 5.8929999999998706e-05, 5.904100000000273e-05, 5.838899999999897e-05, 5.866699999999836e-05, 5.888899999999947e-05, 5.869500000000444e-05, 5.9014000000003064e-05, 5.8193999999997525e-05, 5.843100000000462e-05, 5.8957999999997845e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.715" endtime="20201030 10:59:01.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.704" endtime="20201030 10:59:01.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.732" endtime="20201030 10:59:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.726" endtime="20201030 10:59:01.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.724" endtime="20201030 10:59:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.228" endtime="20201030 10:59:01.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.226" endtime="20201030 10:59:01.757"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.780" endtime="20201030 10:59:01.797"></status>
</kw>
<msg timestamp="20201030 10:59:01.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.776" endtime="20201030 10:59:01.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.801" endtime="20201030 10:59:01.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.807" endtime="20201030 10:59:01.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.769" endtime="20201030 10:59:01.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.763" endtime="20201030 10:59:01.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.830" endtime="20201030 10:59:02.164"></status>
</kw>
<msg timestamp="20201030 10:59:02.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039192306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039252236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.827" endtime="20201030 10:59:02.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039192306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039252236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.174" endtime="20201030 10:59:02.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.193" endtime="20201030 10:59:02.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.820" endtime="20201030 10:59:02.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.815" endtime="20201030 10:59:02.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.210" level="INFO">${RESULT} = [{'diff': 5.9929999999999706e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.9306000000002024e-05}, {'diff': 5.994500000000569e-05}, {'diff': 5.9527999999996195e-05}, {'diff': 5.947299999999739e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:02.201" endtime="20201030 10:59:02.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.220" level="INFO">${ACCURACY} = {'diff': [5.9929999999999706e-05, 5.990300000000004e-05, 5.9306000000002024e-05, 5.994500000000569e-05, 5.9527999999996195e-05, 5.947299999999739e-05, 5.962500000000065e-05, 5.9777999999996445e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:59:02.212" endtime="20201030 10:59:02.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.231" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.229" endtime="20201030 10:59:02.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.236" level="INFO">VALUE: [5.9929999999999706e-05, 5.990300000000004e-05, 5.9306000000002024e-05, 5.994500000000569e-05, 5.9527999999996195e-05, 5.947299999999739e-05, 5.962500000000065e-05, 5.9777999999996445e-05, 5.9249999999996805e-05, 6.005499999999636e-05, 5.9570000000001844e-05, 5.9277999999995945e-05, 5.9569999999994905e-05, 5.958300000000194e-05, 6.0028000000003634e-05, 5.962500000000065e-05, 5.93750000000004e-05, 5.945899999999782e-05, 5.970900000000501e-05, 5.9320000000001594e-05, 6.0013999999997125e-05, 5.920900000000451e-05, 5.988799999999406e-05, 5.909699999999407e-05, 5.931900000000212e-05, 5.9971999999998415e-05, 5.98750000000009e-05, 6.002699999999722e-05, 5.9138000000000246e-05, 5.990300000000004e-05, 5.979100000000348e-05, 5.918100000000537e-05, 5.9764000000003814e-05, 5.9986000000004924e-05, 5.916699999999886e-05, 5.9514000000003564e-05, 5.9792000000002954e-05, 5.9584000000001414e-05, 5.988900000000047e-05, 5.988900000000047e-05, 5.991699999999961e-05, 5.931899999999518e-05, 5.919500000000494e-05, 5.9070000000001344e-05, 5.9763999999996875e-05, 5.920899999999757e-05, 5.922300000000408e-05, 5.91670000000058e-05, 5.9112000000000053e-05, 5.9957999999998846e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.233" endtime="20201030 10:59:02.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.222" endtime="20201030 10:59:02.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.255" endtime="20201030 10:59:02.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.251" endtime="20201030 10:59:02.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.249" endtime="20201030 10:59:02.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.759" endtime="20201030 10:59:02.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.758" endtime="20201030 10:59:02.280"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.303" endtime="20201030 10:59:02.321"></status>
</kw>
<msg timestamp="20201030 10:59:02.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.300" endtime="20201030 10:59:02.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.324" endtime="20201030 10:59:02.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.330" endtime="20201030 10:59:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.293" endtime="20201030 10:59:02.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.287" endtime="20201030 10:59:02.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.354" endtime="20201030 10:59:02.687"></status>
</kw>
<msg timestamp="20201030 10:59:02.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039127931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.350" endtime="20201030 10:59:02.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039127931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.697" endtime="20201030 10:59:02.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.715" endtime="20201030 10:59:02.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.343" endtime="20201030 10:59:02.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.338" endtime="20201030 10:59:02.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.732" level="INFO">${RESULT} = [{'diff': 6.112500000000215e-05}, {'diff': 6.0999999999998555e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.036100000000183e-05}, {'diff': 6.0222000000005604e-05}, {'diff': 6.1014000000005064e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:02.724" endtime="20201030 10:59:02.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.744" level="INFO">${ACCURACY} = {'diff': [6.112500000000215e-05, 6.0999999999998555e-05, 6.062500000000165e-05, 6.036100000000183e-05, 6.0222000000005604e-05, 6.1014000000005064e-05, 6.0583999999995475e-05, 6.030500000000355e-05, 6....</msg>
<status status="PASS" starttime="20201030 10:59:02.734" endtime="20201030 10:59:02.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.754" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.752" endtime="20201030 10:59:02.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.760" level="INFO">VALUE: [6.112500000000215e-05, 6.0999999999998555e-05, 6.062500000000165e-05, 6.036100000000183e-05, 6.0222000000005604e-05, 6.1014000000005064e-05, 6.0583999999995475e-05, 6.030500000000355e-05, 6.10550000000043e-05, 6.0263999999997375e-05, 6.023699999999771e-05, 6.084700000000276e-05, 6.034699999999532e-05, 6.0584000000002414e-05, 6.0291999999996515e-05, 6.022299999999814e-05, 6.0250000000004744e-05, 6.040300000000054e-05, 6.0277999999996945e-05, 6.0528000000004134e-05, 6.066700000000036e-05, 6.0862000000001804e-05, 6.0985999999998985e-05, 6.0221999999998665e-05, 6.012499999999421e-05, 6.0805999999996585e-05, 6.091700000000061e-05, 6.0152000000000816e-05, 6.0666000000000886e-05, 6.0556000000003274e-05, 6.062500000000165e-05, 6.018099999999943e-05, 6.081899999999668e-05, 6.062500000000165e-05, 6.0528000000004134e-05, 6.011100000000158e-05, 6.034699999999532e-05, 6.104199999999727e-05, 6.0264000000004314e-05, 6.0320000000002594e-05, 6.068099999999993e-05, 6.102699999999822e-05, 6.0666000000000886e-05, 6.0514000000004564e-05, 6.10829999999965e-05, 6.0777999999997445e-05, 6.06949999999995e-05, 6.105599999999684e-05, 6.0472000000005854e-05, 6.0430000000000206e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.757" endtime="20201030 10:59:02.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.745" endtime="20201030 10:59:02.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.772" endtime="20201030 10:59:02.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.768" endtime="20201030 10:59:02.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.765" endtime="20201030 10:59:02.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.283" endtime="20201030 10:59:02.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.281" endtime="20201030 10:59:02.797"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.820" endtime="20201030 10:59:02.837"></status>
</kw>
<msg timestamp="20201030 10:59:02.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.816" endtime="20201030 10:59:02.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.841" endtime="20201030 10:59:02.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.847" endtime="20201030 10:59:02.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.809" endtime="20201030 10:59:02.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.803" endtime="20201030 10:59:02.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.870" endtime="20201030 10:59:03.207"></status>
</kw>
<msg timestamp="20201030 10:59:03.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039028389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039089542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.867" endtime="20201030 10:59:03.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039028389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039089542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.216" endtime="20201030 10:59:03.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.235" endtime="20201030 10:59:03.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.860" endtime="20201030 10:59:03.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.855" endtime="20201030 10:59:03.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.252" level="INFO">${RESULT} = [{'diff': 6.115300000000129e-05}, {'diff': 6.181899999999768e-05}, {'diff': 6.180600000000452e-05}, {'diff': 6.208300000000444e-05}, {'diff': 6.165300000000179e-05}, {'diff': 6.173600000000667e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:03.244" endtime="20201030 10:59:03.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.262" level="INFO">${ACCURACY} = {'diff': [6.115300000000129e-05, 6.181899999999768e-05, 6.180600000000452e-05, 6.208300000000444e-05, 6.165300000000179e-05, 6.173600000000667e-05, 6.165300000000179e-05, 6.112500000000215e-05, 6.1792...</msg>
<status status="PASS" starttime="20201030 10:59:03.254" endtime="20201030 10:59:03.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.273" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.270" endtime="20201030 10:59:03.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.278" level="INFO">VALUE: [6.115300000000129e-05, 6.181899999999768e-05, 6.180600000000452e-05, 6.208300000000444e-05, 6.165300000000179e-05, 6.173600000000667e-05, 6.165300000000179e-05, 6.112500000000215e-05, 6.179200000000495e-05, 6.191700000000161e-05, 6.111099999999564e-05, 6.123599999999924e-05, 6.159700000000351e-05, 6.144500000000025e-05, 6.10699999999964e-05, 6.18750000000029e-05, 6.113899999999478e-05, 6.144400000000078e-05, 6.134699999999632e-05, 6.130599999999709e-05, 6.187499999999596e-05, 6.188900000000247e-05, 6.115300000000129e-05, 6.172299999999964e-05, 6.123599999999924e-05, 6.152800000000513e-05, 6.173700000000615e-05, 6.118099999999349e-05, 6.165199999999538e-05, 6.209699999999707e-05, 6.12499999999988e-05, 6.14159999999947e-05, 6.130499999999761e-05, 6.152800000000513e-05, 6.199999999999956e-05, 6.186100000000333e-05, 6.177799999999845e-05, 6.148599999999949e-05, 6.20279999999987e-05, 6.15279999999982e-05, 6.205600000000477e-05, 6.118100000000043e-05, 6.144400000000078e-05, 6.191600000000214e-05, 6.127800000000488e-05, 6.152699999999872e-05, 6.122199999999967e-05, 6.155499999999786e-05, 6.155599999999734e-05, 6.116700000000086e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.275" endtime="20201030 10:59:03.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.263" endtime="20201030 10:59:03.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.290" endtime="20201030 10:59:03.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.286" endtime="20201030 10:59:03.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.284" endtime="20201030 10:59:03.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.799" endtime="20201030 10:59:03.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.798" endtime="20201030 10:59:03.315"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.338" endtime="20201030 10:59:03.357"></status>
</kw>
<msg timestamp="20201030 10:59:03.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.335" endtime="20201030 10:59:03.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.361" endtime="20201030 10:59:03.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.367" endtime="20201030 10:59:03.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.327" endtime="20201030 10:59:03.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.322" endtime="20201030 10:59:03.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.390" endtime="20201030 10:59:03.724"></status>
</kw>
<msg timestamp="20201030 10:59:03.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040659194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040721542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.387" endtime="20201030 10:59:03.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040659194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040721542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.734" endtime="20201030 10:59:03.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.753" endtime="20201030 10:59:03.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.380" endtime="20201030 10:59:03.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.375" endtime="20201030 10:59:03.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.770" level="INFO">${RESULT} = [{'diff': 6.23479999999968e-05}, {'diff': 6.286099999999739e-05}, {'diff': 6.230499999999861e-05}, {'diff': 6.270799999999466e-05}, {'diff': 6.256900000000537e-05}, {'diff': 6.243100000000168e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:03.761" endtime="20201030 10:59:03.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.779" level="INFO">${ACCURACY} = {'diff': [6.23479999999968e-05, 6.286099999999739e-05, 6.230499999999861e-05, 6.270799999999466e-05, 6.256900000000537e-05, 6.243100000000168e-05, 6.238899999999603e-05, 6.215299999999535e-05, 6.29310...</msg>
<status status="PASS" starttime="20201030 10:59:03.772" endtime="20201030 10:59:03.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.790" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.788" endtime="20201030 10:59:03.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.795" level="INFO">VALUE: [6.23479999999968e-05, 6.286099999999739e-05, 6.230499999999861e-05, 6.270799999999466e-05, 6.256900000000537e-05, 6.243100000000168e-05, 6.238899999999603e-05, 6.215299999999535e-05, 6.293100000000218e-05, 6.305599999999884e-05, 6.216700000000186e-05, 6.229099999999904e-05, 6.241699999999517e-05, 6.248699999999996e-05, 6.218000000000196e-05, 6.241700000000211e-05, 6.27080000000016e-05, 6.259799999999704e-05, 6.300000000000056e-05, 6.276399999999988e-05, 6.229099999999904e-05, 6.30279999999997e-05, 6.23750000000034e-05, 6.297299999999395e-05, 6.251399999999963e-05, 6.216700000000186e-05, 6.269400000000203e-05, 6.217999999999502e-05, 6.294500000000175e-05, 6.290300000000304e-05, 6.294400000000228e-05, 6.286099999999739e-05, 6.281899999999868e-05, 6.218100000000143e-05, 6.304199999999927e-05, 6.283300000000519e-05, 6.241700000000211e-05, 6.218099999999449e-05, 6.255499999999886e-05, 6.226399999999938e-05, 6.223600000000024e-05, 6.291699999999567e-05, 6.257000000000484e-05, 6.254099999999929e-05, 6.226399999999938e-05, 6.265300000000279e-05, 6.248600000000049e-05, 6.290300000000304e-05, 6.27500000000003e-05, 6.241700000000211e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.792" endtime="20201030 10:59:03.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.781" endtime="20201030 10:59:03.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.809" endtime="20201030 10:59:03.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.804" endtime="20201030 10:59:03.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.801" endtime="20201030 10:59:03.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.318" endtime="20201030 10:59:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.316" endtime="20201030 10:59:03.834"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.857" endtime="20201030 10:59:03.875"></status>
</kw>
<msg timestamp="20201030 10:59:03.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.853" endtime="20201030 10:59:03.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.878" endtime="20201030 10:59:03.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.884" endtime="20201030 10:59:03.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.846" endtime="20201030 10:59:03.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.841" endtime="20201030 10:59:03.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.908" endtime="20201030 10:59:04.243"></status>
</kw>
<msg timestamp="20201030 10:59:04.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039220181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.904" endtime="20201030 10:59:04.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039220181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.252" endtime="20201030 10:59:04.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.271" endtime="20201030 10:59:04.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.897" endtime="20201030 10:59:04.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.893" endtime="20201030 10:59:04.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.288" level="INFO">${RESULT} = [{'diff': 6.347300000000139e-05}, {'diff': 6.340199999999713e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.383399999999873e-05}, {'diff': 6.372300000000164e-05}, {'diff': 6.316600000000339e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:04.279" endtime="20201030 10:59:04.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.298" level="INFO">${ACCURACY} = {'diff': [6.347300000000139e-05, 6.340199999999713e-05, 6.409699999999907e-05, 6.383399999999873e-05, 6.372300000000164e-05, 6.316600000000339e-05, 6.32500000000008e-05, 6.348599999999455e-05, 6.39309...</msg>
<status status="PASS" starttime="20201030 10:59:04.290" endtime="20201030 10:59:04.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.309" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.307" endtime="20201030 10:59:04.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.314" level="INFO">VALUE: [6.347300000000139e-05, 6.340199999999713e-05, 6.409699999999907e-05, 6.383399999999873e-05, 6.372300000000164e-05, 6.316600000000339e-05, 6.32500000000008e-05, 6.348599999999455e-05, 6.393099999999624e-05, 6.405500000000036e-05, 6.351400000000063e-05, 6.394499999999581e-05, 6.383299999999925e-05, 6.350000000000106e-05, 6.401400000000113e-05, 6.34159999999967e-05, 6.40280000000007e-05, 6.366700000000336e-05, 6.315299999999635e-05, 6.333299999999875e-05, 6.366699999999642e-05, 6.398600000000199e-05, 6.327700000000047e-05, 6.343100000000268e-05, 6.372300000000164e-05, 6.330499999999961e-05, 6.415300000000429e-05, 6.40699999999994e-05, 6.336099999999789e-05, 6.355599999999934e-05, 6.376400000000088e-05, 6.326400000000038e-05, 6.358399999999848e-05, 6.383299999999925e-05, 6.383399999999873e-05, 6.391700000000361e-05, 6.376400000000088e-05, 6.334699999999832e-05, 6.394400000000328e-05, 6.395900000000232e-05, 6.323600000000124e-05, 6.3582999999999e-05, 6.333299999999875e-05, 6.34300000000032e-05, 6.343100000000268e-05, 6.367999999999652e-05, 6.380500000000011e-05, 6.33200000000056e-05, 6.323600000000124e-05, 6.318000000000296e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.311" endtime="20201030 10:59:04.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.300" endtime="20201030 10:59:04.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.327" endtime="20201030 10:59:04.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.323" endtime="20201030 10:59:04.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.320" endtime="20201030 10:59:04.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.836" endtime="20201030 10:59:04.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.835" endtime="20201030 10:59:04.352"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.374" endtime="20201030 10:59:04.392"></status>
</kw>
<msg timestamp="20201030 10:59:04.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.371" endtime="20201030 10:59:04.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.396" endtime="20201030 10:59:04.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.402" endtime="20201030 10:59:04.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.364" endtime="20201030 10:59:04.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.358" endtime="20201030 10:59:04.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.425" endtime="20201030 10:59:04.758"></status>
</kw>
<msg timestamp="20201030 10:59:04.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039040875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039105944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.422" endtime="20201030 10:59:04.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039040875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039105944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.768" endtime="20201030 10:59:04.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.786" endtime="20201030 10:59:04.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.414" endtime="20201030 10:59:04.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.410" endtime="20201030 10:59:04.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.803" level="INFO">${RESULT} = [{'diff': 6.506899999999399e-05}, {'diff': 6.455500000000086e-05}, {'diff': 6.419400000000353e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.452700000000172e-05}, {'diff': 6.461099999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:04.794" endtime="20201030 10:59:04.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.814" level="INFO">${ACCURACY} = {'diff': [6.506899999999399e-05, 6.455500000000086e-05, 6.419400000000353e-05, 6.462499999999871e-05, 6.452700000000172e-05, 6.461099999999914e-05, 6.501400000000213e-05, 6.476400000000188e-05, 6.5013...</msg>
<status status="PASS" starttime="20201030 10:59:04.805" endtime="20201030 10:59:04.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.825" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.823" endtime="20201030 10:59:04.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.830" level="INFO">VALUE: [6.506899999999399e-05, 6.455500000000086e-05, 6.419400000000353e-05, 6.462499999999871e-05, 6.452700000000172e-05, 6.461099999999914e-05, 6.501400000000213e-05, 6.476400000000188e-05, 6.501399999999519e-05, 6.42359999999953e-05, 6.506900000000093e-05, 6.415300000000429e-05, 6.483399999999973e-05, 6.481900000000068e-05, 6.430600000000009e-05, 6.422200000000267e-05, 6.476400000000188e-05, 6.508399999999998e-05, 6.46950000000035e-05, 6.479200000000102e-05, 6.437499999999846e-05, 6.415300000000429e-05, 6.479200000000102e-05, 6.461199999999861e-05, 6.479100000000154e-05, 6.416700000000386e-05, 6.43750000000054e-05, 6.419399999999659e-05, 6.469400000000403e-05, 6.431900000000018e-05, 6.423600000000224e-05, 6.440199999999813e-05, 6.480500000000111e-05, 6.459699999999957e-05, 6.463900000000522e-05, 6.505500000000136e-05, 6.430500000000061e-05, 6.483399999999973e-05, 6.484699999999982e-05, 6.479200000000102e-05, 6.50280000000017e-05, 6.454200000000077e-05, 6.412499999999821e-05, 6.445900000000282e-05, 6.436099999999889e-05, 6.509700000000007e-05, 6.501400000000213e-05, 6.483399999999973e-05, 6.42500000000018e-05, 6.50700000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.827" endtime="20201030 10:59:04.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.816" endtime="20201030 10:59:04.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.843" endtime="20201030 10:59:04.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.838" endtime="20201030 10:59:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.836" endtime="20201030 10:59:04.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.354" endtime="20201030 10:59:04.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.353" endtime="20201030 10:59:04.868"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.890" endtime="20201030 10:59:04.908"></status>
</kw>
<msg timestamp="20201030 10:59:04.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.887" endtime="20201030 10:59:04.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.912" endtime="20201030 10:59:04.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.918" endtime="20201030 10:59:04.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.880" endtime="20201030 10:59:04.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.874" endtime="20201030 10:59:04.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.941" endtime="20201030 10:59:05.277"></status>
</kw>
<msg timestamp="20201030 10:59:05.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039274694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.938" endtime="20201030 10:59:05.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039274694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.287" endtime="20201030 10:59:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.305" endtime="20201030 10:59:05.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.931" endtime="20201030 10:59:05.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.926" endtime="20201030 10:59:05.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.322" level="INFO">${RESULT} = [{'diff': 6.590199999999963e-05}, {'diff': 6.50830000000005e-05}, {'diff': 6.547199999999698e-05}, {'diff': 6.573600000000374e-05}, {'diff': 6.586099999999345e-05}, {'diff': 6.604100000000279e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:05.314" endtime="20201030 10:59:05.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.332" level="INFO">${ACCURACY} = {'diff': [6.590199999999963e-05, 6.50830000000005e-05, 6.547199999999698e-05, 6.573600000000374e-05, 6.586099999999345e-05, 6.604100000000279e-05, 6.60280000000027e-05, 6.518100000000443e-05, 6.550000...</msg>
<status status="PASS" starttime="20201030 10:59:05.325" endtime="20201030 10:59:05.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.343" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.340" endtime="20201030 10:59:05.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.348" level="INFO">VALUE: [6.590199999999963e-05, 6.50830000000005e-05, 6.547199999999698e-05, 6.573600000000374e-05, 6.586099999999345e-05, 6.604100000000279e-05, 6.60280000000027e-05, 6.518100000000443e-05, 6.550000000000306e-05, 6.536099999999989e-05, 6.600000000000356e-05, 6.526400000000238e-05, 6.602799999999576e-05, 6.530600000000109e-05, 6.583400000000073e-05, 6.530499999999467e-05, 6.555500000000186e-05, 6.588899999999953e-05, 6.545800000000435e-05, 6.561100000000014e-05, 6.545800000000435e-05, 6.53479999999998e-05, 6.536099999999989e-05, 6.611100000000064e-05, 6.541699999999817e-05, 6.58480000000003e-05, 6.569399999999809e-05, 6.516699999999792e-05, 6.602700000000322e-05, 6.573700000000321e-05, 6.545799999999741e-05, 6.586100000000039e-05, 6.527800000000195e-05, 6.516599999999845e-05, 6.5583000000001e-05, 6.552799999999526e-05, 6.559800000000005e-05, 6.588899999999953e-05, 6.556900000000143e-05, 6.584699999999388e-05, 6.558299999999406e-05, 6.604200000000227e-05, 6.518099999999749e-05, 6.579100000000254e-05, 6.523600000000324e-05, 6.60830000000015e-05, 6.605600000000184e-05, 6.555600000000134e-05, 6.573699999999627e-05, 6.594399999999834e-05]</msg>
<status status="PASS" starttime="20201030 10:59:05.345" endtime="20201030 10:59:05.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.334" endtime="20201030 10:59:05.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.360" endtime="20201030 10:59:05.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.356" endtime="20201030 10:59:05.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.354" endtime="20201030 10:59:05.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.870" endtime="20201030 10:59:05.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.869" endtime="20201030 10:59:05.385"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.408" endtime="20201030 10:59:05.427"></status>
</kw>
<msg timestamp="20201030 10:59:05.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.405" endtime="20201030 10:59:05.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.431" endtime="20201030 10:59:05.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.437" endtime="20201030 10:59:05.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.397" endtime="20201030 10:59:05.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.392" endtime="20201030 10:59:05.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.461" endtime="20201030 10:59:05.793"></status>
</kw>
<msg timestamp="20201030 10:59:05.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040551208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04061775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:05.457" endtime="20201030 10:59:05.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040551208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04061775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:05.803" endtime="20201030 10:59:05.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.822" endtime="20201030 10:59:05.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.450" endtime="20201030 10:59:05.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.445" endtime="20201030 10:59:05.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.839" level="INFO">${RESULT} = [{'diff': 6.654200000000277e-05}, {'diff': 6.62359999999973e-05}, {'diff': 6.622200000000467e-05}, {'diff': 6.70559999999959e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.618099999999849e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:05.830" endtime="20201030 10:59:05.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.848" level="INFO">${ACCURACY} = {'diff': [6.654200000000277e-05, 6.62359999999973e-05, 6.622200000000467e-05, 6.70559999999959e-05, 6.666599999999995e-05, 6.618099999999849e-05, 6.676399999999694e-05, 6.656999999999497e-05, 6.661100...</msg>
<status status="PASS" starttime="20201030 10:59:05.841" endtime="20201030 10:59:05.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.859" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.856" endtime="20201030 10:59:05.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.864" level="INFO">VALUE: [6.654200000000277e-05, 6.62359999999973e-05, 6.622200000000467e-05, 6.70559999999959e-05, 6.666599999999995e-05, 6.618099999999849e-05, 6.676399999999694e-05, 6.656999999999497e-05, 6.661100000000114e-05, 6.687500000000096e-05, 6.672199999999823e-05, 6.698600000000499e-05, 6.634700000000132e-05, 6.672199999999823e-05, 6.672200000000517e-05, 6.704200000000327e-05, 6.612500000000021e-05, 6.662499999999377e-05, 6.694399999999934e-05, 6.626400000000338e-05, 6.677700000000397e-05, 6.640200000000013e-05, 6.652699999999678e-05, 6.679200000000302e-05, 6.70559999999959e-05, 6.632000000000166e-05, 6.705600000000284e-05, 6.631999999999472e-05, 6.6277999999996e-05, 6.608299999999456e-05, 6.695800000000585e-05, 6.672199999999823e-05, 6.706999999999547e-05, 6.626399999999644e-05, 6.641699999999917e-05, 6.619499999999806e-05, 6.663900000000028e-05, 6.619399999999859e-05, 6.633400000000123e-05, 6.680500000000311e-05, 6.613899999999978e-05, 6.669399999999909e-05, 6.651399999999669e-05, 6.702799999999676e-05, 6.680499999999617e-05, 6.681899999999574e-05, 6.631899999999524e-05, 6.620799999999816e-05, 6.66109999999942e-05, 6.654199999999583e-05]</msg>
<status status="PASS" starttime="20201030 10:59:05.861" endtime="20201030 10:59:05.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.850" endtime="20201030 10:59:05.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.878" endtime="20201030 10:59:05.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.872" endtime="20201030 10:59:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.870" endtime="20201030 10:59:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.388" endtime="20201030 10:59:05.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.386" endtime="20201030 10:59:05.903"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.925" endtime="20201030 10:59:05.944"></status>
</kw>
<msg timestamp="20201030 10:59:05.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.922" endtime="20201030 10:59:05.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.947" endtime="20201030 10:59:05.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.954" endtime="20201030 10:59:05.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.915" endtime="20201030 10:59:05.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.909" endtime="20201030 10:59:05.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.977" endtime="20201030 10:59:06.312"></status>
</kw>
<msg timestamp="20201030 10:59:06.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039133208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.974" endtime="20201030 10:59:06.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039133208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.321" endtime="20201030 10:59:06.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.340" endtime="20201030 10:59:06.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.966" endtime="20201030 10:59:06.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.962" endtime="20201030 10:59:06.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.357" level="INFO">${RESULT} = [{'diff': 6.786099999999545e-05}, {'diff': 6.727700000000447e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.741700000000017e-05}, {'diff': 6.713900000000078e-05}, {'diff': 6.715300000000035e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:06.349" endtime="20201030 10:59:06.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.372" level="INFO">${ACCURACY} = {'diff': [6.786099999999545e-05, 6.727700000000447e-05, 6.718000000000002e-05, 6.741700000000017e-05, 6.713900000000078e-05, 6.715300000000035e-05, 6.762500000000171e-05, 6.729199999999658e-05, 6.7208...</msg>
<status status="PASS" starttime="20201030 10:59:06.359" endtime="20201030 10:59:06.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.383" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.381" endtime="20201030 10:59:06.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.388" level="INFO">VALUE: [6.786099999999545e-05, 6.727700000000447e-05, 6.718000000000002e-05, 6.741700000000017e-05, 6.713900000000078e-05, 6.715300000000035e-05, 6.762500000000171e-05, 6.729199999999658e-05, 6.720899999999863e-05, 6.780500000000411e-05, 6.80559999999969e-05, 6.797199999999948e-05, 6.720899999999863e-05, 6.736100000000189e-05, 6.712500000000121e-05, 6.763899999999434e-05, 6.747199999999898e-05, 6.80559999999969e-05, 6.804100000000479e-05, 6.795899999999938e-05, 6.795899999999938e-05, 6.768000000000052e-05, 6.768000000000052e-05, 6.76109999999952e-05, 6.743099999999974e-05, 6.718000000000002e-05, 6.784699999999588e-05, 6.799999999999862e-05, 6.722200000000567e-05, 6.754099999999735e-05, 6.762500000000171e-05, 6.730499999999667e-05, 6.787500000000196e-05, 6.722199999999873e-05, 6.770799999999966e-05, 6.711100000000164e-05, 6.791700000000067e-05, 6.782000000000316e-05, 6.715300000000035e-05, 6.788900000000153e-05, 6.752700000000472e-05, 6.752799999999726e-05, 6.716699999999992e-05, 6.748699999999802e-05, 6.743000000000027e-05, 6.741700000000017e-05, 6.762499999999477e-05, 6.748599999999855e-05, 6.745799999999941e-05, 6.755600000000334e-05]</msg>
<status status="PASS" starttime="20201030 10:59:06.385" endtime="20201030 10:59:06.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.374" endtime="20201030 10:59:06.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.400" endtime="20201030 10:59:06.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.396" endtime="20201030 10:59:06.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.394" endtime="20201030 10:59:06.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.905" endtime="20201030 10:59:06.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.904" endtime="20201030 10:59:06.425"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.448" endtime="20201030 10:59:06.467"></status>
</kw>
<msg timestamp="20201030 10:59:06.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.445" endtime="20201030 10:59:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.470" endtime="20201030 10:59:06.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.476" endtime="20201030 10:59:06.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.438" endtime="20201030 10:59:06.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.432" endtime="20201030 10:59:06.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.499" endtime="20201030 10:59:06.832"></status>
</kw>
<msg timestamp="20201030 10:59:06.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039512625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.496" endtime="20201030 10:59:06.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039512625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.842" endtime="20201030 10:59:06.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.860" endtime="20201030 10:59:06.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.489" endtime="20201030 10:59:06.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.484" endtime="20201030 10:59:06.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.877" level="INFO">${RESULT} = [{'diff': 6.879199999999808e-05}, {'diff': 6.852699999999878e-05}, {'diff': 6.890299999999516e-05}, {'diff': 6.870800000000066e-05}, {'diff': 6.849999999999912e-05}, {'diff': 6.870800000000066e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:06.868" endtime="20201030 10:59:06.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.888" level="INFO">${ACCURACY} = {'diff': [6.879199999999808e-05, 6.852699999999878e-05, 6.890299999999516e-05, 6.870800000000066e-05, 6.849999999999912e-05, 6.870800000000066e-05, 6.824999999999887e-05, 6.861100000000314e-05, 6.8541...</msg>
<status status="PASS" starttime="20201030 10:59:06.879" endtime="20201030 10:59:06.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.899" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.896" endtime="20201030 10:59:06.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.904" level="INFO">VALUE: [6.879199999999808e-05, 6.852699999999878e-05, 6.890299999999516e-05, 6.870800000000066e-05, 6.849999999999912e-05, 6.870800000000066e-05, 6.824999999999887e-05, 6.861100000000314e-05, 6.854199999999783e-05, 6.893000000000177e-05, 6.820899999999963e-05, 6.841700000000117e-05, 6.815200000000188e-05, 6.884700000000382e-05, 6.91109999999967e-05, 6.868100000000099e-05, 6.818000000000102e-05, 6.869499999999362e-05, 6.815300000000135e-05, 6.890299999999516e-05, 6.89160000000022e-05, 6.877799999999851e-05, 6.848599999999955e-05, 6.820800000000016e-05, 6.855499999999792e-05, 6.830600000000409e-05, 6.863899999999534e-05, 6.863900000000228e-05, 6.868000000000152e-05, 6.856899999999749e-05, 6.868100000000099e-05, 6.856900000000443e-05, 6.819500000000006e-05, 6.82359999999993e-05, 6.872200000000023e-05, 6.834700000000332e-05, 6.909699999999713e-05, 6.844500000000031e-05, 6.849999999999912e-05, 6.891700000000167e-05, 6.855500000000486e-05, 6.847300000000639e-05, 6.881899999999774e-05, 6.843000000000127e-05, 6.906899999999799e-05, 6.851400000000563e-05, 6.833300000000375e-05, 6.897299999999995e-05, 6.812500000000221e-05, 6.834699999999638e-05]</msg>
<status status="PASS" starttime="20201030 10:59:06.901" endtime="20201030 10:59:06.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.890" endtime="20201030 10:59:06.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.916" endtime="20201030 10:59:06.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.912" endtime="20201030 10:59:06.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.910" endtime="20201030 10:59:06.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.428" endtime="20201030 10:59:06.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.426" endtime="20201030 10:59:06.941"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.964" endtime="20201030 10:59:06.982"></status>
</kw>
<msg timestamp="20201030 10:59:06.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.961" endtime="20201030 10:59:06.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.985" endtime="20201030 10:59:06.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.992" endtime="20201030 10:59:06.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.953" endtime="20201030 10:59:06.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.948" endtime="20201030 10:59:06.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.015" endtime="20201030 10:59:07.352"></status>
</kw>
<msg timestamp="20201030 10:59:07.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038949375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.012" endtime="20201030 10:59:07.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038949375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.361" endtime="20201030 10:59:07.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.380" endtime="20201030 10:59:07.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.004" endtime="20201030 10:59:07.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.000" endtime="20201030 10:59:07.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.397" level="INFO">${RESULT} = [{'diff': 6.943100000000174e-05}, {'diff': 6.927800000000595e-05}, {'diff': 6.962500000000371e-05}, {'diff': 6.927699999999953e-05}, {'diff': 6.991700000000267e-05}, {'diff': 6.913900000000278e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:07.388" endtime="20201030 10:59:07.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.406" level="INFO">${ACCURACY} = {'diff': [6.943100000000174e-05, 6.927800000000595e-05, 6.962500000000371e-05, 6.927699999999953e-05, 6.991700000000267e-05, 6.913900000000278e-05, 6.950000000000012e-05, 6.956899999999849e-05, 6.9209...</msg>
<status status="PASS" starttime="20201030 10:59:07.399" endtime="20201030 10:59:07.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.417" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.414" endtime="20201030 10:59:07.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.422" level="INFO">VALUE: [6.943100000000174e-05, 6.927800000000595e-05, 6.962500000000371e-05, 6.927699999999953e-05, 6.991700000000267e-05, 6.913900000000278e-05, 6.950000000000012e-05, 6.956899999999849e-05, 6.920900000000063e-05, 6.998600000000105e-05, 7.002799999999976e-05, 6.970900000000113e-05, 7.013900000000378e-05, 6.956999999999797e-05, 6.931899999999824e-05, 6.911100000000364e-05, 6.975000000000037e-05, 7.009699999999813e-05, 6.92360000000003e-05, 6.987499999999702e-05, 6.992999999999583e-05, 6.972200000000123e-05, 7.006899999999899e-05, 6.986199999999693e-05, 6.977799999999951e-05, 6.998600000000105e-05, 6.990200000000363e-05, 6.997200000000148e-05, 6.988899999999659e-05, 6.97909999999996e-05, 6.95559999999984e-05, 6.97230000000007e-05, 6.913900000000278e-05, 6.994500000000181e-05, 6.993000000000277e-05, 6.920800000000116e-05, 7.000000000000062e-05, 6.963899999999634e-05, 6.986099999999745e-05, 7.011100000000464e-05, 6.930500000000561e-05, 6.958399999999754e-05, 7.004199999999933e-05, 6.922200000000073e-05, 6.916600000000245e-05, 6.91109999999967e-05, 6.930599999999815e-05, 6.927799999999901e-05, 6.959700000000457e-05, 6.948600000000055e-05]</msg>
<status status="PASS" starttime="20201030 10:59:07.419" endtime="20201030 10:59:07.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.408" endtime="20201030 10:59:07.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.441" endtime="20201030 10:59:07.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.436" endtime="20201030 10:59:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.434" endtime="20201030 10:59:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.943" endtime="20201030 10:59:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.942" endtime="20201030 10:59:07.466"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.488" endtime="20201030 10:59:07.508"></status>
</kw>
<msg timestamp="20201030 10:59:07.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.485" endtime="20201030 10:59:07.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.512" endtime="20201030 10:59:07.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.518" endtime="20201030 10:59:07.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.478" endtime="20201030 10:59:07.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.472" endtime="20201030 10:59:07.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.541" endtime="20201030 10:59:07.875"></status>
</kw>
<msg timestamp="20201030 10:59:07.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04083225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:07.538" endtime="20201030 10:59:07.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04083225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:07.885" endtime="20201030 10:59:07.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.903" endtime="20201030 10:59:07.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.531" endtime="20201030 10:59:07.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.526" endtime="20201030 10:59:07.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.921" level="INFO">${RESULT} = [{'diff': 7.018100000000249e-05}, {'diff': 7.015300000000335e-05}, {'diff': 7.051400000000069e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.095799999999597e-05}, {'diff': 7.084799999999836e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:07.912" endtime="20201030 10:59:07.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.930" level="INFO">${ACCURACY} = {'diff': [7.018100000000249e-05, 7.015300000000335e-05, 7.051400000000069e-05, 7.05689999999995e-05, 7.095799999999597e-05, 7.084799999999836e-05, 7.066599999999701e-05, 7.05689999999995e-05, 7.080599...</msg>
<status status="PASS" starttime="20201030 10:59:07.923" endtime="20201030 10:59:07.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.941" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.939" endtime="20201030 10:59:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.946" level="INFO">VALUE: [7.018100000000249e-05, 7.015300000000335e-05, 7.051400000000069e-05, 7.05689999999995e-05, 7.095799999999597e-05, 7.084799999999836e-05, 7.066599999999701e-05, 7.05689999999995e-05, 7.080599999999965e-05, 7.09439999999964e-05, 7.020899999999469e-05, 7.016600000000345e-05, 7.105500000000042e-05, 7.098600000000205e-05, 7.030499999999967e-05, 7.041699999999623e-05, 7.093000000000377e-05, 7.113899999999784e-05, 7.081999999999922e-05, 7.080599999999965e-05, 7.102800000000076e-05, 7.063899999999734e-05, 7.084799999999836e-05, 7.034699999999838e-05, 7.030599999999915e-05, 7.09160000000042e-05, 7.093100000000324e-05, 7.033299999999881e-05, 7.045800000000241e-05, 7.022199999999479e-05, 7.013900000000378e-05, 7.041699999999623e-05, 7.030599999999915e-05, 7.040200000000413e-05, 7.013899999999684e-05, 7.030599999999915e-05, 7.09439999999964e-05, 7.1069e-05, 7.055600000000634e-05, 7.042999999999633e-05, 7.081899999999974e-05, 7.083299999999931e-05, 7.02360000000013e-05, 7.041700000000317e-05, 7.094500000000281e-05, 7.099999999999468e-05, 7.038899999999709e-05, 7.106999999999947e-05, 7.102699999999434e-05, 7.072200000000223e-05]</msg>
<status status="PASS" starttime="20201030 10:59:07.943" endtime="20201030 10:59:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.932" endtime="20201030 10:59:07.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.960" endtime="20201030 10:59:07.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.954" endtime="20201030 10:59:07.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.952" endtime="20201030 10:59:07.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.468" endtime="20201030 10:59:07.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.467" endtime="20201030 10:59:07.985"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.008" endtime="20201030 10:59:08.026"></status>
</kw>
<msg timestamp="20201030 10:59:08.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.004" endtime="20201030 10:59:08.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.029" endtime="20201030 10:59:08.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.035" endtime="20201030 10:59:08.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.997" endtime="20201030 10:59:08.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.991" endtime="20201030 10:59:08.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.060" endtime="20201030 10:59:08.393"></status>
</kw>
<msg timestamp="20201030 10:59:08.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039272208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.056" endtime="20201030 10:59:08.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039272208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.402" endtime="20201030 10:59:08.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.421" endtime="20201030 10:59:08.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.049" endtime="20201030 10:59:08.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.044" endtime="20201030 10:59:08.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:08.438" level="INFO">${RESULT} = [{'diff': 7.111100000000564e-05}, {'diff': 7.170799999999672e-05}, {'diff': 7.20560000000009e-05}, {'diff': 7.137500000000546e-05}, {'diff': 7.202799999999482e-05}, {'diff': 7.179200000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:08.429" endtime="20201030 10:59:08.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:08.448" level="INFO">${ACCURACY} = {'diff': [7.111100000000564e-05, 7.170799999999672e-05, 7.20560000000009e-05, 7.137500000000546e-05, 7.202799999999482e-05, 7.179200000000108e-05, 7.140199999999819e-05, 7.127799999999407e-05, 7.15280...</msg>
<status status="PASS" starttime="20201030 10:59:08.440" endtime="20201030 10:59:08.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.459" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:59:08.457" endtime="20201030 10:59:08.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.464" level="INFO">VALUE: [7.111100000000564e-05, 7.170799999999672e-05, 7.20560000000009e-05, 7.137500000000546e-05, 7.202799999999482e-05, 7.179200000000108e-05, 7.140199999999819e-05, 7.127799999999407e-05, 7.152800000000126e-05, 7.150000000000212e-05, 7.148600000000255e-05, 7.190299999999816e-05, 7.136099999999895e-05, 7.191699999999773e-05, 7.166699999999748e-05, 7.143000000000427e-05, 7.191599999999826e-05, 7.133299999999981e-05, 7.151400000000169e-05, 7.152799999999432e-05, 7.118000000000402e-05, 7.172200000000323e-05, 7.145800000000341e-05, 7.190299999999816e-05, 7.184699999999988e-05, 7.168000000000452e-05, 7.188899999999859e-05, 7.145799999999647e-05, 7.113900000000478e-05, 7.183300000000031e-05, 7.209700000000013e-05, 7.177800000000151e-05, 7.149999999999518e-05, 7.183399999999979e-05, 7.112499999999827e-05, 7.126400000000144e-05, 7.158399999999954e-05, 7.131900000000024e-05, 7.201400000000219e-05, 7.148599999999561e-05, 7.17360000000028e-05, 7.147200000000298e-05, 7.175000000000237e-05, 7.138900000000503e-05, 7.163900000000528e-05, 7.188899999999859e-05, 7.202800000000176e-05, 7.209700000000013e-05, 7.145899999999594e-05, 7.198599999999611e-05]</msg>
<status status="PASS" starttime="20201030 10:59:08.461" endtime="20201030 10:59:08.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.450" endtime="20201030 10:59:08.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.477" endtime="20201030 10:59:08.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.473" endtime="20201030 10:59:08.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.470" endtime="20201030 10:59:08.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.987" endtime="20201030 10:59:08.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.986" endtime="20201030 10:59:08.502"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.525" endtime="20201030 10:59:08.543"></status>
</kw>
<msg timestamp="20201030 10:59:08.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.521" endtime="20201030 10:59:08.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.546" endtime="20201030 10:59:08.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.553" endtime="20201030 10:59:08.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.514" endtime="20201030 10:59:08.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.508" endtime="20201030 10:59:08.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.576" endtime="20201030 10:59:08.909"></status>
</kw>
<msg timestamp="20201030 10:59:08.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.573" endtime="20201030 10:59:08.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.919" endtime="20201030 10:59:08.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.937" endtime="20201030 10:59:08.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.565" endtime="20201030 10:59:08.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.561" endtime="20201030 10:59:08.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:08.954" level="INFO">${RESULT} = [{'diff': 7.306899999999505e-05}, {'diff': 7.229200000000158e-05}, {'diff': 7.315199999999994e-05}, {'diff': 7.252700000000278e-05}, {'diff': 7.225000000000287e-05}, {'diff': 7.309700000000113e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:08.946" endtime="20201030 10:59:08.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:08.965" level="INFO">${ACCURACY} = {'diff': [7.306899999999505e-05, 7.229200000000158e-05, 7.315199999999994e-05, 7.252700000000278e-05, 7.225000000000287e-05, 7.309700000000113e-05, 7.24439999999979e-05, 7.287500000000002e-05, 7.25840...</msg>
<status status="PASS" starttime="20201030 10:59:08.956" endtime="20201030 10:59:08.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.976" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:59:08.974" endtime="20201030 10:59:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.982" level="INFO">VALUE: [7.306899999999505e-05, 7.229200000000158e-05, 7.315199999999994e-05, 7.252700000000278e-05, 7.225000000000287e-05, 7.309700000000113e-05, 7.24439999999979e-05, 7.287500000000002e-05, 7.258400000000054e-05, 7.233300000000081e-05, 7.279200000000208e-05, 7.29439999999984e-05, 7.255500000000192e-05, 7.302800000000276e-05, 7.266699999999848e-05, 7.26110000000002e-05, 7.220799999999722e-05, 7.315199999999994e-05, 7.241699999999823e-05, 7.251400000000269e-05, 7.306899999999505e-05, 7.280599999999471e-05, 7.222199999999679e-05, 7.273599999999686e-05, 7.213899999999884e-05, 7.290199999999969e-05, 7.3069000000002e-05, 7.276400000000294e-05, 7.230600000000115e-05, 7.209799999999961e-05, 7.245800000000441e-05, 7.293000000000577e-05, 7.274999999999643e-05, 7.230500000000167e-05, 7.218099999999755e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.286100000000045e-05, 7.236099999999995e-05, 7.31110000000007e-05, 7.274999999999643e-05, 7.251399999999575e-05, 7.299999999999668e-05, 7.313899999999984e-05, 7.294500000000481e-05, 7.30969999999942e-05, 7.269499999999762e-05, 7.291699999999873e-05, 7.256999999999403e-05, 7.266699999999848e-05]</msg>
<status status="PASS" starttime="20201030 10:59:08.979" endtime="20201030 10:59:08.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.967" endtime="20201030 10:59:08.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.994" endtime="20201030 10:59:09.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.990" endtime="20201030 10:59:09.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.987" endtime="20201030 10:59:09.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.504" endtime="20201030 10:59:09.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.503" endtime="20201030 10:59:09.019"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.042" endtime="20201030 10:59:09.060"></status>
</kw>
<msg timestamp="20201030 10:59:09.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.038" endtime="20201030 10:59:09.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.063" endtime="20201030 10:59:09.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.070" endtime="20201030 10:59:09.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.031" endtime="20201030 10:59:09.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.025" endtime="20201030 10:59:09.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.094" endtime="20201030 10:59:09.430"></status>
</kw>
<msg timestamp="20201030 10:59:09.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039257028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039330847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.090" endtime="20201030 10:59:09.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039257028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039330847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.440" endtime="20201030 10:59:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.458" endtime="20201030 10:59:09.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.083" endtime="20201030 10:59:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.078" endtime="20201030 10:59:09.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.475" level="INFO">${RESULT} = [{'diff': 7.381900000000274e-05}, {'diff': 7.377799999999657e-05}, {'diff': 7.405499999999648e-05}, {'diff': 7.397199999999854e-05}, {'diff': 7.351399999999675e-05}, {'diff': 7.32769999999966e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:09.467" endtime="20201030 10:59:09.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.485" level="INFO">${ACCURACY} = {'diff': [7.381900000000274e-05, 7.377799999999657e-05, 7.405499999999648e-05, 7.397199999999854e-05, 7.351399999999675e-05, 7.32769999999966e-05, 7.316700000000592e-05, 7.391600000000026e-05, 7.32500...</msg>
<status status="PASS" starttime="20201030 10:59:09.477" endtime="20201030 10:59:09.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.495" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.493" endtime="20201030 10:59:09.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.501" level="INFO">VALUE: [7.381900000000274e-05, 7.377799999999657e-05, 7.405499999999648e-05, 7.397199999999854e-05, 7.351399999999675e-05, 7.32769999999966e-05, 7.316700000000592e-05, 7.391600000000026e-05, 7.325000000000387e-05, 7.319500000000506e-05, 7.366699999999948e-05, 7.359799999999417e-05, 7.362500000000077e-05, 7.356999999999503e-05, 7.362500000000077e-05, 7.390300000000016e-05, 7.351400000000369e-05, 7.390200000000069e-05, 7.348599999999761e-05, 7.407000000000247e-05, 7.330500000000267e-05, 7.333300000000181e-05, 7.383300000000231e-05, 7.361099999999426e-05, 7.372200000000523e-05, 7.349999999999718e-05, 7.369399999999915e-05, 7.357000000000197e-05, 7.351400000000369e-05, 7.401400000000419e-05, 7.316700000000592e-05, 7.336100000000095e-05, 7.354199999999589e-05, 7.348700000000402e-05, 7.350000000000412e-05, 7.391699999999973e-05, 7.372200000000523e-05, 7.36110000000012e-05, 7.338900000000009e-05, 7.330500000000267e-05, 7.37360000000048e-05, 7.363800000000087e-05, 7.325000000000387e-05, 7.370800000000566e-05, 7.349999999999718e-05, 7.387500000000102e-05, 7.379199999999614e-05, 7.381900000000274e-05, 7.340299999999966e-05, 7.4069000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:59:09.498" endtime="20201030 10:59:09.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.486" endtime="20201030 10:59:09.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.513" endtime="20201030 10:59:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.509" endtime="20201030 10:59:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.506" endtime="20201030 10:59:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.021" endtime="20201030 10:59:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.020" endtime="20201030 10:59:09.538"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.561" endtime="20201030 10:59:09.581"></status>
</kw>
<msg timestamp="20201030 10:59:09.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.557" endtime="20201030 10:59:09.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.584" endtime="20201030 10:59:09.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.590" endtime="20201030 10:59:09.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.550" endtime="20201030 10:59:09.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.545" endtime="20201030 10:59:09.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.613" endtime="20201030 10:59:09.947"></status>
</kw>
<msg timestamp="20201030 10:59:09.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.610" endtime="20201030 10:59:09.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.956" endtime="20201030 10:59:09.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.975" endtime="20201030 10:59:09.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.603" endtime="20201030 10:59:09.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.599" endtime="20201030 10:59:09.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.992" level="INFO">${RESULT} = [{'diff': 7.486100000000245e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.491700000000073e-05}, {'diff': 7.466600000000101e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.505499999999748e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:09.983" endtime="20201030 10:59:09.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.001" level="INFO">${ACCURACY} = {'diff': [7.486100000000245e-05, 7.472199999999929e-05, 7.491700000000073e-05, 7.466600000000101e-05, 7.413900000000084e-05, 7.505499999999748e-05, 7.509700000000313e-05, 7.506999999999653e-05, 7.4139...</msg>
<status status="PASS" starttime="20201030 10:59:09.994" endtime="20201030 10:59:10.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.012" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.010" endtime="20201030 10:59:10.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.017" level="INFO">VALUE: [7.486100000000245e-05, 7.472199999999929e-05, 7.491700000000073e-05, 7.466600000000101e-05, 7.413900000000084e-05, 7.505499999999748e-05, 7.509700000000313e-05, 7.506999999999653e-05, 7.413900000000084e-05, 7.51110000000027e-05, 7.477799999999757e-05, 7.416699999999998e-05, 7.433399999999535e-05, 7.483300000000331e-05, 7.44309999999998e-05, 7.46110000000022e-05, 7.416699999999998e-05, 7.437500000000152e-05, 7.484799999999542e-05, 7.44439999999999e-05, 7.497199999999954e-05, 7.424999999999793e-05, 7.42230000000052e-05, 7.463900000000134e-05, 7.447199999999904e-05, 7.457000000000297e-05, 7.422199999999879e-05, 7.466700000000048e-05, 7.445799999999947e-05, 7.504199999999739e-05, 7.422199999999879e-05, 7.46519999999945e-05, 7.462500000000177e-05, 7.437500000000152e-05, 7.469400000000015e-05, 7.513900000000184e-05, 7.505499999999748e-05, 7.486100000000245e-05, 7.46110000000022e-05, 7.432000000000272e-05, 7.477800000000451e-05, 7.51389999999949e-05, 7.449999999999818e-05, 7.418000000000008e-05, 7.477799999999757e-05, 7.419499999999912e-05, 7.436100000000195e-05, 7.444500000000631e-05, 7.466700000000048e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201030 10:59:10.014" endtime="20201030 10:59:10.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.003" endtime="20201030 10:59:10.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.031" endtime="20201030 10:59:10.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.026" endtime="20201030 10:59:10.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.023" endtime="20201030 10:59:10.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.540" endtime="20201030 10:59:10.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.539" endtime="20201030 10:59:10.056"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.079" endtime="20201030 10:59:10.097"></status>
</kw>
<msg timestamp="20201030 10:59:10.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.076" endtime="20201030 10:59:10.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.101" endtime="20201030 10:59:10.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.107" endtime="20201030 10:59:10.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.069" endtime="20201030 10:59:10.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.063" endtime="20201030 10:59:10.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.132" endtime="20201030 10:59:10.467"></status>
</kw>
<msg timestamp="20201030 10:59:10.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039200375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039275542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.128" endtime="20201030 10:59:10.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039200375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039275542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.476" endtime="20201030 10:59:10.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.495" endtime="20201030 10:59:10.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.121" endtime="20201030 10:59:10.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.116" endtime="20201030 10:59:10.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.512" level="INFO">${RESULT} = [{'diff': 7.516699999999404e-05}, {'diff': 7.602800000000576e-05}, {'diff': 7.570800000000072e-05}, {'diff': 7.601399999999925e-05}, {'diff': 7.530600000000415e-05}, {'diff': 7.580499999999823e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:10.503" endtime="20201030 10:59:10.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.522" level="INFO">${ACCURACY} = {'diff': [7.516699999999404e-05, 7.602800000000576e-05, 7.570800000000072e-05, 7.601399999999925e-05, 7.530600000000415e-05, 7.580499999999823e-05, 7.609800000000361e-05, 7.597200000000054e-05, 7.6068...</msg>
<status status="PASS" starttime="20201030 10:59:10.514" endtime="20201030 10:59:10.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.533" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.531" endtime="20201030 10:59:10.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.538" level="INFO">VALUE: [7.516699999999404e-05, 7.602800000000576e-05, 7.570800000000072e-05, 7.601399999999925e-05, 7.530600000000415e-05, 7.580499999999823e-05, 7.609800000000361e-05, 7.597200000000054e-05, 7.606899999999805e-05, 7.605599999999796e-05, 7.61110000000037e-05, 7.563900000000234e-05, 7.554200000000483e-05, 7.58189999999978e-05, 7.569500000000062e-05, 7.584700000000388e-05, 7.577799999999857e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.595900000000044e-05, 7.61389999999959e-05, 7.551399999999875e-05, 7.573599999999986e-05, 7.58189999999978e-05, 7.533400000000329e-05, 7.590300000000216e-05, 7.527799999999807e-05, 7.562499999999583e-05, 7.569500000000062e-05, 7.54440000000009e-05, 7.611099999999676e-05, 7.593000000000183e-05, 7.565300000000191e-05, 7.54440000000009e-05, 7.559800000000311e-05, 7.534699999999644e-05, 7.604099999999892e-05, 7.558299999999712e-05, 7.53890000000021e-05, 7.529200000000458e-05, 7.54310000000008e-05, 7.586099999999651e-05, 7.590200000000269e-05, 7.55839999999966e-05, 7.541600000000176e-05, 7.59719999999936e-05, 7.524999999999893e-05, 7.551299999999928e-05, 7.529200000000458e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:59:10.535" endtime="20201030 10:59:10.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.524" endtime="20201030 10:59:10.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.551" endtime="20201030 10:59:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.546" endtime="20201030 10:59:10.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.544" endtime="20201030 10:59:10.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.059" endtime="20201030 10:59:10.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.057" endtime="20201030 10:59:10.576"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.598" endtime="20201030 10:59:10.617"></status>
</kw>
<msg timestamp="20201030 10:59:10.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.595" endtime="20201030 10:59:10.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.620" endtime="20201030 10:59:10.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.627" endtime="20201030 10:59:10.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.588" endtime="20201030 10:59:10.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.582" endtime="20201030 10:59:10.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.650" endtime="20201030 10:59:10.983"></status>
</kw>
<msg timestamp="20201030 10:59:10.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039512986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.646" endtime="20201030 10:59:10.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039512986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.993" endtime="20201030 10:59:11.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.012" endtime="20201030 10:59:11.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.639" endtime="20201030 10:59:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.635" endtime="20201030 10:59:11.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.029" level="INFO">${RESULT} = [{'diff': 7.60969999999972e-05}, {'diff': 7.656999999999803e-05}, {'diff': 7.701300000000078e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.658400000000454e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:11.020" endtime="20201030 10:59:11.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.040" level="INFO">${ACCURACY} = {'diff': [7.60969999999972e-05, 7.656999999999803e-05, 7.701300000000078e-05, 7.673600000000086e-05, 7.648600000000061e-05, 7.658400000000454e-05, 7.702799999999982e-05, 7.638899999999615e-05, 7.69170...</msg>
<status status="PASS" starttime="20201030 10:59:11.031" endtime="20201030 10:59:11.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.050" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.048" endtime="20201030 10:59:11.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.056" level="INFO">VALUE: [7.60969999999972e-05, 7.656999999999803e-05, 7.701300000000078e-05, 7.673600000000086e-05, 7.648600000000061e-05, 7.658400000000454e-05, 7.702799999999982e-05, 7.638899999999615e-05, 7.691700000000273e-05, 7.654199999999889e-05, 7.706899999999905e-05, 7.650000000000018e-05, 7.650000000000018e-05, 7.695800000000197e-05, 7.708299999999862e-05, 7.687499999999708e-05, 7.645799999999453e-05, 7.656999999999803e-05, 7.686200000000393e-05, 7.690299999999622e-05, 7.690299999999622e-05, 7.616700000000198e-05, 7.665300000000291e-05, 7.683299999999837e-05, 7.702799999999982e-05, 7.654199999999889e-05, 7.632000000000472e-05, 7.67770000000001e-05, 7.679199999999914e-05, 7.618099999999461e-05, 7.695800000000197e-05, 7.637500000000352e-05, 7.684700000000488e-05, 7.704099999999992e-05, 7.622200000000079e-05, 7.681999999999828e-05, 7.655499999999898e-05, 7.620800000000122e-05, 7.640300000000266e-05, 7.651399999999975e-05, 7.6764e-05, 7.624999999999993e-05, 7.640300000000266e-05, 7.656899999999855e-05, 7.616700000000198e-05, 7.70969999999982e-05, 7.669400000000215e-05, 7.645800000000147e-05, 7.708400000000504e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.053" endtime="20201030 10:59:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.041" endtime="20201030 10:59:11.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.068" endtime="20201030 10:59:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.064" endtime="20201030 10:59:11.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.061" endtime="20201030 10:59:11.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.578" endtime="20201030 10:59:11.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.577" endtime="20201030 10:59:11.093"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.116" endtime="20201030 10:59:11.134"></status>
</kw>
<msg timestamp="20201030 10:59:11.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.112" endtime="20201030 10:59:11.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.138" endtime="20201030 10:59:11.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.144" endtime="20201030 10:59:11.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.105" endtime="20201030 10:59:11.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.099" endtime="20201030 10:59:11.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.168" endtime="20201030 10:59:11.510"></status>
</kw>
<msg timestamp="20201030 10:59:11.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039111875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.165" endtime="20201030 10:59:11.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039111875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039189292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.520" endtime="20201030 10:59:11.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.538" endtime="20201030 10:59:11.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.157" endtime="20201030 10:59:11.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.152" endtime="20201030 10:59:11.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.555" level="INFO">${RESULT} = [{'diff': 7.741700000000323e-05}, {'diff': 7.744500000000237e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.734699999999844e-05}, {'diff': 7.795799999999603e-05}, {'diff': 7.813900000000484e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:11.547" endtime="20201030 10:59:11.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.564" level="INFO">${ACCURACY} = {'diff': [7.741700000000323e-05, 7.744500000000237e-05, 7.72640000000005e-05, 7.734699999999844e-05, 7.795799999999603e-05, 7.813900000000484e-05, 7.750000000000118e-05, 7.719399999999571e-05, 7.72080...</msg>
<status status="PASS" starttime="20201030 10:59:11.557" endtime="20201030 10:59:11.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.575" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.573" endtime="20201030 10:59:11.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.581" level="INFO">VALUE: [7.741700000000323e-05, 7.744500000000237e-05, 7.72640000000005e-05, 7.734699999999844e-05, 7.795799999999603e-05, 7.813900000000484e-05, 7.750000000000118e-05, 7.719399999999571e-05, 7.720800000000222e-05, 7.795799999999603e-05, 7.768000000000358e-05, 7.729199999999964e-05, 7.779200000000014e-05, 7.805500000000049e-05, 7.73189999999993e-05, 7.784699999999894e-05, 7.812499999999833e-05, 7.804100000000092e-05, 7.744399999999596e-05, 7.733299999999887e-05, 7.748600000000161e-05, 7.745800000000247e-05, 7.766699999999654e-05, 7.805500000000049e-05, 7.773600000000186e-05, 7.773600000000186e-05, 7.729199999999964e-05, 7.779200000000014e-05, 7.805599999999996e-05, 7.777800000000057e-05, 7.727800000000007e-05, 7.759799999999817e-05, 7.806900000000006e-05, 7.81389999999979e-05, 7.732000000000572e-05, 7.737500000000452e-05, 7.783399999999885e-05, 7.79169999999968e-05, 7.730499999999974e-05, 7.715299999999647e-05, 7.801400000000125e-05, 7.723600000000136e-05, 7.748600000000161e-05, 7.806999999999953e-05, 7.722200000000179e-05, 7.752800000000032e-05, 7.755599999999946e-05, 7.79440000000034e-05, 7.784799999999842e-05, 7.718099999999561e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.577" endtime="20201030 10:59:11.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.566" endtime="20201030 10:59:11.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.593" endtime="20201030 10:59:11.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.589" endtime="20201030 10:59:11.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.586" endtime="20201030 10:59:11.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.095" endtime="20201030 10:59:11.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.094" endtime="20201030 10:59:11.618"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.641" endtime="20201030 10:59:11.661"></status>
</kw>
<msg timestamp="20201030 10:59:11.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.637" endtime="20201030 10:59:11.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.664" endtime="20201030 10:59:11.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.670" endtime="20201030 10:59:11.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.630" endtime="20201030 10:59:11.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.625" endtime="20201030 10:59:11.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.695" endtime="20201030 10:59:12.030"></status>
</kw>
<msg timestamp="20201030 10:59:12.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040632583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.691" endtime="20201030 10:59:12.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040554222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040632583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.040" endtime="20201030 10:59:12.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.058" endtime="20201030 10:59:12.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.683" endtime="20201030 10:59:12.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.679" endtime="20201030 10:59:12.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.075" level="INFO">${RESULT} = [{'diff': 7.836099999999901e-05}, {'diff': 7.818100000000355e-05}, {'diff': 7.836099999999901e-05}, {'diff': 7.887499999999908e-05}, {'diff': 7.908300000000063e-05}, {'diff': 7.838899999999815e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:12.067" endtime="20201030 10:59:12.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.085" level="INFO">${ACCURACY} = {'diff': [7.836099999999901e-05, 7.818100000000355e-05, 7.836099999999901e-05, 7.887499999999908e-05, 7.908300000000063e-05, 7.838899999999815e-05, 7.880600000000071e-05, 7.829200000000064e-05, 7.8583...</msg>
<status status="PASS" starttime="20201030 10:59:12.077" endtime="20201030 10:59:12.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.095" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.093" endtime="20201030 10:59:12.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.101" level="INFO">VALUE: [7.836099999999901e-05, 7.818100000000355e-05, 7.836099999999901e-05, 7.887499999999908e-05, 7.908300000000063e-05, 7.838899999999815e-05, 7.880600000000071e-05, 7.829200000000064e-05, 7.85839999999996e-05, 7.884699999999994e-05, 7.836200000000543e-05, 7.858300000000012e-05, 7.819400000000365e-05, 7.895900000000344e-05, 7.895799999999703e-05, 7.912499999999933e-05, 7.837499999999858e-05, 7.834699999999944e-05, 7.879200000000114e-05, 7.84169999999973e-05, 7.88190000000008e-05, 7.911099999999976e-05, 7.819499999999618e-05, 7.899999999999574e-05, 7.836199999999849e-05, 7.902800000000182e-05, 7.891599999999832e-05, 7.827799999999413e-05, 7.837499999999858e-05, 7.840300000000466e-05, 7.899999999999574e-05, 7.837499999999858e-05, 7.83190000000003e-05, 7.890299999999822e-05, 7.851400000000175e-05, 7.873600000000286e-05, 7.905499999999455e-05, 7.91389999999989e-05, 7.877800000000157e-05, 7.862499999999883e-05, 7.848599999999567e-05, 7.847200000000304e-05, 7.834699999999944e-05, 7.816599999999757e-05, 7.901400000000225e-05, 7.85969999999997e-05, 7.868099999999711e-05, 7.84440000000039e-05, 7.850000000000218e-05, 7.886099999999951e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.098" endtime="20201030 10:59:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.086" endtime="20201030 10:59:12.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.115" endtime="20201030 10:59:12.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.109" endtime="20201030 10:59:12.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.106" endtime="20201030 10:59:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.620" endtime="20201030 10:59:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.619" endtime="20201030 10:59:12.140"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.162" endtime="20201030 10:59:12.181"></status>
</kw>
<msg timestamp="20201030 10:59:12.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.159" endtime="20201030 10:59:12.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.184" endtime="20201030 10:59:12.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.191" endtime="20201030 10:59:12.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.152" endtime="20201030 10:59:12.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.146" endtime="20201030 10:59:12.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.216" endtime="20201030 10:59:12.549"></status>
</kw>
<msg timestamp="20201030 10:59:12.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038981667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039060986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.212" endtime="20201030 10:59:12.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038981667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039060986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.559" endtime="20201030 10:59:12.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.577" endtime="20201030 10:59:12.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.205" endtime="20201030 10:59:12.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.200" endtime="20201030 10:59:12.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.594" level="INFO">${RESULT} = [{'diff': 7.93190000000013e-05}, {'diff': 7.983299999999444e-05}, {'diff': 7.974999999999649e-05}, {'diff': 7.919399999999771e-05}, {'diff': 7.938899999999915e-05}, {'diff': 8.002700000000335e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:12.586" endtime="20201030 10:59:12.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.605" level="INFO">${ACCURACY} = {'diff': [7.93190000000013e-05, 7.983299999999444e-05, 7.974999999999649e-05, 7.919399999999771e-05, 7.938899999999915e-05, 8.002700000000335e-05, 7.962499999999983e-05, 7.99589999999975e-05, 7.992999...</msg>
<status status="PASS" starttime="20201030 10:59:12.596" endtime="20201030 10:59:12.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.616" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.613" endtime="20201030 10:59:12.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.621" level="INFO">VALUE: [7.93190000000013e-05, 7.983299999999444e-05, 7.974999999999649e-05, 7.919399999999771e-05, 7.938899999999915e-05, 8.002700000000335e-05, 7.962499999999983e-05, 7.99589999999975e-05, 7.992999999999889e-05, 8.006999999999459e-05, 7.929200000000164e-05, 8.002800000000282e-05, 7.956900000000156e-05, 7.977799999999563e-05, 7.988899999999965e-05, 7.983299999999444e-05, 7.926399999999556e-05, 8.006900000000206e-05, 7.930500000000174e-05, 7.940299999999872e-05, 7.992999999999889e-05, 7.972199999999735e-05, 8.001400000000325e-05, 7.936100000000001e-05, 8.001400000000325e-05, 7.9764000000003e-05, 7.924999999999599e-05, 8.001399999999631e-05, 7.955500000000199e-05, 7.961100000000026e-05, 7.933300000000088e-05, 7.92640000000025e-05, 7.933299999999394e-05, 7.95840000000006e-05, 7.99719999999976e-05, 7.936100000000001e-05, 7.994399999999846e-05, 7.961100000000026e-05, 7.988899999999965e-05, 7.925000000000293e-05, 8.00970000000012e-05, 7.988800000000018e-05, 8.006999999999459e-05, 7.99719999999976e-05, 7.977800000000257e-05, 7.947200000000404e-05, 7.933300000000088e-05, 7.973599999999692e-05, 7.981999999999434e-05, 7.923600000000336e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.618" endtime="20201030 10:59:12.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.607" endtime="20201030 10:59:12.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.638" endtime="20201030 10:59:12.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.634" endtime="20201030 10:59:12.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.631" endtime="20201030 10:59:12.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.142" endtime="20201030 10:59:12.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.141" endtime="20201030 10:59:12.663"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.686" endtime="20201030 10:59:12.705"></status>
</kw>
<msg timestamp="20201030 10:59:12.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.682" endtime="20201030 10:59:12.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.708" endtime="20201030 10:59:12.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.714" endtime="20201030 10:59:12.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.675" endtime="20201030 10:59:12.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.670" endtime="20201030 10:59:12.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.737" endtime="20201030 10:59:13.070"></status>
</kw>
<msg timestamp="20201030 10:59:13.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039376181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.734" endtime="20201030 10:59:13.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039376181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.079" endtime="20201030 10:59:13.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.098" endtime="20201030 10:59:13.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.727" endtime="20201030 10:59:13.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.722" endtime="20201030 10:59:13.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.115" level="INFO">${RESULT} = [{'diff': 8.042999999999939e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.08190000000028e-05}, {'diff': 8.108299999999569e-05}, {'diff': 8.020899999999775e-05}, {'diff': 8.076399999999706e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:13.106" endtime="20201030 10:59:13.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:13.126" level="INFO">${ACCURACY} = {'diff': [8.042999999999939e-05, 8.061100000000126e-05, 8.08190000000028e-05, 8.108299999999569e-05, 8.020899999999775e-05, 8.076399999999706e-05, 8.03190000000023e-05, 8.086099999999458e-05, 8.077799...</msg>
<status status="PASS" starttime="20201030 10:59:13.117" endtime="20201030 10:59:13.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.137" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:59:13.134" endtime="20201030 10:59:13.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.142" level="INFO">VALUE: [8.042999999999939e-05, 8.061100000000126e-05, 8.08190000000028e-05, 8.108299999999569e-05, 8.020899999999775e-05, 8.076399999999706e-05, 8.03190000000023e-05, 8.086099999999458e-05, 8.077799999999663e-05, 8.020799999999828e-05, 8.062500000000083e-05, 8.054099999999648e-05, 8.101300000000478e-05, 8.062500000000083e-05, 8.111100000000177e-05, 8.07919999999962e-05, 8.086100000000151e-05, 8.065299999999997e-05, 8.027799999999613e-05, 8.02640000000035e-05, 8.084700000000195e-05, 8.016699999999904e-05, 8.0764000000004e-05, 8.065299999999997e-05, 8.098599999999817e-05, 8.031899999999537e-05, 8.111099999999483e-05, 8.09310000000063e-05, 8.09719999999986e-05, 8.073599999999792e-05, 8.099999999999774e-05, 8.105600000000296e-05, 8.065299999999997e-05, 8.040299999999972e-05, 8.033300000000188e-05, 8.070799999999878e-05, 8.108300000000263e-05, 8.10840000000021e-05, 8.098599999999817e-05, 8.045799999999853e-05, 8.113800000000143e-05, 8.104200000000339e-05, 8.073599999999792e-05, 8.025000000000393e-05, 8.08049999999963e-05, 8.102800000000382e-05, 8.116700000000004e-05, 8.11390000000009e-05, 8.036200000000049e-05, 8.037500000000058e-05]</msg>
<status status="PASS" starttime="20201030 10:59:13.139" endtime="20201030 10:59:13.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.128" endtime="20201030 10:59:13.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:13.154" endtime="20201030 10:59:13.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.150" endtime="20201030 10:59:13.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.148" endtime="20201030 10:59:13.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.665" endtime="20201030 10:59:13.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.664" endtime="20201030 10:59:13.179"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.202" endtime="20201030 10:59:13.221"></status>
</kw>
<msg timestamp="20201030 10:59:13.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.199" endtime="20201030 10:59:13.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.224" endtime="20201030 10:59:13.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.231" endtime="20201030 10:59:13.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.191" endtime="20201030 10:59:13.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.186" endtime="20201030 10:59:13.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.255" endtime="20201030 10:59:13.594"></status>
</kw>
<msg timestamp="20201030 10:59:13.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039200278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.252" endtime="20201030 10:59:13.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039118153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039200278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.604" endtime="20201030 10:59:13.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.622" endtime="20201030 10:59:13.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.244" endtime="20201030 10:59:13.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.240" endtime="20201030 10:59:13.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.640" level="INFO">${RESULT} = [{'diff': 8.21249999999954e-05}, {'diff': 8.211099999999583e-05}, {'diff': 8.205599999999702e-05}, {'diff': 8.21249999999954e-05}, {'diff': 8.20269999999984e-05}, {'diff': 8.133399999999541e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:59:13.631" endtime="20201030 10:59:13.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:13.649" level="INFO">${ACCURACY} = {'diff': [8.21249999999954e-05, 8.211099999999583e-05, 8.205599999999702e-05, 8.21249999999954e-05, 8.20269999999984e-05, 8.133399999999541e-05, 8.134700000000245e-05, 8.166700000000054e-05, 8.1180999...</msg>
<status status="PASS" starttime="20201030 10:59:13.642" endtime="20201030 10:59:13.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.660" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:59:13.658" endtime="20201030 10:59:13.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.665" level="INFO">VALUE: [8.21249999999954e-05, 8.211099999999583e-05, 8.205599999999702e-05, 8.21249999999954e-05, 8.20269999999984e-05, 8.133399999999541e-05, 8.134700000000245e-05, 8.166700000000054e-05, 8.118099999999961e-05, 8.187500000000208e-05, 8.193100000000036e-05, 8.116600000000057e-05, 8.199999999999874e-05, 8.125000000000493e-05, 8.137500000000158e-05, 8.150000000000518e-05, 8.154099999999748e-05, 8.183399999999591e-05, 8.205500000000449e-05, 8.211099999999583e-05, 8.211100000000277e-05, 8.180500000000424e-05, 8.145799999999953e-05, 8.165300000000097e-05, 8.125000000000493e-05, 8.199999999999874e-05, 8.122199999999885e-05, 8.202799999999788e-05, 8.215300000000147e-05, 8.215300000000147e-05, 8.199999999999874e-05, 8.177799999999763e-05, 8.126399999999756e-05, 8.193100000000036e-05, 8.161200000000174e-05, 8.186099999999558e-05, 8.140300000000072e-05, 8.134700000000245e-05, 8.173599999999892e-05, 8.116700000000004e-05, 8.143000000000039e-05, 8.119499999999918e-05, 8.188899999999472e-05, 8.123599999999842e-05, 8.123599999999842e-05, 8.14719999999991e-05, 8.205499999999755e-05, 8.143099999999986e-05, 8.202800000000482e-05, 8.191600000000132e-05]</msg>
<status status="PASS" starttime="20201030 10:59:13.662" endtime="20201030 10:59:13.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.651" endtime="20201030 10:59:13.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:13.678" endtime="20201030 10:59:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.674" endtime="20201030 10:59:13.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.671" endtime="20201030 10:59:13.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.182" endtime="20201030 10:59:13.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.180" endtime="20201030 10:59:13.703"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.726" endtime="20201030 10:59:13.746"></status>
</kw>
<msg timestamp="20201030 10:59:13.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.722" endtime="20201030 10:59:13.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.750" endtime="20201030 10:59:13.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.756" endtime="20201030 10:59:13.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.715" endtime="20201030 10:59:13.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.709" endtime="20201030 10:59:13.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.779" endtime="20201030 10:59:14.113"></status>
</kw>
<msg timestamp="20201030 10:59:14.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040853681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.776" endtime="20201030 10:59:14.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040853681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.123" endtime="20201030 10:59:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.141" endtime="20201030 10:59:14.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.769" endtime="20201030 10:59:14.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.764" endtime="20201030 10:59:14.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.158" level="INFO">${RESULT} = [{'diff': 8.242999999999445e-05}, {'diff': 8.237499999999565e-05}, {'diff': 8.305600000000496e-05}, {'diff': 8.304199999999845e-05}, {'diff': 8.26249999999959e-05}, {'diff': 8.308299999999769e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:14.150" endtime="20201030 10:59:14.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.168" level="INFO">${ACCURACY} = {'diff': [8.242999999999445e-05, 8.237499999999565e-05, 8.305600000000496e-05, 8.304199999999845e-05, 8.26249999999959e-05, 8.308299999999769e-05, 8.21390000000019e-05, 8.30970000000042e-05, 8.2332999...</msg>
<status status="PASS" starttime="20201030 10:59:14.160" endtime="20201030 10:59:14.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.178" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.176" endtime="20201030 10:59:14.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.184" level="INFO">VALUE: [8.242999999999445e-05, 8.237499999999565e-05, 8.305600000000496e-05, 8.304199999999845e-05, 8.26249999999959e-05, 8.308299999999769e-05, 8.21390000000019e-05, 8.30970000000042e-05, 8.233299999999694e-05, 8.211200000000224e-05, 8.233400000000335e-05, 8.31390000000029e-05, 8.230600000000421e-05, 8.302699999999941e-05, 8.237499999999565e-05, 8.24720000000001e-05, 8.294500000000093e-05, 8.251400000000575e-05, 8.269500000000068e-05, 8.251399999999881e-05, 8.272200000000035e-05, 8.283399999999691e-05, 8.243100000000086e-05, 8.243100000000086e-05, 8.243100000000086e-05, 8.224999999999899e-05, 8.223700000000583e-05, 8.306900000000506e-05, 8.256999999999709e-05, 8.269400000000121e-05, 8.276399999999906e-05, 8.244500000000043e-05, 8.266600000000207e-05, 8.243100000000086e-05, 8.27369999999994e-05, 8.238900000000215e-05, 8.225000000000593e-05, 8.223599999999942e-05, 8.31249999999964e-05, 8.287500000000309e-05, 8.27369999999994e-05, 8.233299999999694e-05, 8.301399999999931e-05, 8.254199999999795e-05, 8.207000000000353e-05, 8.286099999999658e-05, 8.24720000000001e-05, 8.227799999999813e-05, 8.273599999999992e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.181" endtime="20201030 10:59:14.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.169" endtime="20201030 10:59:14.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.198" endtime="20201030 10:59:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.192" endtime="20201030 10:59:14.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.189" endtime="20201030 10:59:14.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.705" endtime="20201030 10:59:14.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.704" endtime="20201030 10:59:14.223"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.245" endtime="20201030 10:59:14.264"></status>
</kw>
<msg timestamp="20201030 10:59:14.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.242" endtime="20201030 10:59:14.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.268" endtime="20201030 10:59:14.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.274" endtime="20201030 10:59:14.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.235" endtime="20201030 10:59:14.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.229" endtime="20201030 10:59:14.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.299" endtime="20201030 10:59:14.633"></status>
</kw>
<msg timestamp="20201030 10:59:14.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039139042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039222625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.296" endtime="20201030 10:59:14.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039139042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039222625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.642" endtime="20201030 10:59:14.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.661" endtime="20201030 10:59:14.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.288" endtime="20201030 10:59:14.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.283" endtime="20201030 10:59:14.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.678" level="INFO">${RESULT} = [{'diff': 8.358299999999819e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.388899999999672e-05}, {'diff': 8.395800000000203e-05}, {'diff': 8.376400000000006e-05}, {'diff': 8.348600000000067e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:14.669" endtime="20201030 10:59:14.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.688" level="INFO">${ACCURACY} = {'diff': [8.358299999999819e-05, 8.401400000000031e-05, 8.388899999999672e-05, 8.395800000000203e-05, 8.376400000000006e-05, 8.348600000000067e-05, 8.368100000000211e-05, 8.352799999999938e-05, 8.3555...</msg>
<status status="PASS" starttime="20201030 10:59:14.680" endtime="20201030 10:59:14.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.699" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.697" endtime="20201030 10:59:14.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.704" level="INFO">VALUE: [8.358299999999819e-05, 8.401400000000031e-05, 8.388899999999672e-05, 8.395800000000203e-05, 8.376400000000006e-05, 8.348600000000067e-05, 8.368100000000211e-05, 8.352799999999938e-05, 8.355599999999852e-05, 8.383299999999844e-05, 8.390300000000323e-05, 8.352700000000685e-05, 8.343000000000239e-05, 8.401399999999337e-05, 8.331899999999837e-05, 8.336099999999708e-05, 8.340299999999579e-05, 8.388899999999672e-05, 8.31390000000029e-05, 8.315300000000247e-05, 8.315300000000247e-05, 8.348600000000067e-05, 8.368100000000211e-05, 8.33049999999988e-05, 8.324999999999999e-05, 8.336100000000402e-05, 8.39720000000016e-05, 8.406899999999912e-05, 8.340299999999579e-05, 8.36390000000034e-05, 8.32369999999999e-05, 8.386099999999758e-05, 8.387499999999715e-05, 8.393100000000236e-05, 8.372199999999441e-05, 8.34720000000011e-05, 8.398600000000117e-05, 8.351399999999981e-05, 8.406900000000606e-05, 8.319500000000118e-05, 8.36799999999957e-05, 8.405599999999902e-05, 8.336099999999708e-05, 8.398600000000117e-05, 8.343000000000239e-05, 8.400000000000074e-05, 8.368100000000211e-05, 8.402799999999988e-05, 8.375000000000049e-05, 8.394399999999552e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.701" endtime="20201030 10:59:14.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.690" endtime="20201030 10:59:14.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.717" endtime="20201030 10:59:14.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.713" endtime="20201030 10:59:14.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.710" endtime="20201030 10:59:14.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.225" endtime="20201030 10:59:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.224" endtime="20201030 10:59:14.742"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.764" endtime="20201030 10:59:14.783"></status>
</kw>
<msg timestamp="20201030 10:59:14.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.761" endtime="20201030 10:59:14.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.787" endtime="20201030 10:59:14.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.793" endtime="20201030 10:59:14.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.754" endtime="20201030 10:59:14.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.748" endtime="20201030 10:59:14.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.816" endtime="20201030 10:59:15.149"></status>
</kw>
<msg timestamp="20201030 10:59:15.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039119667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.813" endtime="20201030 10:59:15.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039119667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.158" endtime="20201030 10:59:15.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.177" endtime="20201030 10:59:15.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.806" endtime="20201030 10:59:15.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.801" endtime="20201030 10:59:15.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.194" level="INFO">${RESULT} = [{'diff': 8.415299999999654e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.431999999999884e-05}, {'diff': 8.506900000000012e-05}, {'diff': 8.418100000000261e-05}, {'diff': 8.506900000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:15.185" endtime="20201030 10:59:15.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.205" level="INFO">${ACCURACY} = {'diff': [8.415299999999654e-05, 8.433299999999894e-05, 8.431999999999884e-05, 8.506900000000012e-05, 8.418100000000261e-05, 8.506900000000012e-05, 8.511099999999883e-05, 8.420800000000228e-05, 8.4846...</msg>
<status status="PASS" starttime="20201030 10:59:15.196" endtime="20201030 10:59:15.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.216" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.214" endtime="20201030 10:59:15.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.221" level="INFO">VALUE: [8.415299999999654e-05, 8.433299999999894e-05, 8.431999999999884e-05, 8.506900000000012e-05, 8.418100000000261e-05, 8.506900000000012e-05, 8.511099999999883e-05, 8.420800000000228e-05, 8.4846999999999e-05, 8.494400000000346e-05, 8.430599999999927e-05, 8.511099999999883e-05, 8.445899999999507e-05, 8.508299999999969e-05, 8.416700000000304e-05, 8.490199999999781e-05, 8.475000000000149e-05, 8.418000000000314e-05, 8.486099999999858e-05, 8.427700000000066e-05, 8.46669999999966e-05, 8.458399999999866e-05, 8.459800000000517e-05, 8.480599999999977e-05, 8.426400000000056e-05, 8.458299999999919e-05, 8.450000000000124e-05, 8.500000000000174e-05, 8.480599999999977e-05, 8.511099999999883e-05, 8.473600000000192e-05, 8.461100000000527e-05, 8.465299999999704e-05, 8.470899999999532e-05, 8.490299999999729e-05, 8.481999999999934e-05, 8.441600000000382e-05, 8.436100000000502e-05, 8.473600000000192e-05, 8.480599999999977e-05, 8.45970000000057e-05, 8.458299999999919e-05, 8.447199999999516e-05, 8.452800000000038e-05, 8.42919999999997e-05, 8.456899999999962e-05, 8.51249999999984e-05, 8.511099999999883e-05, 8.422200000000185e-05, 8.476400000000106e-05]</msg>
<status status="PASS" starttime="20201030 10:59:15.218" endtime="20201030 10:59:15.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.207" endtime="20201030 10:59:15.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.234" endtime="20201030 10:59:15.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.230" endtime="20201030 10:59:15.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.227" endtime="20201030 10:59:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.744" endtime="20201030 10:59:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.743" endtime="20201030 10:59:15.259"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.281" endtime="20201030 10:59:15.301"></status>
</kw>
<msg timestamp="20201030 10:59:15.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.278" endtime="20201030 10:59:15.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.304" endtime="20201030 10:59:15.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.311" endtime="20201030 10:59:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.271" endtime="20201030 10:59:15.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.265" endtime="20201030 10:59:15.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.335" endtime="20201030 10:59:15.669"></status>
</kw>
<msg timestamp="20201030 10:59:15.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039210167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039296306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.332" endtime="20201030 10:59:15.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039210167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039296306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.679" endtime="20201030 10:59:15.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.698" endtime="20201030 10:59:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.324" endtime="20201030 10:59:15.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.319" endtime="20201030 10:59:15.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.715" level="INFO">${RESULT} = [{'diff': 8.61390000000059e-05}, {'diff': 8.541699999999736e-05}, {'diff': 8.548599999999573e-05}, {'diff': 8.538899999999822e-05}, {'diff': 8.579099999999479e-05}, {'diff': 8.563899999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:15.706" endtime="20201030 10:59:15.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.724" level="INFO">${ACCURACY} = {'diff': [8.61390000000059e-05, 8.541699999999736e-05, 8.548599999999573e-05, 8.538899999999822e-05, 8.579099999999479e-05, 8.563899999999847e-05, 8.536099999999908e-05, 8.538799999999874e-05, 8.54310...</msg>
<status status="PASS" starttime="20201030 10:59:15.717" endtime="20201030 10:59:15.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.735" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.732" endtime="20201030 10:59:15.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.740" level="INFO">VALUE: [8.61390000000059e-05, 8.541699999999736e-05, 8.548599999999573e-05, 8.538899999999822e-05, 8.579099999999479e-05, 8.563899999999847e-05, 8.536099999999908e-05, 8.538799999999874e-05, 8.543100000000386e-05, 8.548600000000267e-05, 8.53469999999995e-05, 8.591600000000532e-05, 8.582000000000034e-05, 8.58050000000013e-05, 8.593100000000437e-05, 8.542999999999745e-05, 8.556900000000062e-05, 8.531900000000037e-05, 8.554200000000095e-05, 8.569399999999727e-05, 8.542999999999745e-05, 8.543100000000386e-05, 8.558300000000019e-05, 8.563899999999847e-05, 8.586099999999958e-05, 8.551399999999487e-05, 8.573600000000292e-05, 8.591599999999838e-05, 8.5459000000003e-05, 8.554199999999401e-05, 8.588899999999872e-05, 8.582000000000034e-05, 8.602800000000188e-05, 8.583300000000044e-05, 8.54720000000031e-05, 8.540300000000473e-05, 8.52920000000007e-05, 8.536199999999855e-05, 8.518000000000414e-05, 8.541599999999788e-05, 8.577799999999469e-05, 8.513899999999797e-05, 8.605599999999408e-05, 8.558399999999966e-05, 8.568100000000411e-05, 8.561099999999933e-05, 8.563899999999847e-05, 8.530600000000027e-05, 8.61249999999994e-05, 8.568100000000411e-05]</msg>
<status status="PASS" starttime="20201030 10:59:15.737" endtime="20201030 10:59:15.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.726" endtime="20201030 10:59:15.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.752" endtime="20201030 10:59:15.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.748" endtime="20201030 10:59:15.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.746" endtime="20201030 10:59:15.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.261" endtime="20201030 10:59:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.260" endtime="20201030 10:59:15.777"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.800" endtime="20201030 10:59:15.821"></status>
</kw>
<msg timestamp="20201030 10:59:15.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.797" endtime="20201030 10:59:15.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.824" endtime="20201030 10:59:15.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.830" endtime="20201030 10:59:15.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.790" endtime="20201030 10:59:15.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.784" endtime="20201030 10:59:15.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.853" endtime="20201030 10:59:16.187"></status>
</kw>
<msg timestamp="20201030 10:59:16.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040812542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.850" endtime="20201030 10:59:16.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040812542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.197" endtime="20201030 10:59:16.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.215" endtime="20201030 10:59:16.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.843" endtime="20201030 10:59:16.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.838" endtime="20201030 10:59:16.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.232" level="INFO">${RESULT} = [{'diff': 8.658400000000066e-05}, {'diff': 8.681899999999493e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.718099999999868e-05}, {'diff': 8.647299999999664e-05}, {'diff': 8.691699999999886e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:16.224" endtime="20201030 10:59:16.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.242" level="INFO">${ACCURACY} = {'diff': [8.658400000000066e-05, 8.681899999999493e-05, 8.611099999999983e-05, 8.718099999999868e-05, 8.647299999999664e-05, 8.691699999999886e-05, 8.663799999999999e-05, 8.672300000000382e-05, 8.6374...</msg>
<status status="PASS" starttime="20201030 10:59:16.234" endtime="20201030 10:59:16.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.253" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.251" endtime="20201030 10:59:16.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.258" level="INFO">VALUE: [8.658400000000066e-05, 8.681899999999493e-05, 8.611099999999983e-05, 8.718099999999868e-05, 8.647299999999664e-05, 8.691699999999886e-05, 8.663799999999999e-05, 8.672300000000382e-05, 8.637499999999965e-05, 8.686100000000058e-05, 8.683300000000144e-05, 8.655600000000152e-05, 8.679100000000273e-05, 8.636100000000008e-05, 8.618100000000462e-05, 8.681899999999493e-05, 8.672199999999741e-05, 8.683300000000144e-05, 8.638899999999922e-05, 8.673699999999646e-05, 8.618099999999768e-05, 8.620799999999734e-05, 8.688800000000024e-05, 8.633300000000094e-05, 8.648599999999673e-05, 8.661100000000033e-05, 8.711100000000083e-05, 8.652799999999544e-05, 8.627799999999519e-05, 8.679100000000273e-05, 8.648599999999673e-05, 8.659699999999382e-05, 8.666600000000607e-05, 8.636100000000008e-05, 8.626399999999562e-05, 8.69170000000058e-05, 8.627799999999519e-05, 8.682000000000134e-05, 8.652799999999544e-05, 8.676400000000306e-05, 8.637500000000659e-05, 8.640199999999931e-05, 8.6459000000004e-05, 8.706900000000212e-05, 8.63470000000005e-05, 8.676300000000359e-05, 8.691599999999938e-05, 8.708300000000169e-05, 8.681900000000187e-05, 8.673600000000392e-05]</msg>
<status status="PASS" starttime="20201030 10:59:16.255" endtime="20201030 10:59:16.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.244" endtime="20201030 10:59:16.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.276" endtime="20201030 10:59:16.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.266" endtime="20201030 10:59:16.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.264" endtime="20201030 10:59:16.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.780" endtime="20201030 10:59:16.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.778" endtime="20201030 10:59:16.301"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.324" endtime="20201030 10:59:16.344"></status>
</kw>
<msg timestamp="20201030 10:59:16.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.321" endtime="20201030 10:59:16.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.347" endtime="20201030 10:59:16.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.354" endtime="20201030 10:59:16.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.313" endtime="20201030 10:59:16.359"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.308" endtime="20201030 10:59:16.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.377" endtime="20201030 10:59:16.711"></status>
</kw>
<msg timestamp="20201030 10:59:16.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:16.374" endtime="20201030 10:59:16.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:16.721" endtime="20201030 10:59:16.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.739" endtime="20201030 10:59:16.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.367" endtime="20201030 10:59:16.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.362" endtime="20201030 10:59:16.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.756" level="INFO">${RESULT} = [{'diff': 8.783300000000244e-05}, {'diff': 8.812499999999446e-05}, {'diff': 8.731899999999543e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.733300000000194e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:16.747" endtime="20201030 10:59:16.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.767" level="INFO">${ACCURACY} = {'diff': [8.783300000000244e-05, 8.812499999999446e-05, 8.731899999999543e-05, 8.744399999999902e-05, 8.765300000000004e-05, 8.733300000000194e-05, 8.715299999999954e-05, 8.720899999999782e-05, 8.7278...</msg>
<status status="PASS" starttime="20201030 10:59:16.758" endtime="20201030 10:59:16.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.777" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.775" endtime="20201030 10:59:16.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.783" level="INFO">VALUE: [8.783300000000244e-05, 8.812499999999446e-05, 8.731899999999543e-05, 8.744399999999902e-05, 8.765300000000004e-05, 8.733300000000194e-05, 8.715299999999954e-05, 8.720899999999782e-05, 8.727800000000313e-05, 8.787500000000115e-05, 8.795799999999909e-05, 8.751400000000381e-05, 8.784699999999507e-05, 8.758399999999472e-05, 8.784700000000201e-05, 8.729100000000323e-05, 8.772199999999841e-05, 8.733300000000194e-05, 8.806999999999565e-05, 8.747199999999816e-05, 8.74999999999973e-05, 8.74999999999973e-05, 8.755500000000305e-05, 8.745899999999807e-05, 8.783400000000191e-05, 8.770799999999884e-05, 8.765300000000004e-05, 8.723599999999748e-05, 8.76250000000009e-05, 8.770899999999832e-05, 8.798599999999823e-05, 8.752799999999644e-05, 8.769499999999875e-05, 8.769499999999875e-05, 8.734800000000098e-05, 8.79999999999978e-05, 8.770799999999884e-05, 8.751400000000381e-05, 8.729099999999629e-05, 8.804100000000398e-05, 8.758299999999525e-05, 8.81670000000001e-05, 8.744399999999902e-05, 8.804199999999651e-05, 8.815200000000106e-05, 8.754200000000295e-05, 8.769399999999927e-05, 8.726400000000356e-05, 8.747299999999764e-05, 8.720900000000475e-05]</msg>
<status status="PASS" starttime="20201030 10:59:16.780" endtime="20201030 10:59:16.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.769" endtime="20201030 10:59:16.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.795" endtime="20201030 10:59:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.791" endtime="20201030 10:59:16.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.789" endtime="20201030 10:59:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.304" endtime="20201030 10:59:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.302" endtime="20201030 10:59:16.821"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.843" endtime="20201030 10:59:16.862"></status>
</kw>
<msg timestamp="20201030 10:59:16.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.840" endtime="20201030 10:59:16.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.866" endtime="20201030 10:59:16.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.872" endtime="20201030 10:59:16.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.833" endtime="20201030 10:59:16.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.827" endtime="20201030 10:59:16.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.895" endtime="20201030 10:59:17.229"></status>
</kw>
<msg timestamp="20201030 10:59:17.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039302861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039391361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.892" endtime="20201030 10:59:17.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039302861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039391361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.239" endtime="20201030 10:59:17.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.257" endtime="20201030 10:59:17.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.885" endtime="20201030 10:59:17.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.880" endtime="20201030 10:59:17.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:17.274" level="INFO">${RESULT} = [{'diff': 8.84999999999983e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.905599999999708e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.836100000000208e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:17.265" endtime="20201030 10:59:17.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:17.285" level="INFO">${ACCURACY} = {'diff': [8.84999999999983e-05, 8.824999999999805e-05, 8.898599999999923e-05, 8.905599999999708e-05, 8.913900000000197e-05, 8.836100000000208e-05, 8.877699999999822e-05, 8.833300000000294e-05, 8.91940...</msg>
<status status="PASS" starttime="20201030 10:59:17.276" endtime="20201030 10:59:17.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.296" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:59:17.294" endtime="20201030 10:59:17.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.302" level="INFO">VALUE: [8.84999999999983e-05, 8.824999999999805e-05, 8.898599999999923e-05, 8.905599999999708e-05, 8.913900000000197e-05, 8.836100000000208e-05, 8.877699999999822e-05, 8.833300000000294e-05, 8.919400000000077e-05, 8.886100000000258e-05, 8.895800000000009e-05, 8.830600000000327e-05, 8.868100000000018e-05, 8.911099999999589e-05, 8.893100000000043e-05, 8.88329999999965e-05, 8.874999999999855e-05, 8.81250000000014e-05, 8.86670000000006e-05, 8.848599999999873e-05, 8.844400000000002e-05, 8.855499999999711e-05, 8.824999999999805e-05, 8.836099999999514e-05, 8.816600000000063e-05, 8.880600000000377e-05, 8.89590000000065e-05, 8.819399999999977e-05, 8.856999999999615e-05, 8.813900000000097e-05, 8.869499999999975e-05, 8.847199999999916e-05, 8.893100000000043e-05, 8.906899999999718e-05, 8.833300000000294e-05, 8.818099999999968e-05, 8.882000000000334e-05, 8.834699999999557e-05, 8.822199999999891e-05, 8.854199999999701e-05, 8.887499999999521e-05, 8.911100000000283e-05, 8.829099999999729e-05, 8.865300000000104e-05, 8.895800000000009e-05, 8.813899999999403e-05, 8.876399999999812e-05, 8.883400000000291e-05, 8.901399999999837e-05, 8.824999999999805e-05]</msg>
<status status="PASS" starttime="20201030 10:59:17.299" endtime="20201030 10:59:17.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.287" endtime="20201030 10:59:17.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:17.314" endtime="20201030 10:59:17.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.310" endtime="20201030 10:59:17.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.307" endtime="20201030 10:59:17.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.823" endtime="20201030 10:59:17.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.821" endtime="20201030 10:59:17.339"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.362" endtime="20201030 10:59:17.381"></status>
</kw>
<msg timestamp="20201030 10:59:17.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.358" endtime="20201030 10:59:17.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.385" endtime="20201030 10:59:17.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.392" endtime="20201030 10:59:17.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.351" endtime="20201030 10:59:17.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.345" endtime="20201030 10:59:17.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.415" endtime="20201030 10:59:17.753"></status>
</kw>
<msg timestamp="20201030 10:59:17.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.412" endtime="20201030 10:59:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.762" endtime="20201030 10:59:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.781" endtime="20201030 10:59:17.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.405" endtime="20201030 10:59:17.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.400" endtime="20201030 10:59:17.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:17.798" level="INFO">${RESULT} = [{'diff': 8.923599999999948e-05}, {'diff': 8.944400000000102e-05}, {'diff': 8.98199999999974e-05}, {'diff': 8.958300000000419e-05}, {'diff': 8.99999999999998e-05}, {'diff': 8.940200000000231e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:17.789" endtime="20201030 10:59:17.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:17.807" level="INFO">${ACCURACY} = {'diff': [8.923599999999948e-05, 8.944400000000102e-05, 8.98199999999974e-05, 8.958300000000419e-05, 8.99999999999998e-05, 8.940200000000231e-05, 8.976399999999912e-05, 8.936099999999614e-05, 8.924999...</msg>
<status status="PASS" starttime="20201030 10:59:17.800" endtime="20201030 10:59:17.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.818" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:59:17.816" endtime="20201030 10:59:17.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.823" level="INFO">VALUE: [8.923599999999948e-05, 8.944400000000102e-05, 8.98199999999974e-05, 8.958300000000419e-05, 8.99999999999998e-05, 8.940200000000231e-05, 8.976399999999912e-05, 8.936099999999614e-05, 8.924999999999905e-05, 8.938900000000222e-05, 8.988800000000324e-05, 8.988899999999578e-05, 8.97920000000052e-05, 9.001399999999937e-05, 8.976399999999912e-05, 8.987500000000315e-05, 8.948600000000667e-05, 8.9332999999997e-05, 8.990300000000229e-05, 8.962499999999596e-05, 8.995800000000109e-05, 8.977799999999869e-05, 8.930499999999786e-05, 8.99869999999997e-05, 8.913900000000197e-05, 8.92079999999934e-05, 8.966600000000213e-05, 8.96250000000029e-05, 8.995800000000109e-05, 9.006900000000512e-05, 8.96800000000017e-05, 8.974999999999955e-05, 8.945800000000059e-05, 8.93879999999958e-05, 9.011099999999689e-05, 8.98329999999975e-05, 8.944499999999356e-05, 8.981899999999793e-05, 8.913800000000249e-05, 9.006999999999765e-05, 8.936200000000255e-05, 8.948599999999973e-05, 8.981900000000487e-05, 8.976399999999912e-05, 8.98329999999975e-05, 8.923599999999948e-05, 8.98199999999974e-05, 8.947200000000016e-05, 8.963899999999553e-05, 8.977799999999869e-05]</msg>
<status status="PASS" starttime="20201030 10:59:17.820" endtime="20201030 10:59:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.809" endtime="20201030 10:59:17.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:17.841" endtime="20201030 10:59:17.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.836" endtime="20201030 10:59:17.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.834" endtime="20201030 10:59:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.341" endtime="20201030 10:59:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.340" endtime="20201030 10:59:17.866"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.888" endtime="20201030 10:59:17.909"></status>
</kw>
<msg timestamp="20201030 10:59:17.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.885" endtime="20201030 10:59:17.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:17.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:17.912" endtime="20201030 10:59:17.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.919" endtime="20201030 10:59:17.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.878" endtime="20201030 10:59:17.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.872" endtime="20201030 10:59:17.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:17.942" endtime="20201030 10:59:18.276"></status>
</kw>
<msg timestamp="20201030 10:59:18.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:17.939" endtime="20201030 10:59:18.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040761583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.285" endtime="20201030 10:59:18.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.304" endtime="20201030 10:59:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.931" endtime="20201030 10:59:18.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.927" endtime="20201030 10:59:18.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.321" level="INFO">${RESULT} = [{'diff': 9.061100000000433e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.054099999999954e-05}, {'diff': 9.093100000000243e-05}, {'diff': 9.055600000000552e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:18.312" endtime="20201030 10:59:18.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:18.330" level="INFO">${ACCURACY} = {'diff': [9.061100000000433e-05, 9.023600000000048e-05, 9.075000000000055e-05, 9.054099999999954e-05, 9.093100000000243e-05, 9.055600000000552e-05, 9.058299999999825e-05, 9.081899999999893e-05, 9.0902...</msg>
<status status="PASS" starttime="20201030 10:59:18.323" endtime="20201030 10:59:18.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.341" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:59:18.338" endtime="20201030 10:59:18.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.346" level="INFO">VALUE: [9.061100000000433e-05, 9.023600000000048e-05, 9.075000000000055e-05, 9.054099999999954e-05, 9.093100000000243e-05, 9.055600000000552e-05, 9.058299999999825e-05, 9.081899999999893e-05, 9.090200000000381e-05, 9.083300000000544e-05, 9.045799999999465e-05, 9.022300000000039e-05, 9.086100000000458e-05, 9.090300000000329e-05, 9.105599999999908e-05, 9.063899999999653e-05, 9.08329999999985e-05, 9.036099999999714e-05, 9.022199999999397e-05, 9.072200000000141e-05, 9.076400000000012e-05, 9.048600000000073e-05, 9.062499999999696e-05, 9.030599999999833e-05, 9.047200000000116e-05, 9.108299999999875e-05, 9.098600000000123e-05, 9.083399999999797e-05, 9.072200000000141e-05, 9.063899999999653e-05, 9.075000000000055e-05, 9.070800000000184e-05, 9.076400000000012e-05, 9.052799999999944e-05, 9.069500000000175e-05, 9.052799999999944e-05, 9.036099999999714e-05, 9.106999999999865e-05, 9.051399999999987e-05, 9.033300000000494e-05, 9.091699999999592e-05, 9.088899999999678e-05, 9.022200000000091e-05, 9.051399999999987e-05, 9.105499999999961e-05, 9.025000000000005e-05, 9.101400000000037e-05, 9.020800000000134e-05, 9.065300000000304e-05, 9.109699999999832e-05]</msg>
<status status="PASS" starttime="20201030 10:59:18.343" endtime="20201030 10:59:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.332" endtime="20201030 10:59:18.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:18.360" endtime="20201030 10:59:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.354" endtime="20201030 10:59:18.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.352" endtime="20201030 10:59:18.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.868" endtime="20201030 10:59:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:17.866" endtime="20201030 10:59:18.385"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.408" endtime="20201030 10:59:18.428"></status>
</kw>
<msg timestamp="20201030 10:59:18.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.405" endtime="20201030 10:59:18.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.432" endtime="20201030 10:59:18.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.438" endtime="20201030 10:59:18.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.397" endtime="20201030 10:59:18.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.392" endtime="20201030 10:59:18.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.462" endtime="20201030 10:59:18.795"></status>
</kw>
<msg timestamp="20201030 10:59:18.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040101542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.458" endtime="20201030 10:59:18.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040101542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.805" endtime="20201030 10:59:18.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.823" endtime="20201030 10:59:18.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.451" endtime="20201030 10:59:18.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.446" endtime="20201030 10:59:18.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.840" level="INFO">${RESULT} = [{'diff': 9.181899999999993e-05}, {'diff': 9.152700000000097e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.131899999999943e-05}, {'diff': 9.144399999999608e-05}, {'diff': 9.154200000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:18.831" endtime="20201030 10:59:18.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:18.850" level="INFO">${ACCURACY} = {'diff': [9.181899999999993e-05, 9.152700000000097e-05, 9.159699999999882e-05, 9.131899999999943e-05, 9.144399999999608e-05, 9.154200000000001e-05, 9.180599999999983e-05, 9.209699999999932e-05, 9.1874...</msg>
<status status="PASS" starttime="20201030 10:59:18.842" endtime="20201030 10:59:18.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.861" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:59:18.859" endtime="20201030 10:59:18.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.867" level="INFO">VALUE: [9.181899999999993e-05, 9.152700000000097e-05, 9.159699999999882e-05, 9.131899999999943e-05, 9.144399999999608e-05, 9.154200000000001e-05, 9.180599999999983e-05, 9.209699999999932e-05, 9.187499999999821e-05, 9.140199999999737e-05, 9.130599999999933e-05, 9.191700000000386e-05, 9.18329999999995e-05, 9.138899999999728e-05, 9.186199999999811e-05, 9.1332999999999e-05, 9.11659999999967e-05, 9.151400000000087e-05, 9.14450000000025e-05, 9.138900000000422e-05, 9.15000000000013e-05, 9.194400000000352e-05, 9.123700000000096e-05, 9.156999999999915e-05, 9.172200000000241e-05, 9.180500000000036e-05, 9.186100000000558e-05, 9.206999999999965e-05, 9.194400000000352e-05, 9.16800000000037e-05, 9.21529999999976e-05, 9.12079999999954e-05, 9.184699999999907e-05, 9.177800000000069e-05, 9.161099999999839e-05, 9.11670000000031e-05, 9.126400000000062e-05, 9.14859999999948e-05, 9.179200000000026e-05, 9.129199999999976e-05, 9.20409999999941e-05, 9.213799999999855e-05, 9.212499999999846e-05, 9.155500000000011e-05, 9.169400000000327e-05, 9.184699999999907e-05, 9.19859999999953e-05, 9.169400000000327e-05, 9.129199999999976e-05, 9.190299999999735e-05]</msg>
<status status="PASS" starttime="20201030 10:59:18.864" endtime="20201030 10:59:18.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.852" endtime="20201030 10:59:18.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:18.879" endtime="20201030 10:59:18.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.875" endtime="20201030 10:59:18.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.872" endtime="20201030 10:59:18.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.387" endtime="20201030 10:59:18.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.386" endtime="20201030 10:59:18.904"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.927" endtime="20201030 10:59:18.946"></status>
</kw>
<msg timestamp="20201030 10:59:18.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.923" endtime="20201030 10:59:18.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.949" endtime="20201030 10:59:18.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.956" endtime="20201030 10:59:18.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.916" endtime="20201030 10:59:18.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.911" endtime="20201030 10:59:18.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.979" endtime="20201030 10:59:19.312"></status>
</kw>
<msg timestamp="20201030 10:59:19.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039241014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039333236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.976" endtime="20201030 10:59:19.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039241014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039333236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.322" endtime="20201030 10:59:19.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.340" endtime="20201030 10:59:19.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.968" endtime="20201030 10:59:19.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.964" endtime="20201030 10:59:19.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:19.357" level="INFO">${RESULT} = [{'diff': 9.222200000000291e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.255600000000058e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.237499999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:19.349" endtime="20201030 10:59:19.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:19.368" level="INFO">${ACCURACY} = {'diff': [9.222200000000291e-05, 9.311099999999989e-05, 9.255600000000058e-05, 9.280600000000083e-05, 9.311099999999989e-05, 9.237499999999871e-05, 9.222200000000291e-05, 9.255500000000111e-05, 9.2764...</msg>
<status status="PASS" starttime="20201030 10:59:19.359" endtime="20201030 10:59:19.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.379" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:59:19.377" endtime="20201030 10:59:19.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.384" level="INFO">VALUE: [9.222200000000291e-05, 9.311099999999989e-05, 9.255600000000058e-05, 9.280600000000083e-05, 9.311099999999989e-05, 9.237499999999871e-05, 9.222200000000291e-05, 9.255500000000111e-05, 9.276400000000212e-05, 9.249999999999536e-05, 9.288899999999878e-05, 9.241700000000436e-05, 9.26800000000047e-05, 9.288899999999878e-05, 9.308400000000022e-05, 9.28200000000004e-05, 9.226400000000162e-05, 9.237499999999871e-05, 9.217999999999726e-05, 9.233399999999947e-05, 9.26250000000059e-05, 9.225000000000205e-05, 9.234699999999957e-05, 9.256900000000068e-05, 9.258399999999972e-05, 9.294400000000452e-05, 9.269399999999733e-05, 9.295900000000357e-05, 9.307000000000065e-05, 9.270800000000384e-05, 9.291599999999844e-05, 9.243099999999699e-05, 9.275000000000255e-05, 9.21659999999977e-05, 9.287499999999921e-05, 9.274999999999561e-05, 9.291700000000486e-05, 9.284700000000007e-05, 9.233399999999947e-05, 9.240300000000479e-05, 9.256900000000068e-05, 9.24450000000035e-05, 9.226400000000162e-05, 9.31529999999986e-05, 9.291699999999792e-05, 9.258399999999972e-05, 9.252800000000144e-05, 9.31529999999986e-05, 9.309699999999338e-05, 9.245899999999613e-05]</msg>
<status status="PASS" starttime="20201030 10:59:19.381" endtime="20201030 10:59:19.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.370" endtime="20201030 10:59:19.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:19.397" endtime="20201030 10:59:19.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.393" endtime="20201030 10:59:19.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.390" endtime="20201030 10:59:19.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.906" endtime="20201030 10:59:19.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.905" endtime="20201030 10:59:19.422"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.445" endtime="20201030 10:59:19.465"></status>
</kw>
<msg timestamp="20201030 10:59:19.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.441" endtime="20201030 10:59:19.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.468" endtime="20201030 10:59:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.475" endtime="20201030 10:59:19.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.434" endtime="20201030 10:59:19.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.428" endtime="20201030 10:59:19.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.498" endtime="20201030 10:59:19.833"></status>
</kw>
<msg timestamp="20201030 10:59:19.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040081736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.495" endtime="20201030 10:59:19.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040081736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.843" endtime="20201030 10:59:19.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.861" endtime="20201030 10:59:19.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.488" endtime="20201030 10:59:19.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.483" endtime="20201030 10:59:19.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:19.878" level="INFO">${RESULT} = [{'diff': 9.369399999999833e-05}, {'diff': 9.374999999999661e-05}, {'diff': 9.324999999999611e-05}, {'diff': 9.391699999999892e-05}, {'diff': 9.392999999999901e-05}, {'diff': 9.404199999999557e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:19.869" endtime="20201030 10:59:19.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:19.887" level="INFO">${ACCURACY} = {'diff': [9.369399999999833e-05, 9.374999999999661e-05, 9.324999999999611e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.404199999999557e-05, 9.386100000000064e-05, 9.325000000000305e-05, 9.3416...</msg>
<status status="PASS" starttime="20201030 10:59:19.880" endtime="20201030 10:59:19.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.898" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:59:19.896" endtime="20201030 10:59:19.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.904" level="INFO">VALUE: [9.369399999999833e-05, 9.374999999999661e-05, 9.324999999999611e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.404199999999557e-05, 9.386100000000064e-05, 9.325000000000305e-05, 9.341699999999842e-05, 9.373600000000398e-05, 9.351400000000287e-05, 9.3333000000001e-05, 9.354100000000254e-05, 9.337499999999971e-05, 9.411100000000089e-05, 9.320900000000382e-05, 9.391599999999944e-05, 9.319499999999731e-05, 9.386100000000064e-05, 9.34859999999968e-05, 9.322199999999697e-05, 9.356900000000168e-05, 9.37079999999979e-05, 9.409700000000132e-05, 9.361100000000039e-05, 9.333400000000047e-05, 9.381999999999446e-05, 9.365199999999962e-05, 9.381900000000193e-05, 9.316700000000511e-05, 9.358300000000125e-05, 9.345799999999765e-05, 9.392999999999901e-05, 9.377800000000269e-05, 9.401400000000337e-05, 9.354199999999507e-05, 9.323600000000348e-05, 9.412500000000046e-05, 9.336100000000014e-05, 9.362499999999996e-05, 9.33200000000009e-05, 9.386100000000064e-05, 9.33059999999944e-05, 9.354100000000254e-05, 9.34729999999967e-05, 9.358400000000072e-05, 9.32079999999974e-05, 9.363899999999953e-05, 9.342999999999851e-05, 9.405500000000261e-05]</msg>
<status status="PASS" starttime="20201030 10:59:19.901" endtime="20201030 10:59:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.889" endtime="20201030 10:59:19.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:19.916" endtime="20201030 10:59:19.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.912" endtime="20201030 10:59:19.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.909" endtime="20201030 10:59:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.424" endtime="20201030 10:59:19.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.423" endtime="20201030 10:59:19.941"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.963" endtime="20201030 10:59:19.984"></status>
</kw>
<msg timestamp="20201030 10:59:19.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.960" endtime="20201030 10:59:19.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.988" endtime="20201030 10:59:19.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.994" endtime="20201030 10:59:19.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.953" endtime="20201030 10:59:19.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.947" endtime="20201030 10:59:20.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.017" endtime="20201030 10:59:20.353"></status>
</kw>
<msg timestamp="20201030 10:59:20.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040603653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.014" endtime="20201030 10:59:20.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040603653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.362" endtime="20201030 10:59:20.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.381" endtime="20201030 10:59:20.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.007" endtime="20201030 10:59:20.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.002" endtime="20201030 10:59:20.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.398" level="INFO">${RESULT} = [{'diff': 9.419500000000525e-05}, {'diff': 9.498600000000523e-05}, {'diff': 9.484699999999513e-05}, {'diff': 9.476400000000412e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.490200000000087e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:20.389" endtime="20201030 10:59:20.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.407" level="INFO">${ACCURACY} = {'diff': [9.419500000000525e-05, 9.498600000000523e-05, 9.484699999999513e-05, 9.476400000000412e-05, 9.486100000000164e-05, 9.490200000000087e-05, 9.434699999999463e-05, 9.505499999999667e-05, 9.4806...</msg>
<status status="PASS" starttime="20201030 10:59:20.400" endtime="20201030 10:59:20.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.418" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.416" endtime="20201030 10:59:20.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.423" level="INFO">VALUE: [9.419500000000525e-05, 9.498600000000523e-05, 9.484699999999513e-05, 9.476400000000412e-05, 9.486100000000164e-05, 9.490200000000087e-05, 9.434699999999463e-05, 9.505499999999667e-05, 9.480600000000283e-05, 9.440299999999985e-05, 9.497200000000566e-05, 9.422300000000439e-05, 9.477800000000369e-05, 9.504199999999657e-05, 9.483299999999556e-05, 9.484699999999513e-05, 9.469399999999933e-05, 9.461200000000086e-05, 9.501399999999743e-05, 9.487500000000121e-05, 9.419500000000525e-05, 9.516700000000017e-05, 9.438900000000028e-05, 9.508400000000222e-05, 9.423700000000396e-05, 9.419500000000525e-05, 9.433400000000147e-05, 9.455600000000258e-05, 9.422200000000491e-05, 9.452699999999703e-05, 9.513799999999462e-05, 9.473599999999804e-05, 9.438900000000028e-05, 9.479100000000379e-05, 9.488900000000078e-05, 9.473600000000498e-05, 9.48059999999959e-05, 9.513900000000103e-05, 9.505499999999667e-05, 9.459700000000182e-05, 9.463900000000053e-05, 9.418099999999874e-05, 9.506999999999571e-05, 9.451399999999693e-05, 9.447199999999822e-05, 9.430500000000286e-05, 9.509700000000232e-05, 9.487499999999427e-05, 9.461100000000139e-05, 9.422299999999745e-05]</msg>
<status status="PASS" starttime="20201030 10:59:20.420" endtime="20201030 10:59:20.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.409" endtime="20201030 10:59:20.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.437" endtime="20201030 10:59:20.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.431" endtime="20201030 10:59:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.429" endtime="20201030 10:59:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.943" endtime="20201030 10:59:20.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.942" endtime="20201030 10:59:20.462"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.485" endtime="20201030 10:59:20.506"></status>
</kw>
<msg timestamp="20201030 10:59:20.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.482" endtime="20201030 10:59:20.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.509" endtime="20201030 10:59:20.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.516" endtime="20201030 10:59:20.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.474" endtime="20201030 10:59:20.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.469" endtime="20201030 10:59:20.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.539" endtime="20201030 10:59:20.874"></status>
</kw>
<msg timestamp="20201030 10:59:20.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.536" endtime="20201030 10:59:20.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.883" endtime="20201030 10:59:20.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.902" endtime="20201030 10:59:20.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.529" endtime="20201030 10:59:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.524" endtime="20201030 10:59:20.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.919" level="INFO">${RESULT} = [{'diff': 9.59859999999993e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.594400000000058e-05}, {'diff': 9.594400000000058e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.601400000000537e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:20.910" endtime="20201030 10:59:20.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.930" level="INFO">${ACCURACY} = {'diff': [9.59859999999993e-05, 9.544400000000008e-05, 9.594400000000058e-05, 9.594400000000058e-05, 9.577799999999775e-05, 9.601400000000537e-05, 9.530499999999692e-05, 9.56660000000012e-05, 9.566599...</msg>
<status status="PASS" starttime="20201030 10:59:20.921" endtime="20201030 10:59:20.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.940" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.938" endtime="20201030 10:59:20.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.946" level="INFO">VALUE: [9.59859999999993e-05, 9.544400000000008e-05, 9.594400000000058e-05, 9.594400000000058e-05, 9.577799999999775e-05, 9.601400000000537e-05, 9.530499999999692e-05, 9.56660000000012e-05, 9.566599999999426e-05, 9.544499999999956e-05, 9.519499999999931e-05, 9.562500000000196e-05, 9.558300000000325e-05, 9.526399999999768e-05, 9.519499999999931e-05, 9.561100000000239e-05, 9.577799999999775e-05, 9.569499999999981e-05, 9.524999999999811e-05, 9.524999999999811e-05, 9.524999999999811e-05, 9.526400000000462e-05, 9.56530000000011e-05, 9.57079999999999e-05, 9.601399999999843e-05, 9.536100000000214e-05, 9.519499999999931e-05, 9.537499999999477e-05, 9.536100000000214e-05, 9.534700000000257e-05, 9.579200000000426e-05, 9.583299999999656e-05, 9.548600000000573e-05, 9.568100000000024e-05, 9.604200000000451e-05, 9.529199999999682e-05, 9.569400000000033e-05, 9.556899999999674e-05, 9.547300000000564e-05, 9.608399999999628e-05, 9.608400000000322e-05, 9.605600000000408e-05, 9.579200000000426e-05, 9.519399999999983e-05, 9.586200000000211e-05, 9.584700000000307e-05, 9.551399999999793e-05, 9.558300000000325e-05, 9.61530000000016e-05, 9.531900000000343e-05]</msg>
<status status="PASS" starttime="20201030 10:59:20.943" endtime="20201030 10:59:20.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.931" endtime="20201030 10:59:20.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.959" endtime="20201030 10:59:20.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.954" endtime="20201030 10:59:20.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.952" endtime="20201030 10:59:20.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.464" endtime="20201030 10:59:20.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.463" endtime="20201030 10:59:20.984"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.007" endtime="20201030 10:59:21.027"></status>
</kw>
<msg timestamp="20201030 10:59:21.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.004" endtime="20201030 10:59:21.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.030" endtime="20201030 10:59:21.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.036" endtime="20201030 10:59:21.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.996" endtime="20201030 10:59:21.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.991" endtime="20201030 10:59:21.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.059" endtime="20201030 10:59:21.394"></status>
</kw>
<msg timestamp="20201030 10:59:21.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039790236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.056" endtime="20201030 10:59:21.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039790236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.404" endtime="20201030 10:59:21.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.422" endtime="20201030 10:59:21.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.049" endtime="20201030 10:59:21.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.044" endtime="20201030 10:59:21.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.439" level="INFO">${RESULT} = [{'diff': 9.662500000000296e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.626400000000562e-05}, {'diff': 9.652800000000544e-05}, {'diff': 9.694500000000106e-05}, {'diff': 9.688899999999584e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:21.430" endtime="20201030 10:59:21.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.454" level="INFO">${ACCURACY} = {'diff': [9.662500000000296e-05, 9.62080000000004e-05, 9.626400000000562e-05, 9.652800000000544e-05, 9.694500000000106e-05, 9.688899999999584e-05, 9.662500000000296e-05, 9.695800000000115e-05, 9.70549...</msg>
<status status="PASS" starttime="20201030 10:59:21.441" endtime="20201030 10:59:21.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.465" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.463" endtime="20201030 10:59:21.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.470" level="INFO">VALUE: [9.662500000000296e-05, 9.62080000000004e-05, 9.626400000000562e-05, 9.652800000000544e-05, 9.694500000000106e-05, 9.688899999999584e-05, 9.662500000000296e-05, 9.695800000000115e-05, 9.705499999999867e-05, 9.658399999999678e-05, 9.681900000000493e-05, 9.674999999999961e-05, 9.693099999999455e-05, 9.701399999999943e-05, 9.626399999999868e-05, 9.661099999999645e-05, 9.702800000000594e-05, 9.669400000000133e-05, 9.64859999999998e-05, 9.641700000000142e-05, 9.673600000000004e-05, 9.687499999999627e-05, 9.647200000000022e-05, 9.613900000000203e-05, 9.693100000000149e-05, 9.633299999999706e-05, 9.676399999999918e-05, 9.657000000000415e-05, 9.629199999999782e-05, 9.643100000000099e-05, 9.699999999999986e-05, 9.705499999999867e-05, 9.662500000000296e-05, 9.668000000000176e-05, 9.624999999999911e-05, 9.634700000000357e-05, 9.684699999999713e-05, 9.668000000000176e-05, 9.66660000000022e-05, 9.706899999999824e-05, 9.65000000000063e-05, 9.630500000000486e-05, 9.643100000000099e-05, 9.687500000000321e-05, 9.687500000000321e-05, 9.697200000000072e-05, 9.620899999999988e-05, 9.62080000000004e-05, 9.69860000000003e-05, 9.616599999999476e-05]</msg>
<status status="PASS" starttime="20201030 10:59:21.467" endtime="20201030 10:59:21.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.456" endtime="20201030 10:59:21.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.483" endtime="20201030 10:59:21.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.478" endtime="20201030 10:59:21.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.476" endtime="20201030 10:59:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.986" endtime="20201030 10:59:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.985" endtime="20201030 10:59:21.508"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.532" endtime="20201030 10:59:21.552"></status>
</kw>
<msg timestamp="20201030 10:59:21.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.528" endtime="20201030 10:59:21.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.555" endtime="20201030 10:59:21.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.561" endtime="20201030 10:59:21.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.521" endtime="20201030 10:59:21.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.514" endtime="20201030 10:59:21.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.584" endtime="20201030 10:59:21.920"></status>
</kw>
<msg timestamp="20201030 10:59:21.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040732833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040830208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.581" endtime="20201030 10:59:21.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040732833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040830208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.930" endtime="20201030 10:59:21.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.948" endtime="20201030 10:59:21.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.574" endtime="20201030 10:59:21.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.569" endtime="20201030 10:59:21.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.965" level="INFO">${RESULT} = [{'diff': 9.737499999999677e-05}, {'diff': 9.76530000000031e-05}, {'diff': 9.733299999999806e-05}, {'diff': 9.783400000000497e-05}, {'diff': 9.751399999999993e-05}, {'diff': 9.780499999999942e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:21.957" endtime="20201030 10:59:21.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.975" level="INFO">${ACCURACY} = {'diff': [9.737499999999677e-05, 9.76530000000031e-05, 9.733299999999806e-05, 9.783400000000497e-05, 9.751399999999993e-05, 9.780499999999942e-05, 9.754199999999907e-05, 9.772200000000147e-05, 9.72639...</msg>
<status status="PASS" starttime="20201030 10:59:21.967" endtime="20201030 10:59:21.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.985" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.983" endtime="20201030 10:59:21.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.991" level="INFO">VALUE: [9.737499999999677e-05, 9.76530000000031e-05, 9.733299999999806e-05, 9.783400000000497e-05, 9.751399999999993e-05, 9.780499999999942e-05, 9.754199999999907e-05, 9.772200000000147e-05, 9.726399999999968e-05, 9.729199999999882e-05, 9.734699999999763e-05, 9.797200000000172e-05, 9.770900000000138e-05, 9.808299999999881e-05, 9.744500000000156e-05, 9.740299999999591e-05, 9.744500000000156e-05, 9.7333000000005e-05, 9.783299999999856e-05, 9.790300000000335e-05, 9.763899999999659e-05, 9.797200000000172e-05, 9.772199999999454e-05, 9.743100000000199e-05, 9.729099999999935e-05, 9.788899999999684e-05, 9.772200000000147e-05, 9.768000000000276e-05, 9.738799999999687e-05, 9.806899999999924e-05, 9.758299999999831e-05, 9.783400000000497e-05, 9.750000000000036e-05, 9.81660000000037e-05, 9.787500000000421e-05, 9.76809999999953e-05, 9.815299999999666e-05, 9.787499999999727e-05, 9.800000000000086e-05, 9.806899999999924e-05, 9.802700000000053e-05, 9.777800000000669e-05, 9.763900000000353e-05, 9.738900000000328e-05, 9.788799999999737e-05, 9.751300000000046e-05, 9.737500000000371e-05, 9.723600000000054e-05, 9.718100000000174e-05, 9.763799999999712e-05]</msg>
<status status="PASS" starttime="20201030 10:59:21.988" endtime="20201030 10:59:21.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.976" endtime="20201030 10:59:21.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.003" endtime="20201030 10:59:22.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.999" endtime="20201030 10:59:22.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.996" endtime="20201030 10:59:22.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.510" endtime="20201030 10:59:22.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.509" endtime="20201030 10:59:22.028"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.051" endtime="20201030 10:59:22.072"></status>
</kw>
<msg timestamp="20201030 10:59:22.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.047" endtime="20201030 10:59:22.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.075" endtime="20201030 10:59:22.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.082" endtime="20201030 10:59:22.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.040" endtime="20201030 10:59:22.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.035" endtime="20201030 10:59:22.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.105" endtime="20201030 10:59:22.437"></status>
</kw>
<msg timestamp="20201030 10:59:22.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.101" endtime="20201030 10:59:22.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040633889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.446" endtime="20201030 10:59:22.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.466" endtime="20201030 10:59:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.094" endtime="20201030 10:59:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.090" endtime="20201030 10:59:22.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.484" level="INFO">${RESULT} = [{'diff': 9.847200000000222e-05}, {'diff': 9.899999999999493e-05}, {'diff': 9.844400000000308e-05}, {'diff': 9.822200000000197e-05}, {'diff': 9.876399999999425e-05}, {'diff': 9.819400000000283e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:22.475" endtime="20201030 10:59:22.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.494" level="INFO">${ACCURACY} = {'diff': [9.847200000000222e-05, 9.899999999999493e-05, 9.844400000000308e-05, 9.822200000000197e-05, 9.876399999999425e-05, 9.819400000000283e-05, 9.894399999999665e-05, 9.868000000000376e-05, 9.8388...</msg>
<status status="PASS" starttime="20201030 10:59:22.486" endtime="20201030 10:59:22.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.505" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.502" endtime="20201030 10:59:22.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.510" level="INFO">VALUE: [9.847200000000222e-05, 9.899999999999493e-05, 9.844400000000308e-05, 9.822200000000197e-05, 9.876399999999425e-05, 9.819400000000283e-05, 9.894399999999665e-05, 9.868000000000376e-05, 9.83880000000048e-05, 9.908299999999981e-05, 9.84860000000018e-05, 9.826300000000121e-05, 9.902700000000153e-05, 9.901400000000143e-05, 9.90410000000011e-05, 9.85280000000005e-05, 9.89860000000023e-05, 9.869500000000281e-05, 9.854200000000007e-05, 9.893100000000349e-05, 9.833299999999906e-05, 9.833399999999853e-05, 9.837499999999777e-05, 9.856899999999974e-05, 9.854200000000007e-05, 9.915299999999766e-05, 9.890299999999741e-05, 9.88609999999987e-05, 9.844500000000256e-05, 9.861099999999845e-05, 9.913900000000503e-05, 9.829199999999982e-05, 9.840299999999691e-05, 9.834699999999863e-05, 9.891700000000392e-05, 9.866599999999726e-05, 9.877800000000075e-05, 9.897200000000272e-05, 9.827800000000025e-05, 9.840199999999744e-05, 9.826300000000121e-05, 9.91660000000047e-05, 9.876400000000118e-05, 9.822199999999504e-05, 9.906999999999971e-05, 9.861099999999845e-05, 9.848599999999486e-05, 9.867999999999683e-05, 9.82080000000024e-05, 9.875000000000161e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.507" endtime="20201030 10:59:22.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.496" endtime="20201030 10:59:22.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.524" endtime="20201030 10:59:22.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.518" endtime="20201030 10:59:22.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.516" endtime="20201030 10:59:22.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.031" endtime="20201030 10:59:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.029" endtime="20201030 10:59:22.549"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.573" endtime="20201030 10:59:22.593"></status>
</kw>
<msg timestamp="20201030 10:59:22.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.570" endtime="20201030 10:59:22.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.597" endtime="20201030 10:59:22.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.603" endtime="20201030 10:59:22.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.562" endtime="20201030 10:59:22.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.556" endtime="20201030 10:59:22.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.626" endtime="20201030 10:59:22.960"></status>
</kw>
<msg timestamp="20201030 10:59:22.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041036875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.623" endtime="20201030 10:59:22.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041036875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.969" endtime="20201030 10:59:22.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.988" endtime="20201030 10:59:22.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.616" endtime="20201030 10:59:22.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.611" endtime="20201030 10:59:22.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.005" level="INFO">${RESULT} = [{'diff': 9.975000000000261e-05}, {'diff': 9.938899999999834e-05}, {'diff': 9.95689999999938e-05}, {'diff': 9.99159999999985e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.929100000000135e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:22.996" endtime="20201030 10:59:23.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.015" level="INFO">${ACCURACY} = {'diff': [9.975000000000261e-05, 9.938899999999834e-05, 9.95689999999938e-05, 9.99159999999985e-05, 9.931900000000049e-05, 9.929100000000135e-05, 9.959699999999988e-05, 9.944400000000408e-05, 9.926400...</msg>
<status status="PASS" starttime="20201030 10:59:23.007" endtime="20201030 10:59:23.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.026" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.024" endtime="20201030 10:59:23.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.031" level="INFO">VALUE: [9.975000000000261e-05, 9.938899999999834e-05, 9.95689999999938e-05, 9.99159999999985e-05, 9.931900000000049e-05, 9.929100000000135e-05, 9.959699999999988e-05, 9.944400000000408e-05, 9.926400000000168e-05, 0.000100028000000002, 9.990299999999841e-05, 9.990299999999841e-05, 9.99159999999985e-05, 0.00010011199999999942, 9.929200000000082e-05, 9.973600000000304e-05, 9.952699999999509e-05, 0.00010015199999999919, 9.954200000000107e-05, 9.93609999999992e-05, 9.977700000000228e-05, 9.957000000000021e-05, 9.942999999999758e-05, 9.965199999999869e-05, 0.00010012499999999952, 9.995799999999722e-05, 9.931900000000049e-05, 0.00010012499999999952, 0.000100028000000002, 9.945900000000313e-05, 9.954200000000107e-05, 9.920900000000288e-05, 9.947299999999576e-05, 0.00010011099999999995, 9.937499999999877e-05, 9.977800000000175e-05, 0.00010006900000000124, 9.976300000000271e-05, 9.965199999999869e-05, 9.954200000000107e-05, 9.965299999999816e-05, 9.93609999999992e-05, 9.95689999999938e-05, 9.947200000000322e-05, 9.965299999999816e-05, 0.00010005600000000114, 9.93060000000004e-05, 9.954200000000107e-05, 9.979099999999491e-05, 9.97359999999961e-05]</msg>
<status status="PASS" starttime="20201030 10:59:23.028" endtime="20201030 10:59:23.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.017" endtime="20201030 10:59:23.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.049" endtime="20201030 10:59:23.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.045" endtime="20201030 10:59:23.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.042" endtime="20201030 10:59:23.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.552" endtime="20201030 10:59:23.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.550" endtime="20201030 10:59:23.074"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.097" endtime="20201030 10:59:23.117"></status>
</kw>
<msg timestamp="20201030 10:59:23.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.093" endtime="20201030 10:59:23.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.120" endtime="20201030 10:59:23.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.126" endtime="20201030 10:59:23.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.086" endtime="20201030 10:59:23.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.081" endtime="20201030 10:59:23.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.150" endtime="20201030 10:59:23.483"></status>
</kw>
<msg timestamp="20201030 10:59:23.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039489069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.146" endtime="20201030 10:59:23.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039489069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.492" endtime="20201030 10:59:23.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.510" endtime="20201030 10:59:23.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.139" endtime="20201030 10:59:23.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.135" endtime="20201030 10:59:23.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.527" level="INFO">${RESULT} = [{'diff': 0.00010087500000000027}, {'diff': 0.00010065199999999969}, {'diff': 0.00010069500000000481}, {'diff': 0.00010029100000000235}, {'diff': 0.00010107000000000171}, {'diff': 0.000100750000000003...</msg>
<status status="PASS" starttime="20201030 10:59:23.519" endtime="20201030 10:59:23.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.538" level="INFO">${ACCURACY} = {'diff': [0.00010087500000000027, 0.00010065199999999969, 0.00010069500000000481, 0.00010029100000000235, 0.00010107000000000171, 0.00010075000000000361, 0.00010077799999999582, 0.00010020899999999694...</msg>
<status status="PASS" starttime="20201030 10:59:23.529" endtime="20201030 10:59:23.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.549" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.546" endtime="20201030 10:59:23.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.554" level="INFO">VALUE: [0.00010087500000000027, 0.00010065199999999969, 0.00010069500000000481, 0.00010029100000000235, 0.00010107000000000171, 0.00010075000000000361, 0.00010077799999999582, 0.00010020899999999694, 0.00010043099999999805, 0.00010106900000000224, 0.00010115299999999966, 0.00010087500000000027, 0.00010065299999999916, 0.00010111200000000042, 0.0001010410000000031, 0.00010099999999999693, 0.00010108300000000181, 0.00010022199999999704, 0.00010029200000000182, 0.00010030500000000192, 0.00010113900000000009, 0.00010033400000000053, 0.00010090299999999941, 0.00010034700000000063, 0.0001007359999999971, 0.00010054200000000207, 0.0001007359999999971, 0.0001003060000000014, 0.00010030499999999498, 0.00010077699999999634, 0.0001002359999999966, 0.00010059699999999394, 0.0001003610000000002, 0.00010105499999999573, 0.00010030599999999446, 0.00010095899999999769, 0.00010041699999999848, 0.00010105500000000267, 0.00010108299999999487, 0.00010088899999999984, 0.0001001939999999979, 0.00010033400000000053, 0.00010097199999999779, 0.00010105500000000267, 0.00010043099999999805, 0.00010054099999999566, 0.00010027800000000225, 0.00010104200000000257, 0.00010073600000000404, 0.00010077800000000275]</msg>
<status status="PASS" starttime="20201030 10:59:23.551" endtime="20201030 10:59:23.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.540" endtime="20201030 10:59:23.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.566" endtime="20201030 10:59:23.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.562" endtime="20201030 10:59:23.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.560" endtime="20201030 10:59:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.076" endtime="20201030 10:59:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.075" endtime="20201030 10:59:23.592"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.616" endtime="20201030 10:59:23.636"></status>
</kw>
<msg timestamp="20201030 10:59:23.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.612" endtime="20201030 10:59:23.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.639" endtime="20201030 10:59:23.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.645" endtime="20201030 10:59:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.605" endtime="20201030 10:59:23.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.599" endtime="20201030 10:59:23.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.668" endtime="20201030 10:59:24.004"></status>
</kw>
<msg timestamp="20201030 10:59:24.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041192639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.665" endtime="20201030 10:59:24.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041192639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.013" endtime="20201030 10:59:24.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.032" endtime="20201030 10:59:24.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.658" endtime="20201030 10:59:24.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.653" endtime="20201030 10:59:24.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.049" level="INFO">${RESULT} = [{'diff': 0.00010177800000000375}, {'diff': 0.0001020689999999963}, {'diff': 0.00010194399999999965}, {'diff': 0.00010199999999999793}, {'diff': 0.00010154200000000307}, {'diff': 0.0001020139999999975...</msg>
<status status="PASS" starttime="20201030 10:59:24.040" endtime="20201030 10:59:24.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.057" level="INFO">${ACCURACY} = {'diff': [0.00010177800000000375, 0.0001020689999999963, 0.00010194399999999965, 0.00010199999999999793, 0.00010154200000000307, 0.0001020139999999975, 0.00010147200000000522, 0.00010158300000000231, ...</msg>
<status status="PASS" starttime="20201030 10:59:24.051" endtime="20201030 10:59:24.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.068" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.066" endtime="20201030 10:59:24.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.074" level="INFO">VALUE: [0.00010177800000000375, 0.0001020689999999963, 0.00010194399999999965, 0.00010199999999999793, 0.00010154200000000307, 0.0001020139999999975, 0.00010147200000000522, 0.00010158300000000231, 0.00010147199999999829, 0.00010144500000000556, 0.00010149999999999743, 0.0001020410000000041, 0.00010172200000000547, 0.00010149999999999743, 0.00010122200000000497, 0.00010123600000000454, 0.00010122299999999751, 0.00010174999999999768, 0.00010191699999999998, 0.00010161100000000145, 0.00010127799999999632, 0.00010211100000000195, 0.00010212500000000152, 0.00010197199999999879, 0.00010190300000000041, 0.00010165200000000069, 0.0001013889999999934, 0.00010216700000000023, 0.00010148599999999786, 0.00010129200000000282, 0.00010129199999999589, 0.00010175000000000461, 0.0001018060000000029, 0.00010119499999999837, 0.00010213900000000109, 0.0001018610000000017, 0.0001012080000000054, 0.00010125000000000411, 0.00010137500000000077, 0.00010144399999999915, 0.00010127800000000325, 0.0001013060000000024, 0.00010173600000000504, 0.00010197199999999879, 0.00010131900000000249, 0.00010145799999999872, 0.0001020139999999975, 0.00010123600000000454, 0.00010216600000000076, 0.00010205500000000367]</msg>
<status status="PASS" starttime="20201030 10:59:24.071" endtime="20201030 10:59:24.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.059" endtime="20201030 10:59:24.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.086" endtime="20201030 10:59:24.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.082" endtime="20201030 10:59:24.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.079" endtime="20201030 10:59:24.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.594" endtime="20201030 10:59:24.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.593" endtime="20201030 10:59:24.111"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.134" endtime="20201030 10:59:24.155"></status>
</kw>
<msg timestamp="20201030 10:59:24.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.130" endtime="20201030 10:59:24.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.158" endtime="20201030 10:59:24.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.165" endtime="20201030 10:59:24.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.123" endtime="20201030 10:59:24.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.117" endtime="20201030 10:59:24.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.188" endtime="20201030 10:59:24.522"></status>
</kw>
<msg timestamp="20201030 10:59:24.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040876486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040979597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.185" endtime="20201030 10:59:24.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040876486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040979597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.531" endtime="20201030 10:59:24.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.549" endtime="20201030 10:59:24.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.177" endtime="20201030 10:59:24.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.173" endtime="20201030 10:59:24.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.566" level="INFO">${RESULT} = [{'diff': 0.00010311100000000295}, {'diff': 0.00010265199999999475}, {'diff': 0.00010312500000000252}, {'diff': 0.00010226399999999775}, {'diff': 0.00010290200000000194}, {'diff': 0.000102153000000000...</msg>
<status status="PASS" starttime="20201030 10:59:24.558" endtime="20201030 10:59:24.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.575" level="INFO">${ACCURACY} = {'diff': [0.00010311100000000295, 0.00010265199999999475, 0.00010312500000000252, 0.00010226399999999775, 0.00010290200000000194, 0.00010215300000000066, 0.0001023060000000034, 0.00010233299999999612,...</msg>
<status status="PASS" starttime="20201030 10:59:24.569" endtime="20201030 10:59:24.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.586" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.584" endtime="20201030 10:59:24.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.591" level="INFO">VALUE: [0.00010311100000000295, 0.00010265199999999475, 0.00010312500000000252, 0.00010226399999999775, 0.00010290200000000194, 0.00010215300000000066, 0.0001023060000000034, 0.00010233299999999612, 0.00010227699999999784, 0.00010248599999999886, 0.00010233300000000306, 0.000102416000000001, 0.00010287500000000227, 0.00010294500000000012, 0.00010249999999999843, 0.0001023060000000034, 0.0001021939999999999, 0.00010308299999999687, 0.0001023339999999956, 0.00010288900000000184, 0.0001030139999999985, 0.00010299999999999893, 0.00010295899999999969, 0.00010240300000000091, 0.00010259700000000288, 0.00010244499999999962, 0.00010240300000000091, 0.00010305499999999773, 0.00010227700000000478, 0.00010298599999999936, 0.0001026940000000004, 0.00010304099999999816, 0.0001023610000000022, 0.00010256999999999628, 0.00010254199999999714, 0.00010274999999999868, 0.00010277799999999782, 0.00010262499999999508, 0.00010229100000000435, 0.0001030559999999972, 0.00010218000000000033, 0.0001028610000000027, 0.0001026940000000004, 0.00010256999999999628, 0.00010240300000000091, 0.00010222199999999904, 0.00010234700000000263, 0.00010279199999999739, 0.00010219499999999937, 0.00010252799999999757]</msg>
<status status="PASS" starttime="20201030 10:59:24.588" endtime="20201030 10:59:24.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.577" endtime="20201030 10:59:24.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.605" endtime="20201030 10:59:24.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.600" endtime="20201030 10:59:24.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.597" endtime="20201030 10:59:24.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.113" endtime="20201030 10:59:24.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.112" endtime="20201030 10:59:24.631"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.654" endtime="20201030 10:59:24.674"></status>
</kw>
<msg timestamp="20201030 10:59:24.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.651" endtime="20201030 10:59:24.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.678" endtime="20201030 10:59:24.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.684" endtime="20201030 10:59:24.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.644" endtime="20201030 10:59:24.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.638" endtime="20201030 10:59:24.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.707" endtime="20201030 10:59:25.040"></status>
</kw>
<msg timestamp="20201030 10:59:25.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040700056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040803694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.704" endtime="20201030 10:59:25.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040700056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040803694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.049" endtime="20201030 10:59:25.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.067" endtime="20201030 10:59:25.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.697" endtime="20201030 10:59:25.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.692" endtime="20201030 10:59:25.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.084" level="INFO">${RESULT} = [{'diff': 0.00010363800000000312}, {'diff': 0.00010399999999999993}, {'diff': 0.0001032359999999996}, {'diff': 0.0001031940000000009}, {'diff': 0.00010388900000000284}, {'diff': 0.00010399999999999993...</msg>
<status status="PASS" starttime="20201030 10:59:25.075" endtime="20201030 10:59:25.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.094" level="INFO">${ACCURACY} = {'diff': [0.00010363800000000312, 0.00010399999999999993, 0.0001032359999999996, 0.0001031940000000009, 0.00010388900000000284, 0.00010399999999999993, 0.00010395800000000122, 0.00010415300000000266, ...</msg>
<status status="PASS" starttime="20201030 10:59:25.086" endtime="20201030 10:59:25.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.105" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.103" endtime="20201030 10:59:25.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.111" level="INFO">VALUE: [0.00010363800000000312, 0.00010399999999999993, 0.0001032359999999996, 0.0001031940000000009, 0.00010388900000000284, 0.00010399999999999993, 0.00010395800000000122, 0.00010415300000000266, 0.00010370900000000044, 0.00010341599999999507, 0.00010411100000000395, 0.0001038889999999959, 0.00010391700000000198, 0.00010361099999999651, 0.0001040139999999995, 0.00010352799999999857, 0.0001033610000000032, 0.00010369499999999393, 0.00010354199999999814, 0.00010366700000000173, 0.00010413900000000309, 0.00010391700000000198, 0.00010316700000000123, 0.00010363899999999565, 0.00010376399999999925, 0.00010397300000000026, 0.00010345900000000019, 0.00010333300000000406, 0.000103513999999999, 0.00010406900000000524, 0.00010376399999999925, 0.0001040689999999983, 0.00010397200000000079, 0.0001033610000000032, 0.00010408399999999735, 0.0001038610000000037, 0.00010419500000000137, 0.00010384699999999719, 0.00010345800000000072, 0.00010359700000000388, 0.00010379200000000532, 0.00010327800000000525, 0.00010366600000000226, 0.00010358400000000378, 0.00010383300000000456, 0.00010387500000000327, 0.00010384799999999667, 0.00010345800000000072, 0.00010393000000000208, 0.0001033480000000031]</msg>
<status status="PASS" starttime="20201030 10:59:25.108" endtime="20201030 10:59:25.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.096" endtime="20201030 10:59:25.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.123" endtime="20201030 10:59:25.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.119" endtime="20201030 10:59:25.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.116" endtime="20201030 10:59:25.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.633" endtime="20201030 10:59:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.632" endtime="20201030 10:59:25.148"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.171" endtime="20201030 10:59:25.190"></status>
</kw>
<msg timestamp="20201030 10:59:25.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.167" endtime="20201030 10:59:25.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.194" endtime="20201030 10:59:25.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.200" endtime="20201030 10:59:25.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.160" endtime="20201030 10:59:25.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.154" endtime="20201030 10:59:25.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.223" endtime="20201030 10:59:25.556"></status>
</kw>
<msg timestamp="20201030 10:59:25.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039264097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.220" endtime="20201030 10:59:25.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039264097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.565" endtime="20201030 10:59:25.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.583" endtime="20201030 10:59:25.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.213" endtime="20201030 10:59:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.208" endtime="20201030 10:59:25.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.600" level="INFO">${RESULT} = [{'diff': 0.00010469399999999546}, {'diff': 0.00010459700000000488}, {'diff': 0.00010438900000000334}, {'diff': 0.00010447300000000076}, {'diff': 0.00010452799999999957}, {'diff': 0.000104777999999999...</msg>
<status status="PASS" starttime="20201030 10:59:25.592" endtime="20201030 10:59:25.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.611" level="INFO">${ACCURACY} = {'diff': [0.00010469399999999546, 0.00010459700000000488, 0.00010438900000000334, 0.00010447300000000076, 0.00010452799999999957, 0.00010477799999999982, 0.00010487499999999733, 0.00010484699999999819...</msg>
<status status="PASS" starttime="20201030 10:59:25.602" endtime="20201030 10:59:25.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.622" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.619" endtime="20201030 10:59:25.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.627" level="INFO">VALUE: [0.00010469399999999546, 0.00010459700000000488, 0.00010438900000000334, 0.00010447300000000076, 0.00010452799999999957, 0.00010477799999999982, 0.00010487499999999733, 0.00010484699999999819, 0.00010461099999999751, 0.00010463899999999665, 0.00010469500000000187, 0.00010513900000000409, 0.00010448600000000086, 0.00010450000000000043, 0.0001045410000000066, 0.00010465299999999622, 0.00010431899999999855, 0.00010458300000000531, 0.00010483299999999862, 0.00010512500000000452, 0.00010427699999999984, 0.00010469500000000187, 0.0001041810000000018, 0.00010509799999999792, 0.00010509699999999844, 0.00010488900000000384, 0.00010476400000000025, 0.00010445799999999478, 0.00010490299999999647, 0.0001051810000000028, 0.00010488799999999743, 0.00010438799999999693, 0.00010437500000000377, 0.00010438900000000334, 0.00010477799999999982, 0.00010416600000000276, 0.00010455499999999923, 0.00010445799999999478, 0.00010498600000000136, 0.00010481899999999905, 0.00010437499999999683, 0.00010447200000000129, 0.00010509699999999844, 0.00010515200000000419, 0.00010504100000000016, 0.000104416000000003, 0.00010508399999999835, 0.00010480599999999896, 0.00010426399999999975, 0.00010463900000000359]</msg>
<status status="PASS" starttime="20201030 10:59:25.624" endtime="20201030 10:59:25.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.613" endtime="20201030 10:59:25.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.639" endtime="20201030 10:59:25.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.635" endtime="20201030 10:59:25.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.633" endtime="20201030 10:59:25.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.150" endtime="20201030 10:59:25.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.149" endtime="20201030 10:59:25.665"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.689" endtime="20201030 10:59:25.709"></status>
</kw>
<msg timestamp="20201030 10:59:25.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.685" endtime="20201030 10:59:25.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.712" endtime="20201030 10:59:25.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.718" endtime="20201030 10:59:25.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.678" endtime="20201030 10:59:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.672" endtime="20201030 10:59:25.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.742" endtime="20201030 10:59:26.078"></status>
</kw>
<msg timestamp="20201030 10:59:26.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.738" endtime="20201030 10:59:26.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.087" endtime="20201030 10:59:26.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.105" endtime="20201030 10:59:26.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.731" endtime="20201030 10:59:26.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.726" endtime="20201030 10:59:26.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.122" level="INFO">${RESULT} = [{'diff': 0.00010600000000000193}, {'diff': 0.00010613899999999815}, {'diff': 0.00010550000000000143}, {'diff': 0.00010563899999999765}, {'diff': 0.00010537499999999783}, {'diff': 0.000105596999999998...</msg>
<status status="PASS" starttime="20201030 10:59:26.114" endtime="20201030 10:59:26.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.131" level="INFO">${ACCURACY} = {'diff': [0.00010600000000000193, 0.00010613899999999815, 0.00010550000000000143, 0.00010563899999999765, 0.00010537499999999783, 0.00010559699999999894, 0.00010562500000000502, 0.0001058889999999979,...</msg>
<status status="PASS" starttime="20201030 10:59:26.124" endtime="20201030 10:59:26.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.142" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.140" endtime="20201030 10:59:26.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.147" level="INFO">VALUE: [0.00010600000000000193, 0.00010613899999999815, 0.00010550000000000143, 0.00010563899999999765, 0.00010537499999999783, 0.00010559699999999894, 0.00010562500000000502, 0.0001058889999999979, 0.00010604200000000064, 0.0001060690000000003, 0.00010563799999999818, 0.0001053480000000051, 0.00010615299999999772, 0.00010609699999999944, 0.00010554100000000066, 0.00010540200000000444, 0.00010609699999999944, 0.00010611099999999901, 0.0001058889999999979, 0.00010524999999999424, 0.00010520900000000194, 0.00010536099999999826, 0.00010609699999999944, 0.00010548599999999492, 0.00010558399999999885, 0.00010525000000000118, 0.0001056940000000034, 0.00010540300000000391, 0.00010550000000000143, 0.00010523699999999414, 0.00010580599999999996, 0.00010609699999999944, 0.00010613799999999868, 0.0001058889999999979, 0.0001058889999999979, 0.0001057360000000021, 0.00010615199999999825, 0.00010565199999999775, 0.00010540299999999697, 0.00010584699999999919, 0.00010579100000000091, 0.00010604100000000116, 0.0001056810000000033, 0.00010590300000000441, 0.00010588799999999843, 0.00010608400000000628, 0.00010565300000000416, 0.00010545800000000272, 0.00010527700000000084, 0.00010551300000000152]</msg>
<status status="PASS" starttime="20201030 10:59:26.144" endtime="20201030 10:59:26.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.133" endtime="20201030 10:59:26.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.160" endtime="20201030 10:59:26.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.155" endtime="20201030 10:59:26.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.153" endtime="20201030 10:59:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.667" endtime="20201030 10:59:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.666" endtime="20201030 10:59:26.185"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.207" endtime="20201030 10:59:26.233"></status>
</kw>
<msg timestamp="20201030 10:59:26.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.204" endtime="20201030 10:59:26.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.236" endtime="20201030 10:59:26.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.243" endtime="20201030 10:59:26.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.197" endtime="20201030 10:59:26.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.191" endtime="20201030 10:59:26.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.266" endtime="20201030 10:59:26.599"></status>
</kw>
<msg timestamp="20201030 10:59:26.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044705542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044812403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.263" endtime="20201030 10:59:26.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044705542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044812403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.608" endtime="20201030 10:59:26.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.626" endtime="20201030 10:59:26.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.255" endtime="20201030 10:59:26.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.251" endtime="20201030 10:59:26.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.643" level="INFO">${RESULT} = [{'diff': 0.00010686099999999976}, {'diff': 0.00010711100000000001}, {'diff': 0.00010657000000000028}, {'diff': 0.0001062219999999961}, {'diff': 0.00010683300000000062}, {'diff': 0.0001062359999999956...</msg>
<status status="PASS" starttime="20201030 10:59:26.634" endtime="20201030 10:59:26.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.652" level="INFO">${ACCURACY} = {'diff': [0.00010686099999999976, 0.00010711100000000001, 0.00010657000000000028, 0.0001062219999999961, 0.00010683300000000062, 0.00010623599999999567, 0.00010716599999999882, 0.00010699999999999599,...</msg>
<status status="PASS" starttime="20201030 10:59:26.645" endtime="20201030 10:59:26.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.663" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.660" endtime="20201030 10:59:26.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.668" level="INFO">VALUE: [0.00010686099999999976, 0.00010711100000000001, 0.00010657000000000028, 0.0001062219999999961, 0.00010683300000000062, 0.00010623599999999567, 0.00010716599999999882, 0.00010699999999999599, 0.00010713899999999915, 0.00010709700000000044, 0.00010687500000000627, 0.00010663899999999865, 0.000106208999999996, 0.00010616599999999782, 0.00010627800000000132, 0.00010658399999999985, 0.00010674999999999574, 0.00010645799999999678, 0.00010643100000000405, 0.00010644400000000415, 0.00010687499999999933, 0.00010711199999999949, 0.00010686099999999976, 0.00010691700000000498, 0.00010629100000000141, 0.00010699999999999599, 0.0001065690000000008, 0.00010715199999999925, 0.00010697300000000326, 0.00010627800000000132, 0.00010683300000000062, 0.00010663899999999865, 0.00010637500000000577, 0.00010644500000000362, 0.00010627800000000132, 0.0001072219999999971, 0.00010662499999999908, 0.00010616699999999729, 0.0001065560000000007, 0.000106514000000002, 0.00010704200000000164, 0.00010669399999999746, 0.00010612500000000552, 0.0001066940000000044, 0.00010661099999999951, 0.00010691599999999857, 0.00010642999999999764, 0.00010616599999999782, 0.000106514000000002, 0.00010640299999999797]</msg>
<status status="PASS" starttime="20201030 10:59:26.665" endtime="20201030 10:59:26.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.654" endtime="20201030 10:59:26.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.682" endtime="20201030 10:59:26.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.676" endtime="20201030 10:59:26.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.674" endtime="20201030 10:59:26.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.187" endtime="20201030 10:59:26.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.186" endtime="20201030 10:59:26.707"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.731" endtime="20201030 10:59:26.751"></status>
</kw>
<msg timestamp="20201030 10:59:26.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.727" endtime="20201030 10:59:26.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.754" endtime="20201030 10:59:26.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.761" endtime="20201030 10:59:26.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.720" endtime="20201030 10:59:26.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.714" endtime="20201030 10:59:26.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.784" endtime="20201030 10:59:27.118"></status>
</kw>
<msg timestamp="20201030 10:59:27.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040516125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.781" endtime="20201030 10:59:27.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040516125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.127" endtime="20201030 10:59:27.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.145" endtime="20201030 10:59:27.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.773" endtime="20201030 10:59:27.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.769" endtime="20201030 10:59:27.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.162" level="INFO">${RESULT} = [{'diff': 0.00010747199999999735}, {'diff': 0.00010719399999999796}, {'diff': 0.0001078889999999999}, {'diff': 0.00010731900000000155}, {'diff': 0.00010752699999999615}, {'diff': 0.0001079729999999973...</msg>
<status status="PASS" starttime="20201030 10:59:27.154" endtime="20201030 10:59:27.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.173" level="INFO">${ACCURACY} = {'diff': [0.00010747199999999735, 0.00010719399999999796, 0.0001078889999999999, 0.00010731900000000155, 0.00010752699999999615, 0.00010797299999999732, 0.00010802800000000307, 0.00010812500000000058,...</msg>
<status status="PASS" starttime="20201030 10:59:27.164" endtime="20201030 10:59:27.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.184" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.181" endtime="20201030 10:59:27.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.189" level="INFO">VALUE: [0.00010747199999999735, 0.00010719399999999796, 0.0001078889999999999, 0.00010731900000000155, 0.00010752699999999615, 0.00010797299999999732, 0.00010802800000000307, 0.00010812500000000058, 0.000107514000000003, 0.00010790299999999947, 0.0001075690000000018, 0.0001078889999999999, 0.00010818099999999886, 0.00010730600000000146, 0.00010765299999999922, 0.00010744499999999768, 0.00010769399999999846, 0.00010816599999999982, 0.00010725000000000318, 0.00010752799999999563, 0.00010784700000000119, 0.00010749999999999649, 0.00010732000000000103, 0.00010719499999999743, 0.00010780500000000248, 0.00010808300000000187, 0.00010757000000000128, 0.00010804099999999622, 0.0001075549999999953, 0.00010801299999999708, 0.0001071940000000049, 0.00010801300000000402, 0.0001074019999999995, 0.00010757000000000128, 0.00010776399999999631, 0.00010752800000000257, 0.0001080690000000023, 0.00010752800000000257, 0.00010719399999999796, 0.00010776400000000325, 0.0001077360000000041, 0.00010808400000000135, 0.00010712499999999958, 0.00010724999999999624, 0.00010763899999999965, 0.00010730600000000146, 0.00010738900000000634, 0.00010742999999999864, 0.00010811100000000101, 0.00010748600000000386]</msg>
<status status="PASS" starttime="20201030 10:59:27.186" endtime="20201030 10:59:27.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.175" endtime="20201030 10:59:27.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.201" endtime="20201030 10:59:27.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.197" endtime="20201030 10:59:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.194" endtime="20201030 10:59:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.710" endtime="20201030 10:59:27.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.709" endtime="20201030 10:59:27.226"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.249" endtime="20201030 10:59:27.269"></status>
</kw>
<msg timestamp="20201030 10:59:27.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.245" endtime="20201030 10:59:27.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.272" endtime="20201030 10:59:27.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.279" endtime="20201030 10:59:27.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.238" endtime="20201030 10:59:27.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.233" endtime="20201030 10:59:27.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.302" endtime="20201030 10:59:27.635"></status>
</kw>
<msg timestamp="20201030 10:59:27.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039281958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.299" endtime="20201030 10:59:27.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039281958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.644" endtime="20201030 10:59:27.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.663" endtime="20201030 10:59:27.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.291" endtime="20201030 10:59:27.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.287" endtime="20201030 10:59:27.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.679" level="INFO">${RESULT} = [{'diff': 0.00010869499999999893}, {'diff': 0.00010847199999999835}, {'diff': 0.00010877800000000382}, {'diff': 0.00010858300000000237}, {'diff': 0.00010845799999999878}, {'diff': 0.000109111000000002...</msg>
<status status="PASS" starttime="20201030 10:59:27.671" endtime="20201030 10:59:27.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.690" level="INFO">${ACCURACY} = {'diff': [0.00010869499999999893, 0.00010847199999999835, 0.00010877800000000382, 0.00010858300000000237, 0.00010845799999999878, 0.00010911100000000201, 0.0001082219999999981, 0.00010858299999999543,...</msg>
<status status="PASS" starttime="20201030 10:59:27.682" endtime="20201030 10:59:27.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.701" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.699" endtime="20201030 10:59:27.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.706" level="INFO">VALUE: [0.00010869499999999893, 0.00010847199999999835, 0.00010877800000000382, 0.00010858300000000237, 0.00010845799999999878, 0.00010911100000000201, 0.0001082219999999981, 0.00010858299999999543, 0.00010890300000000047, 0.00010866600000000032, 0.0001087219999999986, 0.00010867999999999989, 0.00010854200000000314, 0.00010897299999999832, 0.00010888899999999396, 0.00010844499999999868, 0.00010887500000000133, 0.00010866699999999979, 0.00010868099999999936, 0.00010899999999999799, 0.0001087219999999986, 0.0001090549999999968, 0.0001082360000000046, 0.00010850000000000443, 0.00010836099999999432, 0.00010912500000000158, 0.00010848599999999792, 0.00010834700000000169, 0.00010876399999999731, 0.00010832000000000203, 0.0001090969999999955, 0.00010819499999999843, 0.00010879200000000339, 0.00010834700000000169, 0.00010906899999999636, 0.00010819399999999896, 0.00010918099999999986, 0.00010912500000000158, 0.00010841699999999954, 0.00010817999999999939, 0.00010887500000000133, 0.00010848599999999792, 0.00010815299999999972, 0.00010886100000000176, 0.00010906899999999636, 0.000108596999999995, 0.00010822300000000451, 0.00010909700000000244, 0.00010863900000000065, 0.00010819499999999843]</msg>
<status status="PASS" starttime="20201030 10:59:27.703" endtime="20201030 10:59:27.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.692" endtime="20201030 10:59:27.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.719" endtime="20201030 10:59:27.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.714" endtime="20201030 10:59:27.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.712" endtime="20201030 10:59:27.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.228" endtime="20201030 10:59:27.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.227" endtime="20201030 10:59:27.745"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.768" endtime="20201030 10:59:27.788"></status>
</kw>
<msg timestamp="20201030 10:59:27.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.764" endtime="20201030 10:59:27.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.792" endtime="20201030 10:59:27.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.798" endtime="20201030 10:59:27.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.757" endtime="20201030 10:59:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.751" endtime="20201030 10:59:27.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.821" endtime="20201030 10:59:28.156"></status>
</kw>
<msg timestamp="20201030 10:59:28.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040175194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040284694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.818" endtime="20201030 10:59:28.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040175194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040284694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.165" endtime="20201030 10:59:28.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.183" endtime="20201030 10:59:28.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.811" endtime="20201030 10:59:28.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.806" endtime="20201030 10:59:28.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.200" level="INFO">${RESULT} = [{'diff': 0.00010950000000000543}, {'diff': 0.00010980600000000396}, {'diff': 0.00010941700000000054}, {'diff': 0.00011002799999999813}, {'diff': 0.00010974999999999874}, {'diff': 0.000110152999999994...</msg>
<status status="PASS" starttime="20201030 10:59:28.192" endtime="20201030 10:59:28.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.209" level="INFO">${ACCURACY} = {'diff': [0.00010950000000000543, 0.00010980600000000396, 0.00010941700000000054, 0.00011002799999999813, 0.00010974999999999874, 0.00011015299999999478, 0.00010965199999999481, 0.00010969400000000046...</msg>
<status status="PASS" starttime="20201030 10:59:28.202" endtime="20201030 10:59:28.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.220" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.218" endtime="20201030 10:59:28.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.225" level="INFO">VALUE: [0.00010950000000000543, 0.00010980600000000396, 0.00010941700000000054, 0.00011002799999999813, 0.00010974999999999874, 0.00011015299999999478, 0.00010965199999999481, 0.00010969400000000046, 0.00010966700000000079, 0.00011001399999999856, 0.0001098890000000019, 0.00010951399999999806, 0.00010945799999999978, 0.00010941700000000054, 0.0001093890000000014, 0.00010929099999999747, 0.00010929199999999695, 0.00010937500000000183, 0.00010934700000000269, 0.00010943100000000011, 0.00010994400000000071, 0.00010990300000000147, 0.00010954200000000414, 0.00010977799999999788, 0.00011001399999999856, 0.00010919399999999996, 0.00010995899999999975, 0.00010991700000000104, 0.00010966700000000079, 0.00010994400000000071, 0.00010973599999999917, 0.00010919399999999996, 0.00010943000000000064, 0.00010991700000000104, 0.00010958300000000337, 0.00010929100000000441, 0.00010941600000000107, 0.00010927799999999738, 0.00010948599999999892, 0.00010987499999999539, 0.00010945899999999925, 0.00010961200000000199, 0.00011008400000000335, 0.00010999999999999899, 0.00010936200000000174, 0.00010937499999999489, 0.00010952699999999815, 0.00010943000000000064, 0.00010976399999999831, 0.00010948599999999892]</msg>
<status status="PASS" starttime="20201030 10:59:28.222" endtime="20201030 10:59:28.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.211" endtime="20201030 10:59:28.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.244" endtime="20201030 10:59:28.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.240" endtime="20201030 10:59:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.237" endtime="20201030 10:59:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.747" endtime="20201030 10:59:28.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.746" endtime="20201030 10:59:28.269"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.292" endtime="20201030 10:59:28.314"></status>
</kw>
<msg timestamp="20201030 10:59:28.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.288" endtime="20201030 10:59:28.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.317" endtime="20201030 10:59:28.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.323" endtime="20201030 10:59:28.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.281" endtime="20201030 10:59:28.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.276" endtime="20201030 10:59:28.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.346" endtime="20201030 10:59:28.680"></status>
</kw>
<msg timestamp="20201030 10:59:28.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040803, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040914194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:28.343" endtime="20201030 10:59:28.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040803, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040914194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:28.690" endtime="20201030 10:59:28.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.708" endtime="20201030 10:59:28.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.336" endtime="20201030 10:59:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.331" endtime="20201030 10:59:28.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.725" level="INFO">${RESULT} = [{'diff': 0.00011119400000000196}, {'diff': 0.00011077700000000634}, {'diff': 0.00011077799999999888}, {'diff': 0.00011120800000000153}, {'diff': 0.00011095800000000128}, {'diff': 0.000110944000000001...</msg>
<status status="PASS" starttime="20201030 10:59:28.716" endtime="20201030 10:59:28.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.734" level="INFO">${ACCURACY} = {'diff': [0.00011119400000000196, 0.00011077700000000634, 0.00011077799999999888, 0.00011120800000000153, 0.00011095800000000128, 0.00011094400000000171, 0.00011065300000000222, 0.00011065299999999528...</msg>
<status status="PASS" starttime="20201030 10:59:28.727" endtime="20201030 10:59:28.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.745" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.742" endtime="20201030 10:59:28.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.750" level="INFO">VALUE: [0.00011119400000000196, 0.00011077700000000634, 0.00011077799999999888, 0.00011120800000000153, 0.00011095800000000128, 0.00011094400000000171, 0.00011065300000000222, 0.00011065299999999528, 0.00011073600000000017, 0.0001105549999999983, 0.00011113899999999621, 0.0001108890000000029, 0.00011024999999999924, 0.00011037499999999589, 0.00011037499999999589, 0.00011054099999999872, 0.00011040300000000197, 0.00011113799999999674, 0.00011077800000000582, 0.00011056899999999786, 0.00011118100000000186, 0.00011106999999999784, 0.00011112499999999664, 0.00011061099999999657, 0.00011027799999999838, 0.00011119399999999502, 0.0001109169999999951, 0.00011081999999999759, 0.00011084699999999725, 0.00011091599999999563, 0.00011068000000000189, 0.0001102220000000001, 0.00011090299999999553, 0.00011109700000000444, 0.00011037499999999589, 0.00011061100000000351, 0.00011107000000000478, 0.00011122300000000057, 0.00011116700000000229, 0.00011052799999999863, 0.00011040299999999503, 0.0001110560000000052, 0.00011063900000000265, 0.00011041700000000154, 0.00011016700000000129, 0.00011059700000000394, 0.00011093099999999467, 0.00011044499999999374, 0.00011080600000000496, 0.00011063900000000265]</msg>
<status status="PASS" starttime="20201030 10:59:28.747" endtime="20201030 10:59:28.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.736" endtime="20201030 10:59:28.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.765" endtime="20201030 10:59:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.759" endtime="20201030 10:59:28.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.756" endtime="20201030 10:59:28.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.271" endtime="20201030 10:59:28.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.270" endtime="20201030 10:59:28.790"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.813" endtime="20201030 10:59:28.833"></status>
</kw>
<msg timestamp="20201030 10:59:28.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.809" endtime="20201030 10:59:28.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.836" endtime="20201030 10:59:28.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.843" endtime="20201030 10:59:28.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.802" endtime="20201030 10:59:28.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.796" endtime="20201030 10:59:28.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.866" endtime="20201030 10:59:29.200"></status>
</kw>
<msg timestamp="20201030 10:59:29.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039507083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.863" endtime="20201030 10:59:29.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039507083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.209" endtime="20201030 10:59:29.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.227" endtime="20201030 10:59:29.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.855" endtime="20201030 10:59:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.851" endtime="20201030 10:59:29.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.244" level="INFO">${RESULT} = [{'diff': 0.00011188899999999696}, {'diff': 0.00011198600000000142}, {'diff': 0.00011169499999999499}, {'diff': 0.00011137499999999689}, {'diff': 0.00011175000000000074}, {'diff': 0.000111971999999994...</msg>
<status status="PASS" starttime="20201030 10:59:29.236" endtime="20201030 10:59:29.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.255" level="INFO">${ACCURACY} = {'diff': [0.00011188899999999696, 0.00011198600000000142, 0.00011169499999999499, 0.00011137499999999689, 0.00011175000000000074, 0.00011197199999999491, 0.0001115549999999993, 0.00011190300000000347,...</msg>
<status status="PASS" starttime="20201030 10:59:29.246" endtime="20201030 10:59:29.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.265" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.263" endtime="20201030 10:59:29.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.271" level="INFO">VALUE: [0.00011188899999999696, 0.00011198600000000142, 0.00011169499999999499, 0.00011137499999999689, 0.00011175000000000074, 0.00011197199999999491, 0.0001115549999999993, 0.00011190300000000347, 0.00011163899999999671, 0.00011175000000000074, 0.00011179199999999945, 0.00011118100000000186, 0.00011191599999999663, 0.00011191700000000304, 0.00011137499999999689, 0.00011211099999999807, 0.0001117220000000016, 0.00011123600000000067, 0.00011137499999999689, 0.00011218000000000339, 0.00011166700000000279, 0.00011193099999999567, 0.0001112220000000011, 0.00011176400000000031, 0.00011136099999999732, 0.00011133299999999818, 0.00011186099999999782, 0.00011213899999999721, 0.00011218000000000339, 0.00011197200000000185, 0.00011200000000000099, 0.00011186099999999782, 0.00011144400000000221, 0.00011140300000000297, 0.00011198600000000142, 0.00011181899999999911, 0.00011130499999999904, 0.00011137500000000383, 0.00011161100000000451, 0.00011197200000000185, 0.00011188899999999696, 0.00011148600000000092, 0.00011161099999999757, 0.00011126399999999981, 0.000111596999999998, 0.00011206899999999936, 0.00011202800000000013, 0.00011152700000000015, 0.00011206999999999884, 0.00011205599999999927]</msg>
<status status="PASS" starttime="20201030 10:59:29.268" endtime="20201030 10:59:29.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.256" endtime="20201030 10:59:29.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.283" endtime="20201030 10:59:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.279" endtime="20201030 10:59:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.276" endtime="20201030 10:59:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.792" endtime="20201030 10:59:29.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.791" endtime="20201030 10:59:29.308"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.331" endtime="20201030 10:59:29.351"></status>
</kw>
<msg timestamp="20201030 10:59:29.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.327" endtime="20201030 10:59:29.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.355" endtime="20201030 10:59:29.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.361" endtime="20201030 10:59:29.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.320" endtime="20201030 10:59:29.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.315" endtime="20201030 10:59:29.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.384" endtime="20201030 10:59:29.717"></status>
</kw>
<msg timestamp="20201030 10:59:29.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03916225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039274458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:29.381" endtime="20201030 10:59:29.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03916225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039274458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:29.726" endtime="20201030 10:59:29.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.744" endtime="20201030 10:59:29.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.373" endtime="20201030 10:59:29.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.369" endtime="20201030 10:59:29.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.761" level="INFO">${RESULT} = [{'diff': 0.00011220799999999559}, {'diff': 0.00011295800000000328}, {'diff': 0.0001130969999999995}, {'diff': 0.000112596999999999}, {'diff': 0.00011247200000000235}, {'diff': 0.00011240299999999703}...</msg>
<status status="PASS" starttime="20201030 10:59:29.753" endtime="20201030 10:59:29.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.772" level="INFO">${ACCURACY} = {'diff': [0.00011220799999999559, 0.00011295800000000328, 0.0001130969999999995, 0.000112596999999999, 0.00011247200000000235, 0.00011240299999999703, 0.00011254100000000072, 0.00011291700000000404, 0...</msg>
<status status="PASS" starttime="20201030 10:59:29.763" endtime="20201030 10:59:29.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.783" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.781" endtime="20201030 10:59:29.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.789" level="INFO">VALUE: [0.00011220799999999559, 0.00011295800000000328, 0.0001130969999999995, 0.000112596999999999, 0.00011247200000000235, 0.00011240299999999703, 0.00011254100000000072, 0.00011291700000000404, 0.00011229199999999995, 0.00011238899999999746, 0.00011263899999999771, 0.00011302699999999472, 0.00011222300000000157, 0.00011286099999999882, 0.0001123749999999979, 0.00011256899999999986, 0.00011302700000000165, 0.0001125550000000003, 0.00011256899999999986, 0.00011302800000000113, 0.00011294399999999677, 0.0001130969999999995, 0.00011266700000000379, 0.00011263799999999824, 0.00011225000000000124, 0.00011306900000000036, 0.00011284699999999925, 0.00011315299999999778, 0.00011315300000000472, 0.00011247200000000235, 0.0001124169999999966, 0.00011279200000000045, 0.00011290300000000447, 0.00011316700000000429, 0.00011319499999999649, 0.00011269500000000293, 0.0001130969999999995, 0.0001130420000000007, 0.00011320799999999659, 0.00011233299999999918, 0.00011220800000000253, 0.0001129299999999972, 0.00011254100000000072, 0.00011250000000000149, 0.00011311099999999907, 0.00011299999999999505, 0.00011258299999999943, 0.00011273600000000217, 0.00011225000000000124, 0.00011295899999999581]</msg>
<status status="PASS" starttime="20201030 10:59:29.786" endtime="20201030 10:59:29.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.774" endtime="20201030 10:59:29.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.802" endtime="20201030 10:59:29.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.797" endtime="20201030 10:59:29.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.795" endtime="20201030 10:59:29.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.310" endtime="20201030 10:59:29.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.309" endtime="20201030 10:59:29.827"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.850" endtime="20201030 10:59:29.871"></status>
</kw>
<msg timestamp="20201030 10:59:29.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.847" endtime="20201030 10:59:29.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.874" endtime="20201030 10:59:29.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.880" endtime="20201030 10:59:29.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.840" endtime="20201030 10:59:29.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.834" endtime="20201030 10:59:29.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.904" endtime="20201030 10:59:30.240"></status>
</kw>
<msg timestamp="20201030 10:59:30.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039697306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.900" endtime="20201030 10:59:30.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039697306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.249" endtime="20201030 10:59:30.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.267" endtime="20201030 10:59:30.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.893" endtime="20201030 10:59:30.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.888" endtime="20201030 10:59:30.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.284" level="INFO">${RESULT} = [{'diff': 0.00011418100000000486}, {'diff': 0.00011394399999999777}, {'diff': 0.00011334699999999975}, {'diff': 0.00011363899999999871}, {'diff': 0.00011349999999999555}, {'diff': 0.000113693999999997...</msg>
<status status="PASS" starttime="20201030 10:59:30.276" endtime="20201030 10:59:30.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.293" level="INFO">${ACCURACY} = {'diff': [0.00011418100000000486, 0.00011394399999999777, 0.00011334699999999975, 0.00011363899999999871, 0.00011349999999999555, 0.00011369399999999752, 0.00011337500000000583, 0.00011347200000000335...</msg>
<status status="PASS" starttime="20201030 10:59:30.286" endtime="20201030 10:59:30.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.304" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.302" endtime="20201030 10:59:30.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.309" level="INFO">VALUE: [0.00011418100000000486, 0.00011394399999999777, 0.00011334699999999975, 0.00011363899999999871, 0.00011349999999999555, 0.00011369399999999752, 0.00011337500000000583, 0.00011347200000000335, 0.00011390299999999853, 0.00011382000000000059, 0.00011351399999999512, 0.00011370800000000403, 0.0001137499999999958, 0.00011373600000000317, 0.00011384799999999973, 0.00011333300000000018, 0.00011326400000000181, 0.00011343000000000464, 0.00011330500000000104, 0.00011338899999999846, 0.00011365199999999881, 0.00011384700000000025, 0.00011352800000000163, 0.00011336099999999932, 0.0001137220000000036, 0.00011401400000000256, 0.00011399999999999605, 0.00011329200000000095, 0.00011415199999999931, 0.00011358300000000043, 0.00011369499999999699, 0.00011322300000000257, 0.00011419399999999802, 0.0001137499999999958, 0.00011369499999999699, 0.0001134299999999977, 0.0001139169999999981, 0.00011363899999999871, 0.0001132220000000031, 0.00011347200000000335, 0.00011419499999999749, 0.00011326400000000181, 0.00011334699999999975, 0.00011350000000000249, 0.00011384700000000025, 0.00011365299999999828, 0.00011354100000000172, 0.00011417999999999845, 0.00011344399999999727, 0.00011337500000000583]</msg>
<status status="PASS" starttime="20201030 10:59:30.306" endtime="20201030 10:59:30.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.295" endtime="20201030 10:59:30.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.322" endtime="20201030 10:59:30.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.318" endtime="20201030 10:59:30.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.315" endtime="20201030 10:59:30.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.830" endtime="20201030 10:59:30.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.828" endtime="20201030 10:59:30.347"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.370" endtime="20201030 10:59:30.392"></status>
</kw>
<msg timestamp="20201030 10:59:30.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.366" endtime="20201030 10:59:30.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.395" endtime="20201030 10:59:30.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.401" endtime="20201030 10:59:30.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.359" endtime="20201030 10:59:30.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.353" endtime="20201030 10:59:30.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.424" endtime="20201030 10:59:30.758"></status>
</kw>
<msg timestamp="20201030 10:59:30.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.421" endtime="20201030 10:59:30.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.767" endtime="20201030 10:59:30.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.785" endtime="20201030 10:59:30.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.414" endtime="20201030 10:59:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.409" endtime="20201030 10:59:30.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.802" level="INFO">${RESULT} = [{'diff': 0.00011508300000000193}, {'diff': 0.00011468100000000536}, {'diff': 0.00011472299999999713}, {'diff': 0.00011470799999999809}, {'diff': 0.0001144299999999987}, {'diff': 0.0001152079999999985...</msg>
<status status="PASS" starttime="20201030 10:59:30.794" endtime="20201030 10:59:30.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.811" level="INFO">${ACCURACY} = {'diff': [0.00011508300000000193, 0.00011468100000000536, 0.00011472299999999713, 0.00011470799999999809, 0.0001144299999999987, 0.00011520799999999859, 0.00011452799999999569, 0.00011447200000000435,...</msg>
<status status="PASS" starttime="20201030 10:59:30.804" endtime="20201030 10:59:30.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.822" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.820" endtime="20201030 10:59:30.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.828" level="INFO">VALUE: [0.00011508300000000193, 0.00011468100000000536, 0.00011472299999999713, 0.00011470799999999809, 0.0001144299999999987, 0.00011520799999999859, 0.00011452799999999569, 0.00011447200000000435, 0.00011443099999999817, 0.00011502799999999619, 0.00011509800000000098, 0.0001147220000000046, 0.00011438899999999946, 0.00011431900000000161, 0.0001145550000000023, 0.00011458300000000143, 0.0001144169999999986, 0.00011509800000000098, 0.00011455499999999535, 0.0001150970000000015, 0.00011443000000000564, 0.00011448599999999698, 0.00011433300000000118, 0.00011519499999999849, 0.0001142220000000041, 0.00011444399999999827, 0.0001144169999999986, 0.0001144299999999987, 0.00011480500000000254, 0.00011431900000000161, 0.00011512500000000064, 0.00011517999999999945, 0.0001143749999999999, 0.00011438899999999946, 0.00011486100000000082, 0.00011440299999999903, 0.00011508300000000193, 0.00011495799999999834, 0.00011497199999999791, 0.00011448600000000392, 0.0001142499999999963, 0.00011500000000000399, 0.00011501399999999662, 0.00011468099999999842, 0.00011434800000000023, 0.00011447200000000435, 0.00011426400000000281, 0.00011479200000000245, 0.00011463900000000665, 0.00011518100000000586]</msg>
<status status="PASS" starttime="20201030 10:59:30.825" endtime="20201030 10:59:30.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.813" endtime="20201030 10:59:30.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.843" endtime="20201030 10:59:30.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.837" endtime="20201030 10:59:30.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.834" endtime="20201030 10:59:30.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.349" endtime="20201030 10:59:30.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.348" endtime="20201030 10:59:30.868"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.891" endtime="20201030 10:59:30.911"></status>
</kw>
<msg timestamp="20201030 10:59:30.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.887" endtime="20201030 10:59:30.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.915" endtime="20201030 10:59:30.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.921" endtime="20201030 10:59:30.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.880" endtime="20201030 10:59:30.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.874" endtime="20201030 10:59:30.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.944" endtime="20201030 10:59:31.278"></status>
</kw>
<msg timestamp="20201030 10:59:31.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039718083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.941" endtime="20201030 10:59:31.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039718083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.287" endtime="20201030 10:59:31.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.305" endtime="20201030 10:59:31.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.934" endtime="20201030 10:59:31.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.929" endtime="20201030 10:59:31.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.322" level="INFO">${RESULT} = [{'diff': 0.00011547199999999841}, {'diff': 0.00011565300000000028}, {'diff': 0.00011582000000000259}, {'diff': 0.00011548599999999798}, {'diff': 0.00011583400000000216}, {'diff': 0.000115429999999999...</msg>
<status status="PASS" starttime="20201030 10:59:31.314" endtime="20201030 10:59:31.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.337" level="INFO">${ACCURACY} = {'diff': [0.00011547199999999841, 0.00011565300000000028, 0.00011582000000000259, 0.00011548599999999798, 0.00011583400000000216, 0.0001154299999999997, 0.0001158750000000014, 0.00011615300000000078, ...</msg>
<status status="PASS" starttime="20201030 10:59:31.324" endtime="20201030 10:59:31.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.348" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.345" endtime="20201030 10:59:31.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.353" level="INFO">VALUE: [0.00011547199999999841, 0.00011565300000000028, 0.00011582000000000259, 0.00011548599999999798, 0.00011583400000000216, 0.0001154299999999997, 0.0001158750000000014, 0.00011615300000000078, 0.00011606900000000336, 0.00011579200000000345, 0.00011532000000000209, 0.00011605499999999686, 0.00011551399999999712, 0.00011525000000000424, 0.00011545899999999831, 0.000115597000000002, 0.00011566699999999985, 0.00011526400000000381, 0.00011552800000000363, 0.00011587499999999445, 0.00011561099999999463, 0.00011570799999999909, 0.00011583400000000216, 0.0001157499999999978, 0.00011590300000000053, 0.00011593099999999967, 0.0001153750000000009, 0.00011547199999999841, 0.00011536100000000132, 0.00011550000000000449, 0.00011577800000000388, 0.00011604199999999676, 0.00011604100000000422, 0.00011602800000000413, 0.00011612500000000164, 0.00011620799999999959, 0.00011588900000000096, 0.00011616700000000035, 0.00011527699999999697, 0.00011619400000000002, 0.00011545899999999831, 0.00011616600000000088, 0.00011622199999999916, 0.00011538900000000046, 0.00011615300000000078, 0.00011543099999999917, 0.00011608300000000293, 0.00011568099999999942, 0.00011531900000000261, 0.00011548599999999798]</msg>
<status status="PASS" starttime="20201030 10:59:31.350" endtime="20201030 10:59:31.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.339" endtime="20201030 10:59:31.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.365" endtime="20201030 10:59:31.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.361" endtime="20201030 10:59:31.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.359" endtime="20201030 10:59:31.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.870" endtime="20201030 10:59:31.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.869" endtime="20201030 10:59:31.390"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.413" endtime="20201030 10:59:31.433"></status>
</kw>
<msg timestamp="20201030 10:59:31.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.409" endtime="20201030 10:59:31.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.437" endtime="20201030 10:59:31.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.443" endtime="20201030 10:59:31.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.402" endtime="20201030 10:59:31.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.397" endtime="20201030 10:59:31.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.466" endtime="20201030 10:59:31.800"></status>
</kw>
<msg timestamp="20201030 10:59:31.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039217028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.463" endtime="20201030 10:59:31.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039217028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.810" endtime="20201030 10:59:31.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.828" endtime="20201030 10:59:31.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.456" endtime="20201030 10:59:31.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.451" endtime="20201030 10:59:31.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.845" level="INFO">${RESULT} = [{'diff': 0.00011679099999999804}, {'diff': 0.00011686100000000282}, {'diff': 0.00011630600000000352}, {'diff': 0.00011638900000000146}, {'diff': 0.00011630599999999658}, {'diff': 0.000116403000000001...</msg>
<status status="PASS" starttime="20201030 10:59:31.836" endtime="20201030 10:59:31.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.856" level="INFO">${ACCURACY} = {'diff': [0.00011679099999999804, 0.00011686100000000282, 0.00011630600000000352, 0.00011638900000000146, 0.00011630599999999658, 0.00011640300000000103, 0.00011663900000000171, 0.00011626399999999787...</msg>
<status status="PASS" starttime="20201030 10:59:31.847" endtime="20201030 10:59:31.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.867" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.865" endtime="20201030 10:59:31.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.873" level="INFO">VALUE: [0.00011679099999999804, 0.00011686100000000282, 0.00011630600000000352, 0.00011638900000000146, 0.00011630599999999658, 0.00011640300000000103, 0.00011663900000000171, 0.00011626399999999787, 0.0001168750000000024, 0.00011627799999999744, 0.00011691699999999416, 0.00011715300000000178, 0.0001170699999999969, 0.00011641600000000113, 0.00011718000000000145, 0.00011668100000000042, 0.00011623599999999873, 0.00011649999999999855, 0.00011718100000000092, 0.00011641600000000113, 0.00011636099999999538, 0.0001165420000000042, 0.00011673599999999923, 0.00011705499999999786, 0.00011645799999999984, 0.00011684700000000325, 0.00011715200000000231, 0.00011647199999999941, 0.00011672199999999966, 0.00011633299999999624, 0.00011699999999999905, 0.00011659699999999606, 0.00011643100000000017, 0.00011705599999999733, 0.00011686099999999588, 0.00011677799999999794, 0.00011701399999999862, 0.00011625000000000524, 0.00011708300000000393, 0.0001167499999999988, 0.00011711100000000307, 0.00011645899999999931, 0.00011654199999999726, 0.00011622300000000557, 0.00011659699999999606, 0.00011683299999999675, 0.0001169170000000011, 0.00011681999999999665, 0.00011651400000000506, 0.00011640300000000103]</msg>
<status status="PASS" starttime="20201030 10:59:31.870" endtime="20201030 10:59:31.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.857" endtime="20201030 10:59:31.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.886" endtime="20201030 10:59:31.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.881" endtime="20201030 10:59:31.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.879" endtime="20201030 10:59:31.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.392" endtime="20201030 10:59:31.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.391" endtime="20201030 10:59:31.911"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.934" endtime="20201030 10:59:31.954"></status>
</kw>
<msg timestamp="20201030 10:59:31.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.930" endtime="20201030 10:59:31.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.958" endtime="20201030 10:59:31.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.964" endtime="20201030 10:59:31.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.923" endtime="20201030 10:59:31.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.917" endtime="20201030 10:59:31.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.987" endtime="20201030 10:59:32.323"></status>
</kw>
<msg timestamp="20201030 10:59:32.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039289681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.984" endtime="20201030 10:59:32.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039289681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.332" endtime="20201030 10:59:32.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.351" endtime="20201030 10:59:32.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.977" endtime="20201030 10:59:32.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.972" endtime="20201030 10:59:32.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.368" level="INFO">${RESULT} = [{'diff': 0.00011769400000000152}, {'diff': 0.00011755599999999783}, {'diff': 0.00011802799999999919}, {'diff': 0.00011779199999999851}, {'diff': 0.00011794400000000177}, {'diff': 0.000117945000000001...</msg>
<status status="PASS" starttime="20201030 10:59:32.359" endtime="20201030 10:59:32.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.377" level="INFO">${ACCURACY} = {'diff': [0.00011769400000000152, 0.00011755599999999783, 0.00011802799999999919, 0.00011779199999999851, 0.00011794400000000177, 0.00011794500000000124, 0.00011733300000000418, 0.00011755499999999836...</msg>
<status status="PASS" starttime="20201030 10:59:32.370" endtime="20201030 10:59:32.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.387" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.385" endtime="20201030 10:59:32.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.393" level="INFO">VALUE: [0.00011769400000000152, 0.00011755599999999783, 0.00011802799999999919, 0.00011779199999999851, 0.00011794400000000177, 0.00011794500000000124, 0.00011733300000000418, 0.00011755499999999836, 0.00011747200000000041, 0.00011734799999999629, 0.00011806899999999843, 0.00011748599999999998, 0.0001179170000000021, 0.00011808400000000441, 0.00011763899999999577, 0.00011738900000000246, 0.00011802799999999919, 0.00011748599999999998, 0.0001174170000000016, 0.00011751299999999965, 0.00011767999999999501, 0.00011769400000000152, 0.00011819399999999508, 0.00011779199999999851, 0.0001178049999999986, 0.00011794500000000124, 0.00011738899999999552, 0.00011766600000000238, 0.00011784799999999679, 0.00011755599999999783, 0.00011820800000000159, 0.0001175550000000053, 0.00011798600000000048, 0.00011788799999999655, 0.00011801399999999962, 0.00011811100000000407, 0.00011812500000000364, 0.00011752799999999869, 0.0001177499999999998, 0.0001176249999999962, 0.00011743100000000117, 0.00011800000000000005, 0.00011794500000000124, 0.00011800000000000005, 0.00011759800000000348, 0.0001174449999999938, 0.00011740300000000203, 0.00011795900000000081, 0.00011777699999999947, 0.00011770799999999415]</msg>
<status status="PASS" starttime="20201030 10:59:32.390" endtime="20201030 10:59:32.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.378" endtime="20201030 10:59:32.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.405" endtime="20201030 10:59:32.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.401" endtime="20201030 10:59:32.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.398" endtime="20201030 10:59:32.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.913" endtime="20201030 10:59:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.912" endtime="20201030 10:59:32.430"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.453" endtime="20201030 10:59:32.475"></status>
</kw>
<msg timestamp="20201030 10:59:32.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.449" endtime="20201030 10:59:32.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.479" endtime="20201030 10:59:32.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.485" endtime="20201030 10:59:32.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.442" endtime="20201030 10:59:32.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.436" endtime="20201030 10:59:32.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.508" endtime="20201030 10:59:32.841"></status>
</kw>
<msg timestamp="20201030 10:59:32.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041078375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.505" endtime="20201030 10:59:32.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041078375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.851" endtime="20201030 10:59:32.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.869" endtime="20201030 10:59:32.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.498" endtime="20201030 10:59:32.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.493" endtime="20201030 10:59:32.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.886" level="INFO">${RESULT} = [{'diff': 0.00011902800000000019}, {'diff': 0.00011919499999999555}, {'diff': 0.00011926400000000087}, {'diff': 0.00011908399999999847}, {'diff': 0.00011840300000000303}, {'diff': 0.000118958000000002...</msg>
<status status="PASS" starttime="20201030 10:59:32.877" endtime="20201030 10:59:32.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.895" level="INFO">${ACCURACY} = {'diff': [0.00011902800000000019, 0.00011919499999999555, 0.00011926400000000087, 0.00011908399999999847, 0.00011840300000000303, 0.00011895800000000234, 0.00011848700000000045, 0.00011883300000000568...</msg>
<status status="PASS" starttime="20201030 10:59:32.888" endtime="20201030 10:59:32.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.907" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.904" endtime="20201030 10:59:32.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.912" level="INFO">VALUE: [0.00011902800000000019, 0.00011919499999999555, 0.00011926400000000087, 0.00011908399999999847, 0.00011840300000000303, 0.00011895800000000234, 0.00011848700000000045, 0.00011883300000000568, 0.0001191249999999977, 0.00011859699999999807, 0.0001182500000000003, 0.00011866600000000338, 0.00011891699999999616, 0.00011854099999999979, 0.00011854199999999926, 0.00011833399999999772, 0.00011855499999999936, 0.00011843100000000217, 0.0001189029999999966, 0.00011900000000000105, 0.00011829199999999901, 0.00011880599999999908, 0.00011845800000000184, 0.00011920899999999512, 0.00011850000000000055, 0.00011880600000000602, 0.0001182370000000002, 0.00011901400000000062, 0.00011923599999999479, 0.00011844399999999533, 0.00011902800000000019, 0.00011838899999999652, 0.00011909799999999804, 0.00011834799999999729, 0.00011826399999999987, 0.00011831899999999868, 0.00011834800000000423, 0.00011836099999999738, 0.00011847299999999394, 0.0001185829999999985, 0.00011902800000000019, 0.00011859699999999807, 0.00011834799999999729, 0.000118597000000005, 0.00011872200000000166, 0.00011866599999999644, 0.00011854199999999926, 0.00011916699999999641, 0.00011865300000000328, 0.00011913899999999727]</msg>
<status status="PASS" starttime="20201030 10:59:32.909" endtime="20201030 10:59:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.897" endtime="20201030 10:59:32.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.927" endtime="20201030 10:59:32.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.921" endtime="20201030 10:59:32.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.918" endtime="20201030 10:59:32.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.432" endtime="20201030 10:59:32.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.431" endtime="20201030 10:59:32.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.075" endtime="20201030 10:59:32.952"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:40.947" endtime="20201030 10:59:32.955" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.973" endtime="20201030 10:59:32.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.969" endtime="20201030 10:59:32.996"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.029" endtime="20201030 10:59:33.047"></status>
</kw>
<msg timestamp="20201030 10:59:33.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.026" endtime="20201030 10:59:33.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.050" endtime="20201030 10:59:33.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.061" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:33.057" endtime="20201030 10:59:33.062"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:33.019" endtime="20201030 10:59:33.063"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:33.012" endtime="20201030 10:59:33.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.010" endtime="20201030 10:59:33.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:33.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:33.072" endtime="20201030 10:59:33.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.068" endtime="20201030 10:59:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.008" endtime="20201030 10:59:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.006" endtime="20201030 10:59:33.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.077" endtime="20201030 10:59:33.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.002" endtime="20201030 10:59:33.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.998" endtime="20201030 10:59:33.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.966" endtime="20201030 10:59:33.084"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.112" endtime="20201030 10:59:33.126"></status>
</kw>
<msg timestamp="20201030 10:59:33.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.108" endtime="20201030 10:59:33.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.130" endtime="20201030 10:59:33.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.137" endtime="20201030 10:59:33.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.099" endtime="20201030 10:59:33.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.093" endtime="20201030 10:59:33.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.160" endtime="20201030 10:59:33.507"></status>
</kw>
<msg timestamp="20201030 10:59:33.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130404236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130425639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.157" endtime="20201030 10:59:33.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130404236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130425639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.517" endtime="20201030 10:59:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.535" endtime="20201030 10:59:33.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.150" endtime="20201030 10:59:33.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.145" endtime="20201030 10:59:33.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.553" level="INFO">${RESULT} = [{'diff': 2.140300000000317e-05}, {'diff': 2.1652999999982603e-05}, {'diff': 2.097199999998023e-05}, {'diff': 2.106900000001244e-05}, {'diff': 2.1291999999978328e-05}, {'diff': 2.112500000001072e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:33.544" endtime="20201030 10:59:33.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:33.562" level="INFO">${ACCURACY} = {'diff': [2.140300000000317e-05, 2.1652999999982603e-05, 2.097199999998023e-05, 2.106900000001244e-05, 2.1291999999978328e-05, 2.112500000001072e-05, 2.1638999999989972e-05, 2.1305999999998715e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:59:33.555" endtime="20201030 10:59:33.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.573" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:59:33.570" endtime="20201030 10:59:33.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.580" level="INFO">VALUE: [2.140300000000317e-05, 2.1652999999982603e-05, 2.097199999998023e-05, 2.106900000001244e-05, 2.1291999999978328e-05, 2.112500000001072e-05, 2.1638999999989972e-05, 2.1305999999998715e-05, 2.1805999999985337e-05, 2.1638999999989972e-05, 2.165300000001036e-05, 2.145799999997422e-05, 2.1652000000010885e-05, 2.0958000000015353e-05, 2.181900000000625e-05, 2.1110999999990332e-05, 2.129100000000661e-05, 2.1639000000017727e-05, 2.1806000000013093e-05, 2.1263999999993066e-05, 2.0986000000000615e-05, 2.1972000000008984e-05, 2.113900000000335e-05, 2.1277999999985697e-05, 2.1819999999977968e-05, 2.1471999999994607e-05, 2.166700000000299e-05, 2.1639000000017727e-05, 2.1471999999994607e-05, 2.147299999999408e-05, 2.1820000000005724e-05, 2.1445000000008818e-05, 2.113900000000335e-05, 2.1429999999988958e-05, 2.112500000001072e-05, 2.1639000000017727e-05, 2.1278000000013453e-05, 2.147299999999408e-05, 2.1138000000003876e-05, 2.1986000000001615e-05, 2.1764000000007444e-05, 2.161100000000471e-05, 2.130499999999924e-05, 2.115299999999598e-05, 2.1957999999988598e-05, 2.1485999999987238e-05, 2.1292000000006084e-05, 2.1250000000000435e-05, 2.1804999999985863e-05, 2.0945000000022196e-05]</msg>
<status status="PASS" starttime="20201030 10:59:33.576" endtime="20201030 10:59:33.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.564" endtime="20201030 10:59:33.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:33.591" endtime="20201030 10:59:33.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.587" endtime="20201030 10:59:33.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.585" endtime="20201030 10:59:33.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.089" endtime="20201030 10:59:33.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.087" endtime="20201030 10:59:33.617"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.641" endtime="20201030 10:59:33.657"></status>
</kw>
<msg timestamp="20201030 10:59:33.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.636" endtime="20201030 10:59:33.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.660" endtime="20201030 10:59:33.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.667" endtime="20201030 10:59:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.629" endtime="20201030 10:59:33.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.624" endtime="20201030 10:59:33.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.690" endtime="20201030 10:59:34.037"></status>
</kw>
<msg timestamp="20201030 10:59:34.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041052986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.686" endtime="20201030 10:59:34.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041031681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041052986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.046" endtime="20201030 10:59:34.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.065" endtime="20201030 10:59:34.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.679" endtime="20201030 10:59:34.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.675" endtime="20201030 10:59:34.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.082" level="INFO">${RESULT} = [{'diff': 2.130499999999924e-05}, {'diff': 2.113900000000335e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.1166000000003016e-05}, {'diff': 2.130499999999924e-05}, {'diff': 2.1291999999999145e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:34.073" endtime="20201030 10:59:34.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.093" level="INFO">${ACCURACY} = {'diff': [2.130499999999924e-05, 2.113900000000335e-05, 2.1986000000001615e-05, 2.1166000000003016e-05, 2.130499999999924e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.1291999999999145e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:34.084" endtime="20201030 10:59:34.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.104" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.102" endtime="20201030 10:59:34.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.109" level="INFO">VALUE: [2.130499999999924e-05, 2.113900000000335e-05, 2.1986000000001615e-05, 2.1166000000003016e-05, 2.130499999999924e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.1291999999999145e-05, 2.113899999999641e-05, 2.112499999999684e-05, 2.1305999999998715e-05, 2.1305999999998715e-05, 2.1429999999995897e-05, 2.130499999999924e-05, 2.1972000000002045e-05, 2.0958000000001475e-05, 2.180499999999974e-05, 2.0971999999994106e-05, 2.115299999999598e-05, 2.1805999999999215e-05, 2.113900000000335e-05, 2.1292000000006084e-05, 2.1291999999999145e-05, 2.163899999999691e-05, 2.161099999999777e-05, 2.165299999999648e-05, 2.162500000000428e-05, 2.1458000000001975e-05, 2.1305999999998715e-05, 2.1791999999999645e-05, 2.1277999999999575e-05, 2.0972000000001045e-05, 2.111099999999727e-05, 2.10969999999977e-05, 2.147300000000102e-05, 2.162499999999734e-05, 2.1291999999999145e-05, 2.1291999999999145e-05, 2.0958000000001475e-05, 2.129099999999967e-05, 2.1305999999998715e-05, 2.0999999999993246e-05, 2.1319999999998285e-05, 2.1458000000001975e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.180499999999974e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.131899999999881e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.106" endtime="20201030 10:59:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.095" endtime="20201030 10:59:34.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.121" endtime="20201030 10:59:34.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.117" endtime="20201030 10:59:34.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.114" endtime="20201030 10:59:34.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.619" endtime="20201030 10:59:34.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.618" endtime="20201030 10:59:34.146"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.170" endtime="20201030 10:59:34.186"></status>
</kw>
<msg timestamp="20201030 10:59:34.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.166" endtime="20201030 10:59:34.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.190" endtime="20201030 10:59:34.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.196" endtime="20201030 10:59:34.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.159" endtime="20201030 10:59:34.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.153" endtime="20201030 10:59:34.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.219" endtime="20201030 10:59:34.566"></status>
</kw>
<msg timestamp="20201030 10:59:34.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.216" endtime="20201030 10:59:34.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.575" endtime="20201030 10:59:34.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.594" endtime="20201030 10:59:34.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.208" endtime="20201030 10:59:34.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.204" endtime="20201030 10:59:34.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.611" level="INFO">${RESULT} = [{'diff': 2.115300000000292e-05}, {'diff': 2.1222000000001295e-05}, {'diff': 2.147300000000102e-05}, {'diff': 2.1306000000005654e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.0986000000000615e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:34.602" endtime="20201030 10:59:34.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.622" level="INFO">${ACCURACY} = {'diff': [2.115300000000292e-05, 2.1222000000001295e-05, 2.147300000000102e-05, 2.1306000000005654e-05, 2.10969999999977e-05, 2.0986000000000615e-05, 2.118100000000206e-05, 2.183299999999888e-05, 2.12...</msg>
<status status="PASS" starttime="20201030 10:59:34.613" endtime="20201030 10:59:34.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.633" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.630" endtime="20201030 10:59:34.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.638" level="INFO">VALUE: [2.115300000000292e-05, 2.1222000000001295e-05, 2.147300000000102e-05, 2.1306000000005654e-05, 2.10969999999977e-05, 2.0986000000000615e-05, 2.118100000000206e-05, 2.183299999999888e-05, 2.12770000000001e-05, 2.113900000000335e-05, 2.1458000000001975e-05, 2.113899999999641e-05, 2.094500000000138e-05, 2.1611999999997245e-05, 2.112500000000378e-05, 2.1472000000001545e-05, 2.129099999999967e-05, 2.1486000000001115e-05, 2.1291999999999145e-05, 2.12770000000001e-05, 2.112500000000378e-05, 2.162499999999734e-05, 2.1791999999999645e-05, 2.112499999999684e-05, 2.1277999999999575e-05, 2.161099999999777e-05, 2.1083999999997605e-05, 2.162500000000428e-05, 2.143099999999537e-05, 2.1791999999999645e-05, 2.1486000000001115e-05, 2.180499999999974e-05, 2.115299999999598e-05, 2.10969999999977e-05, 2.1791999999999645e-05, 2.165299999999648e-05, 2.1166000000003016e-05, 2.1291999999999145e-05, 2.115300000000292e-05, 2.111099999999727e-05, 2.162499999999734e-05, 2.1944000000002906e-05, 2.113900000000335e-05, 2.1472000000001545e-05, 2.0972000000001045e-05, 2.1958000000002476e-05, 2.097300000000052e-05, 2.181899999999931e-05, 2.163900000000385e-05, 2.111100000000421e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.635" endtime="20201030 10:59:34.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.624" endtime="20201030 10:59:34.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.650" endtime="20201030 10:59:34.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.645" endtime="20201030 10:59:34.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.643" endtime="20201030 10:59:34.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.149" endtime="20201030 10:59:34.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.147" endtime="20201030 10:59:34.676"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.698" endtime="20201030 10:59:34.715"></status>
</kw>
<msg timestamp="20201030 10:59:34.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.695" endtime="20201030 10:59:34.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.718" endtime="20201030 10:59:34.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.724" endtime="20201030 10:59:34.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.688" endtime="20201030 10:59:34.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.682" endtime="20201030 10:59:34.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.748" endtime="20201030 10:59:35.097"></status>
</kw>
<msg timestamp="20201030 10:59:35.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039694611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.745" endtime="20201030 10:59:35.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039694611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.106" endtime="20201030 10:59:35.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.125" endtime="20201030 10:59:35.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.737" endtime="20201030 10:59:35.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.733" endtime="20201030 10:59:35.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.142" level="INFO">${RESULT} = [{'diff': 2.1472000000001545e-05}, {'diff': 2.1430000000002836e-05}, {'diff': 2.163899999999691e-05}, {'diff': 2.1305999999998715e-05}, {'diff': 2.1457999999995037e-05}, {'diff': 2.111099999999727e-05...</msg>
<status status="PASS" starttime="20201030 10:59:35.133" endtime="20201030 10:59:35.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.151" level="INFO">${ACCURACY} = {'diff': [2.1472000000001545e-05, 2.1430000000002836e-05, 2.163899999999691e-05, 2.1305999999998715e-05, 2.1457999999995037e-05, 2.111099999999727e-05, 2.1972000000002045e-05, 2.165300000000342e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:35.144" endtime="20201030 10:59:35.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.162" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.160" endtime="20201030 10:59:35.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.167" level="INFO">VALUE: [2.1472000000001545e-05, 2.1430000000002836e-05, 2.163899999999691e-05, 2.1305999999998715e-05, 2.1457999999995037e-05, 2.111099999999727e-05, 2.1972000000002045e-05, 2.165300000000342e-05, 2.129099999999967e-05, 2.1291999999999145e-05, 2.1291999999999145e-05, 2.163900000000385e-05, 2.1430000000002836e-05, 2.091700000000224e-05, 2.180499999999974e-05, 2.1472000000001545e-05, 2.1721999999994857e-05, 2.131899999999881e-05, 2.1319999999998285e-05, 2.0972000000001045e-05, 2.133300000000532e-05, 2.0958000000001475e-05, 2.0972000000001045e-05, 2.112499999999684e-05, 2.1320000000005224e-05, 2.0972000000001045e-05, 2.179100000000017e-05, 2.1472000000001545e-05, 2.1819999999998785e-05, 2.0986000000000615e-05, 2.1791999999999645e-05, 2.129099999999967e-05, 2.1278000000006514e-05, 2.162500000000428e-05, 2.0958000000001475e-05, 2.112499999999684e-05, 2.1764000000000505e-05, 2.097300000000052e-05, 2.1443999999995467e-05, 2.180500000000668e-05, 2.1471999999994607e-05, 2.0958000000001475e-05, 2.1486000000001115e-05, 2.147300000000102e-05, 2.1819999999998785e-05, 2.094500000000138e-05, 2.112499999999684e-05, 2.1305999999998715e-05, 2.163900000000385e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.164" endtime="20201030 10:59:35.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.153" endtime="20201030 10:59:35.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.180" endtime="20201030 10:59:35.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.175" endtime="20201030 10:59:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.173" endtime="20201030 10:59:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.678" endtime="20201030 10:59:35.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.677" endtime="20201030 10:59:35.205"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.227" endtime="20201030 10:59:35.246"></status>
</kw>
<msg timestamp="20201030 10:59:35.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.224" endtime="20201030 10:59:35.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.249" endtime="20201030 10:59:35.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.255" endtime="20201030 10:59:35.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.217" endtime="20201030 10:59:35.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.211" endtime="20201030 10:59:35.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.278" endtime="20201030 10:59:35.625"></status>
</kw>
<msg timestamp="20201030 10:59:35.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041057347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041078472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.275" endtime="20201030 10:59:35.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041057347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041078472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.635" endtime="20201030 10:59:35.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.653" endtime="20201030 10:59:35.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.268" endtime="20201030 10:59:35.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.263" endtime="20201030 10:59:35.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.670" level="INFO">${RESULT} = [{'diff': 2.112499999999684e-05}, {'diff': 2.1277999999999575e-05}, {'diff': 2.1472000000001545e-05}, {'diff': 2.162500000000428e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.1458000000001975e-05...</msg>
<status status="PASS" starttime="20201030 10:59:35.661" endtime="20201030 10:59:35.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.679" level="INFO">${ACCURACY} = {'diff': [2.112499999999684e-05, 2.1277999999999575e-05, 2.1472000000001545e-05, 2.162500000000428e-05, 2.1264000000000005e-05, 2.1458000000001975e-05, 2.1666000000003516e-05, 2.095900000000095e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:35.672" endtime="20201030 10:59:35.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.690" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.688" endtime="20201030 10:59:35.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.696" level="INFO">VALUE: [2.112499999999684e-05, 2.1277999999999575e-05, 2.1472000000001545e-05, 2.162500000000428e-05, 2.1264000000000005e-05, 2.1458000000001975e-05, 2.1666000000003516e-05, 2.095900000000095e-05, 2.109700000000464e-05, 2.133300000000532e-05, 2.2028000000000325e-05, 2.1194000000002156e-05, 2.147300000000102e-05, 2.112499999999684e-05, 2.1778000000000075e-05, 2.1472000000001545e-05, 2.0986000000000615e-05, 2.1444000000002406e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1277999999999575e-05, 2.1833999999998355e-05, 2.1791999999999645e-05, 2.0930000000002336e-05, 2.1458000000001975e-05, 2.10969999999977e-05, 2.162500000000428e-05, 2.0972000000001045e-05, 2.112499999999684e-05, 2.1805999999999215e-05, 2.1444000000002406e-05, 2.12770000000001e-05, 2.143100000000231e-05, 2.1791999999999645e-05, 2.1305999999998715e-05, 2.1277999999999575e-05, 2.1805999999999215e-05, 2.097300000000052e-05, 2.165299999999648e-05, 2.112499999999684e-05, 2.1957999999995537e-05, 2.162499999999734e-05, 2.1401999999996757e-05, 2.0943999999994967e-05, 2.108299999999813e-05, 2.129099999999967e-05, 2.1291999999999145e-05, 2.2014000000000755e-05, 2.162499999999734e-05, 2.159700000000514e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.692" endtime="20201030 10:59:35.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.681" endtime="20201030 10:59:35.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.710" endtime="20201030 10:59:35.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.704" endtime="20201030 10:59:35.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.701" endtime="20201030 10:59:35.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.207" endtime="20201030 10:59:35.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.206" endtime="20201030 10:59:35.735"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.757" endtime="20201030 10:59:35.774"></status>
</kw>
<msg timestamp="20201030 10:59:35.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.754" endtime="20201030 10:59:35.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.777" endtime="20201030 10:59:35.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.784" endtime="20201030 10:59:35.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.747" endtime="20201030 10:59:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.741" endtime="20201030 10:59:35.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.807" endtime="20201030 10:59:36.154"></status>
</kw>
<msg timestamp="20201030 10:59:36.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03958075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039602583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:35.803" endtime="20201030 10:59:36.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03958075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039602583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:36.163" endtime="20201030 10:59:36.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.182" endtime="20201030 10:59:36.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.796" endtime="20201030 10:59:36.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.792" endtime="20201030 10:59:36.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.199" level="INFO">${RESULT} = [{'diff': 2.183299999999888e-05}, {'diff': 2.165299999999648e-05}, {'diff': 2.1901999999997257e-05}, {'diff': 2.1165999999996077e-05}, {'diff': 2.1458000000001975e-05}, {'diff': 2.162499999999734e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:36.190" endtime="20201030 10:59:36.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:36.214" level="INFO">${ACCURACY} = {'diff': [2.183299999999888e-05, 2.165299999999648e-05, 2.1901999999997257e-05, 2.1165999999996077e-05, 2.1458000000001975e-05, 2.162499999999734e-05, 2.111100000000421e-05, 2.112500000000378e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 10:59:36.201" endtime="20201030 10:59:36.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.225" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:59:36.222" endtime="20201030 10:59:36.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.230" level="INFO">VALUE: [2.183299999999888e-05, 2.165299999999648e-05, 2.1901999999997257e-05, 2.1165999999996077e-05, 2.1458000000001975e-05, 2.162499999999734e-05, 2.111100000000421e-05, 2.112500000000378e-05, 2.1097999999997175e-05, 2.0986000000000615e-05, 2.0972000000001045e-05, 2.1792000000006584e-05, 2.095900000000095e-05, 2.112500000000378e-05, 2.1834000000005294e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.1401999999996757e-05, 2.144499999999494e-05, 2.095900000000095e-05, 2.111099999999727e-05, 2.133299999999838e-05, 2.0958000000001475e-05, 2.186100000000496e-05, 2.1637999999997437e-05, 2.1791999999999645e-05, 2.095900000000095e-05, 2.163899999999691e-05, 2.144499999999494e-05, 2.112500000000378e-05, 2.145899999999451e-05, 2.111100000000421e-05, 2.144500000000188e-05, 2.162500000000428e-05, 2.163900000000385e-05, 2.095899999999401e-05, 2.161100000000471e-05, 2.0944000000001906e-05, 2.095900000000095e-05, 2.1430000000002836e-05, 2.161099999999777e-05, 2.1500000000000685e-05, 2.1805999999999215e-05, 2.120899999999426e-05, 2.162499999999734e-05, 2.1958000000002476e-05, 2.2000000000001185e-05, 2.1764000000000505e-05, 2.097300000000052e-05, 2.195900000000195e-05]</msg>
<status status="PASS" starttime="20201030 10:59:36.227" endtime="20201030 10:59:36.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.216" endtime="20201030 10:59:36.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.243" endtime="20201030 10:59:36.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.238" endtime="20201030 10:59:36.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.236" endtime="20201030 10:59:36.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.737" endtime="20201030 10:59:36.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.736" endtime="20201030 10:59:36.268"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.290" endtime="20201030 10:59:36.307"></status>
</kw>
<msg timestamp="20201030 10:59:36.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.287" endtime="20201030 10:59:36.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.310" endtime="20201030 10:59:36.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.316" endtime="20201030 10:59:36.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.280" endtime="20201030 10:59:36.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.274" endtime="20201030 10:59:36.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.339" endtime="20201030 10:59:36.686"></status>
</kw>
<msg timestamp="20201030 10:59:36.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039464514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.336" endtime="20201030 10:59:36.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039464514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.696" endtime="20201030 10:59:36.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.714" endtime="20201030 10:59:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.329" endtime="20201030 10:59:36.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.324" endtime="20201030 10:59:36.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.731" level="INFO">${RESULT} = [{'diff': 2.1500000000000685e-05}, {'diff': 2.1486000000001115e-05}, {'diff': 2.0971999999994106e-05}, {'diff': 2.1791999999999645e-05}, {'diff': 2.165300000000342e-05}, {'diff': 2.162500000000428e-05...</msg>
<status status="PASS" starttime="20201030 10:59:36.723" endtime="20201030 10:59:36.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:36.743" level="INFO">${ACCURACY} = {'diff': [2.1500000000000685e-05, 2.1486000000001115e-05, 2.0971999999994106e-05, 2.1791999999999645e-05, 2.165300000000342e-05, 2.162500000000428e-05, 2.0958000000001475e-05, 2.113899999999641e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:36.733" endtime="20201030 10:59:36.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.753" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:59:36.751" endtime="20201030 10:59:36.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.759" level="INFO">VALUE: [2.1500000000000685e-05, 2.1486000000001115e-05, 2.0971999999994106e-05, 2.1791999999999645e-05, 2.165300000000342e-05, 2.162500000000428e-05, 2.0958000000001475e-05, 2.113899999999641e-05, 2.1471999999994607e-05, 2.1458000000001975e-05, 2.095900000000095e-05, 2.1305999999998715e-05, 2.17770000000006e-05, 2.112500000000378e-05, 2.1778000000000075e-05, 2.195899999999501e-05, 2.111100000000421e-05, 2.1264000000000005e-05, 2.180499999999974e-05, 2.1805999999999215e-05, 2.161100000000471e-05, 2.111100000000421e-05, 2.162499999999734e-05, 2.1291999999999145e-05, 2.130499999999924e-05, 2.163899999999691e-05, 2.195900000000195e-05, 2.1792000000006584e-05, 2.0944000000001906e-05, 2.163900000000385e-05, 2.0943999999994967e-05, 2.113899999999641e-05, 2.1971999999995107e-05, 2.130499999999924e-05, 2.1277999999999575e-05, 2.179100000000017e-05, 2.1778000000000075e-05, 2.161099999999777e-05, 2.08890000000031e-05, 2.1722000000001795e-05, 2.1291999999999145e-05, 2.162499999999734e-05, 2.1472000000001545e-05, 2.147300000000102e-05, 2.162499999999734e-05, 2.1305999999998715e-05, 2.1986000000001615e-05, 2.119499999999469e-05, 2.1291999999999145e-05, 2.130499999999924e-05]</msg>
<status status="PASS" starttime="20201030 10:59:36.756" endtime="20201030 10:59:36.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.744" endtime="20201030 10:59:36.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.771" endtime="20201030 10:59:36.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.767" endtime="20201030 10:59:36.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.764" endtime="20201030 10:59:36.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.270" endtime="20201030 10:59:36.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.269" endtime="20201030 10:59:36.796"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.819" endtime="20201030 10:59:36.836"></status>
</kw>
<msg timestamp="20201030 10:59:36.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.816" endtime="20201030 10:59:36.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.839" endtime="20201030 10:59:36.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.845" endtime="20201030 10:59:36.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.809" endtime="20201030 10:59:36.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.803" endtime="20201030 10:59:36.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.869" endtime="20201030 10:59:37.217"></status>
</kw>
<msg timestamp="20201030 10:59:37.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039490847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03951925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:36.865" endtime="20201030 10:59:37.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039490847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03951925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:37.226" endtime="20201030 10:59:37.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.245" endtime="20201030 10:59:37.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.858" endtime="20201030 10:59:37.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.853" endtime="20201030 10:59:37.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.262" level="INFO">${RESULT} = [{'diff': 2.8402999999996292e-05}, {'diff': 2.8916999999996362e-05}, {'diff': 2.8221999999994418e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8597999999997736e-05}, {'diff': 2.892999999999646e-0...</msg>
<status status="PASS" starttime="20201030 10:59:37.253" endtime="20201030 10:59:37.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.271" level="INFO">${ACCURACY} = {'diff': [2.8402999999996292e-05, 2.8916999999996362e-05, 2.8221999999994418e-05, 2.8750000000000997e-05, 2.8597999999997736e-05, 2.892999999999646e-05, 2.8750000000000997e-05, 2.841599999999639e-05, ...</msg>
<status status="PASS" starttime="20201030 10:59:37.264" endtime="20201030 10:59:37.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.282" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.280" endtime="20201030 10:59:37.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.287" level="INFO">VALUE: [2.8402999999996292e-05, 2.8916999999996362e-05, 2.8221999999994418e-05, 2.8750000000000997e-05, 2.8597999999997736e-05, 2.892999999999646e-05, 2.8750000000000997e-05, 2.841599999999639e-05, 2.8582999999998693e-05, 2.8096999999997763e-05, 2.8222000000001357e-05, 2.7916000000002827e-05, 2.8236000000000927e-05, 2.8402999999996292e-05, 2.8236000000000927e-05, 2.8596999999998263e-05, 2.8596999999998263e-05, 2.80970000000047e-05, 2.7916000000002827e-05, 2.8082999999998193e-05, 2.870799999999535e-05, 2.8596999999998263e-05, 2.82370000000004e-05, 2.8750000000000997e-05, 2.7902999999995792e-05, 2.80970000000047e-05, 2.8388999999996722e-05, 2.8236000000000927e-05, 2.8569999999998597e-05, 2.79170000000023e-05, 2.8264000000000067e-05, 2.8082999999998193e-05, 2.8084000000004605e-05, 2.891599999999689e-05, 2.8250000000000497e-05, 2.8027999999999387e-05, 2.89170000000033e-05, 2.8264000000000067e-05, 2.8596999999998263e-05, 2.8236000000000927e-05, 2.8554999999999553e-05, 2.8084000000004605e-05, 2.8569999999998597e-05, 2.8764000000000567e-05, 2.8569999999998597e-05, 2.7986000000000677e-05, 2.8582999999998693e-05, 2.8084000000004605e-05, 2.8082999999998193e-05, 2.8430000000002897e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.284" endtime="20201030 10:59:37.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.273" endtime="20201030 10:59:37.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.300" endtime="20201030 10:59:37.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.296" endtime="20201030 10:59:37.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.293" endtime="20201030 10:59:37.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.799" endtime="20201030 10:59:37.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.797" endtime="20201030 10:59:37.325"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.348" endtime="20201030 10:59:37.366"></status>
</kw>
<msg timestamp="20201030 10:59:37.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.344" endtime="20201030 10:59:37.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.370" endtime="20201030 10:59:37.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.376" endtime="20201030 10:59:37.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.337" endtime="20201030 10:59:37.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.332" endtime="20201030 10:59:37.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.399" endtime="20201030 10:59:37.744"></status>
</kw>
<msg timestamp="20201030 10:59:37.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041069556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.396" endtime="20201030 10:59:37.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041069556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.753" endtime="20201030 10:59:37.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.772" endtime="20201030 10:59:37.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.388" endtime="20201030 10:59:37.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.384" endtime="20201030 10:59:37.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.789" level="INFO">${RESULT} = [{'diff': 2.89170000000033e-05}, {'diff': 2.8084000000004605e-05}, {'diff': 2.8596999999998263e-05}, {'diff': 2.808300000000513e-05}, {'diff': 2.8541999999999457e-05}, {'diff': 2.8736000000001427e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:37.780" endtime="20201030 10:59:37.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.799" level="INFO">${ACCURACY} = {'diff': [2.89170000000033e-05, 2.8084000000004605e-05, 2.8596999999998263e-05, 2.808300000000513e-05, 2.8541999999999457e-05, 2.8736000000001427e-05, 2.8249999999993558e-05, 2.8402999999996292e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:37.791" endtime="20201030 10:59:37.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.810" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.807" endtime="20201030 10:59:37.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.815" level="INFO">VALUE: [2.89170000000033e-05, 2.8084000000004605e-05, 2.8596999999998263e-05, 2.808300000000513e-05, 2.8541999999999457e-05, 2.8736000000001427e-05, 2.8249999999993558e-05, 2.8402999999996292e-05, 2.8416000000003327e-05, 2.8097999999997236e-05, 2.8026999999999913e-05, 2.8568999999999123e-05, 2.8069999999998096e-05, 2.8291999999999207e-05, 2.84170000000028e-05, 2.8569000000006062e-05, 2.79170000000023e-05, 2.8374999999997152e-05, 2.84170000000028e-05, 2.8582999999998693e-05, 2.8402999999996292e-05, 2.8374999999997152e-05, 2.8500000000000747e-05, 2.89170000000033e-05, 2.8736000000001427e-05, 2.8722000000001857e-05, 2.84170000000028e-05, 2.7930000000002397e-05, 2.8069000000005562e-05, 2.890300000000373e-05, 2.8250000000000497e-05, 2.8416999999995862e-05, 2.8264000000000067e-05, 2.8069999999998096e-05, 2.890300000000373e-05, 2.8555999999999027e-05, 2.8402999999996292e-05, 2.8736000000001427e-05, 2.8736000000001427e-05, 2.8749999999994058e-05, 2.8068999999998623e-05, 2.8582999999998693e-05, 2.8069999999998096e-05, 2.894500000000244e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8304999999999303e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8082999999998193e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.812" endtime="20201030 10:59:37.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.801" endtime="20201030 10:59:37.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.829" endtime="20201030 10:59:37.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.823" endtime="20201030 10:59:37.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.821" endtime="20201030 10:59:37.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.327" endtime="20201030 10:59:37.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.326" endtime="20201030 10:59:37.854"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.877" endtime="20201030 10:59:37.894"></status>
</kw>
<msg timestamp="20201030 10:59:37.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.874" endtime="20201030 10:59:37.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.897" endtime="20201030 10:59:37.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.904" endtime="20201030 10:59:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.867" endtime="20201030 10:59:37.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.861" endtime="20201030 10:59:37.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.927" endtime="20201030 10:59:38.266"></status>
</kw>
<msg timestamp="20201030 10:59:38.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.924" endtime="20201030 10:59:38.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.275" endtime="20201030 10:59:38.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.295" endtime="20201030 10:59:38.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.917" endtime="20201030 10:59:38.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.912" endtime="20201030 10:59:38.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.313" level="INFO">${RESULT} = [{'diff': 2.8236000000000927e-05}, {'diff': 2.7888999999996222e-05}, {'diff': 2.8027999999999387e-05}, {'diff': 2.8027999999999387e-05}, {'diff': 2.8624999999997403e-05}, {'diff': 2.8555999999999027e-...</msg>
<status status="PASS" starttime="20201030 10:59:38.304" endtime="20201030 10:59:38.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.323" level="INFO">${ACCURACY} = {'diff': [2.8236000000000927e-05, 2.7888999999996222e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.8624999999997403e-05, 2.8555999999999027e-05, 2.8971999999995168e-05, 2.8054999999999053e-05...</msg>
<status status="PASS" starttime="20201030 10:59:38.315" endtime="20201030 10:59:38.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.335" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.332" endtime="20201030 10:59:38.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.340" level="INFO">VALUE: [2.8236000000000927e-05, 2.7888999999996222e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.8624999999997403e-05, 2.8555999999999027e-05, 2.8971999999995168e-05, 2.8054999999999053e-05, 2.7888999999996222e-05, 2.8040999999999483e-05, 2.8750000000000997e-05, 2.8068999999998623e-05, 2.8750000000000997e-05, 2.8584000000005105e-05, 2.8054999999999053e-05, 2.8527999999999887e-05, 2.87370000000009e-05, 2.8888999999997222e-05, 2.8916999999996362e-05, 2.8555999999999027e-05, 2.8430999999995432e-05, 2.8721999999994918e-05, 2.8554999999999553e-05, 2.8068999999998623e-05, 2.7888999999996222e-05, 2.811100000000427e-05, 2.85970000000052e-05, 2.8068999999998623e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8068999999998623e-05, 2.8068999999998623e-05, 2.8778000000000137e-05, 2.8082999999998193e-05, 2.8082999999998193e-05, 2.838900000000366e-05, 2.8069999999998096e-05, 2.84170000000028e-05, 2.8416999999995862e-05, 2.8722000000001857e-05, 2.8570000000005535e-05, 2.8069999999998096e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8555999999999027e-05, 2.8610999999997833e-05, 2.8722000000001857e-05, 2.8222000000001357e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.337" endtime="20201030 10:59:38.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.325" endtime="20201030 10:59:38.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.353" endtime="20201030 10:59:38.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.349" endtime="20201030 10:59:38.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.346" endtime="20201030 10:59:38.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.857" endtime="20201030 10:59:38.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.855" endtime="20201030 10:59:38.378"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.401" endtime="20201030 10:59:38.416"></status>
</kw>
<msg timestamp="20201030 10:59:38.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.398" endtime="20201030 10:59:38.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.420" endtime="20201030 10:59:38.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.426" endtime="20201030 10:59:38.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.390" endtime="20201030 10:59:38.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.385" endtime="20201030 10:59:38.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.450" endtime="20201030 10:59:38.788"></status>
</kw>
<msg timestamp="20201030 10:59:38.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.446" endtime="20201030 10:59:38.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.798" endtime="20201030 10:59:38.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.817" endtime="20201030 10:59:38.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.439" endtime="20201030 10:59:38.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.434" endtime="20201030 10:59:38.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.834" level="INFO">${RESULT} = [{'diff': 2.89170000000033e-05}, {'diff': 2.8764000000000567e-05}, {'diff': 2.8596999999998263e-05}, {'diff': 2.7888999999996222e-05}, {'diff': 2.7916000000002827e-05}, {'diff': 2.8306000000005715e-05...</msg>
<status status="PASS" starttime="20201030 10:59:38.825" endtime="20201030 10:59:38.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.845" level="INFO">${ACCURACY} = {'diff': [2.89170000000033e-05, 2.8764000000000567e-05, 2.8596999999998263e-05, 2.7888999999996222e-05, 2.7916000000002827e-05, 2.8306000000005715e-05, 2.8250000000000497e-05, 2.890199999999732e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:38.836" endtime="20201030 10:59:38.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.856" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.854" endtime="20201030 10:59:38.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.862" level="INFO">VALUE: [2.89170000000033e-05, 2.8764000000000567e-05, 2.8596999999998263e-05, 2.7888999999996222e-05, 2.7916000000002827e-05, 2.8306000000005715e-05, 2.8250000000000497e-05, 2.890199999999732e-05, 2.8250000000000497e-05, 2.8750000000000997e-05, 2.8749999999994058e-05, 2.8750000000000997e-05, 2.8568999999999123e-05, 2.8570000000005535e-05, 2.8582999999998693e-05, 2.8249999999993558e-05, 2.8069999999998096e-05, 2.8221999999994418e-05, 2.8778000000000137e-05, 2.8082999999998193e-05, 2.8236000000000927e-05, 2.8596999999998263e-05, 2.784700000000445e-05, 2.812500000000384e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.841599999999639e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.8582999999998693e-05, 2.8082999999998193e-05, 2.8500000000000747e-05, 2.8222000000001357e-05, 2.8582999999998693e-05, 2.8568999999999123e-05, 2.8736000000001427e-05, 2.861100000000477e-05, 2.8736000000001427e-05, 2.8708000000002287e-05, 2.7916000000002827e-05, 2.8874999999997653e-05, 2.8583999999998166e-05, 2.8402999999996292e-05, 2.8040999999999483e-05, 2.813900000000341e-05, 2.82370000000004e-05, 2.8444000000002467e-05, 2.8610999999997833e-05, 2.8138999999996472e-05, 2.8722000000001857e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.859" endtime="20201030 10:59:38.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.847" endtime="20201030 10:59:38.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.875" endtime="20201030 10:59:38.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.870" endtime="20201030 10:59:38.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.868" endtime="20201030 10:59:38.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.380" endtime="20201030 10:59:38.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.379" endtime="20201030 10:59:38.900"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.922" endtime="20201030 10:59:38.938"></status>
</kw>
<msg timestamp="20201030 10:59:38.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.919" endtime="20201030 10:59:38.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.941" endtime="20201030 10:59:38.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.947" endtime="20201030 10:59:38.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.912" endtime="20201030 10:59:38.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.906" endtime="20201030 10:59:38.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.971" endtime="20201030 10:59:39.317"></status>
</kw>
<msg timestamp="20201030 10:59:39.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039603222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.967" endtime="20201030 10:59:39.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039603222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.327" endtime="20201030 10:59:39.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.345" endtime="20201030 10:59:39.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.960" endtime="20201030 10:59:39.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.956" endtime="20201030 10:59:39.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.363" level="INFO">${RESULT} = [{'diff': 2.8610999999997833e-05}, {'diff': 2.8902999999996792e-05}, {'diff': 2.8069999999998096e-05}, {'diff': 2.8777000000000663e-05}, {'diff': 2.8416000000003327e-05}, {'diff': 2.790300000000273e-0...</msg>
<status status="PASS" starttime="20201030 10:59:39.354" endtime="20201030 10:59:39.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.372" level="INFO">${ACCURACY} = {'diff': [2.8610999999997833e-05, 2.8902999999996792e-05, 2.8069999999998096e-05, 2.8777000000000663e-05, 2.8416000000003327e-05, 2.790300000000273e-05, 2.8944000000002967e-05, 2.8249999999993558e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:39.365" endtime="20201030 10:59:39.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.383" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.380" endtime="20201030 10:59:39.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.388" level="INFO">VALUE: [2.8610999999997833e-05, 2.8902999999996792e-05, 2.8069999999998096e-05, 2.8777000000000663e-05, 2.8416000000003327e-05, 2.790300000000273e-05, 2.8944000000002967e-05, 2.8249999999993558e-05, 2.8416000000003327e-05, 2.8736000000001427e-05, 2.8902999999996792e-05, 2.7916999999995362e-05, 2.8584000000005105e-05, 2.8736000000001427e-05, 2.8250000000000497e-05, 2.89170000000033e-05, 2.8124999999996902e-05, 2.8596999999998263e-05, 2.8069999999998096e-05, 2.8069999999998096e-05, 2.8750000000000997e-05, 2.8597999999997736e-05, 2.79170000000023e-05, 2.8360999999997583e-05, 2.8222000000001357e-05, 2.8069999999998096e-05, 2.8402999999996292e-05, 2.8736000000001427e-05, 2.8555999999999027e-05, 2.8708999999994822e-05, 2.8736000000001427e-05, 2.8277999999999637e-05, 2.808300000000513e-05, 2.8069999999998096e-05, 2.8055999999998527e-05, 2.8070000000005035e-05, 2.842999999999596e-05, 2.8402999999996292e-05, 2.891599999999689e-05, 2.8902999999996792e-05, 2.7972000000001107e-05, 2.8791999999999707e-05, 2.8208000000001787e-05, 2.84170000000028e-05, 2.8569999999998597e-05, 2.790300000000273e-05, 2.85970000000052e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.833300000000538e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.385" endtime="20201030 10:59:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.374" endtime="20201030 10:59:39.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.401" endtime="20201030 10:59:39.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.396" endtime="20201030 10:59:39.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.394" endtime="20201030 10:59:39.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.902" endtime="20201030 10:59:39.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.901" endtime="20201030 10:59:39.426"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.449" endtime="20201030 10:59:39.467"></status>
</kw>
<msg timestamp="20201030 10:59:39.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.445" endtime="20201030 10:59:39.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.471" endtime="20201030 10:59:39.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.477" endtime="20201030 10:59:39.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.438" endtime="20201030 10:59:39.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.432" endtime="20201030 10:59:39.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.500" endtime="20201030 10:59:39.849"></status>
</kw>
<msg timestamp="20201030 10:59:39.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041379056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.497" endtime="20201030 10:59:39.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041379056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.858" endtime="20201030 10:59:39.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.877" endtime="20201030 10:59:39.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.490" endtime="20201030 10:59:39.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.485" endtime="20201030 10:59:39.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.894" level="INFO">${RESULT} = [{'diff': 2.8749999999994058e-05}, {'diff': 2.8083999999997666e-05}, {'diff': 2.8069000000005562e-05}, {'diff': 2.8083999999997666e-05}, {'diff': 2.8430999999995432e-05}, {'diff': 2.890300000000373e-0...</msg>
<status status="PASS" starttime="20201030 10:59:39.886" endtime="20201030 10:59:39.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.904" level="INFO">${ACCURACY} = {'diff': [2.8749999999994058e-05, 2.8083999999997666e-05, 2.8069000000005562e-05, 2.8083999999997666e-05, 2.8430999999995432e-05, 2.890300000000373e-05, 2.8084000000004605e-05, 2.8764000000000567e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:39.896" endtime="20201030 10:59:39.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.914" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.912" endtime="20201030 10:59:39.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.920" level="INFO">VALUE: [2.8749999999994058e-05, 2.8083999999997666e-05, 2.8069000000005562e-05, 2.8083999999997666e-05, 2.8430999999995432e-05, 2.890300000000373e-05, 2.8084000000004605e-05, 2.8764000000000567e-05, 2.862500000000434e-05, 2.8069999999998096e-05, 2.8263000000000593e-05, 2.8583999999998166e-05, 2.868100000000262e-05, 2.838900000000366e-05, 2.819500000000169e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8082999999998193e-05, 2.8250000000000497e-05, 2.8902000000004258e-05, 2.8818999999999373e-05, 2.893100000000287e-05, 2.8096999999997763e-05, 2.8764000000000567e-05, 2.8250000000000497e-05, 2.8069000000005562e-05, 2.841599999999639e-05, 2.8306000000005715e-05, 2.8264000000000067e-05, 2.8916000000003828e-05, 2.893100000000287e-05, 2.8082999999998193e-05, 2.8264000000000067e-05, 2.8778000000000137e-05, 2.8040999999999483e-05, 2.8236000000000927e-05, 2.8778000000000137e-05, 2.8250000000000497e-05, 2.840300000000323e-05, 2.8208000000001787e-05, 2.8083999999997666e-05, 2.8250000000000497e-05, 2.8416000000003327e-05, 2.8112000000003745e-05, 2.8749999999994058e-05, 2.8902000000004258e-05, 2.8069999999998096e-05, 2.819399999999528e-05, 2.8916000000003828e-05, 2.8416999999995862e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.917" endtime="20201030 10:59:39.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.906" endtime="20201030 10:59:39.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.934" endtime="20201030 10:59:39.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.928" endtime="20201030 10:59:39.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.926" endtime="20201030 10:59:39.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.428" endtime="20201030 10:59:39.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.427" endtime="20201030 10:59:39.959"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.982" endtime="20201030 10:59:39.999"></status>
</kw>
<msg timestamp="20201030 10:59:40.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.978" endtime="20201030 10:59:40.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.002" endtime="20201030 10:59:40.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.009" endtime="20201030 10:59:40.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.971" endtime="20201030 10:59:40.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.966" endtime="20201030 10:59:40.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.032" endtime="20201030 10:59:40.379"></status>
</kw>
<msg timestamp="20201030 10:59:40.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039628833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039657264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.029" endtime="20201030 10:59:40.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039628833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039657264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.389" endtime="20201030 10:59:40.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.407" endtime="20201030 10:59:40.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.022" endtime="20201030 10:59:40.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.017" endtime="20201030 10:59:40.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.424" level="INFO">${RESULT} = [{'diff': 2.8430999999995432e-05}, {'diff': 2.8069999999998096e-05}, {'diff': 2.8084000000004605e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.8736000000001427e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:40.416" endtime="20201030 10:59:40.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.435" level="INFO">${ACCURACY} = {'diff': [2.8430999999995432e-05, 2.8069999999998096e-05, 2.8084000000004605e-05, 2.84170000000028e-05, 2.822300000000083e-05, 2.8736000000001427e-05, 2.8250000000000497e-05, 2.8736000000001427e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:40.426" endtime="20201030 10:59:40.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.446" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.444" endtime="20201030 10:59:40.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.451" level="INFO">VALUE: [2.8430999999995432e-05, 2.8069999999998096e-05, 2.8084000000004605e-05, 2.84170000000028e-05, 2.822300000000083e-05, 2.8736000000001427e-05, 2.8250000000000497e-05, 2.8736000000001427e-05, 2.8068999999998623e-05, 2.8291999999999207e-05, 2.8082999999998193e-05, 2.8582999999998693e-05, 2.87370000000009e-05, 2.8208000000001787e-05, 2.8583999999998166e-05, 2.858300000000563e-05, 2.8082999999998193e-05, 2.8054999999999053e-05, 2.8583999999998166e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8082999999998193e-05, 2.844399999999553e-05, 2.8749999999994058e-05, 2.840300000000323e-05, 2.820900000000126e-05, 2.89170000000033e-05, 2.8250000000000497e-05, 2.8568999999999123e-05, 2.8555999999999027e-05, 2.863900000000391e-05, 2.8570000000005535e-05, 2.841599999999639e-05, 2.8749999999994058e-05, 2.8749999999994058e-05, 2.8902999999996792e-05, 2.8250000000000497e-05, 2.8082999999998193e-05, 2.84170000000028e-05, 2.8750000000000997e-05, 2.8722000000001857e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.838900000000366e-05, 2.8250000000000497e-05, 2.7930000000002397e-05, 2.790300000000273e-05, 2.8166999999995612e-05, 2.8902999999996792e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.448" endtime="20201030 10:59:40.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.437" endtime="20201030 10:59:40.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.464" endtime="20201030 10:59:40.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.460" endtime="20201030 10:59:40.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.457" endtime="20201030 10:59:40.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.961" endtime="20201030 10:59:40.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.960" endtime="20201030 10:59:40.489"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.512" endtime="20201030 10:59:40.529"></status>
</kw>
<msg timestamp="20201030 10:59:40.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.509" endtime="20201030 10:59:40.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.533" endtime="20201030 10:59:40.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.539" endtime="20201030 10:59:40.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.501" endtime="20201030 10:59:40.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.496" endtime="20201030 10:59:40.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.562" endtime="20201030 10:59:40.909"></status>
</kw>
<msg timestamp="20201030 10:59:40.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039830236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039865208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.559" endtime="20201030 10:59:40.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039830236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039865208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.918" endtime="20201030 10:59:40.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.937" endtime="20201030 10:59:40.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.552" endtime="20201030 10:59:40.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.547" endtime="20201030 10:59:40.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.954" level="INFO">${RESULT} = [{'diff': 3.497200000000117e-05}, {'diff': 3.504199999999902e-05}, {'diff': 3.5860999999998144e-05}, {'diff': 3.568100000000268e-05}, {'diff': 3.520800000000185e-05}, {'diff': 3.5874999999997714e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:40.945" endtime="20201030 10:59:40.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.965" level="INFO">${ACCURACY} = {'diff': [3.497200000000117e-05, 3.504199999999902e-05, 3.5860999999998144e-05, 3.568100000000268e-05, 3.520800000000185e-05, 3.5874999999997714e-05, 3.568000000000321e-05, 3.570799999999541e-05, 3.50...</msg>
<status status="PASS" starttime="20201030 10:59:40.956" endtime="20201030 10:59:40.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.976" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.974" endtime="20201030 10:59:40.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.981" level="INFO">VALUE: [3.497200000000117e-05, 3.504199999999902e-05, 3.5860999999998144e-05, 3.568100000000268e-05, 3.520800000000185e-05, 3.5874999999997714e-05, 3.568000000000321e-05, 3.570799999999541e-05, 3.502799999999945e-05, 3.552799999999995e-05, 3.534800000000449e-05, 3.502800000000639e-05, 3.558399999999823e-05, 3.552799999999995e-05, 3.552799999999995e-05, 3.570900000000182e-05, 3.502799999999945e-05, 3.5568999999999185e-05, 3.5638999999997034e-05, 3.5846999999998574e-05, 3.5818999999999435e-05, 3.518100000000218e-05, 3.552799999999995e-05, 3.502799999999945e-05, 3.520799999999491e-05, 3.5388999999996784e-05, 3.5860999999998144e-05, 3.501399999999988e-05, 3.551400000000038e-05, 3.551400000000038e-05, 3.5374999999997214e-05, 3.5346999999998074e-05, 3.5902999999996854e-05, 3.552799999999995e-05, 3.502799999999945e-05, 3.518100000000218e-05, 3.552799999999995e-05, 3.536100000000458e-05, 3.5055000000006054e-05, 3.520900000000132e-05, 3.541700000000286e-05, 3.519500000000175e-05, 3.5666999999996174e-05, 3.586200000000456e-05, 3.537500000000415e-05, 3.52779999999997e-05, 3.519500000000175e-05, 3.501399999999988e-05, 3.533399999999798e-05, 3.518000000000271e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.978" endtime="20201030 10:59:40.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.967" endtime="20201030 10:59:40.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.994" endtime="20201030 10:59:41.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.989" endtime="20201030 10:59:41.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.987" endtime="20201030 10:59:41.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.491" endtime="20201030 10:59:41.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.490" endtime="20201030 10:59:41.019"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.041" endtime="20201030 10:59:41.059"></status>
</kw>
<msg timestamp="20201030 10:59:41.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.038" endtime="20201030 10:59:41.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.062" endtime="20201030 10:59:41.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.068" endtime="20201030 10:59:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.031" endtime="20201030 10:59:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.025" endtime="20201030 10:59:41.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.091" endtime="20201030 10:59:41.445"></status>
</kw>
<msg timestamp="20201030 10:59:41.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.088" endtime="20201030 10:59:41.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.454" endtime="20201030 10:59:41.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.473" endtime="20201030 10:59:41.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.081" endtime="20201030 10:59:41.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.076" endtime="20201030 10:59:41.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:41.491" level="INFO">${RESULT} = [{'diff': 3.5638999999997034e-05}, {'diff': 3.5346999999998074e-05}, {'diff': 3.5916999999996424e-05}, {'diff': 3.5194999999994814e-05}, {'diff': 3.566700000000311e-05}, {'diff': 3.569500000000225e-05...</msg>
<status status="PASS" starttime="20201030 10:59:41.482" endtime="20201030 10:59:41.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.500" level="INFO">${ACCURACY} = {'diff': [3.5638999999997034e-05, 3.5346999999998074e-05, 3.5916999999996424e-05, 3.5194999999994814e-05, 3.566700000000311e-05, 3.569500000000225e-05, 3.5332999999998504e-05, 3.504199999999902e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:59:41.493" endtime="20201030 10:59:41.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.511" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.509" endtime="20201030 10:59:41.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.516" level="INFO">VALUE: [3.5638999999997034e-05, 3.5346999999998074e-05, 3.5916999999996424e-05, 3.5194999999994814e-05, 3.566700000000311e-05, 3.569500000000225e-05, 3.5332999999998504e-05, 3.504199999999902e-05, 3.5846999999998574e-05, 3.5541000000000045e-05, 3.5680999999995744e-05, 3.5180999999995244e-05, 3.5374999999997214e-05, 3.501399999999988e-05, 3.551400000000038e-05, 3.519500000000175e-05, 3.567999999999627e-05, 3.5541000000000045e-05, 3.5040999999999545e-05, 3.554199999999952e-05, 3.584799999999805e-05, 3.505599999999859e-05, 3.554199999999952e-05, 3.5040999999999545e-05, 3.551400000000038e-05, 3.522200000000142e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.5888999999997284e-05, 3.573599999999455e-05, 3.591700000000336e-05, 3.543100000000243e-05, 3.505599999999859e-05, 3.552799999999995e-05, 3.5069000000005623e-05, 3.587500000000465e-05, 3.552799999999995e-05, 3.570900000000182e-05, 3.518000000000271e-05, 3.519400000000228e-05, 3.5180999999995244e-05, 3.552799999999995e-05, 3.543100000000243e-05, 3.592999999999652e-05, 3.5026999999999975e-05, 3.504199999999902e-05, 3.569400000000278e-05, 3.5040999999999545e-05, 3.5346999999998074e-05, 3.518000000000271e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.513" endtime="20201030 10:59:41.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.502" endtime="20201030 10:59:41.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.529" endtime="20201030 10:59:41.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.524" endtime="20201030 10:59:41.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.522" endtime="20201030 10:59:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.021" endtime="20201030 10:59:41.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.020" endtime="20201030 10:59:41.554"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.577" endtime="20201030 10:59:41.596"></status>
</kw>
<msg timestamp="20201030 10:59:41.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.573" endtime="20201030 10:59:41.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.599" endtime="20201030 10:59:41.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.605" endtime="20201030 10:59:41.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.566" endtime="20201030 10:59:41.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.560" endtime="20201030 10:59:41.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.628" endtime="20201030 10:59:41.976"></status>
</kw>
<msg timestamp="20201030 10:59:41.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.625" endtime="20201030 10:59:41.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.985" endtime="20201030 10:59:42.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.004" endtime="20201030 10:59:42.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.618" endtime="20201030 10:59:42.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.613" endtime="20201030 10:59:42.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.021" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.567999999999627e-05}, {'diff': 3.569399999999584e-05}, {'diff': 3.5346999999998074e-05}, {'diff': 3.505599999999859e-05}, {'diff': 3.570800000000235e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:42.013" endtime="20201030 10:59:42.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.031" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.567999999999627e-05, 3.569399999999584e-05, 3.5346999999998074e-05, 3.505599999999859e-05, 3.570800000000235e-05, 3.534799999999755e-05, 3.569400000000278e-05, 3.502...</msg>
<status status="PASS" starttime="20201030 10:59:42.023" endtime="20201030 10:59:42.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.041" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.039" endtime="20201030 10:59:42.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.047" level="INFO">VALUE: [3.575000000000106e-05, 3.567999999999627e-05, 3.569399999999584e-05, 3.5346999999998074e-05, 3.505599999999859e-05, 3.570800000000235e-05, 3.534799999999755e-05, 3.569400000000278e-05, 3.502799999999945e-05, 3.517999999999577e-05, 3.569500000000225e-05, 3.5360999999997644e-05, 3.504199999999902e-05, 3.519500000000175e-05, 3.502799999999945e-05, 3.502799999999945e-05, 3.502799999999945e-05, 3.537500000000415e-05, 3.5013000000000405e-05, 3.5860999999998144e-05, 3.5860999999998144e-05, 3.525000000000056e-05, 3.5360999999997644e-05, 3.587500000000465e-05, 3.520800000000185e-05, 3.537500000000415e-05, 3.519400000000228e-05, 3.504199999999902e-05, 3.5346999999998074e-05, 3.536100000000458e-05, 3.501399999999988e-05, 3.551400000000038e-05, 3.518100000000218e-05, 3.587500000000465e-05, 3.5652999999996604e-05, 3.5318999999998935e-05, 3.508399999999773e-05, 3.572200000000192e-05, 3.551400000000038e-05, 3.519399999999534e-05, 3.519500000000175e-05, 3.552799999999995e-05, 3.541700000000286e-05, 3.502799999999945e-05, 3.572200000000192e-05, 3.5374999999997214e-05, 3.5332999999998504e-05, 3.5152999999996104e-05, 3.5360999999997644e-05, 3.554199999999952e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.044" endtime="20201030 10:59:42.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.032" endtime="20201030 10:59:42.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.061" endtime="20201030 10:59:42.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.055" endtime="20201030 10:59:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.052" endtime="20201030 10:59:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.556" endtime="20201030 10:59:42.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.555" endtime="20201030 10:59:42.086"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.109" endtime="20201030 10:59:42.126"></status>
</kw>
<msg timestamp="20201030 10:59:42.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.105" endtime="20201030 10:59:42.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.130" endtime="20201030 10:59:42.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.136" endtime="20201030 10:59:42.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.098" endtime="20201030 10:59:42.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.093" endtime="20201030 10:59:42.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.159" endtime="20201030 10:59:42.508"></status>
</kw>
<msg timestamp="20201030 10:59:42.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040055431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.156" endtime="20201030 10:59:42.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040055431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.517" endtime="20201030 10:59:42.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.536" endtime="20201030 10:59:42.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.149" endtime="20201030 10:59:42.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.144" endtime="20201030 10:59:42.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.553" level="INFO">${RESULT} = [{'diff': 3.569399999999584e-05}, {'diff': 3.5708999999994884e-05}, {'diff': 3.520900000000132e-05}, {'diff': 3.5026999999999975e-05}, {'diff': 3.515300000000304e-05}, {'diff': 3.504199999999902e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:42.545" endtime="20201030 10:59:42.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.564" level="INFO">${ACCURACY} = {'diff': [3.569399999999584e-05, 3.5708999999994884e-05, 3.520900000000132e-05, 3.5026999999999975e-05, 3.515300000000304e-05, 3.504199999999902e-05, 3.5860999999998144e-05, 3.5583000000005693e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:59:42.555" endtime="20201030 10:59:42.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.575" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.572" endtime="20201030 10:59:42.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.580" level="INFO">VALUE: [3.569399999999584e-05, 3.5708999999994884e-05, 3.520900000000132e-05, 3.5026999999999975e-05, 3.515300000000304e-05, 3.504199999999902e-05, 3.5860999999998144e-05, 3.5583000000005693e-05, 3.5166999999995674e-05, 3.5554999999999615e-05, 3.5526999999993536e-05, 3.504199999999902e-05, 3.570799999999541e-05, 3.586100000000508e-05, 3.534799999999755e-05, 3.519400000000228e-05, 3.519399999999534e-05, 3.543000000000296e-05, 3.568000000000321e-05, 3.5318999999998935e-05, 3.502800000000639e-05, 3.498600000000074e-05, 3.522300000000089e-05, 3.5194999999994814e-05, 3.501399999999988e-05, 3.517999999999577e-05, 3.5054999999999115e-05, 3.502799999999945e-05, 3.519400000000228e-05, 3.501399999999988e-05, 3.520800000000185e-05, 3.569399999999584e-05, 3.569399999999584e-05, 3.554199999999952e-05, 3.5888999999997284e-05, 3.570800000000235e-05, 3.570800000000235e-05, 3.552799999999995e-05, 3.592999999999652e-05, 3.5360999999997644e-05, 3.525000000000056e-05, 3.522200000000142e-05, 3.519500000000175e-05, 3.5860999999998144e-05, 3.520800000000185e-05, 3.504199999999902e-05, 3.519500000000175e-05, 3.520800000000185e-05, 3.570800000000235e-05, 3.586200000000456e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.577" endtime="20201030 10:59:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.566" endtime="20201030 10:59:42.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.592" endtime="20201030 10:59:42.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.588" endtime="20201030 10:59:42.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.586" endtime="20201030 10:59:42.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.088" endtime="20201030 10:59:42.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.087" endtime="20201030 10:59:42.618"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.640" endtime="20201030 10:59:42.658"></status>
</kw>
<msg timestamp="20201030 10:59:42.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.637" endtime="20201030 10:59:42.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.661" endtime="20201030 10:59:42.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.667" endtime="20201030 10:59:42.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.630" endtime="20201030 10:59:42.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.624" endtime="20201030 10:59:42.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.691" endtime="20201030 10:59:43.036"></status>
</kw>
<msg timestamp="20201030 10:59:43.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039818167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:42.687" endtime="20201030 10:59:43.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039818167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:43.045" endtime="20201030 10:59:43.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.064" endtime="20201030 10:59:43.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.680" endtime="20201030 10:59:43.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.675" endtime="20201030 10:59:43.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.081" level="INFO">${RESULT} = [{'diff': 3.566700000000311e-05}, {'diff': 3.552799999999995e-05}, {'diff': 3.5360999999997644e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.552799999999995e-05}, {'diff': 3.5846999999998574e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:43.072" endtime="20201030 10:59:43.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.092" level="INFO">${ACCURACY} = {'diff': [3.566700000000311e-05, 3.552799999999995e-05, 3.5360999999997644e-05, 3.501399999999988e-05, 3.552799999999995e-05, 3.5846999999998574e-05, 3.5832999999999005e-05, 3.536100000000458e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 10:59:43.083" endtime="20201030 10:59:43.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.103" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.101" endtime="20201030 10:59:43.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.108" level="INFO">VALUE: [3.566700000000311e-05, 3.552799999999995e-05, 3.5360999999997644e-05, 3.501399999999988e-05, 3.552799999999995e-05, 3.5846999999998574e-05, 3.5832999999999005e-05, 3.536100000000458e-05, 3.568100000000268e-05, 3.5832999999999005e-05, 3.502799999999945e-05, 3.574999999999412e-05, 3.5874999999997714e-05, 3.570800000000235e-05, 3.568000000000321e-05, 3.534799999999755e-05, 3.5902999999996854e-05, 3.5583000000005693e-05, 3.552799999999995e-05, 3.519400000000228e-05, 3.5360999999997644e-05, 3.5194999999994814e-05, 3.569399999999584e-05, 3.519400000000228e-05, 3.5860999999998144e-05, 3.502799999999945e-05, 3.569500000000225e-05, 3.517999999999577e-05, 3.5180999999995244e-05, 3.538900000000372e-05, 3.536100000000458e-05, 3.523600000000099e-05, 3.552799999999995e-05, 3.501399999999988e-05, 3.5346999999998074e-05, 3.5180999999995244e-05, 3.505599999999859e-05, 3.550000000000081e-05, 3.572200000000192e-05, 3.552799999999995e-05, 3.552799999999995e-05, 3.566700000000311e-05, 3.5846999999998574e-05, 3.541700000000286e-05, 3.569500000000225e-05, 3.566600000000364e-05, 3.502799999999945e-05, 3.517999999999577e-05, 3.5860999999998144e-05, 3.5860999999998144e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.105" endtime="20201030 10:59:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.094" endtime="20201030 10:59:43.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.121" endtime="20201030 10:59:43.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.117" endtime="20201030 10:59:43.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.114" endtime="20201030 10:59:43.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.620" endtime="20201030 10:59:43.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.619" endtime="20201030 10:59:43.146"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.169" endtime="20201030 10:59:43.186"></status>
</kw>
<msg timestamp="20201030 10:59:43.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.165" endtime="20201030 10:59:43.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.189" endtime="20201030 10:59:43.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.196" endtime="20201030 10:59:43.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.158" endtime="20201030 10:59:43.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.152" endtime="20201030 10:59:43.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.219" endtime="20201030 10:59:43.568"></status>
</kw>
<msg timestamp="20201030 10:59:43.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.216" endtime="20201030 10:59:43.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.577" endtime="20201030 10:59:43.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.596" endtime="20201030 10:59:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.208" endtime="20201030 10:59:43.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.204" endtime="20201030 10:59:43.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.613" level="INFO">${RESULT} = [{'diff': 3.5124999999996964e-05}, {'diff': 3.5319000000005873e-05}, {'diff': 3.5527000000000475e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.51659999999962e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:43.604" endtime="20201030 10:59:43.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.623" level="INFO">${ACCURACY} = {'diff': [3.5124999999996964e-05, 3.5319000000005873e-05, 3.5527000000000475e-05, 3.551400000000038e-05, 3.551400000000038e-05, 3.51659999999962e-05, 3.518100000000218e-05, 3.5554999999999615e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 10:59:43.615" endtime="20201030 10:59:43.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.633" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.631" endtime="20201030 10:59:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.639" level="INFO">VALUE: [3.5124999999996964e-05, 3.5319000000005873e-05, 3.5527000000000475e-05, 3.551400000000038e-05, 3.551400000000038e-05, 3.51659999999962e-05, 3.518100000000218e-05, 3.5554999999999615e-05, 3.552799999999995e-05, 3.501399999999988e-05, 3.502799999999945e-05, 3.5846999999998574e-05, 3.5680999999995744e-05, 3.500000000000031e-05, 3.586199999999762e-05, 3.5860999999998144e-05, 3.501399999999988e-05, 3.5638999999997034e-05, 3.502799999999945e-05, 3.5332999999998504e-05, 3.5554999999999615e-05, 3.519400000000228e-05, 3.552799999999995e-05, 3.580599999999934e-05, 3.552799999999995e-05, 3.569500000000225e-05, 3.5860999999998144e-05, 3.550000000000081e-05, 3.568000000000321e-05, 3.534700000000501e-05, 3.5694999999995314e-05, 3.551400000000038e-05, 3.568100000000268e-05, 3.570800000000235e-05, 3.5694999999995314e-05, 3.533399999999798e-05, 3.5318999999998935e-05, 3.575000000000106e-05, 3.56659999999967e-05, 3.5860999999998144e-05, 3.584799999999805e-05, 3.5708999999994884e-05, 3.583399999999848e-05, 3.5026999999999975e-05, 3.5527000000000475e-05, 3.502799999999945e-05, 3.5360999999997644e-05, 3.550000000000081e-05, 3.5527000000000475e-05, 3.5346999999998074e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.636" endtime="20201030 10:59:43.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.624" endtime="20201030 10:59:43.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.651" endtime="20201030 10:59:43.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.647" endtime="20201030 10:59:43.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.644" endtime="20201030 10:59:43.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.148" endtime="20201030 10:59:43.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.147" endtime="20201030 10:59:43.676"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.699" endtime="20201030 10:59:43.717"></status>
</kw>
<msg timestamp="20201030 10:59:43.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.696" endtime="20201030 10:59:43.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.720" endtime="20201030 10:59:43.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.726" endtime="20201030 10:59:43.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.688" endtime="20201030 10:59:43.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.683" endtime="20201030 10:59:43.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.750" endtime="20201030 10:59:44.084"></status>
</kw>
<msg timestamp="20201030 10:59:44.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041228306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.746" endtime="20201030 10:59:44.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041228306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.093" endtime="20201030 10:59:44.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.112" endtime="20201030 10:59:44.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.739" endtime="20201030 10:59:44.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.734" endtime="20201030 10:59:44.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.129" level="INFO">${RESULT} = [{'diff': 3.5290999999999795e-05}, {'diff': 3.584799999999805e-05}, {'diff': 3.569400000000278e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.5444999999995064e-05}, {'diff': 3.5402999999996354e-05...</msg>
<status status="PASS" starttime="20201030 10:59:44.121" endtime="20201030 10:59:44.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.139" level="INFO">${ACCURACY} = {'diff': [3.5290999999999795e-05, 3.584799999999805e-05, 3.569400000000278e-05, 3.5554999999999615e-05, 3.5444999999995064e-05, 3.5402999999996354e-05, 3.519400000000228e-05, 3.569500000000225e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:59:44.131" endtime="20201030 10:59:44.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.149" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.147" endtime="20201030 10:59:44.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.155" level="INFO">VALUE: [3.5290999999999795e-05, 3.584799999999805e-05, 3.569400000000278e-05, 3.5554999999999615e-05, 3.5444999999995064e-05, 3.5402999999996354e-05, 3.519400000000228e-05, 3.569500000000225e-05, 3.57780000000002e-05, 3.5860999999998144e-05, 3.520800000000185e-05, 3.5026999999999975e-05, 3.547200000000167e-05, 3.552799999999995e-05, 3.5360999999997644e-05, 3.5832999999999005e-05, 3.501399999999988e-05, 3.519500000000175e-05, 3.518100000000218e-05, 3.502799999999945e-05, 3.5680999999995744e-05, 3.5360999999997644e-05, 3.500000000000031e-05, 3.5208999999994384e-05, 3.570800000000235e-05, 3.5832999999999005e-05, 3.517999999999577e-05, 3.5554999999999615e-05, 3.5902999999996854e-05, 3.590199999999738e-05, 3.584700000000551e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.551400000000038e-05, 3.5652999999996604e-05, 3.520900000000132e-05, 3.5360999999997644e-05, 3.551400000000038e-05, 3.57780000000002e-05, 3.502799999999945e-05, 3.536100000000458e-05, 3.5040999999999545e-05, 3.552799999999995e-05, 3.550000000000081e-05, 3.5402999999996354e-05, 3.533300000000544e-05, 3.519500000000175e-05, 3.584700000000551e-05, 3.5860999999998144e-05, 3.501399999999988e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.152" endtime="20201030 10:59:44.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.140" endtime="20201030 10:59:44.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.173" endtime="20201030 10:59:44.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.167" endtime="20201030 10:59:44.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.165" endtime="20201030 10:59:44.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.678" endtime="20201030 10:59:44.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.677" endtime="20201030 10:59:44.198"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.221" endtime="20201030 10:59:44.237"></status>
</kw>
<msg timestamp="20201030 10:59:44.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.218" endtime="20201030 10:59:44.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.240" endtime="20201030 10:59:44.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.247" endtime="20201030 10:59:44.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.210" endtime="20201030 10:59:44.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.205" endtime="20201030 10:59:44.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.270" endtime="20201030 10:59:44.605"></status>
</kw>
<msg timestamp="20201030 10:59:44.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039466764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.267" endtime="20201030 10:59:44.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039466764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.615" endtime="20201030 10:59:44.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.634" endtime="20201030 10:59:44.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.259" endtime="20201030 10:59:44.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.255" endtime="20201030 10:59:44.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.651" level="INFO">${RESULT} = [{'diff': 4.250000000000087e-05}, {'diff': 4.2610999999997956e-05}, {'diff': 4.2624999999997526e-05}, {'diff': 4.201300000000047e-05}, {'diff': 4.215200000000363e-05}, {'diff': 4.2639000000004035e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:44.642" endtime="20201030 10:59:44.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.661" level="INFO">${ACCURACY} = {'diff': [4.250000000000087e-05, 4.2610999999997956e-05, 4.2624999999997526e-05, 4.201300000000047e-05, 4.215200000000363e-05, 4.2639000000004035e-05, 4.247200000000173e-05, 4.2818999999999496e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:59:44.653" endtime="20201030 10:59:44.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.672" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.670" endtime="20201030 10:59:44.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.678" level="INFO">VALUE: [4.250000000000087e-05, 4.2610999999997956e-05, 4.2624999999997526e-05, 4.201300000000047e-05, 4.215200000000363e-05, 4.2639000000004035e-05, 4.247200000000173e-05, 4.2818999999999496e-05, 4.268000000000327e-05, 4.245799999999522e-05, 4.2874999999997776e-05, 4.2804999999999926e-05, 4.252800000000001e-05, 4.2318999999998996e-05, 4.281999999999897e-05, 4.2153000000003105e-05, 4.24860000000013e-05, 4.2124999999997026e-05, 4.24860000000013e-05, 4.297200000000223e-05, 4.2152999999996166e-05, 4.2138999999996596e-05, 4.2153000000003105e-05, 4.298599999999486e-05, 4.277800000000026e-05, 4.250000000000087e-05, 4.2152999999996166e-05, 4.248599999999436e-05, 4.26660000000037e-05, 4.298599999999486e-05, 4.2152999999996166e-05, 4.281999999999897e-05, 4.200000000000037e-05, 4.2152999999996166e-05, 4.213799999999712e-05, 4.23059999999989e-05, 4.21660000000032e-05, 4.215199999999669e-05, 4.2666999999996236e-05, 4.280600000000634e-05, 4.2473000000001204e-05, 4.233399999999804e-05, 4.2610999999997956e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.280600000000634e-05, 4.245800000000216e-05, 4.286199999999768e-05, 4.19860000000008e-05, 4.247199999999479e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.675" endtime="20201030 10:59:44.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.663" endtime="20201030 10:59:44.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.690" endtime="20201030 10:59:44.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.686" endtime="20201030 10:59:44.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.683" endtime="20201030 10:59:44.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.200" endtime="20201030 10:59:44.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.199" endtime="20201030 10:59:44.715"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.738" endtime="20201030 10:59:44.754"></status>
</kw>
<msg timestamp="20201030 10:59:44.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.734" endtime="20201030 10:59:44.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.757" endtime="20201030 10:59:44.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.763" endtime="20201030 10:59:44.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.727" endtime="20201030 10:59:44.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.722" endtime="20201030 10:59:44.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.787" endtime="20201030 10:59:45.120"></status>
</kw>
<msg timestamp="20201030 10:59:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039466847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039509681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.783" endtime="20201030 10:59:45.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039466847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039509681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.129" endtime="20201030 10:59:45.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.148" endtime="20201030 10:59:45.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.776" endtime="20201030 10:59:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.772" endtime="20201030 10:59:45.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.165" level="INFO">${RESULT} = [{'diff': 4.283399999999854e-05}, {'diff': 4.277799999999332e-05}, {'diff': 4.2473000000001204e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.245800000000216e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:45.156" endtime="20201030 10:59:45.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.176" level="INFO">${ACCURACY} = {'diff': [4.283399999999854e-05, 4.277799999999332e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.279199999999983e-05, 4.245800000000216e-05, 4.2819000000006435e-05, 4.2318999999998996e-05, 4.21...</msg>
<status status="PASS" starttime="20201030 10:59:45.167" endtime="20201030 10:59:45.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.187" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.185" endtime="20201030 10:59:45.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.192" level="INFO">VALUE: [4.283399999999854e-05, 4.277799999999332e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.279199999999983e-05, 4.245800000000216e-05, 4.2819000000006435e-05, 4.2318999999998996e-05, 4.2153000000003105e-05, 4.19860000000008e-05, 4.247200000000173e-05, 4.2652999999996666e-05, 4.2332999999998566e-05, 4.231999999999847e-05, 4.247200000000173e-05, 4.215199999999669e-05, 4.2139000000003535e-05, 4.229199999999933e-05, 4.2346999999998136e-05, 4.2666999999996236e-05, 4.231999999999847e-05, 4.245799999999522e-05, 4.2681000000002745e-05, 4.247200000000173e-05, 4.229199999999933e-05, 4.2138999999996596e-05, 4.2153000000003105e-05, 4.2166999999995736e-05, 4.220800000000191e-05, 4.279199999999983e-05, 4.2832999999999066e-05, 4.197200000000123e-05, 4.2304999999999426e-05, 4.249999999999393e-05, 4.294400000000309e-05, 4.263800000000456e-05, 4.255599999999915e-05, 4.2374999999997276e-05, 4.2318999999998996e-05, 4.197200000000123e-05, 4.250000000000087e-05, 4.24860000000013e-05, 4.2152999999996166e-05, 4.2639000000004035e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.2639000000004035e-05, 4.276400000000069e-05, 4.265200000000413e-05, 4.2846999999998636e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.189" endtime="20201030 10:59:45.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.178" endtime="20201030 10:59:45.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.204" endtime="20201030 10:59:45.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.200" endtime="20201030 10:59:45.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.198" endtime="20201030 10:59:45.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.717" endtime="20201030 10:59:45.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.716" endtime="20201030 10:59:45.230"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.252" endtime="20201030 10:59:45.268"></status>
</kw>
<msg timestamp="20201030 10:59:45.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.249" endtime="20201030 10:59:45.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.271" endtime="20201030 10:59:45.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.277" endtime="20201030 10:59:45.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.242" endtime="20201030 10:59:45.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.236" endtime="20201030 10:59:45.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.301" endtime="20201030 10:59:45.637"></status>
</kw>
<msg timestamp="20201030 10:59:45.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039224569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.298" endtime="20201030 10:59:45.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039224569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.647" endtime="20201030 10:59:45.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.665" endtime="20201030 10:59:45.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.290" endtime="20201030 10:59:45.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.286" endtime="20201030 10:59:45.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.682" level="INFO">${RESULT} = [{'diff': 4.2138999999996596e-05}, {'diff': 4.2860999999998206e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.293000000000352e-05}, {'diff': 4.284800000000505e-05}, {'diff': 4.2832999999999066e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:45.674" endtime="20201030 10:59:45.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.692" level="INFO">${ACCURACY} = {'diff': [4.2138999999996596e-05, 4.2860999999998206e-05, 4.28059999999994e-05, 4.293000000000352e-05, 4.284800000000505e-05, 4.2832999999999066e-05, 4.2973000000001704e-05, 4.2138999999996596e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:59:45.685" endtime="20201030 10:59:45.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.703" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.700" endtime="20201030 10:59:45.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.708" level="INFO">VALUE: [4.2138999999996596e-05, 4.2860999999998206e-05, 4.28059999999994e-05, 4.293000000000352e-05, 4.284800000000505e-05, 4.2832999999999066e-05, 4.2973000000001704e-05, 4.2138999999996596e-05, 4.218000000000277e-05, 4.2318999999998996e-05, 4.2153000000003105e-05, 4.2318999999998996e-05, 4.283400000000548e-05, 4.2360999999997706e-05, 4.2554999999999676e-05, 4.29860000000018e-05, 4.245800000000216e-05, 4.29860000000018e-05, 4.266599999999676e-05, 4.2347000000005075e-05, 4.1973000000000704e-05, 4.2652999999996666e-05, 4.24860000000013e-05, 4.2875000000004715e-05, 4.2568999999999246e-05, 4.234800000000455e-05, 4.2596999999998386e-05, 4.2487000000000774e-05, 4.200000000000037e-05, 4.233399999999804e-05, 4.2332999999998566e-05, 4.2138999999996596e-05, 4.1945000000001564e-05, 4.250000000000087e-05, 4.297200000000223e-05, 4.2804999999999926e-05, 4.250000000000087e-05, 4.2846999999998636e-05, 4.19860000000008e-05, 4.2332999999998566e-05, 4.250000000000087e-05, 4.26660000000037e-05, 4.2318999999998996e-05, 4.250000000000087e-05, 4.2166999999995736e-05, 4.267999999999633e-05, 4.223600000000105e-05, 4.2652999999996666e-05, 4.19860000000008e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.705" endtime="20201030 10:59:45.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.694" endtime="20201030 10:59:45.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.720" endtime="20201030 10:59:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.716" endtime="20201030 10:59:45.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.714" endtime="20201030 10:59:45.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.232" endtime="20201030 10:59:45.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.230" endtime="20201030 10:59:45.745"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.768" endtime="20201030 10:59:45.785"></status>
</kw>
<msg timestamp="20201030 10:59:45.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.765" endtime="20201030 10:59:45.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.789" endtime="20201030 10:59:45.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.795" endtime="20201030 10:59:45.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.757" endtime="20201030 10:59:45.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.752" endtime="20201030 10:59:45.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.818" endtime="20201030 10:59:46.153"></status>
</kw>
<msg timestamp="20201030 10:59:46.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040966389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.815" endtime="20201030 10:59:46.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040966389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.162" endtime="20201030 10:59:46.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.181" endtime="20201030 10:59:46.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.808" endtime="20201030 10:59:46.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.803" endtime="20201030 10:59:46.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.198" level="INFO">${RESULT} = [{'diff': 4.1902999999995916e-05}, {'diff': 4.2124999999997026e-05}, {'diff': 4.249999999999393e-05}, {'diff': 4.2304999999999426e-05}, {'diff': 4.245800000000216e-05}, {'diff': 4.2681000000002745e-05...</msg>
<status status="PASS" starttime="20201030 10:59:46.190" endtime="20201030 10:59:46.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.207" level="INFO">${ACCURACY} = {'diff': [4.1902999999995916e-05, 4.2124999999997026e-05, 4.249999999999393e-05, 4.2304999999999426e-05, 4.245800000000216e-05, 4.2681000000002745e-05, 4.2319000000005935e-05, 4.270800000000241e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:59:46.200" endtime="20201030 10:59:46.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.218" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.216" endtime="20201030 10:59:46.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.224" level="INFO">VALUE: [4.1902999999995916e-05, 4.2124999999997026e-05, 4.249999999999393e-05, 4.2304999999999426e-05, 4.245800000000216e-05, 4.2681000000002745e-05, 4.2319000000005935e-05, 4.270800000000241e-05, 4.248599999999436e-05, 4.2459000000001634e-05, 4.2625000000004465e-05, 4.281999999999897e-05, 4.2304999999999426e-05, 4.297200000000223e-05, 4.23059999999989e-05, 4.2139000000003535e-05, 4.279199999999983e-05, 4.1959000000001134e-05, 4.2638999999997096e-05, 4.2125000000003965e-05, 4.2304999999999426e-05, 4.2110999999997456e-05, 4.1945000000001564e-05, 4.226300000000072e-05, 4.229199999999933e-05, 4.2403000000003355e-05, 4.247200000000173e-05, 4.2290999999999856e-05, 4.229199999999933e-05, 4.24860000000013e-05, 4.2360999999997706e-05, 4.2638999999997096e-05, 4.2139000000003535e-05, 4.19860000000008e-05, 4.280600000000634e-05, 4.230600000000584e-05, 4.2110999999997456e-05, 4.2804999999999926e-05, 4.299999999999443e-05, 4.2582999999998816e-05, 4.197200000000123e-05, 4.2624999999997526e-05, 4.2624999999997526e-05, 4.195799999999472e-05, 4.297200000000223e-05, 4.2152999999996166e-05, 4.2818999999999496e-05, 4.279199999999983e-05, 4.24860000000013e-05, 4.2305000000006365e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.221" endtime="20201030 10:59:46.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.209" endtime="20201030 10:59:46.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.242" endtime="20201030 10:59:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.232" endtime="20201030 10:59:46.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.229" endtime="20201030 10:59:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.747" endtime="20201030 10:59:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.746" endtime="20201030 10:59:46.267"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.289" endtime="20201030 10:59:46.305"></status>
</kw>
<msg timestamp="20201030 10:59:46.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.286" endtime="20201030 10:59:46.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.309" endtime="20201030 10:59:46.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.315" endtime="20201030 10:59:46.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.279" endtime="20201030 10:59:46.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.273" endtime="20201030 10:59:46.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.339" endtime="20201030 10:59:46.675"></status>
</kw>
<msg timestamp="20201030 10:59:46.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.335" endtime="20201030 10:59:46.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.685" endtime="20201030 10:59:46.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.703" endtime="20201030 10:59:46.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.328" endtime="20201030 10:59:46.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.323" endtime="20201030 10:59:46.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.721" level="INFO">${RESULT} = [{'diff': 4.2318999999998996e-05}, {'diff': 4.250000000000087e-05}, {'diff': 4.2458999999994695e-05}, {'diff': 4.2638999999997096e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.2625000000004465e-05...</msg>
<status status="PASS" starttime="20201030 10:59:46.712" endtime="20201030 10:59:46.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.731" level="INFO">${ACCURACY} = {'diff': [4.2318999999998996e-05, 4.250000000000087e-05, 4.2458999999994695e-05, 4.2638999999997096e-05, 4.279199999999983e-05, 4.2625000000004465e-05, 4.2459000000001634e-05, 4.245800000000216e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:59:46.723" endtime="20201030 10:59:46.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.742" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.740" endtime="20201030 10:59:46.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.747" level="INFO">VALUE: [4.2318999999998996e-05, 4.250000000000087e-05, 4.2458999999994695e-05, 4.2638999999997096e-05, 4.279199999999983e-05, 4.2625000000004465e-05, 4.2459000000001634e-05, 4.245800000000216e-05, 4.23059999999989e-05, 4.258399999999829e-05, 4.300000000000137e-05, 4.2832999999999066e-05, 4.2332999999998566e-05, 4.218000000000277e-05, 4.2624999999997526e-05, 4.2638999999997096e-05, 4.2666999999996236e-05, 4.202799999999951e-05, 4.247200000000173e-05, 4.1987000000000274e-05, 4.198599999999386e-05, 4.231999999999847e-05, 4.2638999999997096e-05, 4.259799999999786e-05, 4.200000000000037e-05, 4.24860000000013e-05, 4.2638999999997096e-05, 4.247200000000173e-05, 4.232000000000541e-05, 4.247199999999479e-05, 4.298599999999486e-05, 4.2804999999999926e-05, 4.2653000000003605e-05, 4.2430999999995556e-05, 4.250000000000087e-05, 4.2166999999995736e-05, 4.2124999999997026e-05, 4.2097000000004825e-05, 4.2361000000004645e-05, 4.2459000000001634e-05, 4.24860000000013e-05, 4.266599999999676e-05, 4.263799999999762e-05, 4.194400000000209e-05, 4.229199999999933e-05, 4.2804999999999926e-05, 4.2818999999999496e-05, 4.250000000000087e-05, 4.194399999999515e-05, 4.247200000000173e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.744" endtime="20201030 10:59:46.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.733" endtime="20201030 10:59:46.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.760" endtime="20201030 10:59:46.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.756" endtime="20201030 10:59:46.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.753" endtime="20201030 10:59:46.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.269" endtime="20201030 10:59:46.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.268" endtime="20201030 10:59:46.785"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.807" endtime="20201030 10:59:46.824"></status>
</kw>
<msg timestamp="20201030 10:59:46.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.804" endtime="20201030 10:59:46.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.827" endtime="20201030 10:59:46.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.833" endtime="20201030 10:59:46.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.797" endtime="20201030 10:59:46.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.791" endtime="20201030 10:59:46.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.856" endtime="20201030 10:59:47.193"></status>
</kw>
<msg timestamp="20201030 10:59:47.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039362444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.853" endtime="20201030 10:59:47.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039362444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.202" endtime="20201030 10:59:47.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.221" endtime="20201030 10:59:47.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.846" endtime="20201030 10:59:47.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.841" endtime="20201030 10:59:47.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.238" level="INFO">${RESULT} = [{'diff': 4.249999999999393e-05}, {'diff': 4.233399999999804e-05}, {'diff': 4.2152999999996166e-05}, {'diff': 4.2138999999996596e-05}, {'diff': 4.2653000000003605e-05}, {'diff': 4.2638999999997096e-05...</msg>
<status status="PASS" starttime="20201030 10:59:47.229" endtime="20201030 10:59:47.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.249" level="INFO">${ACCURACY} = {'diff': [4.249999999999393e-05, 4.233399999999804e-05, 4.2152999999996166e-05, 4.2138999999996596e-05, 4.2653000000003605e-05, 4.2638999999997096e-05, 4.19860000000008e-05, 4.28059999999994e-05, 4.24...</msg>
<status status="PASS" starttime="20201030 10:59:47.240" endtime="20201030 10:59:47.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.260" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.258" endtime="20201030 10:59:47.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.265" level="INFO">VALUE: [4.249999999999393e-05, 4.233399999999804e-05, 4.2152999999996166e-05, 4.2138999999996596e-05, 4.2653000000003605e-05, 4.2638999999997096e-05, 4.19860000000008e-05, 4.28059999999994e-05, 4.247200000000173e-05, 4.2319000000005935e-05, 4.2068999999998746e-05, 4.2847000000005575e-05, 4.282000000000591e-05, 4.2638999999997096e-05, 4.2597000000005325e-05, 4.19860000000008e-05, 4.2332999999998566e-05, 4.279199999999983e-05, 4.2124999999997026e-05, 4.2652999999996666e-05, 4.254199999999958e-05, 4.2568999999999246e-05, 4.2096999999997886e-05, 4.2318999999998996e-05, 4.2318999999998996e-05, 4.2125000000003965e-05, 4.2166999999995736e-05, 4.197199999999429e-05, 4.2680999999995806e-05, 4.281999999999897e-05, 4.200000000000037e-05, 4.2874999999997776e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.2167000000002675e-05, 4.2124999999997026e-05, 4.2804999999999926e-05, 4.2360999999997706e-05, 4.2583000000005755e-05, 4.24860000000013e-05, 4.215200000000363e-05, 4.281999999999897e-05, 4.2653000000003605e-05, 4.28059999999994e-05, 4.2346999999998136e-05, 4.2318999999998996e-05, 4.29860000000018e-05, 4.2652999999996666e-05, 4.2973000000001704e-05, 4.2318999999998996e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.262" endtime="20201030 10:59:47.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.251" endtime="20201030 10:59:47.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.278" endtime="20201030 10:59:47.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.274" endtime="20201030 10:59:47.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.271" endtime="20201030 10:59:47.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.787" endtime="20201030 10:59:47.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.786" endtime="20201030 10:59:47.303"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.325" endtime="20201030 10:59:47.342"></status>
</kw>
<msg timestamp="20201030 10:59:47.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.322" endtime="20201030 10:59:47.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.345" endtime="20201030 10:59:47.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.351" endtime="20201030 10:59:47.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.315" endtime="20201030 10:59:47.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.309" endtime="20201030 10:59:47.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.375" endtime="20201030 10:59:47.712"></status>
</kw>
<msg timestamp="20201030 10:59:47.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039417139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039459792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.372" endtime="20201030 10:59:47.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039417139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039459792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.721" endtime="20201030 10:59:47.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.740" endtime="20201030 10:59:47.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.364" endtime="20201030 10:59:47.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.359" endtime="20201030 10:59:47.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.757" level="INFO">${RESULT} = [{'diff': 4.2653000000003605e-05}, {'diff': 4.295800000000266e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.281999999999897e-05}, {'diff': 4.2846999999998636e-05}, {'diff': 4.297200000000223e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:47.748" endtime="20201030 10:59:47.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.766" level="INFO">${ACCURACY} = {'diff': [4.2653000000003605e-05, 4.295800000000266e-05, 4.279199999999983e-05, 4.281999999999897e-05, 4.2846999999998636e-05, 4.297200000000223e-05, 4.195800000000166e-05, 4.233400000000498e-05, 4.23...</msg>
<status status="PASS" starttime="20201030 10:59:47.759" endtime="20201030 10:59:47.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.777" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.775" endtime="20201030 10:59:47.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.782" level="INFO">VALUE: [4.2653000000003605e-05, 4.295800000000266e-05, 4.279199999999983e-05, 4.281999999999897e-05, 4.2846999999998636e-05, 4.297200000000223e-05, 4.195800000000166e-05, 4.233400000000498e-05, 4.23059999999989e-05, 4.265199999999719e-05, 4.2167000000002675e-05, 4.2333000000005505e-05, 4.2374999999997276e-05, 4.2846999999998636e-05, 4.19860000000008e-05, 4.233399999999804e-05, 4.197199999999429e-05, 4.2652999999996666e-05, 4.2332999999998566e-05, 4.2653000000003605e-05, 4.283399999999854e-05, 4.2652999999996666e-05, 4.24860000000013e-05, 4.2832999999999066e-05, 4.2624999999997526e-05, 4.2166999999995736e-05, 4.23059999999989e-05, 4.301400000000094e-05, 4.2304999999999426e-05, 4.215200000000363e-05, 4.19860000000008e-05, 4.281999999999897e-05, 4.297200000000223e-05, 4.24860000000013e-05, 4.2374999999997276e-05, 4.231999999999847e-05, 4.259799999999786e-05, 4.2653000000003605e-05, 4.2332999999998566e-05, 4.2167000000002675e-05, 4.2638999999997096e-05, 4.2167000000002675e-05, 4.2832999999999066e-05, 4.26939999999959e-05, 4.245799999999522e-05, 4.295800000000266e-05, 4.2818999999999496e-05, 4.21660000000032e-05, 4.2124999999997026e-05, 4.2152999999996166e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.779" endtime="20201030 10:59:47.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.768" endtime="20201030 10:59:47.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.795" endtime="20201030 10:59:47.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.791" endtime="20201030 10:59:47.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.788" endtime="20201030 10:59:47.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.305" endtime="20201030 10:59:47.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.304" endtime="20201030 10:59:47.820"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.842" endtime="20201030 10:59:47.860"></status>
</kw>
<msg timestamp="20201030 10:59:47.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.839" endtime="20201030 10:59:47.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.864" endtime="20201030 10:59:47.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.870" endtime="20201030 10:59:47.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.832" endtime="20201030 10:59:47.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.826" endtime="20201030 10:59:47.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.893" endtime="20201030 10:59:48.227"></status>
</kw>
<msg timestamp="20201030 10:59:48.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040910583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.890" endtime="20201030 10:59:48.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040910583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.236" endtime="20201030 10:59:48.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.255" endtime="20201030 10:59:48.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.883" endtime="20201030 10:59:48.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.878" endtime="20201030 10:59:48.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.272" level="INFO">${RESULT} = [{'diff': 4.975000000000118e-05}, {'diff': 4.9625000000004527e-05}, {'diff': 4.926400000000025e-05}, {'diff': 4.959699999999845e-05}, {'diff': 4.975000000000118e-05}, {'diff': 4.886100000000421e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:48.263" endtime="20201030 10:59:48.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.281" level="INFO">${ACCURACY} = {'diff': [4.975000000000118e-05, 4.9625000000004527e-05, 4.926400000000025e-05, 4.959699999999845e-05, 4.975000000000118e-05, 4.886100000000421e-05, 4.9917000000003486e-05, 4.923600000000111e-05, 4.90...</msg>
<status status="PASS" starttime="20201030 10:59:48.274" endtime="20201030 10:59:48.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.292" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.290" endtime="20201030 10:59:48.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.297" level="INFO">VALUE: [4.975000000000118e-05, 4.9625000000004527e-05, 4.926400000000025e-05, 4.959699999999845e-05, 4.975000000000118e-05, 4.886100000000421e-05, 4.9917000000003486e-05, 4.923600000000111e-05, 4.909700000000489e-05, 4.927799999999982e-05, 4.927799999999982e-05, 4.943000000000308e-05, 4.9445000000002126e-05, 4.9125000000004027e-05, 4.976400000000075e-05, 4.976399999999381e-05, 4.930599999999896e-05, 4.927799999999982e-05, 4.918000000000283e-05, 4.959699999999845e-05, 4.975000000000118e-05, 4.909700000000489e-05, 4.91940000000024e-05, 4.943099999999562e-05, 4.9431000000002556e-05, 4.9445000000002126e-05, 4.944400000000265e-05, 4.948599999999442e-05, 4.908400000000479e-05, 4.926400000000025e-05, 4.9443999999995714e-05, 4.923599999999417e-05, 4.909699999999795e-05, 4.912499999999709e-05, 4.9417000000002986e-05, 4.95140000000005e-05, 4.8931000000002056e-05, 4.927799999999982e-05, 4.940200000000394e-05, 4.933299999999863e-05, 4.975000000000118e-05, 4.997200000000229e-05, 4.893000000000258e-05, 4.993099999999612e-05, 4.958299999999888e-05, 4.958300000000582e-05, 4.929199999999939e-05, 4.8917000000002486e-05, 4.976400000000075e-05, 4.994400000000315e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.294" endtime="20201030 10:59:48.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.283" endtime="20201030 10:59:48.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.311" endtime="20201030 10:59:48.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.306" endtime="20201030 10:59:48.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.303" endtime="20201030 10:59:48.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.822" endtime="20201030 10:59:48.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.821" endtime="20201030 10:59:48.337"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.359" endtime="20201030 10:59:48.377"></status>
</kw>
<msg timestamp="20201030 10:59:48.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.356" endtime="20201030 10:59:48.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.381" endtime="20201030 10:59:48.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.387" endtime="20201030 10:59:48.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.349" endtime="20201030 10:59:48.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.343" endtime="20201030 10:59:48.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.411" endtime="20201030 10:59:48.744"></status>
</kw>
<msg timestamp="20201030 10:59:48.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039351944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039439347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.407" endtime="20201030 10:59:48.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039351944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039439347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.754" endtime="20201030 10:59:48.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.772" endtime="20201030 10:59:48.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.400" endtime="20201030 10:59:48.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.395" endtime="20201030 10:59:48.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.789" level="INFO">${RESULT} = [{'diff': 8.740299999999979e-05}, {'diff': 8.705600000000202e-05}, {'diff': 8.795799999999909e-05}, {'diff': 8.795800000000603e-05}, {'diff': 8.792999999999995e-05}, {'diff': 8.702799999999594e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:48.781" endtime="20201030 10:59:48.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.800" level="INFO">${ACCURACY} = {'diff': [8.740299999999979e-05, 8.705600000000202e-05, 8.795799999999909e-05, 8.795800000000603e-05, 8.792999999999995e-05, 8.702799999999594e-05, 8.740299999999979e-05, 8.759699999999482e-05, 8.7083...</msg>
<status status="PASS" starttime="20201030 10:59:48.791" endtime="20201030 10:59:48.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.811" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.809" endtime="20201030 10:59:48.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.816" level="INFO">VALUE: [8.740299999999979e-05, 8.705600000000202e-05, 8.795799999999909e-05, 8.795800000000603e-05, 8.792999999999995e-05, 8.702799999999594e-05, 8.740299999999979e-05, 8.759699999999482e-05, 8.708300000000169e-05, 8.729199999999576e-05, 8.787499999999421e-05, 8.704199999999551e-05, 8.741699999999936e-05, 8.762499999999396e-05, 8.797199999999866e-05, 8.79999999999978e-05, 8.719399999999877e-05, 8.729199999999576e-05, 8.743099999999893e-05, 8.772199999999841e-05, 8.722199999999791e-05, 8.837500000000165e-05, 8.731900000000237e-05, 8.827699999999772e-05, 8.74999999999973e-05, 8.754200000000295e-05, 8.736200000000055e-05, 8.751399999999687e-05, 8.722199999999791e-05, 8.776399999999712e-05, 8.845799999999959e-05, 8.719500000000519e-05, 8.795799999999909e-05, 8.751399999999687e-05, 8.772200000000535e-05, 8.74449999999985e-05, 8.742999999999945e-05, 8.737500000000065e-05, 8.866600000000113e-05, 8.779199999999626e-05, 8.797199999999866e-05, 8.720799999999834e-05, 8.733400000000141e-05, 8.748599999999773e-05, 8.891700000000086e-05, 8.766600000000013e-05, 8.715300000000648e-05, 8.719499999999825e-05, 8.759700000000176e-05, 8.78329999999955e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.813" endtime="20201030 10:59:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.802" endtime="20201030 10:59:48.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.829" endtime="20201030 10:59:48.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.824" endtime="20201030 10:59:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.822" endtime="20201030 10:59:48.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.339" endtime="20201030 10:59:48.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.337" endtime="20201030 10:59:48.854"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.876" endtime="20201030 10:59:48.895"></status>
</kw>
<msg timestamp="20201030 10:59:48.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.873" endtime="20201030 10:59:48.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.898" endtime="20201030 10:59:48.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.904" endtime="20201030 10:59:48.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.866" endtime="20201030 10:59:48.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.860" endtime="20201030 10:59:48.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.928" endtime="20201030 10:59:49.262"></status>
</kw>
<msg timestamp="20201030 10:59:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039656681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.924" endtime="20201030 10:59:49.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039656681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.272" endtime="20201030 10:59:49.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.290" endtime="20201030 10:59:49.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.917" endtime="20201030 10:59:49.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.913" endtime="20201030 10:59:49.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.307" level="INFO">${RESULT} = [{'diff': 8.813900000000097e-05}, {'diff': 8.837500000000165e-05}, {'diff': 8.830600000000327e-05}, {'diff': 8.836100000000208e-05}, {'diff': 8.891700000000086e-05}, {'diff': 8.815200000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:49.298" endtime="20201030 10:59:49.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.318" level="INFO">${ACCURACY} = {'diff': [8.813900000000097e-05, 8.837500000000165e-05, 8.830600000000327e-05, 8.836100000000208e-05, 8.891700000000086e-05, 8.815200000000106e-05, 8.838900000000122e-05, 8.861099999999539e-05, 8.8707...</msg>
<status status="PASS" starttime="20201030 10:59:49.309" endtime="20201030 10:59:49.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.329" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.327" endtime="20201030 10:59:49.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.334" level="INFO">VALUE: [8.813900000000097e-05, 8.837500000000165e-05, 8.830600000000327e-05, 8.836100000000208e-05, 8.891700000000086e-05, 8.815200000000106e-05, 8.838900000000122e-05, 8.861099999999539e-05, 8.870799999999984e-05, 8.827699999999772e-05, 8.880499999999736e-05, 8.904099999999804e-05, 8.865300000000104e-05, 8.832000000000284e-05, 8.833400000000241e-05, 8.901399999999837e-05, 8.887499999999521e-05, 8.81800000000002e-05, 8.819500000000619e-05, 8.848599999999873e-05, 8.847199999999916e-05, 8.8945e-05, 8.843099999999993e-05, 8.822199999999891e-05, 8.806899999999618e-05, 8.845799999999959e-05, 8.837500000000165e-05, 8.829199999999676e-05, 8.81670000000001e-05, 8.795800000000603e-05, 8.82370000000049e-05, 8.847299999999864e-05, 8.852800000000438e-05, 8.816600000000063e-05, 8.855600000000352e-05, 8.851399999999787e-05, 8.819399999999977e-05, 8.865300000000104e-05, 8.886100000000258e-05, 8.890300000000129e-05, 8.895899999999957e-05, 8.865200000000156e-05, 8.86800000000007e-05, 8.823599999999848e-05, 8.813900000000097e-05, 8.873599999999898e-05, 8.876399999999812e-05, 8.886100000000258e-05, 8.886100000000258e-05, 8.823600000000542e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.331" endtime="20201030 10:59:49.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.320" endtime="20201030 10:59:49.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.347" endtime="20201030 10:59:49.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.342" endtime="20201030 10:59:49.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.340" endtime="20201030 10:59:49.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.856" endtime="20201030 10:59:49.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.855" endtime="20201030 10:59:49.372"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.394" endtime="20201030 10:59:49.413"></status>
</kw>
<msg timestamp="20201030 10:59:49.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.391" endtime="20201030 10:59:49.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.416" endtime="20201030 10:59:49.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.422" endtime="20201030 10:59:49.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.384" endtime="20201030 10:59:49.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.378" endtime="20201030 10:59:49.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.446" endtime="20201030 10:59:49.782"></status>
</kw>
<msg timestamp="20201030 10:59:49.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039278861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039368972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.443" endtime="20201030 10:59:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039278861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039368972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.792" endtime="20201030 10:59:49.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.810" endtime="20201030 10:59:49.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.435" endtime="20201030 10:59:49.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.430" endtime="20201030 10:59:49.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.827" level="INFO">${RESULT} = [{'diff': 9.011100000000383e-05}, {'diff': 8.957000000000409e-05}, {'diff': 9.104100000000004e-05}, {'diff': 8.963900000000247e-05}, {'diff': 8.940300000000179e-05}, {'diff': 9.033300000000494e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:49.819" endtime="20201030 10:59:49.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.836" level="INFO">${ACCURACY} = {'diff': [9.011100000000383e-05, 8.957000000000409e-05, 9.104100000000004e-05, 8.963900000000247e-05, 8.940300000000179e-05, 9.033300000000494e-05, 8.968100000000118e-05, 9.040300000000279e-05, 8.9805...</msg>
<status status="PASS" starttime="20201030 10:59:49.829" endtime="20201030 10:59:49.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.847" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.845" endtime="20201030 10:59:49.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.853" level="INFO">VALUE: [9.011100000000383e-05, 8.957000000000409e-05, 9.104100000000004e-05, 8.963900000000247e-05, 8.940300000000179e-05, 9.033300000000494e-05, 8.968100000000118e-05, 9.040300000000279e-05, 8.980599999999783e-05, 8.919400000000077e-05, 9.086099999999764e-05, 8.926399999999862e-05, 9.048600000000073e-05, 8.924999999999905e-05, 9.101400000000037e-05, 8.968099999999424e-05, 8.93050000000048e-05, 9.087500000000415e-05, 9.009800000000373e-05, 8.984799999999654e-05, 8.922199999999991e-05, 8.913899999999503e-05, 8.909700000000326e-05, 9.073600000000098e-05, 8.908299999999675e-05, 9.036100000000408e-05, 8.968100000000118e-05, 9.004199999999851e-05, 8.976399999999912e-05, 9.002699999999947e-05, 9.036099999999714e-05, 8.938900000000222e-05, 9.006899999999818e-05, 8.947200000000016e-05, 8.930599999999733e-05, 9.061100000000433e-05, 8.951399999999887e-05, 8.947200000000016e-05, 8.977799999999869e-05, 9.059699999999782e-05, 8.959700000000376e-05, 9.059799999999729e-05, 8.988900000000272e-05, 9.054200000000595e-05, 8.961100000000333e-05, 8.977799999999869e-05, 8.9945000000001e-05, 8.959700000000376e-05, 8.993099999999449e-05, 8.938899999999528e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.850" endtime="20201030 10:59:49.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.838" endtime="20201030 10:59:49.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.865" endtime="20201030 10:59:49.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.861" endtime="20201030 10:59:49.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.858" endtime="20201030 10:59:49.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.374" endtime="20201030 10:59:49.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.373" endtime="20201030 10:59:49.890"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.913" endtime="20201030 10:59:49.933"></status>
</kw>
<msg timestamp="20201030 10:59:49.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.909" endtime="20201030 10:59:49.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.936" endtime="20201030 10:59:49.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.942" endtime="20201030 10:59:49.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.902" endtime="20201030 10:59:49.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.896" endtime="20201030 10:59:49.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.965" endtime="20201030 10:59:50.300"></status>
</kw>
<msg timestamp="20201030 10:59:50.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.962" endtime="20201030 10:59:50.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040955653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.309" endtime="20201030 10:59:50.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.328" endtime="20201030 10:59:50.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.955" endtime="20201030 10:59:50.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.950" endtime="20201030 10:59:50.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.345" level="INFO">${RESULT} = [{'diff': 9.173599999999504e-05}, {'diff': 9.158299999999925e-05}, {'diff': 9.152700000000097e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.011100000000383e-05}, {'diff': 9.126400000000062e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:50.336" endtime="20201030 10:59:50.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.354" level="INFO">${ACCURACY} = {'diff': [9.173599999999504e-05, 9.158299999999925e-05, 9.152700000000097e-05, 9.104199999999951e-05, 9.011100000000383e-05, 9.126400000000062e-05, 9.0332999999998e-05, 9.113900000000397e-05, 9.142999...</msg>
<status status="PASS" starttime="20201030 10:59:50.347" endtime="20201030 10:59:50.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.365" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.362" endtime="20201030 10:59:50.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.370" level="INFO">VALUE: [9.173599999999504e-05, 9.158299999999925e-05, 9.152700000000097e-05, 9.104199999999951e-05, 9.011100000000383e-05, 9.126400000000062e-05, 9.0332999999998e-05, 9.113900000000397e-05, 9.142999999999651e-05, 9.152800000000044e-05, 9.187499999999821e-05, 9.051399999999987e-05, 9.151400000000087e-05, 9.138900000000422e-05, 9.115300000000354e-05, 9.01800000000022e-05, 9.156899999999968e-05, 9.159699999999882e-05, 9.05000000000003e-05, 9.159699999999882e-05, 9.088800000000424e-05, 9.120900000000182e-05, 9.104199999999951e-05, 9.168100000000318e-05, 9.20000000000018e-05, 9.065200000000356e-05, 9.131900000000637e-05, 9.138899999999728e-05, 9.127800000000019e-05, 9.14729999999947e-05, 9.072300000000089e-05, 9.174999999999461e-05, 9.129199999999976e-05, 9.152800000000044e-05, 9.134699999999857e-05, 9.015300000000254e-05, 9.130599999999933e-05, 9.158299999999925e-05, 9.01670000000021e-05, 9.140199999999737e-05, 9.098600000000123e-05, 9.120900000000182e-05, 9.136099999999814e-05, 9.075000000000055e-05, 9.137499999999771e-05, 9.113799999999755e-05, 9.140300000000379e-05, 9.13199999999989e-05, 9.027799999999919e-05, 9.163899999999753e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.367" endtime="20201030 10:59:50.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.356" endtime="20201030 10:59:50.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.384" endtime="20201030 10:59:50.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.378" endtime="20201030 10:59:50.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.376" endtime="20201030 10:59:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.892" endtime="20201030 10:59:50.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.891" endtime="20201030 10:59:50.409"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.431" endtime="20201030 10:59:50.450"></status>
</kw>
<msg timestamp="20201030 10:59:50.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.428" endtime="20201030 10:59:50.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.454" endtime="20201030 10:59:50.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.460" endtime="20201030 10:59:50.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.421" endtime="20201030 10:59:50.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.415" endtime="20201030 10:59:50.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.484" endtime="20201030 10:59:50.819"></status>
</kw>
<msg timestamp="20201030 10:59:50.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039328014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039420153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.481" endtime="20201030 10:59:50.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039328014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039420153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.828" endtime="20201030 10:59:50.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.846" endtime="20201030 10:59:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.473" endtime="20201030 10:59:50.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.468" endtime="20201030 10:59:50.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.863" level="INFO">${RESULT} = [{'diff': 9.213899999999803e-05}, {'diff': 9.234699999999957e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.30000000000028e-05}, {'diff': 9.234799999999904e-05}, {'diff': 9.294399999999758e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:50.855" endtime="20201030 10:59:50.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.874" level="INFO">${ACCURACY} = {'diff': [9.213899999999803e-05, 9.234699999999957e-05, 9.259699999999982e-05, 9.30000000000028e-05, 9.234799999999904e-05, 9.294399999999758e-05, 9.23199999999999e-05, 9.254100000000154e-05, 9.295900...</msg>
<status status="PASS" starttime="20201030 10:59:50.865" endtime="20201030 10:59:50.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.885" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.883" endtime="20201030 10:59:50.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.890" level="INFO">VALUE: [9.213899999999803e-05, 9.234699999999957e-05, 9.259699999999982e-05, 9.30000000000028e-05, 9.234799999999904e-05, 9.294399999999758e-05, 9.23199999999999e-05, 9.254100000000154e-05, 9.295900000000357e-05, 9.1945000000003e-05, 9.273600000000298e-05, 9.251399999999493e-05, 9.244400000000402e-05, 9.262499999999896e-05, 9.275000000000255e-05, 9.241599999999794e-05, 9.287500000000615e-05, 9.230499999999392e-05, 9.245800000000359e-05, 9.269499999999681e-05, 9.266699999999767e-05, 9.245799999999665e-05, 9.273600000000298e-05, 9.261099999999939e-05, 9.231900000000043e-05, 9.299999999999586e-05, 9.21659999999977e-05, 9.277800000000169e-05, 9.274999999999561e-05, 9.216699999999717e-05, 9.276399999999518e-05, 9.293100000000443e-05, 9.255500000000111e-05, 9.19859999999953e-05, 9.277800000000169e-05, 9.245799999999665e-05, 9.2333e-05, 9.277800000000169e-05, 9.245800000000359e-05, 9.276400000000212e-05, 9.281900000000093e-05, 9.213899999999803e-05, 9.211099999999889e-05, 9.219399999999683e-05, 9.284700000000007e-05, 9.237499999999871e-05, 9.288900000000572e-05, 9.234699999999957e-05, 9.195899999999563e-05, 9.281899999999399e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.887" endtime="20201030 10:59:50.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.876" endtime="20201030 10:59:50.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.903" endtime="20201030 10:59:50.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.898" endtime="20201030 10:59:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.896" endtime="20201030 10:59:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.411" endtime="20201030 10:59:50.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.410" endtime="20201030 10:59:50.927"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.950" endtime="20201030 10:59:50.969"></status>
</kw>
<msg timestamp="20201030 10:59:50.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.947" endtime="20201030 10:59:50.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.972" endtime="20201030 10:59:50.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.978" endtime="20201030 10:59:50.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.940" endtime="20201030 10:59:50.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.934" endtime="20201030 10:59:50.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.002" endtime="20201030 10:59:51.335"></status>
</kw>
<msg timestamp="20201030 10:59:51.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039362819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.998" endtime="20201030 10:59:51.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039362819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.345" endtime="20201030 10:59:51.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.363" endtime="20201030 10:59:51.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.991" endtime="20201030 10:59:51.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.986" endtime="20201030 10:59:51.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.380" level="INFO">${RESULT} = [{'diff': 9.349999999999636e-05}, {'diff': 9.374999999999661e-05}, {'diff': 9.355500000000211e-05}, {'diff': 9.359700000000082e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.370800000000484e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:51.372" endtime="20201030 10:59:51.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.395" level="INFO">${ACCURACY} = {'diff': [9.349999999999636e-05, 9.374999999999661e-05, 9.355500000000211e-05, 9.359700000000082e-05, 9.363899999999953e-05, 9.370800000000484e-05, 9.298600000000323e-05, 9.3027999999995e-05, 9.352799...</msg>
<status status="PASS" starttime="20201030 10:59:51.382" endtime="20201030 10:59:51.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.406" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.404" endtime="20201030 10:59:51.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.412" level="INFO">VALUE: [9.349999999999636e-05, 9.374999999999661e-05, 9.355500000000211e-05, 9.359700000000082e-05, 9.363899999999953e-05, 9.370800000000484e-05, 9.298600000000323e-05, 9.3027999999995e-05, 9.35279999999955e-05, 9.376300000000365e-05, 9.369400000000527e-05, 9.35000000000033e-05, 9.390199999999987e-05, 9.387500000000021e-05, 9.393099999999849e-05, 9.323699999999602e-05, 9.331900000000143e-05, 9.220899999999588e-05, 9.388899999999978e-05, 9.376400000000312e-05, 9.395800000000509e-05, 9.341600000000588e-05, 9.273600000000298e-05, 9.305600000000108e-05, 9.241600000000488e-05, 9.361100000000039e-05, 9.301399999999543e-05, 9.313799999999955e-05, 9.38330000000015e-05, 9.345799999999765e-05, 9.340299999999885e-05, 9.363899999999953e-05, 9.309700000000032e-05, 9.379100000000279e-05, 9.343000000000545e-05, 9.386100000000064e-05, 9.375000000000355e-05, 9.325000000000305e-05, 9.302800000000194e-05, 9.334700000000057e-05, 9.312499999999946e-05, 9.320800000000434e-05, 9.341699999999842e-05, 9.322299999999645e-05, 9.355499999999517e-05, 9.386200000000011e-05, 9.315199999999912e-05, 9.362499999999996e-05, 9.248600000000273e-05, 9.355600000000158e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.409" endtime="20201030 10:59:51.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.397" endtime="20201030 10:59:51.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.425" endtime="20201030 10:59:51.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.420" endtime="20201030 10:59:51.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.417" endtime="20201030 10:59:51.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.930" endtime="20201030 10:59:51.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.928" endtime="20201030 10:59:51.450"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.473" endtime="20201030 10:59:51.491"></status>
</kw>
<msg timestamp="20201030 10:59:51.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.469" endtime="20201030 10:59:51.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.495" endtime="20201030 10:59:51.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.501" endtime="20201030 10:59:51.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.462" endtime="20201030 10:59:51.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.457" endtime="20201030 10:59:51.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.525" endtime="20201030 10:59:51.863"></status>
</kw>
<msg timestamp="20201030 10:59:51.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039367944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.522" endtime="20201030 10:59:51.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039367944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.873" endtime="20201030 10:59:51.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.891" endtime="20201030 10:59:51.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.514" endtime="20201030 10:59:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.510" endtime="20201030 10:59:51.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.908" level="INFO">${RESULT} = [{'diff': 9.369499999999781e-05}, {'diff': 9.475000000000455e-05}, {'diff': 9.426400000000362e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.491600000000044e-05}, {'diff': 9.457000000000215e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:51.900" endtime="20201030 10:59:51.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.917" level="INFO">${ACCURACY} = {'diff': [9.369499999999781e-05, 9.475000000000455e-05, 9.426400000000362e-05, 9.367999999999876e-05, 9.491600000000044e-05, 9.457000000000215e-05, 9.330499999999492e-05, 9.322200000000391e-05, 9.3999...</msg>
<status status="PASS" starttime="20201030 10:59:51.910" endtime="20201030 10:59:51.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.928" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.926" endtime="20201030 10:59:51.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.934" level="INFO">VALUE: [9.369499999999781e-05, 9.475000000000455e-05, 9.426400000000362e-05, 9.367999999999876e-05, 9.491600000000044e-05, 9.457000000000215e-05, 9.330499999999492e-05, 9.322200000000391e-05, 9.399999999999686e-05, 9.474999999999761e-05, 9.341700000000536e-05, 9.411100000000089e-05, 9.445899999999813e-05, 9.442999999999951e-05, 9.420899999999788e-05, 9.406900000000218e-05, 9.467999999999976e-05, 9.462500000000096e-05, 9.440200000000037e-05, 9.318099999999774e-05, 9.426400000000362e-05, 9.325000000000305e-05, 9.477800000000369e-05, 9.413900000000003e-05, 9.437499999999377e-05, 9.442999999999951e-05, 9.430600000000233e-05, 9.413900000000003e-05, 9.354100000000254e-05, 9.436100000000114e-05, 9.427799999999625e-05, 9.45130000000044e-05, 9.343099999999799e-05, 9.427800000000319e-05, 9.401400000000337e-05, 9.43059999999954e-05, 9.404100000000304e-05, 9.354200000000201e-05, 9.474999999999761e-05, 9.307000000000065e-05, 9.441699999999942e-05, 9.377800000000269e-05, 9.458300000000225e-05, 9.43200000000019e-05, 9.308299999999381e-05, 9.304199999999457e-05, 9.481899999999599e-05, 9.343100000000493e-05, 9.406999999999471e-05, 9.302800000000194e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.930" endtime="20201030 10:59:51.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.919" endtime="20201030 10:59:51.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.946" endtime="20201030 10:59:51.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.942" endtime="20201030 10:59:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.939" endtime="20201030 10:59:51.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.452" endtime="20201030 10:59:51.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.451" endtime="20201030 10:59:51.971"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.994" endtime="20201030 10:59:52.016"></status>
</kw>
<msg timestamp="20201030 10:59:52.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.991" endtime="20201030 10:59:52.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.019" endtime="20201030 10:59:52.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.025" endtime="20201030 10:59:52.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.983" endtime="20201030 10:59:52.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.977" endtime="20201030 10:59:52.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.049" endtime="20201030 10:59:52.392"></status>
</kw>
<msg timestamp="20201030 10:59:52.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.045" endtime="20201030 10:59:52.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.401" endtime="20201030 10:59:52.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.420" endtime="20201030 10:59:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.038" endtime="20201030 10:59:52.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.033" endtime="20201030 10:59:52.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.437" level="INFO">${RESULT} = [{'diff': 9.544400000000008e-05}, {'diff': 9.404199999999557e-05}, {'diff': 9.409699999999438e-05}, {'diff': 9.431900000000243e-05}, {'diff': 9.518099999999974e-05}, {'diff': 9.456899999999574e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:52.429" endtime="20201030 10:59:52.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.446" level="INFO">${ACCURACY} = {'diff': [9.544400000000008e-05, 9.404199999999557e-05, 9.409699999999438e-05, 9.431900000000243e-05, 9.518099999999974e-05, 9.456899999999574e-05, 9.411100000000089e-05, 9.461100000000139e-05, 9.4500...</msg>
<status status="PASS" starttime="20201030 10:59:52.439" endtime="20201030 10:59:52.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.457" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.455" endtime="20201030 10:59:52.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.463" level="INFO">VALUE: [9.544400000000008e-05, 9.404199999999557e-05, 9.409699999999438e-05, 9.431900000000243e-05, 9.518099999999974e-05, 9.456899999999574e-05, 9.411100000000089e-05, 9.461100000000139e-05, 9.45000000000043e-05, 9.401399999999643e-05, 9.586100000000264e-05, 9.437500000000071e-05, 9.491600000000044e-05, 9.499999999999786e-05, 9.549999999999836e-05, 9.408300000000175e-05, 9.594500000000006e-05, 9.425000000000405e-05, 9.497200000000566e-05, 9.419500000000525e-05, 9.451400000000387e-05, 9.45000000000043e-05, 9.568100000000024e-05, 9.444399999999908e-05, 9.570899999999938e-05, 9.475000000000455e-05, 9.516699999999323e-05, 9.472199999999847e-05, 9.505599999999614e-05, 9.437500000000071e-05, 9.583299999999656e-05, 9.488900000000078e-05, 9.537500000000171e-05, 9.595899999999963e-05, 9.449999999999736e-05, 9.474999999999761e-05, 9.440299999999985e-05, 9.580600000000383e-05, 9.423599999999754e-05, 9.452800000000344e-05, 9.512500000000146e-05, 9.401399999999643e-05, 9.43200000000019e-05, 9.419499999999831e-05, 9.455600000000258e-05, 9.579100000000479e-05, 9.534800000000204e-05, 9.461100000000139e-05, 9.495799999999915e-05, 9.502699999999753e-05]</msg>
<status status="PASS" starttime="20201030 10:59:52.460" endtime="20201030 10:59:52.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.448" endtime="20201030 10:59:52.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.476" endtime="20201030 10:59:52.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.471" endtime="20201030 10:59:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.468" endtime="20201030 10:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.973" endtime="20201030 10:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.972" endtime="20201030 10:59:52.502"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.524" endtime="20201030 10:59:52.543"></status>
</kw>
<msg timestamp="20201030 10:59:52.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.521" endtime="20201030 10:59:52.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.546" endtime="20201030 10:59:52.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.553" endtime="20201030 10:59:52.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.514" endtime="20201030 10:59:52.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.508" endtime="20201030 10:59:52.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.577" endtime="20201030 10:59:52.923"></status>
</kw>
<msg timestamp="20201030 10:59:52.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039251958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.574" endtime="20201030 10:59:52.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039156361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039251958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.933" endtime="20201030 10:59:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.951" endtime="20201030 10:59:52.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.567" endtime="20201030 10:59:52.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.562" endtime="20201030 10:59:52.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.968" level="INFO">${RESULT} = [{'diff': 9.559700000000282e-05}, {'diff': 9.568100000000024e-05}, {'diff': 9.533400000000247e-05}, {'diff': 9.50000000000048e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.53059999999964e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:52.960" endtime="20201030 10:59:52.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.979" level="INFO">${ACCURACY} = {'diff': [9.559700000000282e-05, 9.568100000000024e-05, 9.533400000000247e-05, 9.50000000000048e-05, 9.674999999999961e-05, 9.53059999999964e-05, 9.534700000000257e-05, 9.540300000000085e-05, 9.575000...</msg>
<status status="PASS" starttime="20201030 10:59:52.970" endtime="20201030 10:59:52.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.990" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.987" endtime="20201030 10:59:52.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.995" level="INFO">VALUE: [9.559700000000282e-05, 9.568100000000024e-05, 9.533400000000247e-05, 9.50000000000048e-05, 9.674999999999961e-05, 9.53059999999964e-05, 9.534700000000257e-05, 9.540300000000085e-05, 9.575000000000555e-05, 9.509800000000179e-05, 9.556899999999674e-05, 9.59859999999993e-05, 9.687500000000321e-05, 9.584700000000307e-05, 9.63200000000039e-05, 9.515199999999419e-05, 9.59859999999993e-05, 9.65409999999986e-05, 9.558400000000272e-05, 9.57079999999999e-05, 9.647200000000022e-05, 9.511100000000189e-05, 9.622199999999997e-05, 9.536100000000214e-05, 9.57079999999999e-05, 9.595899999999963e-05, 9.56939999999934e-05, 9.51660000000007e-05, 9.506999999999571e-05, 9.629099999999835e-05, 9.551400000000487e-05, 9.676399999999918e-05, 9.54859999999988e-05, 9.561099999999545e-05, 9.6333000000004e-05, 9.695799999999422e-05, 9.51530000000006e-05, 9.534699999999563e-05, 9.534800000000204e-05, 9.54859999999988e-05, 9.686100000000364e-05, 9.51530000000006e-05, 9.661099999999645e-05, 9.507000000000265e-05, 9.622299999999945e-05, 9.518100000000668e-05, 9.597199999999972e-05, 9.569499999999981e-05, 9.55130000000054e-05, 9.561100000000239e-05]</msg>
<status status="PASS" starttime="20201030 10:59:52.992" endtime="20201030 10:59:52.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.981" endtime="20201030 10:59:52.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.007" endtime="20201030 10:59:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.003" endtime="20201030 10:59:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.001" endtime="20201030 10:59:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.504" endtime="20201030 10:59:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.502" endtime="20201030 10:59:53.033"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.055" endtime="20201030 10:59:53.076"></status>
</kw>
<msg timestamp="20201030 10:59:53.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.052" endtime="20201030 10:59:53.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.079" endtime="20201030 10:59:53.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.085" endtime="20201030 10:59:53.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.045" endtime="20201030 10:59:53.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.039" endtime="20201030 10:59:53.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.109" endtime="20201030 10:59:53.457"></status>
</kw>
<msg timestamp="20201030 10:59:53.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039744236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.105" endtime="20201030 10:59:53.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039744236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.467" endtime="20201030 10:59:53.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.489" endtime="20201030 10:59:53.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.098" endtime="20201030 10:59:53.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.093" endtime="20201030 10:59:53.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:53.508" level="INFO">${RESULT} = [{'diff': 9.68330000000045e-05}, {'diff': 9.605499999999767e-05}, {'diff': 9.608300000000375e-05}, {'diff': 9.605600000000408e-05}, {'diff': 9.658299999999731e-05}, {'diff': 9.662499999999602e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:53.500" endtime="20201030 10:59:53.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:53.519" level="INFO">${ACCURACY} = {'diff': [9.68330000000045e-05, 9.605499999999767e-05, 9.608300000000375e-05, 9.605600000000408e-05, 9.658299999999731e-05, 9.662499999999602e-05, 9.609699999999638e-05, 9.662500000000296e-05, 9.69439...</msg>
<status status="PASS" starttime="20201030 10:59:53.510" endtime="20201030 10:59:53.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.530" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:59:53.528" endtime="20201030 10:59:53.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.536" level="INFO">VALUE: [9.68330000000045e-05, 9.605499999999767e-05, 9.608300000000375e-05, 9.605600000000408e-05, 9.658299999999731e-05, 9.662499999999602e-05, 9.609699999999638e-05, 9.662500000000296e-05, 9.694399999999465e-05, 9.634699999999663e-05, 9.636100000000314e-05, 9.602800000000494e-05, 9.668100000000124e-05, 9.63059999999974e-05, 9.6027999999998e-05, 9.695900000000063e-05, 9.65279999999985e-05, 9.612500000000246e-05, 9.676399999999918e-05, 9.633299999999706e-05, 9.669400000000133e-05, 9.741600000000294e-05, 9.627800000000519e-05, 9.60409999999981e-05, 9.61530000000016e-05, 9.763900000000353e-05, 9.612500000000246e-05, 9.60000000000058e-05, 9.665200000000262e-05, 9.676400000000612e-05, 9.676400000000612e-05, 9.64859999999998e-05, 9.683399999999703e-05, 9.656999999999721e-05, 9.679199999999832e-05, 9.605500000000461e-05, 9.691700000000192e-05, 9.647200000000022e-05, 9.644400000000108e-05, 9.69860000000003e-05, 9.674999999999961e-05, 9.667999999999483e-05, 9.686100000000364e-05, 9.641700000000142e-05, 9.627799999999825e-05, 9.694400000000158e-05, 9.620899999999988e-05, 9.690300000000235e-05, 9.672200000000047e-05, 9.674999999999961e-05]</msg>
<status status="PASS" starttime="20201030 10:59:53.533" endtime="20201030 10:59:53.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.521" endtime="20201030 10:59:53.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.548" endtime="20201030 10:59:53.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.544" endtime="20201030 10:59:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.541" endtime="20201030 10:59:53.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.035" endtime="20201030 10:59:53.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.034" endtime="20201030 10:59:53.574"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.598" endtime="20201030 10:59:53.619"></status>
</kw>
<msg timestamp="20201030 10:59:53.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.594" endtime="20201030 10:59:53.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.622" endtime="20201030 10:59:53.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.628" endtime="20201030 10:59:53.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.587" endtime="20201030 10:59:53.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.580" endtime="20201030 10:59:53.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.652" endtime="20201030 10:59:53.993"></status>
</kw>
<msg timestamp="20201030 10:59:54.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.648" endtime="20201030 10:59:54.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.002" endtime="20201030 10:59:54.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.021" endtime="20201030 10:59:54.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.641" endtime="20201030 10:59:54.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.636" endtime="20201030 10:59:54.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.038" level="INFO">${RESULT} = [{'diff': 9.791700000000292e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.78059999999989e-05}, {'diff': 9.733399999999753e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.737500000000371e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:54.029" endtime="20201030 10:59:54.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.047" level="INFO">${ACCURACY} = {'diff': [9.791700000000292e-05, 9.773600000000104e-05, 9.78059999999989e-05, 9.733399999999753e-05, 9.723600000000054e-05, 9.737500000000371e-05, 9.733299999999806e-05, 9.791699999999598e-05, 9.78610...</msg>
<status status="PASS" starttime="20201030 10:59:54.040" endtime="20201030 10:59:54.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.058" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.056" endtime="20201030 10:59:54.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.063" level="INFO">VALUE: [9.791700000000292e-05, 9.773600000000104e-05, 9.78059999999989e-05, 9.733399999999753e-05, 9.723600000000054e-05, 9.737500000000371e-05, 9.733299999999806e-05, 9.791699999999598e-05, 9.786100000000464e-05, 9.756899999999874e-05, 9.71660000000027e-05, 9.715200000000312e-05, 9.762500000000396e-05, 9.71660000000027e-05, 9.738900000000328e-05, 9.705599999999814e-05, 9.69860000000003e-05, 9.745799999999472e-05, 9.791699999999598e-05, 9.781899999999899e-05, 9.716699999999523e-05, 9.784699999999813e-05, 9.740300000000285e-05, 9.736100000000414e-05, 9.751399999999993e-05, 9.707000000000465e-05, 9.777700000000028e-05, 9.761100000000439e-05, 9.74860000000008e-05, 9.73059999999984e-05, 9.783299999999856e-05, 9.715200000000312e-05, 9.74860000000008e-05, 9.788899999999684e-05, 9.733299999999806e-05, 9.779199999999932e-05, 9.69860000000003e-05, 9.712499999999652e-05, 9.738900000000328e-05, 9.751399999999993e-05, 9.743000000000251e-05, 9.745800000000165e-05, 9.792999999999608e-05, 9.729199999999882e-05, 9.722200000000097e-05, 9.763800000000405e-05, 9.751300000000046e-05, 9.747200000000122e-05, 9.761100000000439e-05, 9.72080000000014e-05]</msg>
<status status="PASS" starttime="20201030 10:59:54.060" endtime="20201030 10:59:54.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.049" endtime="20201030 10:59:54.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.076" endtime="20201030 10:59:54.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.072" endtime="20201030 10:59:54.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.069" endtime="20201030 10:59:54.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.576" endtime="20201030 10:59:54.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.575" endtime="20201030 10:59:54.101"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.123" endtime="20201030 10:59:54.144"></status>
</kw>
<msg timestamp="20201030 10:59:54.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.120" endtime="20201030 10:59:54.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.147" endtime="20201030 10:59:54.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.153" endtime="20201030 10:59:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.113" endtime="20201030 10:59:54.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.107" endtime="20201030 10:59:54.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.176" endtime="20201030 10:59:54.510"></status>
</kw>
<msg timestamp="20201030 10:59:54.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040894264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.173" endtime="20201030 10:59:54.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040894264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.520" endtime="20201030 10:59:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.538" endtime="20201030 10:59:54.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.166" endtime="20201030 10:59:54.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.161" endtime="20201030 10:59:54.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.556" level="INFO">${RESULT} = [{'diff': 9.868000000000376e-05}, {'diff': 9.891699999999698e-05}, {'diff': 9.855599999999964e-05}, {'diff': 9.863899999999759e-05}, {'diff': 9.808400000000522e-05}, {'diff': 9.809699999999838e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:54.547" endtime="20201030 10:59:54.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.565" level="INFO">${ACCURACY} = {'diff': [9.868000000000376e-05, 9.891699999999698e-05, 9.855599999999964e-05, 9.863899999999759e-05, 9.808400000000522e-05, 9.809699999999838e-05, 9.93479999999991e-05, 9.806999999999871e-05, 9.85000...</msg>
<status status="PASS" starttime="20201030 10:59:54.558" endtime="20201030 10:59:54.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.575" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.573" endtime="20201030 10:59:54.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.581" level="INFO">VALUE: [9.868000000000376e-05, 9.891699999999698e-05, 9.855599999999964e-05, 9.863899999999759e-05, 9.808400000000522e-05, 9.809699999999838e-05, 9.93479999999991e-05, 9.806999999999871e-05, 9.850000000000136e-05, 9.825000000000111e-05, 9.917999999999733e-05, 9.827800000000025e-05, 9.897200000000272e-05, 9.890199999999794e-05, 9.927800000000125e-05, 9.873600000000204e-05, 9.847199999999529e-05, 9.838900000000428e-05, 9.887499999999827e-05, 9.809700000000532e-05, 9.897199999999579e-05, 9.848700000000127e-05, 9.838899999999734e-05, 9.858299999999931e-05, 9.881899999999999e-05, 9.900000000000186e-05, 9.829100000000035e-05, 9.987499999999927e-05, 9.829199999999982e-05, 9.858399999999878e-05, 9.829199999999982e-05, 9.877800000000075e-05, 9.800000000000086e-05, 9.95280000000015e-05, 9.97080000000039e-05, 9.834699999999863e-05, 9.945900000000313e-05, 9.893100000000349e-05, 9.851300000000146e-05, 9.840299999999691e-05, 9.898700000000177e-05, 9.81660000000037e-05, 9.879200000000032e-05, 9.959699999999988e-05, 9.897199999999579e-05, 9.855599999999964e-05, 9.980599999999396e-05, 9.876400000000118e-05, 9.844400000000308e-05, 9.8028e-05]</msg>
<status status="PASS" starttime="20201030 10:59:54.578" endtime="20201030 10:59:54.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.567" endtime="20201030 10:59:54.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.600" endtime="20201030 10:59:54.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.594" endtime="20201030 10:59:54.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.591" endtime="20201030 10:59:54.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.103" endtime="20201030 10:59:54.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.102" endtime="20201030 10:59:54.625"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.649" endtime="20201030 10:59:54.670"></status>
</kw>
<msg timestamp="20201030 10:59:54.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.645" endtime="20201030 10:59:54.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.673" endtime="20201030 10:59:54.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.679" endtime="20201030 10:59:54.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.638" endtime="20201030 10:59:54.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.632" endtime="20201030 10:59:54.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.702" endtime="20201030 10:59:55.051"></status>
</kw>
<msg timestamp="20201030 10:59:55.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.699" endtime="20201030 10:59:55.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.060" endtime="20201030 10:59:55.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.079" endtime="20201030 10:59:55.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.692" endtime="20201030 10:59:55.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.687" endtime="20201030 10:59:55.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.096" level="INFO">${RESULT} = [{'diff': 9.969499999999687e-05}, {'diff': 0.00010108400000000128}, {'diff': 9.933300000000006e-05}, {'diff': 9.98479999999996e-05}, {'diff': 9.906900000000024e-05}, {'diff': 9.93609999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:55.087" endtime="20201030 10:59:55.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.106" level="INFO">${ACCURACY} = {'diff': [9.969499999999687e-05, 0.00010108400000000128, 9.933300000000006e-05, 9.98479999999996e-05, 9.906900000000024e-05, 9.93609999999992e-05, 9.961099999999945e-05, 9.912499999999852e-05, 9.94450...</msg>
<status status="PASS" starttime="20201030 10:59:55.098" endtime="20201030 10:59:55.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.117" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.115" endtime="20201030 10:59:55.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.122" level="INFO">VALUE: [9.969499999999687e-05, 0.00010108400000000128, 9.933300000000006e-05, 9.98479999999996e-05, 9.906900000000024e-05, 9.93609999999992e-05, 9.961099999999945e-05, 9.912499999999852e-05, 9.944500000000356e-05, 9.98060000000009e-05, 9.962499999999902e-05, 9.957000000000021e-05, 9.96530000000051e-05, 9.963899999999859e-05, 9.980500000000142e-05, 9.913900000000503e-05, 9.997199999999679e-05, 9.945799999999672e-05, 9.922200000000297e-05, 9.977800000000175e-05, 9.95280000000015e-05, 9.958300000000031e-05, 9.952699999999509e-05, 0.0001005410000000026, 9.930599999999346e-05, 9.98609999999997e-05, 9.986199999999917e-05, 0.00010047200000000422, 9.963899999999859e-05, 9.975000000000261e-05, 9.988899999999884e-05, 9.926400000000168e-05, 0.00010000000000000286, 9.944400000000408e-05, 9.915299999999766e-05, 9.927800000000125e-05, 0.00010041699999999848, 9.92359999999956e-05, 9.933300000000006e-05, 9.98609999999997e-05, 0.00010029199999999489, 0.00010067999999999883, 9.979200000000132e-05, 0.00010084700000000113, 9.990199999999894e-05, 9.957000000000021e-05, 9.940299999999791e-05, 9.940299999999791e-05, 9.994399999999765e-05, 9.999999999999593e-05]</msg>
<status status="PASS" starttime="20201030 10:59:55.119" endtime="20201030 10:59:55.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.108" endtime="20201030 10:59:55.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.135" endtime="20201030 10:59:55.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.131" endtime="20201030 10:59:55.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.128" endtime="20201030 10:59:55.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.627" endtime="20201030 10:59:55.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.626" endtime="20201030 10:59:55.160"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.183" endtime="20201030 10:59:55.203"></status>
</kw>
<msg timestamp="20201030 10:59:55.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.179" endtime="20201030 10:59:55.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.207" endtime="20201030 10:59:55.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.213" endtime="20201030 10:59:55.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.172" endtime="20201030 10:59:55.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.166" endtime="20201030 10:59:55.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.236" endtime="20201030 10:59:55.582"></status>
</kw>
<msg timestamp="20201030 10:59:55.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039695903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.233" endtime="20201030 10:59:55.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039695903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.591" endtime="20201030 10:59:55.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.609" endtime="20201030 10:59:55.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.226" endtime="20201030 10:59:55.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.221" endtime="20201030 10:59:55.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.626" level="INFO">${RESULT} = [{'diff': 0.00010049999999999643}, {'diff': 0.00010065199999999969}, {'diff': 0.00010073699999999658}, {'diff': 0.00010050000000000336}, {'diff': 0.00010066699999999873}, {'diff': 0.000102027999999997...</msg>
<status status="PASS" starttime="20201030 10:59:55.617" endtime="20201030 10:59:55.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.637" level="INFO">${ACCURACY} = {'diff': [0.00010049999999999643, 0.00010065199999999969, 0.00010073699999999658, 0.00010050000000000336, 0.00010066699999999873, 0.00010202799999999707, 0.00010015199999999919, 0.00010154200000000307...</msg>
<status status="PASS" starttime="20201030 10:59:55.628" endtime="20201030 10:59:55.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.648" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.645" endtime="20201030 10:59:55.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.654" level="INFO">VALUE: [0.00010049999999999643, 0.00010065199999999969, 0.00010073699999999658, 0.00010050000000000336, 0.00010066699999999873, 0.00010202799999999707, 0.00010015199999999919, 0.00010154200000000307, 0.0001007080000000049, 0.00010009700000000038, 0.00010027699999999584, 0.00010072200000000447, 0.00010124999999999718, 0.00010095800000000515, 0.00010045800000000465, 0.00010095899999999769, 0.0001012359999999976, 0.0001003610000000002, 0.00010079200000000232, 0.00010061099999999351, 0.0001019730000000052, 0.0001005280000000025, 0.0001020689999999963, 0.00010059700000000088, 0.00010030499999999498, 0.0001009159999999995, 9.997199999999679e-05, 0.00010088800000000037, 0.00010094499999999812, 0.0001001809999999978, 0.0001020139999999975, 0.0001009159999999995, 0.00010201400000000443, 0.00010029200000000182, 0.00010008300000000081, 0.00010061100000000045, 0.00010061100000000045, 0.00010023600000000354, 0.0001003060000000014, 0.00010070900000000438, 0.00010022299999999651, 0.00010062500000000002, 0.00010079100000000285, 0.00010069400000000533, 0.00010094499999999812, 0.00010072199999999754, 0.00010025000000000311, 0.00010094399999999865, 0.00010033300000000106, 0.00010113900000000009]</msg>
<status status="PASS" starttime="20201030 10:59:55.650" endtime="20201030 10:59:55.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.639" endtime="20201030 10:59:55.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.667" endtime="20201030 10:59:55.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.662" endtime="20201030 10:59:55.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.660" endtime="20201030 10:59:55.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.162" endtime="20201030 10:59:55.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.161" endtime="20201030 10:59:55.692"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.715" endtime="20201030 10:59:55.734"></status>
</kw>
<msg timestamp="20201030 10:59:55.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.712" endtime="20201030 10:59:55.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.737" endtime="20201030 10:59:55.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.744" endtime="20201030 10:59:55.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.705" endtime="20201030 10:59:55.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.699" endtime="20201030 10:59:55.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.767" endtime="20201030 10:59:56.104"></status>
</kw>
<msg timestamp="20201030 10:59:56.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.763" endtime="20201030 10:59:56.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.113" endtime="20201030 10:59:56.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.132" endtime="20201030 10:59:56.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.756" endtime="20201030 10:59:56.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.752" endtime="20201030 10:59:56.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:56.149" level="INFO">${RESULT} = [{'diff': 0.00010238900000000134}, {'diff': 0.00010167999999999983}, {'diff': 0.00010252799999999757}, {'diff': 0.000101513999999997}, {'diff': 0.00010198599999999836}, {'diff': 0.0001018610000000017}...</msg>
<status status="PASS" starttime="20201030 10:59:56.140" endtime="20201030 10:59:56.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:56.158" level="INFO">${ACCURACY} = {'diff': [0.00010238900000000134, 0.00010167999999999983, 0.00010252799999999757, 0.000101513999999997, 0.00010198599999999836, 0.0001018610000000017, 0.00010170899999999844, 0.00010191699999999998, 0...</msg>
<status status="PASS" starttime="20201030 10:59:56.151" endtime="20201030 10:59:56.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.168" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:59:56.166" endtime="20201030 10:59:56.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.174" level="INFO">VALUE: [0.00010238900000000134, 0.00010167999999999983, 0.00010252799999999757, 0.000101513999999997, 0.00010198599999999836, 0.0001018610000000017, 0.00010170899999999844, 0.00010191699999999998, 0.00010272199999999954, 0.00010213900000000109, 0.00010131899999999555, 0.00010174999999999768, 0.00010255499999999723, 0.0001018060000000029, 0.0001013610000000012, 0.00010134700000000163, 0.0001013480000000011, 0.00010170799999999897, 0.0001027359999999991, 0.00010143099999999905, 0.00010244499999999962, 0.00010140299999999991, 0.00010106900000000224, 0.00010112500000000052, 0.00010205499999999673, 0.00010276400000000518, 0.00010145799999999872, 0.00010122199999999804, 0.00010197299999999826, 0.00010129199999999589, 0.00010195799999999922, 0.00010126400000000368, 0.00010163900000000059, 0.00010155600000000264, 0.00010154199999999614, 0.00010165200000000069, 0.00010216600000000076, 0.00010244499999999962, 0.00010108300000000181, 0.00010238900000000134, 0.0001022359999999986, 0.00010187500000000127, 0.00010122299999999751, 0.0001021939999999999, 0.00010155600000000264, 0.00010104200000000257, 0.00010159700000000188, 0.00010123699999999708, 0.00010195799999999922, 0.00010161099999999451]</msg>
<status status="PASS" starttime="20201030 10:59:56.171" endtime="20201030 10:59:56.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.159" endtime="20201030 10:59:56.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:56.186" endtime="20201030 10:59:56.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.182" endtime="20201030 10:59:56.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.179" endtime="20201030 10:59:56.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.694" endtime="20201030 10:59:56.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.693" endtime="20201030 10:59:56.211"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.233" endtime="20201030 10:59:56.258"></status>
</kw>
<msg timestamp="20201030 10:59:56.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.230" endtime="20201030 10:59:56.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.262" endtime="20201030 10:59:56.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.268" endtime="20201030 10:59:56.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.223" endtime="20201030 10:59:56.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.217" endtime="20201030 10:59:56.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.291" endtime="20201030 10:59:56.625"></status>
</kw>
<msg timestamp="20201030 10:59:56.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045130889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.288" endtime="20201030 10:59:56.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045130889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.635" endtime="20201030 10:59:56.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.653" endtime="20201030 10:59:56.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.281" endtime="20201030 10:59:56.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.276" endtime="20201030 10:59:56.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:56.670" level="INFO">${RESULT} = [{'diff': 0.00010384699999999719}, {'diff': 0.00010245899999999919}, {'diff': 0.00010359799999999642}, {'diff': 0.00010337500000000277}, {'diff': 0.00010290200000000194}, {'diff': 0.000103152000000002...</msg>
<status status="PASS" starttime="20201030 10:59:56.661" endtime="20201030 10:59:56.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:56.679" level="INFO">${ACCURACY} = {'diff': [0.00010384699999999719, 0.00010245899999999919, 0.00010359799999999642, 0.00010337500000000277, 0.00010290200000000194, 0.00010315200000000219, 0.0001023060000000034, 0.00010245799999999972,...</msg>
<status status="PASS" starttime="20201030 10:59:56.672" endtime="20201030 10:59:56.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.690" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:59:56.688" endtime="20201030 10:59:56.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.696" level="INFO">VALUE: [0.00010384699999999719, 0.00010245899999999919, 0.00010359799999999642, 0.00010337500000000277, 0.00010290200000000194, 0.00010315200000000219, 0.0001023060000000034, 0.00010245799999999972, 0.00010245899999999919, 0.00010266699999999379, 0.00010287500000000227, 0.00010274999999999868, 0.00010293000000000108, 0.00010234700000000263, 0.00010343000000000158, 0.0001038060000000049, 0.00010295800000000022, 0.00010404199999999864, 0.00010337500000000277, 0.00010262500000000202, 0.00010249999999999843, 0.00010279199999999739, 0.00010258300000000331, 0.00010337499999999583, 0.00010255499999999723, 0.00010294500000000012, 0.00010369500000000087, 0.00010255500000000417, 0.00010263800000000212, 0.00010206999999999578, 0.00010206900000000324, 0.00010297199999999979, 0.00010234700000000263, 0.00010316700000000123, 0.00010238900000000134, 0.00010259800000000235, 0.00010361099999999651, 0.0001024019999999945, 0.00010340300000000191, 0.0001021939999999999, 0.0001035559999999977, 0.00010218000000000033, 0.00010238800000000187, 0.00010270899999999944, 0.00010377799999999882, 0.00010365300000000216, 0.00010355499999999823, 0.00010281999999999653, 0.00010245899999999919, 0.00010247199999999929]</msg>
<status status="PASS" starttime="20201030 10:59:56.693" endtime="20201030 10:59:56.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.681" endtime="20201030 10:59:56.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:56.711" endtime="20201030 10:59:56.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.705" endtime="20201030 10:59:56.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.702" endtime="20201030 10:59:56.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.213" endtime="20201030 10:59:56.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.212" endtime="20201030 10:59:56.736"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.759" endtime="20201030 10:59:56.778"></status>
</kw>
<msg timestamp="20201030 10:59:56.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.755" endtime="20201030 10:59:56.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.781" endtime="20201030 10:59:56.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.787" endtime="20201030 10:59:56.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.748" endtime="20201030 10:59:56.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.742" endtime="20201030 10:59:56.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.811" endtime="20201030 10:59:57.144"></status>
</kw>
<msg timestamp="20201030 10:59:57.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039863014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.807" endtime="20201030 10:59:57.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039863014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.154" endtime="20201030 10:59:57.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.172" endtime="20201030 10:59:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.800" endtime="20201030 10:59:57.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.795" endtime="20201030 10:59:57.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.189" level="INFO">${RESULT} = [{'diff': 0.00010411100000000395}, {'diff': 0.00010334799999999617}, {'diff': 0.00010463899999999665}, {'diff': 0.00010448600000000086}, {'diff': 0.00010362499999999608}, {'diff': 0.000103860999999996...</msg>
<status status="PASS" starttime="20201030 10:59:57.180" endtime="20201030 10:59:57.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.199" level="INFO">${ACCURACY} = {'diff': [0.00010411100000000395, 0.00010334799999999617, 0.00010463899999999665, 0.00010448600000000086, 0.00010362499999999608, 0.00010386099999999676, 0.00010416700000000223, 0.00010467999999999589...</msg>
<status status="PASS" starttime="20201030 10:59:57.191" endtime="20201030 10:59:57.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.210" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.207" endtime="20201030 10:59:57.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.215" level="INFO">VALUE: [0.00010411100000000395, 0.00010334799999999617, 0.00010463899999999665, 0.00010448600000000086, 0.00010362499999999608, 0.00010386099999999676, 0.00010416700000000223, 0.00010467999999999589, 0.0001045689999999988, 0.00010334700000000363, 0.00010309800000000285, 0.00010387499999999633, 0.00010354199999999814, 0.00010476400000000025, 0.00010429199999999889, 0.00010461099999999751, 0.0001048610000000047, 0.00010420799999999453, 0.00010456999999999828, 0.00010361100000000345, 0.00010366699999999479, 0.00010408399999999735, 0.00010379200000000532, 0.00010374999999999968, 0.00010459699999999794, 0.00010462499999999708, 0.00010445900000000119, 0.00010481999999999853, 0.00010493100000000255, 0.00010347200000000029, 0.00010445900000000119, 0.00010383300000000456, 0.00010495900000000169, 0.00010381999999999753, 0.00010461100000000445, 0.00010452799999999957, 0.00010475000000000068, 0.00010437499999999683, 0.00010430499999999898, 0.0001043339999999976, 0.00010381999999999753, 0.000104514, 0.00010420799999999453, 0.00010480599999999896, 0.00010370799999999403, 0.00010399999999999993, 0.0001034019999999955, 0.00010407000000000471, 0.00010372200000000054, 0.00010312500000000252]</msg>
<status status="PASS" starttime="20201030 10:59:57.212" endtime="20201030 10:59:57.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.201" endtime="20201030 10:59:57.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.227" endtime="20201030 10:59:57.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.223" endtime="20201030 10:59:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.221" endtime="20201030 10:59:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.738" endtime="20201030 10:59:57.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.737" endtime="20201030 10:59:57.252"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.275" endtime="20201030 10:59:57.294"></status>
</kw>
<msg timestamp="20201030 10:59:57.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.272" endtime="20201030 10:59:57.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.298" endtime="20201030 10:59:57.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.304" endtime="20201030 10:59:57.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.265" endtime="20201030 10:59:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.259" endtime="20201030 10:59:57.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.327" endtime="20201030 10:59:57.660"></status>
</kw>
<msg timestamp="20201030 10:59:57.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.324" endtime="20201030 10:59:57.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039429056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.670" endtime="20201030 10:59:57.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.688" endtime="20201030 10:59:57.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.316" endtime="20201030 10:59:57.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.312" endtime="20201030 10:59:57.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.705" level="INFO">${RESULT} = [{'diff': 0.0001059160000000045}, {'diff': 0.00010530599999999946}, {'diff': 0.00010606999999999978}, {'diff': 0.00010565199999999775}, {'diff': 0.00010598599999999542}, {'diff': 0.0001044860000000008...</msg>
<status status="PASS" starttime="20201030 10:59:57.696" endtime="20201030 10:59:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.716" level="INFO">${ACCURACY} = {'diff': [0.0001059160000000045, 0.00010530599999999946, 0.00010606999999999978, 0.00010565199999999775, 0.00010598599999999542, 0.00010448600000000086, 0.00010490299999999647, 0.00010513899999999715,...</msg>
<status status="PASS" starttime="20201030 10:59:57.707" endtime="20201030 10:59:57.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.727" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.725" endtime="20201030 10:59:57.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.733" level="INFO">VALUE: [0.0001059160000000045, 0.00010530599999999946, 0.00010606999999999978, 0.00010565199999999775, 0.00010598599999999542, 0.00010448600000000086, 0.00010490299999999647, 0.00010513899999999715, 0.00010529099999999347, 0.00010559699999999894, 0.0001055689999999998, 0.00010584699999999919, 0.0001060560000000002, 0.00010548600000000186, 0.00010561099999999851, 0.0001053889999999974, 0.00010586099999999876, 0.00010533299999999912, 0.00010558299999999937, 0.00010548699999999439, 0.00010594400000000365, 0.00010498700000000083, 0.00010544399999999621, 0.00010426399999999975, 0.00010544400000000315, 0.00010612499999999858, 0.0001058889999999979, 0.00010430599999999846, 0.0001050140000000005, 0.0001058889999999979, 0.00010476400000000025, 0.00010481899999999905, 0.00010509699999999844, 0.00010447200000000129, 0.0001050559999999992, 0.00010526400000000075, 0.00010562499999999808, 0.0001055559999999997, 0.00010597199999999585, 0.00010519399999999596, 0.00010576400000000125, 0.00010515299999999672, 0.00010495800000000222, 0.00010440299999999597, 0.00010494400000000265, 0.00010465299999999622, 0.00010609799999999892, 0.00010540299999999697, 0.00010502799999999313, 0.00010525000000000118]</msg>
<status status="PASS" starttime="20201030 10:59:57.730" endtime="20201030 10:59:57.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.718" endtime="20201030 10:59:57.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.746" endtime="20201030 10:59:57.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.741" endtime="20201030 10:59:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.739" endtime="20201030 10:59:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.254" endtime="20201030 10:59:57.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.253" endtime="20201030 10:59:57.771"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.794" endtime="20201030 10:59:57.815"></status>
</kw>
<msg timestamp="20201030 10:59:57.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.791" endtime="20201030 10:59:57.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.818" endtime="20201030 10:59:57.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.824" endtime="20201030 10:59:57.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.783" endtime="20201030 10:59:57.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.777" endtime="20201030 10:59:57.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.847" endtime="20201030 10:59:58.197"></status>
</kw>
<msg timestamp="20201030 10:59:58.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039609861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.844" endtime="20201030 10:59:58.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039609861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.206" endtime="20201030 10:59:58.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.224" endtime="20201030 10:59:58.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.837" endtime="20201030 10:59:58.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.832" endtime="20201030 10:59:58.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:58.241" level="INFO">${RESULT} = [{'diff': 0.00010679200000000139}, {'diff': 0.00010643000000000458}, {'diff': 0.00010633300000000012}, {'diff': 0.00010709799999999992}, {'diff': 0.00010556999999999928}, {'diff': 0.000106347999999999...</msg>
<status status="PASS" starttime="20201030 10:59:58.233" endtime="20201030 10:59:58.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:58.250" level="INFO">${ACCURACY} = {'diff': [0.00010679200000000139, 0.00010643000000000458, 0.00010633300000000012, 0.00010709799999999992, 0.00010556999999999928, 0.00010634799999999917, 0.00010609699999999944, 0.00010608299999999987...</msg>
<status status="PASS" starttime="20201030 10:59:58.243" endtime="20201030 10:59:58.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.261" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:59:58.259" endtime="20201030 10:59:58.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.266" level="INFO">VALUE: [0.00010679200000000139, 0.00010643000000000458, 0.00010633300000000012, 0.00010709799999999992, 0.00010556999999999928, 0.00010634799999999917, 0.00010609699999999944, 0.00010608299999999987, 0.00010648600000000286, 0.00010679200000000139, 0.00010631900000000055, 0.00010620900000000294, 0.00010679200000000139, 0.00010647200000000329, 0.00010618099999999686, 0.00010650000000000243, 0.00010691700000000498, 0.00010583299999999962, 0.00010642999999999764, 0.00010665299999999822, 0.00010686099999999976, 0.00010681899999999411, 0.00010591699999999704, 0.00010636099999999926, 0.00010600000000000193, 0.00010620799999999653, 0.00010668099999999736, 0.00010631900000000055, 0.00010688900000000584, 0.00010629200000000089, 0.00010626400000000175, 0.00010657000000000028, 0.00010627800000000132, 0.00010580500000000048, 0.00010652700000000209, 0.0001068340000000001, 0.00010627800000000132, 0.00010633300000000012, 0.0001061810000000038, 0.00010636099999999926, 0.00010676400000000225, 0.00010616700000000423, 0.00010659699999999994, 0.00010629100000000141, 0.00010648600000000286, 0.00010681899999999411, 0.00010572300000000201, 0.00010626400000000175, 0.00010634699999999969, 0.0001063889999999984]</msg>
<status status="PASS" starttime="20201030 10:59:58.264" endtime="20201030 10:59:58.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.252" endtime="20201030 10:59:58.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:58.279" endtime="20201030 10:59:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.275" endtime="20201030 10:59:58.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.272" endtime="20201030 10:59:58.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.773" endtime="20201030 10:59:58.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.772" endtime="20201030 10:59:58.304"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.327" endtime="20201030 10:59:58.349"></status>
</kw>
<msg timestamp="20201030 10:59:58.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.323" endtime="20201030 10:59:58.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.353" endtime="20201030 10:59:58.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.359" endtime="20201030 10:59:58.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.316" endtime="20201030 10:59:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.311" endtime="20201030 10:59:58.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.382" endtime="20201030 10:59:58.728"></status>
</kw>
<msg timestamp="20201030 10:59:58.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041246778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.379" endtime="20201030 10:59:58.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041246778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.737" endtime="20201030 10:59:58.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.756" endtime="20201030 10:59:58.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.372" endtime="20201030 10:59:58.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.367" endtime="20201030 10:59:58.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:58.774" level="INFO">${RESULT} = [{'diff': 0.00010795899999999775}, {'diff': 0.00010747299999999682}, {'diff': 0.00010725000000000318}, {'diff': 0.00010636099999999926}, {'diff': 0.00010791699999999904}, {'diff': 0.000107985999999997...</msg>
<status status="PASS" starttime="20201030 10:59:58.765" endtime="20201030 10:59:58.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:58.783" level="INFO">${ACCURACY} = {'diff': [0.00010795899999999775, 0.00010747299999999682, 0.00010725000000000318, 0.00010636099999999926, 0.00010791699999999904, 0.00010798599999999742, 0.00010712499999999958, 0.00010743099999999811...</msg>
<status status="PASS" starttime="20201030 10:59:58.776" endtime="20201030 10:59:58.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.794" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:59:58.792" endtime="20201030 10:59:58.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.799" level="INFO">VALUE: [0.00010795899999999775, 0.00010747299999999682, 0.00010725000000000318, 0.00010636099999999926, 0.00010791699999999904, 0.00010798599999999742, 0.00010712499999999958, 0.00010743099999999811, 0.00010779099999999597, 0.00010707000000000078, 0.00010719499999999743, 0.00010748600000000386, 0.0001078889999999999, 0.00010751399999999606, 0.0001073340000000006, 0.0001077360000000041, 0.00010767999999999889, 0.00010770799999999803, 0.00010773599999999717, 0.00010798599999999742, 0.0001072219999999971, 0.00010788799999999349, 0.00010795899999999775, 0.00010751399999999606, 0.00010742999999999864, 0.0001080140000000035, 0.0001076940000000054, 0.00010786100000000076, 0.00010774999999999674, 0.00010758400000000085, 0.00010719500000000437, 0.00010727800000000232, 0.00010745900000000419, 0.00010787500000000033, 0.00010794499999999818, 0.00010801399999999656, 0.00010759700000000094, 0.00010715300000000566, 0.00010713899999999915, 0.00010797199999999785, 0.00010726399999999581, 0.00010793099999999861, 0.00010775000000000368, 0.00010729200000000189, 0.0001073889999999994, 0.0001072360000000036, 0.00010747199999999735, 0.00010762500000000008, 0.00010755500000000223, 0.00010763899999999965]</msg>
<status status="PASS" starttime="20201030 10:59:58.796" endtime="20201030 10:59:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.785" endtime="20201030 10:59:58.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:58.813" endtime="20201030 10:59:58.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.808" endtime="20201030 10:59:58.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.805" endtime="20201030 10:59:58.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.306" endtime="20201030 10:59:58.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.305" endtime="20201030 10:59:58.838"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.861" endtime="20201030 10:59:58.880"></status>
</kw>
<msg timestamp="20201030 10:59:58.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.858" endtime="20201030 10:59:58.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:58.884" endtime="20201030 10:59:58.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.890" endtime="20201030 10:59:58.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.851" endtime="20201030 10:59:58.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.845" endtime="20201030 10:59:58.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.913" endtime="20201030 10:59:59.247"></status>
</kw>
<msg timestamp="20201030 10:59:59.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039506972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039615417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:58.910" endtime="20201030 10:59:59.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039506972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039615417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.256" endtime="20201030 10:59:59.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.274" endtime="20201030 10:59:59.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.903" endtime="20201030 10:59:59.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.898" endtime="20201030 10:59:59.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:59.291" level="INFO">${RESULT} = [{'diff': 0.00010844499999999868}, {'diff': 0.00010868099999999936}, {'diff': 0.0001080690000000023}, {'diff': 0.0001083890000000004}, {'diff': 0.0001083890000000004}, {'diff': 0.00010818099999999886}...</msg>
<status status="PASS" starttime="20201030 10:59:59.283" endtime="20201030 10:59:59.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:59.302" level="INFO">${ACCURACY} = {'diff': [0.00010844499999999868, 0.00010868099999999936, 0.0001080690000000023, 0.0001083890000000004, 0.0001083890000000004, 0.00010818099999999886, 0.00010880500000000348, 0.00010797199999999785, 0...</msg>
<status status="PASS" starttime="20201030 10:59:59.293" endtime="20201030 10:59:59.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.312" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:59:59.310" endtime="20201030 10:59:59.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.318" level="INFO">VALUE: [0.00010844499999999868, 0.00010868099999999936, 0.0001080690000000023, 0.0001083890000000004, 0.0001083890000000004, 0.00010818099999999886, 0.00010880500000000348, 0.00010797199999999785, 0.00010844499999999868, 0.00010812500000000058, 0.0001085419999999962, 0.00010895799999999928, 0.00010863900000000065, 0.00010823599999999767, 0.00010881899999999611, 0.00010834700000000169, 0.00010820799999999853, 0.0001090140000000045, 0.00010822200000000504, 0.00010887499999999439, 0.00010907000000000278, 0.00010812500000000058, 0.00010784700000000119, 0.0001082219999999981, 0.00010869399999999946, 0.0001082769999999969, 0.00010880600000000296, 0.00010840299999999997, 0.00010786099999999382, 0.00010869399999999946, 0.00010833399999999466, 0.00010818099999999886, 0.00010830600000000246, 0.00010812499999999364, 0.00010897199999999885, 0.00010834699999999475, 0.00010890300000000047, 0.0001078889999999999, 0.00010851399999999706, 0.00010873599999999817, 0.00010823599999999767, 0.00010865300000000022, 0.00010872299999999807, 0.00010809700000000144, 0.0001082219999999981, 0.00010850000000000443, 0.00010836099999999432, 0.0001087219999999986, 0.00010865200000000075, 0.00010808400000000135]</msg>
<status status="PASS" starttime="20201030 10:59:59.315" endtime="20201030 10:59:59.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.303" endtime="20201030 10:59:59.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:59.330" endtime="20201030 10:59:59.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.326" endtime="20201030 10:59:59.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.323" endtime="20201030 10:59:59.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.841" endtime="20201030 10:59:59.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.839" endtime="20201030 10:59:59.355"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.378" endtime="20201030 10:59:59.397"></status>
</kw>
<msg timestamp="20201030 10:59:59.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.374" endtime="20201030 10:59:59.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.400" endtime="20201030 10:59:59.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.407" endtime="20201030 10:59:59.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.367" endtime="20201030 10:59:59.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.362" endtime="20201030 10:59:59.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.430" endtime="20201030 10:59:59.763"></status>
</kw>
<msg timestamp="20201030 10:59:59.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039347486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039457153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.426" endtime="20201030 10:59:59.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039347486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039457153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.772" endtime="20201030 10:59:59.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.791" endtime="20201030 10:59:59.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.419" endtime="20201030 10:59:59.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.415" endtime="20201030 10:59:59.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:59.809" level="INFO">${RESULT} = [{'diff': 0.00010966700000000079}, {'diff': 0.0001100419999999977}, {'diff': 0.0001098340000000031}, {'diff': 0.00010929099999999747}, {'diff': 0.00010937500000000183}, {'diff': 0.00010909700000000244...</msg>
<status status="PASS" starttime="20201030 10:59:59.800" endtime="20201030 10:59:59.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:59.820" level="INFO">${ACCURACY} = {'diff': [0.00010966700000000079, 0.0001100419999999977, 0.0001098340000000031, 0.00010929099999999747, 0.00010937500000000183, 0.00010909700000000244, 0.00010950000000000543, 0.00010997199999999985, ...</msg>
<status status="PASS" starttime="20201030 10:59:59.811" endtime="20201030 10:59:59.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.831" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:59:59.829" endtime="20201030 10:59:59.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.836" level="INFO">VALUE: [0.00010966700000000079, 0.0001100419999999977, 0.0001098340000000031, 0.00010929099999999747, 0.00010937500000000183, 0.00010909700000000244, 0.00010950000000000543, 0.00010997199999999985, 0.00011002799999999813, 0.00010943000000000064, 0.00010969499999999993, 0.00010963900000000165, 0.0001098890000000019, 0.00010941600000000107, 0.00010988899999999496, 0.0001092769999999979, 0.00010980600000000396, 0.00010926299999999833, 0.00010943100000000011, 0.0001088340000000021, 0.00010919399999999996, 0.00010931999999999609, 0.00010933299999999618, 0.00010952799999999763, 0.00010913899999999421, 0.00010899999999999799, 0.0001093890000000014, 0.00010995800000000028, 0.0001095419999999972, 0.00011002799999999813, 0.00011011099999999607, 0.0001092219999999991, 0.00010981900000000405, 0.00010948599999999892, 0.00011001399999999856, 0.00010980600000000396, 0.00010877800000000382, 0.000109208999999999, 0.00011005500000000473, 0.00011007000000000378, 0.00011011099999999607, 0.00010984700000000319, 0.00011008299999999693, 0.00010954200000000414, 0.00010925000000000518, 0.00010993100000000061, 0.00010947299999999882, 0.00010943000000000064, 0.00010945799999999978, 0.00010994500000000018]</msg>
<status status="PASS" starttime="20201030 10:59:59.833" endtime="20201030 10:59:59.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.822" endtime="20201030 10:59:59.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:59.852" endtime="20201030 10:59:59.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.848" endtime="20201030 10:59:59.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.845" endtime="20201030 10:59:59.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.357" endtime="20201030 10:59:59.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.356" endtime="20201030 10:59:59.877"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.900" endtime="20201030 10:59:59.919"></status>
</kw>
<msg timestamp="20201030 10:59:59.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.897" endtime="20201030 10:59:59.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.923" endtime="20201030 10:59:59.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.929" endtime="20201030 10:59:59.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.889" endtime="20201030 10:59:59.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.884" endtime="20201030 10:59:59.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.952" endtime="20201030 11:00:00.287"></status>
</kw>
<msg timestamp="20201030 11:00:00.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039570667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039681444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:59.949" endtime="20201030 11:00:00.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039570667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039681444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.297" endtime="20201030 11:00:00.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.315" endtime="20201030 11:00:00.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.942" endtime="20201030 11:00:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.937" endtime="20201030 11:00:00.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.332" level="INFO">${RESULT} = [{'diff': 0.00011077700000000634}, {'diff': 0.00011083300000000462}, {'diff': 0.0001107090000000005}, {'diff': 0.00011009700000000344}, {'diff': 0.00011029200000000489}, {'diff': 0.0001109579999999943...</msg>
<status status="PASS" starttime="20201030 11:00:00.324" endtime="20201030 11:00:00.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:00.341" level="INFO">${ACCURACY} = {'diff': [0.00011077700000000634, 0.00011083300000000462, 0.0001107090000000005, 0.00011009700000000344, 0.00011029200000000489, 0.00011095799999999434, 0.00011027799999999838, 0.00011101399999999956,...</msg>
<status status="PASS" starttime="20201030 11:00:00.334" endtime="20201030 11:00:00.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.352" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:00:00.350" endtime="20201030 11:00:00.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.357" level="INFO">VALUE: [0.00011077700000000634, 0.00011083300000000462, 0.0001107090000000005, 0.00011009700000000344, 0.00011029200000000489, 0.00011095799999999434, 0.00011027799999999838, 0.00011101399999999956, 0.00011093100000000161, 0.00011104099999999922, 0.00011083300000000462, 0.00011043000000000164, 0.00011033399999999666, 0.0001105549999999983, 0.00011033299999999718, 0.00011098600000000042, 0.0001107090000000005, 0.00011049999999999949, 0.00011079099999999897, 0.00011059700000000394, 0.00011051299999999958, 0.00011091700000000204, 0.00011043100000000111, 0.00011059700000000394, 0.00011074999999999974, 0.00011063899999999571, 0.00011052800000000557, 0.00011013900000000215, 0.00011036100000000326, 0.00011052799999999863, 0.00011047299999999982, 0.00011020800000000053, 0.00011065300000000222, 0.00011067999999999495, 0.00011047200000000035, 0.00011020800000000053, 0.00011080499999999854, 0.00011086099999999682, 0.00011029099999999847, 0.00011083399999999716, 0.00011054200000000514, 0.00011052700000000609, 0.00011036099999999632, 0.00011084699999999725, 0.00011061100000000351, 0.00011112500000000358, 0.00011009700000000344, 0.00011026299999999933, 0.00011026400000000575, 0.00011097200000000085]</msg>
<status status="PASS" starttime="20201030 11:00:00.354" endtime="20201030 11:00:00.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.343" endtime="20201030 11:00:00.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:00.370" endtime="20201030 11:00:00.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.365" endtime="20201030 11:00:00.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.363" endtime="20201030 11:00:00.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.879" endtime="20201030 11:00:00.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.878" endtime="20201030 11:00:00.395"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.417" endtime="20201030 11:00:00.438"></status>
</kw>
<msg timestamp="20201030 11:00:00.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.414" endtime="20201030 11:00:00.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.442" endtime="20201030 11:00:00.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.448" endtime="20201030 11:00:00.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.407" endtime="20201030 11:00:00.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.401" endtime="20201030 11:00:00.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.471" endtime="20201030 11:00:00.804"></status>
</kw>
<msg timestamp="20201030 11:00:00.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041103931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.468" endtime="20201030 11:00:00.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041103931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.814" endtime="20201030 11:00:00.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.833" endtime="20201030 11:00:00.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.461" endtime="20201030 11:00:00.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.456" endtime="20201030 11:00:00.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.851" level="INFO">${RESULT} = [{'diff': 0.00011158400000000485}, {'diff': 0.00011154099999999972}, {'diff': 0.00011129199999999895}, {'diff': 0.00011165300000000322}, {'diff': 0.00011130599999999852}, {'diff': 0.000111068999999998...</msg>
<status status="PASS" starttime="20201030 11:00:00.842" endtime="20201030 11:00:00.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:00.860" level="INFO">${ACCURACY} = {'diff': [0.00011158400000000485, 0.00011154099999999972, 0.00011129199999999895, 0.00011165300000000322, 0.00011130599999999852, 0.00011106899999999836, 0.00011175000000000074, 0.00011181899999999911...</msg>
<status status="PASS" starttime="20201030 11:00:00.853" endtime="20201030 11:00:00.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.870" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:00:00.868" endtime="20201030 11:00:00.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.876" level="INFO">VALUE: [0.00011158400000000485, 0.00011154099999999972, 0.00011129199999999895, 0.00011165300000000322, 0.00011130599999999852, 0.00011106899999999836, 0.00011175000000000074, 0.00011181899999999911, 0.0001114020000000035, 0.0001115690000000058, 0.00011150000000000049, 0.00011191700000000304, 0.00011161099999999757, 0.000111596999999998, 0.00011133300000000512, 0.00011118000000000239, 0.00011144400000000221, 0.00011159800000000442, 0.00011138899999999646, 0.00011125000000000024, 0.00011127799999999938, 0.00011175000000000074, 0.0001112220000000011, 0.00011126399999999981, 0.0001115549999999993, 0.00011184699999999825, 0.0001113890000000034, 0.00011209799999999798, 0.00011108299999999793, 0.00011190299999999653, 0.00011188899999999696, 0.00011133299999999818, 0.00011167999999999595, 0.00011169499999999499, 0.00011144400000000221, 0.00011179199999999945, 0.00011126399999999981, 0.00011147300000000082, 0.00011116700000000229, 0.00011137500000000383, 0.00011170800000000203, 0.0001113619999999968, 0.00011131900000000555, 0.00011147200000000135, 0.00011150000000000049, 0.0001112220000000011, 0.00011137500000000383, 0.00011184699999999825, 0.00011123600000000067, 0.00011181899999999911]</msg>
<status status="PASS" starttime="20201030 11:00:00.873" endtime="20201030 11:00:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.861" endtime="20201030 11:00:00.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:00.890" endtime="20201030 11:00:00.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.884" endtime="20201030 11:00:00.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.881" endtime="20201030 11:00:00.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.397" endtime="20201030 11:00:00.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.395" endtime="20201030 11:00:00.915"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.937" endtime="20201030 11:00:00.957"></status>
</kw>
<msg timestamp="20201030 11:00:00.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.934" endtime="20201030 11:00:00.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.960" endtime="20201030 11:00:00.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.966" endtime="20201030 11:00:00.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.927" endtime="20201030 11:00:00.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.921" endtime="20201030 11:00:00.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.990" endtime="20201030 11:00:01.324"></status>
</kw>
<msg timestamp="20201030 11:00:01.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039603431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.986" endtime="20201030 11:00:01.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039603431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:01.333" endtime="20201030 11:00:01.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:01.351" endtime="20201030 11:00:01.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.979" endtime="20201030 11:00:01.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.974" endtime="20201030 11:00:01.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:01.368" level="INFO">${RESULT} = [{'diff': 0.00011240300000000397}, {'diff': 0.00011206899999999936}, {'diff': 0.00011269400000000346}, {'diff': 0.00011238899999999746}, {'diff': 0.00011240300000000397}, {'diff': 0.000112610999999998...</msg>
<status status="PASS" starttime="20201030 11:00:01.359" endtime="20201030 11:00:01.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:01.382" level="INFO">${ACCURACY} = {'diff': [0.00011240300000000397, 0.00011206899999999936, 0.00011269400000000346, 0.00011238899999999746, 0.00011240300000000397, 0.00011261099999999857, 0.00011250000000000149, 0.00011247199999999541...</msg>
<status status="PASS" starttime="20201030 11:00:01.370" endtime="20201030 11:00:01.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.393" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:00:01.391" endtime="20201030 11:00:01.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.398" level="INFO">VALUE: [0.00011240300000000397, 0.00011206899999999936, 0.00011269400000000346, 0.00011238899999999746, 0.00011240300000000397, 0.00011261099999999857, 0.00011250000000000149, 0.00011247199999999541, 0.00011259700000000594, 0.0001127090000000025, 0.00011300000000000199, 0.00011262499999999814, 0.00011298599999999548, 0.00011248600000000192, 0.00011223600000000167, 0.00011217999999999645, 0.0001127220000000026, 0.0001122220000000021, 0.00011248699999999445, 0.00011223700000000114, 0.00011286100000000576, 0.00011223700000000114, 0.0001127499999999948, 0.00011266599999999738, 0.00011225000000000124, 0.00011265299999999728, 0.00011236200000000474, 0.00011226400000000081, 0.00011270800000000303, 0.00011300000000000199, 0.00011268000000000389, 0.00011269399999999652, 0.00011270799999999609, 0.00011284699999999925, 0.00011247300000000182, 0.00011269500000000293, 0.00011215300000000372, 0.00011212499999999764, 0.0001125560000000067, 0.00011250000000000149, 0.00011236099999999832, 0.00011212500000000458, 0.00011247199999999541, 0.00011293100000000361, 0.00011215199999999731, 0.00011230500000000004, 0.00011240299999999703, 0.00011258399999999891, 0.00011294400000000371, 0.00011301400000000156]</msg>
<status status="PASS" starttime="20201030 11:00:01.395" endtime="20201030 11:00:01.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.384" endtime="20201030 11:00:01.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:01.411" endtime="20201030 11:00:01.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.406" endtime="20201030 11:00:01.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.404" endtime="20201030 11:00:01.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.917" endtime="20201030 11:00:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.916" endtime="20201030 11:00:01.436"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:01.459" endtime="20201030 11:00:01.479"></status>
</kw>
<msg timestamp="20201030 11:00:01.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:01.455" endtime="20201030 11:00:01.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:01.482" endtime="20201030 11:00:01.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:01.488" endtime="20201030 11:00:01.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.448" endtime="20201030 11:00:01.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.442" endtime="20201030 11:00:01.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:01.511" endtime="20201030 11:00:01.857"></status>
</kw>
<msg timestamp="20201030 11:00:01.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039985792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:01.508" endtime="20201030 11:00:01.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039985792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:01.866" endtime="20201030 11:00:01.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:01.885" endtime="20201030 11:00:01.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.501" endtime="20201030 11:00:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.496" endtime="20201030 11:00:01.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:01.902" level="INFO">${RESULT} = [{'diff': 0.00011398599999999648}, {'diff': 0.00011377799999999494}, {'diff': 0.00011347200000000335}, {'diff': 0.00011327800000000138}, {'diff': 0.00011386099999999982}, {'diff': 0.000113708000000004...</msg>
<status status="PASS" starttime="20201030 11:00:01.893" endtime="20201030 11:00:01.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:01.986" level="INFO">${ACCURACY} = {'diff': [0.00011398599999999648, 0.00011377799999999494, 0.00011347200000000335, 0.00011327800000000138, 0.00011386099999999982, 0.00011370800000000403, 0.00011399999999999605, 0.00011386099999999982...</msg>
<status status="PASS" starttime="20201030 11:00:01.904" endtime="20201030 11:00:01.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:01.997" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:00:01.995" endtime="20201030 11:00:01.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.002" level="INFO">VALUE: [0.00011398599999999648, 0.00011377799999999494, 0.00011347200000000335, 0.00011327800000000138, 0.00011386099999999982, 0.00011370800000000403, 0.00011399999999999605, 0.00011386099999999982, 0.0001138749999999994, 0.00011348600000000292, 0.00011384700000000025, 0.00011306899999999342, 0.00011298700000000189, 0.00011408400000000041, 0.00011400000000000299, 0.00011390300000000547, 0.00011393099999999767, 0.00011365199999999881, 0.00011383400000000016, 0.00011388899999999896, 0.00011319399999999702, 0.00011316599999999788, 0.00011297200000000285, 0.0001134169999999976, 0.00011334699999999975, 0.00011312499999999864, 0.0001138749999999994, 0.00011344499999999674, 0.00011327800000000138, 0.00011354099999999478, 0.00011343099999999717, 0.00011309799999999898, 0.00011343099999999717, 0.00011397199999999691, 0.00011380600000000102, 0.00011384700000000025, 0.00011326300000000233, 0.00011323700000000214, 0.00011347200000000335, 0.00011381999999999365, 0.00011325000000000224, 0.00011381900000000111, 0.00011377800000000188, 0.00011417999999999845, 0.0001138749999999994, 0.0001137220000000036, 0.00011384700000000025, 0.0001140970000000005, 0.00011397199999999691, 0.00011386099999999982]</msg>
<status status="PASS" starttime="20201030 11:00:01.999" endtime="20201030 11:00:02.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.988" endtime="20201030 11:00:02.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:02.015" endtime="20201030 11:00:02.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.011" endtime="20201030 11:00:02.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.008" endtime="20201030 11:00:02.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.438" endtime="20201030 11:00:02.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:01.437" endtime="20201030 11:00:02.040"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.063" endtime="20201030 11:00:02.083"></status>
</kw>
<msg timestamp="20201030 11:00:02.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.059" endtime="20201030 11:00:02.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.086" endtime="20201030 11:00:02.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.092" endtime="20201030 11:00:02.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.052" endtime="20201030 11:00:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.046" endtime="20201030 11:00:02.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.116" endtime="20201030 11:00:02.450"></status>
</kw>
<msg timestamp="20201030 11:00:02.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040382778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:02.112" endtime="20201030 11:00:02.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040382778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:02.459" endtime="20201030 11:00:02.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.477" endtime="20201030 11:00:02.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.105" endtime="20201030 11:00:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.101" endtime="20201030 11:00:02.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:02.494" level="INFO">${RESULT} = [{'diff': 0.00011490299999999953}, {'diff': 0.00011433300000000118}, {'diff': 0.00011459800000000048}, {'diff': 0.0001150550000000028}, {'diff': 0.00011473599999999723}, {'diff': 0.0001149309999999986...</msg>
<status status="PASS" starttime="20201030 11:00:02.486" endtime="20201030 11:00:02.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:02.503" level="INFO">${ACCURACY} = {'diff': [0.00011490299999999953, 0.00011433300000000118, 0.00011459800000000048, 0.0001150550000000028, 0.00011473599999999723, 0.00011493099999999867, 0.00011429200000000195, 0.00011458400000000091,...</msg>
<status status="PASS" starttime="20201030 11:00:02.497" endtime="20201030 11:00:02.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.514" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:00:02.512" endtime="20201030 11:00:02.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.521" level="INFO">VALUE: [0.00011490299999999953, 0.00011433300000000118, 0.00011459800000000048, 0.0001150550000000028, 0.00011473599999999723, 0.00011493099999999867, 0.00011429200000000195, 0.00011458400000000091, 0.0001143049999999951, 0.00011468099999999842, 0.00011469400000000546, 0.00011476399999999637, 0.00011445899999999731, 0.00011436100000000032, 0.00011481899999999517, 0.0001149169999999991, 0.00011433300000000118, 0.00011434699999999381, 0.00011451399999999612, 0.00011431900000000161, 0.00011488899999999996, 0.0001142770000000029, 0.00011443099999999817, 0.00011430599999999458, 0.0001150970000000015, 0.00011465299999999928, 0.00011447200000000435, 0.00011497200000000485, 0.00011484800000000073, 0.00011447300000000382, 0.00011480600000000202, 0.00011494499999999824, 0.00011477799999999594, 0.00011497200000000485, 0.00011473599999999723, 0.00011419400000000496, 0.00011484700000000125, 0.00011498600000000442, 0.00011459800000000048, 0.00011493100000000561, 0.00011470799999999809, 0.00011431899999999467, 0.0001146249999999932, 0.00011466699999999885, 0.00011447199999999741, 0.00011443099999999817, 0.0001145420000000022, 0.00011449999999999655, 0.0001142220000000041, 0.0001149169999999991]</msg>
<status status="PASS" starttime="20201030 11:00:02.516" endtime="20201030 11:00:02.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.505" endtime="20201030 11:00:02.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:02.533" endtime="20201030 11:00:02.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.529" endtime="20201030 11:00:02.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.526" endtime="20201030 11:00:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.042" endtime="20201030 11:00:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.041" endtime="20201030 11:00:02.558"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.581" endtime="20201030 11:00:02.600"></status>
</kw>
<msg timestamp="20201030 11:00:02.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.577" endtime="20201030 11:00:02.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.604" endtime="20201030 11:00:02.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.610" endtime="20201030 11:00:02.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.570" endtime="20201030 11:00:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.564" endtime="20201030 11:00:02.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.633" endtime="20201030 11:00:02.968"></status>
</kw>
<msg timestamp="20201030 11:00:02.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039546431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:02.630" endtime="20201030 11:00:02.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039546431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:02.977" endtime="20201030 11:00:02.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.995" endtime="20201030 11:00:02.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.623" endtime="20201030 11:00:03.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.618" endtime="20201030 11:00:03.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:03.012" level="INFO">${RESULT} = [{'diff': 0.00011536100000000132}, {'diff': 0.00011608300000000293}, {'diff': 0.00011597199999999891}, {'diff': 0.00011576399999999737}, {'diff': 0.00011572199999999866}, {'diff': 0.000115512999999997...</msg>
<status status="PASS" starttime="20201030 11:00:03.004" endtime="20201030 11:00:03.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:03.023" level="INFO">${ACCURACY} = {'diff': [0.00011536100000000132, 0.00011608300000000293, 0.00011597199999999891, 0.00011576399999999737, 0.00011572199999999866, 0.00011551299999999765, 0.00011522199999999816, 0.00011511100000000107...</msg>
<status status="PASS" starttime="20201030 11:00:03.015" endtime="20201030 11:00:03.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.034" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:00:03.032" endtime="20201030 11:00:03.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.039" level="INFO">VALUE: [0.00011536100000000132, 0.00011608300000000293, 0.00011597199999999891, 0.00011576399999999737, 0.00011572199999999866, 0.00011551299999999765, 0.00011522199999999816, 0.00011511100000000107, 0.00011547299999999788, 0.0001150970000000015, 0.00011554099999999679, 0.00011590300000000053, 0.00011556899999999592, 0.00011529200000000295, 0.0001158750000000014, 0.00011569399999999952, 0.00011597199999999891, 0.00011601400000000456, 0.0001155829999999955, 0.00011551399999999712, 0.00011551299999999765, 0.00011602800000000413, 0.00011520800000000553, 0.0001155550000000033, 0.00011540300000000003, 0.0001154299999999997, 0.00011533400000000166, 0.0001154029999999931, 0.00011502700000000365, 0.00011562500000000114, 0.0001155550000000033, 0.00011509800000000098, 0.00011522300000000457, 0.00011522300000000457, 0.00011522299999999763, 0.00011558300000000243, 0.00011515299999999978, 0.00011509699999999456, 0.00011533300000000218, 0.00011538900000000046, 0.00011583300000000268, 0.00011595799999999934, 0.00011590300000000053, 0.00011575000000000474, 0.00011592999999999326, 0.00011581899999999618, 0.00011570799999999909, 0.0001157629999999979, 0.00011498599999999748, 0.00011548599999999798]</msg>
<status status="PASS" starttime="20201030 11:00:03.036" endtime="20201030 11:00:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.025" endtime="20201030 11:00:03.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:03.051" endtime="20201030 11:00:03.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.047" endtime="20201030 11:00:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.045" endtime="20201030 11:00:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.560" endtime="20201030 11:00:03.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.559" endtime="20201030 11:00:03.076"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.099" endtime="20201030 11:00:03.119"></status>
</kw>
<msg timestamp="20201030 11:00:03.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.096" endtime="20201030 11:00:03.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.122" endtime="20201030 11:00:03.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.128" endtime="20201030 11:00:03.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.088" endtime="20201030 11:00:03.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.083" endtime="20201030 11:00:03.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.151" endtime="20201030 11:00:03.486"></status>
</kw>
<msg timestamp="20201030 11:00:03.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039597944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:03.148" endtime="20201030 11:00:03.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039597944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:03.495" endtime="20201030 11:00:03.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.513" endtime="20201030 11:00:03.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.141" endtime="20201030 11:00:03.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.136" endtime="20201030 11:00:03.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:03.530" level="INFO">${RESULT} = [{'diff': 0.00011613899999999427}, {'diff': 0.0001164300000000007}, {'diff': 0.00011615200000000131}, {'diff': 0.00011631999999999615}, {'diff': 0.00011695899999999981}, {'diff': 0.0001168750000000024...</msg>
<status status="PASS" starttime="20201030 11:00:03.522" endtime="20201030 11:00:03.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:03.541" level="INFO">${ACCURACY} = {'diff': [0.00011613899999999427, 0.0001164300000000007, 0.00011615200000000131, 0.00011631999999999615, 0.00011695899999999981, 0.0001168750000000024, 0.00011616599999999394, 0.0001163049999999971, 0...</msg>
<status status="PASS" starttime="20201030 11:00:03.532" endtime="20201030 11:00:03.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.552" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:00:03.550" endtime="20201030 11:00:03.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.557" level="INFO">VALUE: [0.00011613899999999427, 0.0001164300000000007, 0.00011615200000000131, 0.00011631999999999615, 0.00011695899999999981, 0.0001168750000000024, 0.00011616599999999394, 0.0001163049999999971, 0.00011666700000000085, 0.00011630600000000352, 0.00011613900000000121, 0.00011619400000000002, 0.00011638900000000146, 0.00011640300000000103, 0.00011615300000000078, 0.00011638899999999452, 0.00011648599999999898, 0.0001167499999999988, 0.00011679100000000497, 0.0001170699999999969, 0.00011673599999999923, 0.00011702700000000565, 0.00011615300000000078, 0.00011648599999999898, 0.00011701400000000556, 0.00011663900000000171, 0.00011697199999999991, 0.00011619400000000002, 0.00011658400000000291, 0.00011683399999999622, 0.00011659699999999606, 0.0001168049999999976, 0.00011599999999999805, 0.00011698599999999948, 0.00011631900000000361, 0.00011655600000000377, 0.0001168750000000024, 0.00011633299999999624, 0.0001169029999999946, 0.00011599999999999805, 0.00011694500000000024, 0.00011697199999999991, 0.00011698599999999948, 0.00011708399999999647, 0.00011619400000000002, 0.00011648600000000592, 0.00011599999999999805, 0.00011602800000000413, 0.00011634699999999581, 0.00011695800000000034]</msg>
<status status="PASS" starttime="20201030 11:00:03.554" endtime="20201030 11:00:03.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.543" endtime="20201030 11:00:03.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:03.570" endtime="20201030 11:00:03.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.565" endtime="20201030 11:00:03.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.563" endtime="20201030 11:00:03.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.078" endtime="20201030 11:00:03.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.077" endtime="20201030 11:00:03.594"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.617" endtime="20201030 11:00:03.637"></status>
</kw>
<msg timestamp="20201030 11:00:03.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.614" endtime="20201030 11:00:03.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:03.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:03.640" endtime="20201030 11:00:03.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.646" endtime="20201030 11:00:03.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.606" endtime="20201030 11:00:03.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.601" endtime="20201030 11:00:03.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:03.671" endtime="20201030 11:00:04.006"></status>
</kw>
<msg timestamp="20201030 11:00:04.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039353403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039471208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:03.666" endtime="20201030 11:00:04.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039353403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039471208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:04.015" endtime="20201030 11:00:04.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.033" endtime="20201030 11:00:04.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.659" endtime="20201030 11:00:04.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.654" endtime="20201030 11:00:04.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:04.050" level="INFO">${RESULT} = [{'diff': 0.0001178049999999986}, {'diff': 0.00011797200000000091}, {'diff': 0.00011751399999999912}, {'diff': 0.00011713899999999527}, {'diff': 0.00011718100000000092}, {'diff': 0.0001173059999999975...</msg>
<status status="PASS" starttime="20201030 11:00:04.042" endtime="20201030 11:00:04.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:04.059" level="INFO">${ACCURACY} = {'diff': [0.0001178049999999986, 0.00011797200000000091, 0.00011751399999999912, 0.00011713899999999527, 0.00011718100000000092, 0.00011730599999999758, 0.000117597000000004, 0.00011758399999999697, 0...</msg>
<status status="PASS" starttime="20201030 11:00:04.052" endtime="20201030 11:00:04.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.070" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:00:04.068" endtime="20201030 11:00:04.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.075" level="INFO">VALUE: [0.0001178049999999986, 0.00011797200000000091, 0.00011751399999999912, 0.00011713899999999527, 0.00011718100000000092, 0.00011730599999999758, 0.000117597000000004, 0.00011758399999999697, 0.0001178750000000034, 0.00011740300000000203, 0.00011727799999999844, 0.00011719500000000049, 0.00011745800000000084, 0.00011718099999999398, 0.00011765300000000228, 0.00011749999999999955, 0.00011711099999999613, 0.00011752799999999869, 0.00011777799999999894, 0.00011730599999999758, 0.00011751399999999912, 0.00011758400000000391, 0.00011772300000000013, 0.00011780599999999808, 0.00011784699999999732, 0.0001175420000000052, 0.0001174170000000016, 0.00011701399999999862, 0.00011797200000000091, 0.00011747299999999988, 0.00011712500000000264, 0.00011765300000000228, 0.00011765300000000228, 0.00011790300000000253, 0.00011722200000000016, 0.00011713900000000221, 0.00011720900000000006, 0.00011726399999999887, 0.00011731999999999715, 0.00011784700000000425, 0.00011737499999999595, 0.00011720800000000059, 0.00011752699999999922, 0.00011726399999999887, 0.0001175829999999975, 0.0001177629999999999, 0.00011784800000000373, 0.00011745900000000031, 0.00011761099999999663, 0.00011788900000000296]</msg>
<status status="PASS" starttime="20201030 11:00:04.072" endtime="20201030 11:00:04.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.061" endtime="20201030 11:00:04.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:04.088" endtime="20201030 11:00:04.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.083" endtime="20201030 11:00:04.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.081" endtime="20201030 11:00:04.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.597" endtime="20201030 11:00:04.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:03.595" endtime="20201030 11:00:04.113"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.137" endtime="20201030 11:00:04.156"></status>
</kw>
<msg timestamp="20201030 11:00:04.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:04.132" endtime="20201030 11:00:04.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:04.160" endtime="20201030 11:00:04.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.166" endtime="20201030 11:00:04.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.125" endtime="20201030 11:00:04.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.119" endtime="20201030 11:00:04.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.189" endtime="20201030 11:00:04.523"></status>
</kw>
<msg timestamp="20201030 11:00:04.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040926111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:04.186" endtime="20201030 11:00:04.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040926111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:04.532" endtime="20201030 11:00:04.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.550" endtime="20201030 11:00:04.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.179" endtime="20201030 11:00:04.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.174" endtime="20201030 11:00:04.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:04.567" level="INFO">${RESULT} = [{'diff': 0.00011905499999999986}, {'diff': 0.00011900000000000105}, {'diff': 0.00011911099999999814}, {'diff': 0.0001184449999999948}, {'diff': 0.00011833399999999772}, {'diff': 0.0001180969999999975...</msg>
<status status="PASS" starttime="20201030 11:00:04.559" endtime="20201030 11:00:04.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:04.576" level="INFO">${ACCURACY} = {'diff': [0.00011905499999999986, 0.00011900000000000105, 0.00011911099999999814, 0.0001184449999999948, 0.00011833399999999772, 0.00011809699999999757, 0.00011876400000000037, 0.0001183620000000038, ...</msg>
<status status="PASS" starttime="20201030 11:00:04.569" endtime="20201030 11:00:04.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.587" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:00:04.585" endtime="20201030 11:00:04.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.592" level="INFO">VALUE: [0.00011905499999999986, 0.00011900000000000105, 0.00011911099999999814, 0.0001184449999999948, 0.00011833399999999772, 0.00011809699999999757, 0.00011876400000000037, 0.0001183620000000038, 0.000118695000000002, 0.00011865300000000328, 0.00011883400000000516, 0.00011876400000000037, 0.00011854199999999926, 0.00011856899999999893, 0.00011843099999999523, 0.00011877799999999994, 0.00011834799999999729, 0.00011859699999999807, 0.00011854199999999926, 0.00011861099999999763, 0.00011872200000000166, 0.00011873600000000123, 0.00011883299999999875, 0.00011826399999999987, 0.00011848600000000098, 0.00011858400000000491, 0.00011877799999999994, 0.00011866600000000338, 0.00011820900000000106, 0.00011854099999999979, 0.00011900000000000105, 0.00011840300000000303, 0.00011823600000000073, 0.00011838800000000399, 0.00011886199999999736, 0.00011902800000000019, 0.00011856899999999893, 0.00011837499999999695, 0.0001187500000000008, 0.0001189029999999966, 0.00011886100000000482, 0.0001189029999999966, 0.00011820800000000159, 0.00011826399999999987, 0.0001184579999999949, 0.00011836099999999738, 0.00011819399999999508, 0.00011895900000000181, 0.0001188750000000044, 0.00011841600000000313]</msg>
<status status="PASS" starttime="20201030 11:00:04.589" endtime="20201030 11:00:04.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.578" endtime="20201030 11:00:04.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:04.606" endtime="20201030 11:00:04.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.600" endtime="20201030 11:00:04.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.598" endtime="20201030 11:00:04.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.115" endtime="20201030 11:00:04.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.114" endtime="20201030 11:00:04.631"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.653" endtime="20201030 11:00:04.673"></status>
</kw>
<msg timestamp="20201030 11:00:04.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:04.650" endtime="20201030 11:00:04.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:04.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:04.677" endtime="20201030 11:00:04.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.683" endtime="20201030 11:00:04.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.643" endtime="20201030 11:00:04.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.637" endtime="20201030 11:00:04.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:04.706" endtime="20201030 11:00:05.040"></status>
</kw>
<msg timestamp="20201030 11:00:05.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03907475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:04.703" endtime="20201030 11:00:05.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03907475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:05.049" endtime="20201030 11:00:05.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.067" endtime="20201030 11:00:05.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.695" endtime="20201030 11:00:05.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.691" endtime="20201030 11:00:05.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:05.084" level="INFO">${RESULT} = [{'diff': 0.00011947200000000241}, {'diff': 0.00011923600000000173}, {'diff': 0.00011926400000000087}, {'diff': 0.00011919400000000302}, {'diff': 0.00011927699999999403}, {'diff': 0.000119111999999997...</msg>
<status status="PASS" starttime="20201030 11:00:05.075" endtime="20201030 11:00:05.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:05.094" level="INFO">${ACCURACY} = {'diff': [0.00011947200000000241, 0.00011923600000000173, 0.00011926400000000087, 0.00011919400000000302, 0.00011927699999999403, 0.00011911199999999761, 0.00011940300000000403, 0.00011936100000000532...</msg>
<status status="PASS" starttime="20201030 11:00:05.086" endtime="20201030 11:00:05.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.105" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:00:05.103" endtime="20201030 11:00:05.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.110" level="INFO">VALUE: [0.00011947200000000241, 0.00011923600000000173, 0.00011926400000000087, 0.00011919400000000302, 0.00011927699999999403, 0.00011911199999999761, 0.00011940300000000403, 0.00011936100000000532, 0.00011976400000000137, 0.00011950000000000155, 0.00011969399999999658, 0.00011956899999999993, 0.00011950000000000155, 0.00011923600000000173, 0.00011961099999999864, 0.00011916700000000335, 0.00011977700000000147, 0.00011945900000000231, 0.00011959799999999854, 0.00011955600000000677, 0.00011906899999999943, 0.00011948600000000198, 0.00011979100000000104, 0.00011954200000000026, 0.00011942999999999676, 0.00011945800000000284, 0.00011922200000000216, 0.0001192779999999935, 0.00011944399999999633, 0.00012000000000000205, 0.00011983399999999922, 0.00011934700000000575, 0.00011943099999999623, 0.00011934699999999882, 0.00011917999999999651, 0.00011898600000000148, 0.00011997200000000291, 0.00011936099999999839, 0.00011936099999999839, 0.00011994399999999683, 0.0001196249999999982, 0.00011980600000000008, 0.00011894399999999583, 0.00011990300000000453, 0.0001193050000000001, 0.00011976400000000137, 0.00011934699999999882, 0.00011915300000000378, 0.0001192779999999935, 0.00011933400000000566]</msg>
<status status="PASS" starttime="20201030 11:00:05.107" endtime="20201030 11:00:05.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.096" endtime="20201030 11:00:05.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:05.130" endtime="20201030 11:00:05.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.126" endtime="20201030 11:00:05.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.123" endtime="20201030 11:00:05.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.633" endtime="20201030 11:00:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:04.632" endtime="20201030 11:00:05.155"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.178" endtime="20201030 11:00:05.197"></status>
</kw>
<msg timestamp="20201030 11:00:05.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.174" endtime="20201030 11:00:05.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.201" endtime="20201030 11:00:05.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.207" endtime="20201030 11:00:05.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.167" endtime="20201030 11:00:05.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.161" endtime="20201030 11:00:05.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.231" endtime="20201030 11:00:05.564"></status>
</kw>
<msg timestamp="20201030 11:00:05.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039422347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:05.227" endtime="20201030 11:00:05.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039422347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:05.573" endtime="20201030 11:00:05.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.592" endtime="20201030 11:00:05.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.220" endtime="20201030 11:00:05.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.215" endtime="20201030 11:00:05.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:05.608" level="INFO">${RESULT} = [{'diff': 0.00012093099999999773}, {'diff': 0.0001206249999999992}, {'diff': 0.0001208050000000016}, {'diff': 0.0001208050000000016}, {'diff': 0.00012033300000000025}, {'diff': 0.00012026400000000187}...</msg>
<status status="PASS" starttime="20201030 11:00:05.600" endtime="20201030 11:00:05.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:05.619" level="INFO">${ACCURACY} = {'diff': [0.00012093099999999773, 0.0001206249999999992, 0.0001208050000000016, 0.0001208050000000016, 0.00012033300000000025, 0.00012026400000000187, 0.00012084700000000032, 0.00012047200000000341, 0...</msg>
<status status="PASS" starttime="20201030 11:00:05.610" endtime="20201030 11:00:05.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.630" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:00:05.628" endtime="20201030 11:00:05.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.635" level="INFO">VALUE: [0.00012093099999999773, 0.0001206249999999992, 0.0001208050000000016, 0.0001208050000000016, 0.00012033300000000025, 0.00012026400000000187, 0.00012084700000000032, 0.00012047200000000341, 0.0001203750000000059, 0.00012055499999999442, 0.00012092999999999826, 0.00012015299999999784, 0.00012015299999999784, 0.0001209029999999986, 0.00012056999999999346, 0.00012083400000000022, 0.00012061099999999964, 0.00012005599999999339, 0.00012037499999999896, 0.00012027700000000197, 0.000120695000000004, 0.0001202909999999946, 0.00011922199999999522, 0.00012005600000000033, 0.00012016599999999794, 0.0001200699999999999, 0.00012008399999999947, 0.00012072199999999672, 0.00012020899999999612, 0.0001201249999999987, 0.00012023600000000273, 0.00012029200000000101, 0.00012026400000000187, 0.00012072199999999672, 0.00012029100000000154, 0.00012105600000000133, 0.00012088899999999903, 0.00012086099999999989, 0.00012069399999999758, 0.00012081900000000118, 0.00012086099999999989, 0.00012050000000000255, 0.00012086199999999936, 0.00012020799999999665, 0.00012036099999999939, 0.00012076399999999543, 0.00012080600000000108, 0.00012006900000000043, 0.0001202229999999957, 0.00012029199999999407]</msg>
<status status="PASS" starttime="20201030 11:00:05.632" endtime="20201030 11:00:05.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.621" endtime="20201030 11:00:05.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:05.648" endtime="20201030 11:00:05.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.643" endtime="20201030 11:00:05.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.641" endtime="20201030 11:00:05.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.157" endtime="20201030 11:00:05.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.156" endtime="20201030 11:00:05.673"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.695" endtime="20201030 11:00:05.719"></status>
</kw>
<msg timestamp="20201030 11:00:05.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.692" endtime="20201030 11:00:05.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.724" endtime="20201030 11:00:05.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.731" endtime="20201030 11:00:05.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.685" endtime="20201030 11:00:05.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.679" endtime="20201030 11:00:05.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.761" endtime="20201030 11:00:06.100"></status>
</kw>
<msg timestamp="20201030 11:00:06.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:05.757" endtime="20201030 11:00:06.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:06.111" endtime="20201030 11:00:06.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.131" endtime="20201030 11:00:06.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.749" endtime="20201030 11:00:06.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.742" endtime="20201030 11:00:06.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:06.149" level="INFO">${RESULT} = [{'diff': 0.00012182000000000165}, {'diff': 0.00012176399999999643}, {'diff': 0.00012180600000000208}, {'diff': 0.00012122200000000416}, {'diff': 0.0001211379999999998}, {'diff': 0.0001211950000000045...</msg>
<status status="PASS" starttime="20201030 11:00:06.140" endtime="20201030 11:00:06.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:06.158" level="INFO">${ACCURACY} = {'diff': [0.00012182000000000165, 0.00012176399999999643, 0.00012180600000000208, 0.00012122200000000416, 0.0001211379999999998, 0.0001211950000000045, 0.0001218329999999948, 0.00012129200000000201, 0...</msg>
<status status="PASS" starttime="20201030 11:00:06.151" endtime="20201030 11:00:06.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.170" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:00:06.167" endtime="20201030 11:00:06.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.175" level="INFO">VALUE: [0.00012182000000000165, 0.00012176399999999643, 0.00012180600000000208, 0.00012122200000000416, 0.0001211379999999998, 0.0001211950000000045, 0.0001218329999999948, 0.00012129200000000201, 0.00012186099999999395, 0.00012126400000000287, 0.0001211249999999997, 0.00012181899999999524, 0.00012179100000000304, 0.00012141599999999919, 0.00012072200000000366, 0.00012113899999999928, 0.0001219029999999996, 0.0001211950000000045, 0.00012138899999999953, 0.00012188900000000003, 0.0001218329999999948, 0.00012169400000000552, 0.00012138899999999953, 0.00012154199999999532, 0.00012122200000000416, 0.00012163899999999978, 0.00012170799999999815, 0.0001217500000000038, 0.00012200000000000405, 0.00012197199999999797, 0.00012141599999999919, 0.0001216380000000003, 0.00012119499999999755, 0.00012118099999999798, 0.00012194399999999883, 0.00012167999999999901, 0.00012136100000000039, 0.00012141599999999919, 0.00012122199999999722, 0.00012166699999999891, 0.00012168099999999848, 0.00012026400000000187, 0.00012198600000000448, 0.00012115299999999884, 0.00012100000000000305, 0.00012088899999999903, 0.00012199999999999711, 0.00012104100000000229, 0.00012136100000000039, 0.00012120899999999712]</msg>
<status status="PASS" starttime="20201030 11:00:06.172" endtime="20201030 11:00:06.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.160" endtime="20201030 11:00:06.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:06.188" endtime="20201030 11:00:06.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.184" endtime="20201030 11:00:06.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.181" endtime="20201030 11:00:06.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.675" endtime="20201030 11:00:06.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.674" endtime="20201030 11:00:06.215"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.241" endtime="20201030 11:00:06.264"></status>
</kw>
<msg timestamp="20201030 11:00:06.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:06.237" endtime="20201030 11:00:06.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:06.268" endtime="20201030 11:00:06.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.274" endtime="20201030 11:00:06.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.229" endtime="20201030 11:00:06.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.223" endtime="20201030 11:00:06.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.301" endtime="20201030 11:00:06.675"></status>
</kw>
<msg timestamp="20201030 11:00:06.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045424542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045547194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:06.296" endtime="20201030 11:00:06.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045424542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045547194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:06.685" endtime="20201030 11:00:06.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.704" endtime="20201030 11:00:06.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.288" endtime="20201030 11:00:06.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.283" endtime="20201030 11:00:06.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:06.721" level="INFO">${RESULT} = [{'diff': 0.00012265200000000087}, {'diff': 0.00012230599999999564}, {'diff': 0.00012270799999999915}, {'diff': 0.00012311100000000214}, {'diff': 0.0001224579999999989}, {'diff': 0.0001223189999999957...</msg>
<status status="PASS" starttime="20201030 11:00:06.712" endtime="20201030 11:00:06.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:06.731" level="INFO">${ACCURACY} = {'diff': [0.00012265200000000087, 0.00012230599999999564, 0.00012270799999999915, 0.00012311100000000214, 0.0001224579999999989, 0.00012231899999999574, 0.00012259700000000207, 0.00012304200000000376,...</msg>
<status status="PASS" starttime="20201030 11:00:06.723" endtime="20201030 11:00:06.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.742" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:00:06.740" endtime="20201030 11:00:06.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.747" level="INFO">VALUE: [0.00012265200000000087, 0.00012230599999999564, 0.00012270799999999915, 0.00012311100000000214, 0.0001224579999999989, 0.00012231899999999574, 0.00012259700000000207, 0.00012304200000000376, 0.00012255600000000283, 0.00012254200000000326, 0.0001226250000000012, 0.00012297199999999897, 0.00012254200000000326, 0.00012130600000000158, 0.00012287499999999452, 0.00012219399999999908, 0.00012258299999999556, 0.00012202799999999625, 0.00012231899999999574, 0.00012254200000000326, 0.00012254200000000326, 0.00012198600000000448, 0.0001227359999999983, 0.00012256900000000293, 0.0001231250000000017, 0.00012266699999999991, 0.00012224999999999736, 0.00012265300000000035, 0.0001224999999999976, 0.00012234699999999488, 0.00012238900000000053, 0.0001229579999999994, 0.00012218099999999898, 0.0001223329999999953, 0.00012240200000000062, 0.00012236100000000139, 0.00012209800000000104, 0.00012211100000000114, 0.000122292000000003, 0.00012287500000000146, 0.00012241699999999966, 0.00012293099999999973, 0.00012255600000000283, 0.00012211100000000114, 0.00012219399999999908, 0.00012194399999999883, 0.00012287500000000146, 0.0001224160000000002, 0.00012265300000000035, 0.0001221799999999995]</msg>
<status status="PASS" starttime="20201030 11:00:06.744" endtime="20201030 11:00:06.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.733" endtime="20201030 11:00:06.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:06.765" endtime="20201030 11:00:06.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.756" endtime="20201030 11:00:06.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.753" endtime="20201030 11:00:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.218" endtime="20201030 11:00:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.216" endtime="20201030 11:00:06.791"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.814" endtime="20201030 11:00:06.836"></status>
</kw>
<msg timestamp="20201030 11:00:06.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:06.811" endtime="20201030 11:00:06.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:06.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:06.840" endtime="20201030 11:00:06.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.846" endtime="20201030 11:00:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.803" endtime="20201030 11:00:06.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.797" endtime="20201030 11:00:06.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:06.870" endtime="20201030 11:00:07.222"></status>
</kw>
<msg timestamp="20201030 11:00:07.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040439167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:06.867" endtime="20201030 11:00:07.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040439167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040562681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:07.231" endtime="20201030 11:00:07.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.249" endtime="20201030 11:00:07.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.859" endtime="20201030 11:00:07.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.854" endtime="20201030 11:00:07.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:07.266" level="INFO">${RESULT} = [{'diff': 0.00012351400000000512}, {'diff': 0.00012390200000000212}, {'diff': 0.00012351400000000512}, {'diff': 0.00012374999999999886}, {'diff': 0.00012392999999999432}, {'diff': 0.000123485999999999...</msg>
<status status="PASS" starttime="20201030 11:00:07.258" endtime="20201030 11:00:07.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:07.276" level="INFO">${ACCURACY} = {'diff': [0.00012351400000000512, 0.00012390200000000212, 0.00012351400000000512, 0.00012374999999999886, 0.00012392999999999432, 0.00012348599999999904, 0.0001234579999999999, 0.00012361100000000264,...</msg>
<status status="PASS" starttime="20201030 11:00:07.268" endtime="20201030 11:00:07.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.287" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:00:07.285" endtime="20201030 11:00:07.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.293" level="INFO">VALUE: [0.00012351400000000512, 0.00012390200000000212, 0.00012351400000000512, 0.00012374999999999886, 0.00012392999999999432, 0.00012348599999999904, 0.0001234579999999999, 0.00012361100000000264, 0.00012398599999999954, 0.00012322300000000563, 0.0001240689999999975, 0.00012377800000000494, 0.00012326399999999793, 0.00012362499999999527, 0.0001232779999999975, 0.0001240280000000052, 0.00012372199999999972, 0.0001238329999999968, 0.0001237359999999993, 0.00012383300000000375, 0.0001234579999999999, 0.0001235830000000035, 0.00012405500000000486, 0.00012358299999999656, 0.00012380599999999714, 0.00012356999999999646, 0.00012351399999999818, 0.0001237920000000045, 0.00012306900000000343, 0.00012347199999999947, 0.00012301400000000462, 0.00012393000000000126, 0.00012277800000000394, 0.00012320799999999965, 0.00012366600000000144, 0.00012355499999999742, 0.00012386200000000236, 0.00012366700000000092, 0.00012356900000000393, 0.00012330599999999664, 0.00012374999999999886, 0.0001237909999999981, 0.00012338800000000205, 0.00012376400000000537, 0.00012333400000000272, 0.00012366700000000092, 0.00012387499999999552, 0.00012334699999999588, 0.0001236250000000022, 0.00012402699999999878]</msg>
<status status="PASS" starttime="20201030 11:00:07.290" endtime="20201030 11:00:07.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.278" endtime="20201030 11:00:07.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:07.305" endtime="20201030 11:00:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.301" endtime="20201030 11:00:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.298" endtime="20201030 11:00:07.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.793" endtime="20201030 11:00:07.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:06.792" endtime="20201030 11:00:07.330"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.352" endtime="20201030 11:00:07.372"></status>
</kw>
<msg timestamp="20201030 11:00:07.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:07.349" endtime="20201030 11:00:07.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:07.376" endtime="20201030 11:00:07.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.382" endtime="20201030 11:00:07.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.342" endtime="20201030 11:00:07.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.336" endtime="20201030 11:00:07.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.405" endtime="20201030 11:00:07.739"></status>
</kw>
<msg timestamp="20201030 11:00:07.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03929625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:07.402" endtime="20201030 11:00:07.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03929625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:07.748" endtime="20201030 11:00:07.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.766" endtime="20201030 11:00:07.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.395" endtime="20201030 11:00:07.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.390" endtime="20201030 11:00:07.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:07.783" level="INFO">${RESULT} = [{'diff': 0.00012304200000000376}, {'diff': 0.00012451399999999918}, {'diff': 0.00012476399999999943}, {'diff': 0.00012429199999999807}, {'diff': 0.0001247360000000003}, {'diff': 0.0001240970000000035...</msg>
<status status="PASS" starttime="20201030 11:00:07.774" endtime="20201030 11:00:07.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:07.794" level="INFO">${ACCURACY} = {'diff': [0.00012304200000000376, 0.00012451399999999918, 0.00012476399999999943, 0.00012429199999999807, 0.0001247360000000003, 0.00012409700000000357, 0.00012463900000000278, 0.00012424999999999936,...</msg>
<status status="PASS" starttime="20201030 11:00:07.785" endtime="20201030 11:00:07.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.805" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:00:07.802" endtime="20201030 11:00:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.810" level="INFO">VALUE: [0.00012304200000000376, 0.00012451399999999918, 0.00012476399999999943, 0.00012429199999999807, 0.0001247360000000003, 0.00012409700000000357, 0.00012463900000000278, 0.00012424999999999936, 0.00012440200000000262, 0.00012476399999999943, 0.00012415200000000237, 0.00012434700000000382, 0.00012424999999999936, 0.00012487500000000346, 0.00012441700000000167, 0.0001242359999999998, 0.00012469499999999412, 0.0001249309999999948, 0.0001249580000000014, 0.00012469400000000158, 0.00012495900000000087, 0.00012415200000000237, 0.0001248199999999977, 0.00012501399999999968, 0.0001244999999999996, 0.00012433399999999678, 0.00012465300000000235, 0.0001251800000000025, 0.00012497200000000097, 0.00012458299999999756, 0.00012452799999999875, 0.00012488900000000303, 0.0001231800000000005, 0.00012402799999999825, 0.0001246109999999967, 0.0001248329999999978, 0.00012487500000000346, 0.0001246250000000032, 0.0001244160000000022, 0.00012484699999999738, 0.00012366600000000144, 0.00012438899999999559, 0.00012476399999999943, 0.0001249450000000013, 0.00012426299999999946, 0.00012459800000000354, 0.0001249580000000014, 0.00012484700000000432, 0.0001244030000000021, 0.0001247360000000003]</msg>
<status status="PASS" starttime="20201030 11:00:07.807" endtime="20201030 11:00:07.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.796" endtime="20201030 11:00:07.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:07.822" endtime="20201030 11:00:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.818" endtime="20201030 11:00:07.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.815" endtime="20201030 11:00:07.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.332" endtime="20201030 11:00:07.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.331" endtime="20201030 11:00:07.847"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.870" endtime="20201030 11:00:07.890"></status>
</kw>
<msg timestamp="20201030 11:00:07.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:07.866" endtime="20201030 11:00:07.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:07.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:07.893" endtime="20201030 11:00:07.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.899" endtime="20201030 11:00:07.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.859" endtime="20201030 11:00:07.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.853" endtime="20201030 11:00:07.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:07.922" endtime="20201030 11:00:08.261"></status>
</kw>
<msg timestamp="20201030 11:00:08.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039283736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:07.919" endtime="20201030 11:00:08.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039283736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:08.270" endtime="20201030 11:00:08.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.288" endtime="20201030 11:00:08.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.912" endtime="20201030 11:00:08.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.907" endtime="20201030 11:00:08.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:08.305" level="INFO">${RESULT} = [{'diff': 0.00012593100000000274}, {'diff': 0.00012541699999999573}, {'diff': 0.00012536100000000439}, {'diff': 0.00012580599999999914}, {'diff': 0.00012575000000000086}, {'diff': 0.000125874999999997...</msg>
<status status="PASS" starttime="20201030 11:00:08.297" endtime="20201030 11:00:08.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:08.314" level="INFO">${ACCURACY} = {'diff': [0.00012593100000000274, 0.00012541699999999573, 0.00012536100000000439, 0.00012580599999999914, 0.00012575000000000086, 0.00012587499999999752, 0.0001254309999999953, 0.0001256250000000042, ...</msg>
<status status="PASS" starttime="20201030 11:00:08.307" endtime="20201030 11:00:08.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.325" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:00:08.323" endtime="20201030 11:00:08.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.330" level="INFO">VALUE: [0.00012593100000000274, 0.00012541699999999573, 0.00012536100000000439, 0.00012580599999999914, 0.00012575000000000086, 0.00012587499999999752, 0.0001254309999999953, 0.0001256250000000042, 0.00012581899999999924, 0.00012536100000000439, 0.0001255000000000006, 0.00012536100000000439, 0.00012526399999999993, 0.00012565300000000335, 0.00012504200000000576, 0.00012595899999999494, 0.00012569500000000206, 0.0001254030000000031, 0.00012586100000000489, 0.0001255000000000006, 0.00012541700000000267, 0.0001259030000000036, 0.0001252909999999996, 0.0001252230000000007, 0.00012587500000000446, 0.0001255830000000055, 0.00012561100000000464, 0.00012534699999999788, 0.00012559700000000507, 0.00012547200000000147, 0.0001251800000000025, 0.00012517999999999557, 0.00012591700000000317, 0.00012565300000000335, 0.00012543100000000224, 0.00012541599999999625, 0.0001259580000000024, 0.00012570800000000215, 0.00012538900000000353, 0.00012522200000000122, 0.00012551400000000018, 0.00012501399999999968, 0.00012576400000000043, 0.00012569400000000258, 0.00012555499999999942, 0.0001260559999999994, 0.00012548600000000104, 0.00012498600000000054, 0.0001257910000000001, 0.0001260000000000011]</msg>
<status status="PASS" starttime="20201030 11:00:08.327" endtime="20201030 11:00:08.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.316" endtime="20201030 11:00:08.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:08.343" endtime="20201030 11:00:08.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.338" endtime="20201030 11:00:08.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.336" endtime="20201030 11:00:08.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.849" endtime="20201030 11:00:08.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:07.848" endtime="20201030 11:00:08.367"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.390" endtime="20201030 11:00:08.412"></status>
</kw>
<msg timestamp="20201030 11:00:08.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:08.387" endtime="20201030 11:00:08.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:08.415" endtime="20201030 11:00:08.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.421" endtime="20201030 11:00:08.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.380" endtime="20201030 11:00:08.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.374" endtime="20201030 11:00:08.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.444" endtime="20201030 11:00:08.777"></status>
</kw>
<msg timestamp="20201030 11:00:08.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041118958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:08.441" endtime="20201030 11:00:08.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041118958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:08.787" endtime="20201030 11:00:08.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.805" endtime="20201030 11:00:08.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.434" endtime="20201030 11:00:08.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.429" endtime="20201030 11:00:08.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:08.822" level="INFO">${RESULT} = [{'diff': 0.00012647199999999553}, {'diff': 0.00012687499999999852}, {'diff': 0.00012648600000000204}, {'diff': 0.00012618100000000299}, {'diff': 0.0001263329999999993}, {'diff': 0.0001262079999999957...</msg>
<status status="PASS" starttime="20201030 11:00:08.813" endtime="20201030 11:00:08.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:08.831" level="INFO">${ACCURACY} = {'diff': [0.00012647199999999553, 0.00012687499999999852, 0.00012648600000000204, 0.00012618100000000299, 0.0001263329999999993, 0.0001262079999999957, 0.0001263199999999992, 0.00012684699999999938, 0...</msg>
<status status="PASS" starttime="20201030 11:00:08.824" endtime="20201030 11:00:08.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.842" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:00:08.839" endtime="20201030 11:00:08.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.847" level="INFO">VALUE: [0.00012647199999999553, 0.00012687499999999852, 0.00012648600000000204, 0.00012618100000000299, 0.0001263329999999993, 0.0001262079999999957, 0.0001263199999999992, 0.00012684699999999938, 0.0001261529999999969, 0.00012629200000000007, 0.00012677799999999406, 0.00012629200000000007, 0.00012633399999999878, 0.00012613900000000428, 0.00012593100000000274, 0.00012672200000000272, 0.00012526399999999993, 0.00012618100000000299, 0.00012602800000000025, 0.0001268889999999981, 0.00012509700000000457, 0.00012681900000000024, 0.00012622200000000222, 0.00012606999999999896, 0.0001264439999999964, 0.00012620900000000213, 0.00012675000000000186, 0.00012626299999999452, 0.00012636100000000539, 0.00012634699999999888, 0.00012666700000000392, 0.00012638900000000453, 0.00012616699999999648, 0.00012652800000000075, 0.00012636099999999845, 0.00012612499999999777, 0.00012702800000000125, 0.0001262360000000018, 0.00012676400000000143, 0.00012613899999999734, 0.00012586100000000489, 0.0001264160000000042, 0.00012698600000000254, 0.0001265559999999999, 0.00012554199999999932, 0.00012670800000000315, 0.0001263889999999976, 0.00012618100000000299, 0.0001265000000000016, 0.0001262769999999941]</msg>
<status status="PASS" starttime="20201030 11:00:08.844" endtime="20201030 11:00:08.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.833" endtime="20201030 11:00:08.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:08.861" endtime="20201030 11:00:08.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.855" endtime="20201030 11:00:08.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.853" endtime="20201030 11:00:08.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.370" endtime="20201030 11:00:08.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.369" endtime="20201030 11:00:08.886"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.908" endtime="20201030 11:00:08.929"></status>
</kw>
<msg timestamp="20201030 11:00:08.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:08.905" endtime="20201030 11:00:08.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:08.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:08.932" endtime="20201030 11:00:08.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.938" endtime="20201030 11:00:08.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.898" endtime="20201030 11:00:08.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.892" endtime="20201030 11:00:08.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:08.961" endtime="20201030 11:00:09.298"></status>
</kw>
<msg timestamp="20201030 11:00:09.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039473639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:08.958" endtime="20201030 11:00:09.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039473639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:09.307" endtime="20201030 11:00:09.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.325" endtime="20201030 11:00:09.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.951" endtime="20201030 11:00:09.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.946" endtime="20201030 11:00:09.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:09.342" level="INFO">${RESULT} = [{'diff': 0.00012659699999999913}, {'diff': 0.00012786099999999995}, {'diff': 0.0001274030000000051}, {'diff': 0.0001271529999999979}, {'diff': 0.0001278330000000008}, {'diff': 0.00012725000000000236}...</msg>
<status status="PASS" starttime="20201030 11:00:09.333" endtime="20201030 11:00:09.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:09.352" level="INFO">${ACCURACY} = {'diff': [0.00012659699999999913, 0.00012786099999999995, 0.0001274030000000051, 0.0001271529999999979, 0.0001278330000000008, 0.00012725000000000236, 0.00012718099999999705, 0.0001279450000000043, 0....</msg>
<status status="PASS" starttime="20201030 11:00:09.344" endtime="20201030 11:00:09.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.363" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:00:09.361" endtime="20201030 11:00:09.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.368" level="INFO">VALUE: [0.00012659699999999913, 0.00012786099999999995, 0.0001274030000000051, 0.0001271529999999979, 0.0001278330000000008, 0.00012725000000000236, 0.00012718099999999705, 0.0001279450000000043, 0.00012797200000000397, 0.00012654200000000032, 0.0001271529999999979, 0.00012765300000000535, 0.0001273889999999986, 0.00012791599999999875, 0.00012743000000000476, 0.00012706999999999996, 0.00012702800000000125, 0.0001280980000000001, 0.00012765300000000535, 0.00012722199999999628, 0.0001279859999999966, 0.0001277230000000032, 0.00012723599999999585, 0.0001273330000000003, 0.00012704200000000082, 0.00012763899999999884, 0.00012754200000000132, 0.00012713899999999834, 0.0001272360000000028, 0.00012729200000000107, 0.00012720800000000365, 0.00012748600000000304, 0.00012716699999999748, 0.0001279859999999966, 0.0001277079999999972, 0.00012715300000000485, 0.00012724999999999542, 0.00012787499999999952, 0.00012755500000000142, 0.00012738900000000553, 0.0001270690000000005, 0.000126778000000001, 0.00012737500000000596, 0.00012769499999999712, 0.00012768100000000449, 0.00012787499999999952, 0.00012763899999999884, 0.00012711100000000614, 0.0001277639999999955, 0.00012736099999999945]</msg>
<status status="PASS" starttime="20201030 11:00:09.365" endtime="20201030 11:00:09.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.354" endtime="20201030 11:00:09.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:09.381" endtime="20201030 11:00:09.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.376" endtime="20201030 11:00:09.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.374" endtime="20201030 11:00:09.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.888" endtime="20201030 11:00:09.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:08.887" endtime="20201030 11:00:09.406"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.428" endtime="20201030 11:00:09.449"></status>
</kw>
<msg timestamp="20201030 11:00:09.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:09.425" endtime="20201030 11:00:09.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:09.452" endtime="20201030 11:00:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.458" endtime="20201030 11:00:09.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.418" endtime="20201030 11:00:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.412" endtime="20201030 11:00:09.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.482" endtime="20201030 11:00:09.815"></status>
</kw>
<msg timestamp="20201030 11:00:09.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039585597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:09.478" endtime="20201030 11:00:09.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039585597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:09.824" endtime="20201030 11:00:09.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.842" endtime="20201030 11:00:09.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.471" endtime="20201030 11:00:09.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.466" endtime="20201030 11:00:09.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:09.859" level="INFO">${RESULT} = [{'diff': 0.00012819499999999762}, {'diff': 0.00012822199999999728}, {'diff': 0.0001286529999999994}, {'diff': 0.0001286529999999994}, {'diff': 0.0001284859999999971}, {'diff': 0.00012826400000000293}...</msg>
<status status="PASS" starttime="20201030 11:00:09.851" endtime="20201030 11:00:09.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:09.870" level="INFO">${ACCURACY} = {'diff': [0.00012819499999999762, 0.00012822199999999728, 0.0001286529999999994, 0.0001286529999999994, 0.0001284859999999971, 0.00012826400000000293, 0.00012884700000000138, 0.00012873599999999735, 0...</msg>
<status status="PASS" starttime="20201030 11:00:09.861" endtime="20201030 11:00:09.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.881" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:00:09.878" endtime="20201030 11:00:09.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.886" level="INFO">VALUE: [0.00012819499999999762, 0.00012822199999999728, 0.0001286529999999994, 0.0001286529999999994, 0.0001284859999999971, 0.00012826400000000293, 0.00012884700000000138, 0.00012873599999999735, 0.0001284580000000049, 0.00012854199999999538, 0.0001282910000000026, 0.00012799999999999617, 0.00012833400000000078, 0.00012819500000000456, 0.00012875000000000386, 0.00012858300000000156, 0.00012733399999999978, 0.0001287079999999982, 0.00012802800000000225, 0.00012804100000000235, 0.0001282769999999961, 0.000127569000000001, 0.00012870900000000463, 0.0001281110000000002, 0.00012887500000000052, 0.00012890200000000018, 0.00012730500000000117, 0.00012808300000000106, 0.00012808300000000106, 0.00012823700000000327, 0.000128472999999997, 0.00012805599999999445, 0.0001288890000000001, 0.0001288890000000001, 0.00012869399999999864, 0.00012842999999999882, 0.00012901399999999674, 0.00012834700000000088, 0.00012876300000000396, 0.0001289859999999976, 0.00012812499999999977, 0.0001283200000000012, 0.00012912499999999383, 0.00012895799999999846, 0.0001284439999999984, 0.00012895899999999794, 0.00012870899999999769, 0.00012849999999999667, 0.00012877799999999606, 0.00012880600000000214]</msg>
<status status="PASS" starttime="20201030 11:00:09.883" endtime="20201030 11:00:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.872" endtime="20201030 11:00:09.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:09.898" endtime="20201030 11:00:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.894" endtime="20201030 11:00:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.892" endtime="20201030 11:00:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.408" endtime="20201030 11:00:09.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.407" endtime="20201030 11:00:09.923"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.946" endtime="20201030 11:00:09.966"></status>
</kw>
<msg timestamp="20201030 11:00:09.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:09.943" endtime="20201030 11:00:09.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:09.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:09.970" endtime="20201030 11:00:09.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.976" endtime="20201030 11:00:09.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.935" endtime="20201030 11:00:09.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.930" endtime="20201030 11:00:09.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:09.999" endtime="20201030 11:00:10.337"></status>
</kw>
<msg timestamp="20201030 11:00:10.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039380333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039510222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:09.996" endtime="20201030 11:00:10.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039380333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039510222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:10.346" endtime="20201030 11:00:10.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.365" endtime="20201030 11:00:10.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.989" endtime="20201030 11:00:10.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.984" endtime="20201030 11:00:10.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:10.381" level="INFO">${RESULT} = [{'diff': 0.0001298890000000011}, {'diff': 0.00012926400000000393}, {'diff': 0.0001292079999999987}, {'diff': 0.00012892999999999932}, {'diff': 0.00012957000000000246}, {'diff': 0.00012930500000000317...</msg>
<status status="PASS" starttime="20201030 11:00:10.373" endtime="20201030 11:00:10.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:10.391" level="INFO">${ACCURACY} = {'diff': [0.0001298890000000011, 0.00012926400000000393, 0.0001292079999999987, 0.00012892999999999932, 0.00012957000000000246, 0.00012930500000000317, 0.0001292079999999987, 0.00012995799999999946, 0...</msg>
<status status="PASS" starttime="20201030 11:00:10.384" endtime="20201030 11:00:10.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.401" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:00:10.399" endtime="20201030 11:00:10.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.407" level="INFO">VALUE: [0.0001298890000000011, 0.00012926400000000393, 0.0001292079999999987, 0.00012892999999999932, 0.00012957000000000246, 0.00012930500000000317, 0.0001292079999999987, 0.00012995799999999946, 0.00012942999999999982, 0.00012947199999999853, 0.00012905499999999598, 0.00012926400000000393, 0.0001293200000000022, 0.00012936100000000145, 0.00012922199999999828, 0.00012809700000000063, 0.00012959700000000213, 0.0001300000000000051, 0.00012980500000000367, 0.00012841599999999925, 0.0001291800000000065, 0.00012998699999999808, 0.00012954199999999638, 0.00012962500000000127, 0.000129263999999997, 0.00012993000000000032, 0.00012842999999999882, 0.0001290130000000042, 0.00012956899999999605, 0.00012933299999999537, 0.0001297079999999992, 0.00012991700000000023, 0.00012908300000000206, 0.00012974999999999792, 0.00012947200000000547, 0.00012997199999999903, 0.00012922199999999828, 0.00012963900000000084, 0.0001293880000000011, 0.00012957000000000246, 0.00012920899999999819, 0.0001293330000000023, 0.00012895899999999794, 0.00012922299999999776, 0.00012962500000000127, 0.0001285409999999959, 0.00013001400000000468, 0.00012999999999999817, 0.0001292079999999987, 0.00012949999999999767]</msg>
<status status="PASS" starttime="20201030 11:00:10.404" endtime="20201030 11:00:10.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.392" endtime="20201030 11:00:10.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:10.419" endtime="20201030 11:00:10.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.415" endtime="20201030 11:00:10.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.412" endtime="20201030 11:00:10.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.925" endtime="20201030 11:00:10.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:09.924" endtime="20201030 11:00:10.444"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.467" endtime="20201030 11:00:10.489"></status>
</kw>
<msg timestamp="20201030 11:00:10.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.464" endtime="20201030 11:00:10.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.492" endtime="20201030 11:00:10.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.499" endtime="20201030 11:00:10.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.456" endtime="20201030 11:00:10.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.451" endtime="20201030 11:00:10.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.522" endtime="20201030 11:00:10.857"></status>
</kw>
<msg timestamp="20201030 11:00:10.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041526403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:10.518" endtime="20201030 11:00:10.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041526403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:10.866" endtime="20201030 11:00:10.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.884" endtime="20201030 11:00:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.511" endtime="20201030 11:00:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.507" endtime="20201030 11:00:10.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:10.901" level="INFO">${RESULT} = [{'diff': 0.00013029200000000407}, {'diff': 0.00013023599999999885}, {'diff': 0.00013022299999999876}, {'diff': 0.00013049999999999867}, {'diff': 0.0001308890000000021}, {'diff': 0.0001292920000000030...</msg>
<status status="PASS" starttime="20201030 11:00:10.893" endtime="20201030 11:00:10.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:10.910" level="INFO">${ACCURACY} = {'diff': [0.00013029200000000407, 0.00013023599999999885, 0.00013022299999999876, 0.00013049999999999867, 0.0001308890000000021, 0.00012929200000000307, 0.00013087499999999558, 0.00013056999999999652,...</msg>
<status status="PASS" starttime="20201030 11:00:10.903" endtime="20201030 11:00:10.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.921" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:00:10.919" endtime="20201030 11:00:10.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:10.926" level="INFO">VALUE: [0.00013029200000000407, 0.00013023599999999885, 0.00013022299999999876, 0.00013049999999999867, 0.0001308890000000021, 0.00012929200000000307, 0.00013087499999999558, 0.00013056999999999652, 0.0001309169999999943, 0.00013066700000000098, 0.00013044399999999345, 0.00013097200000000003, 0.0001309859999999996, 0.00012984699999999544, 0.0001300279999999973, 0.00012999999999999817, 0.0001309859999999996, 0.00013074999999999892, 0.0001305560000000039, 0.0001309859999999996, 0.00013075000000000586, 0.0001304859999999991, 0.00013074999999999892, 0.00013074999999999892, 0.00013062500000000227, 0.00013055599999999695, 0.0001301110000000022, 0.00013025000000000536, 0.00013063900000000184, 0.00013052800000000475, 0.00013101399999999874, 0.0001300980000000021, 0.00013029099999999766, 0.00012963900000000084, 0.00013059700000000313, 0.00013072199999999978, 0.0001304859999999991, 0.00013005599999999645, 0.00013026299999999852, 0.00013051399999999824, 0.00013074999999999892, 0.00013047300000000595, 0.00012937500000000102, 0.0001306530000000014, 0.00013097200000000003, 0.00013072199999999978, 0.00013069500000000012, 0.00013055499999999748, 0.00013080499999999773, 0.00013066700000000098]</msg>
<status status="PASS" starttime="20201030 11:00:10.923" endtime="20201030 11:00:10.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.912" endtime="20201030 11:00:10.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:10.940" endtime="20201030 11:00:10.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.934" endtime="20201030 11:00:10.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.932" endtime="20201030 11:00:10.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.446" endtime="20201030 11:00:10.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.445" endtime="20201030 11:00:10.965"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:10.987" endtime="20201030 11:00:11.008"></status>
</kw>
<msg timestamp="20201030 11:00:11.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:10.984" endtime="20201030 11:00:11.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:11.012" endtime="20201030 11:00:11.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.018" endtime="20201030 11:00:11.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.977" endtime="20201030 11:00:11.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.971" endtime="20201030 11:00:11.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.041" endtime="20201030 11:00:11.376"></status>
</kw>
<msg timestamp="20201030 11:00:11.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03932025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039451417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:11.037" endtime="20201030 11:00:11.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03932025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039451417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:11.385" endtime="20201030 11:00:11.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.403" endtime="20201030 11:00:11.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.030" endtime="20201030 11:00:11.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.026" endtime="20201030 11:00:11.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:11.420" level="INFO">${RESULT} = [{'diff': 0.00013116700000000148}, {'diff': 0.0001313890000000026}, {'diff': 0.00013140300000000216}, {'diff': 0.0001316660000000025}, {'diff': 0.000131651999999996}, {'diff': 0.00013130499999999823},...</msg>
<status status="PASS" starttime="20201030 11:00:11.412" endtime="20201030 11:00:11.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:11.430" level="INFO">${ACCURACY} = {'diff': [0.00013116700000000148, 0.0001313890000000026, 0.00013140300000000216, 0.0001316660000000025, 0.000131651999999996, 0.00013130499999999823, 0.00013173699999999983, 0.0001319719999999941, 0.0...</msg>
<status status="PASS" starttime="20201030 11:00:11.422" endtime="20201030 11:00:11.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.441" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:00:11.439" endtime="20201030 11:00:11.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.446" level="INFO">VALUE: [0.00013116700000000148, 0.0001313890000000026, 0.00013140300000000216, 0.0001316660000000025, 0.000131651999999996, 0.00013130499999999823, 0.00013173699999999983, 0.0001319719999999941, 0.0001313890000000026, 0.0001311389999999954, 0.00013030499999999723, 0.00013154199999999838, 0.00013141599999999531, 0.00013127799999999856, 0.00013008300000000306, 0.00013138899999999565, 0.0001314440000000014, 0.00013180499999999873, 0.00013124999999999942, 0.00013151399999999924, 0.00013129099999999866, 0.00013126400000000593, 0.00013200000000000017, 0.00013145900000000044, 0.00013174999999999992, 0.0001310690000000045, 0.00013133399999999684, 0.0001311530000000019, 0.00013161099999999676, 0.0001316530000000024, 0.00013115299999999497, 0.00013074999999999892, 0.00013184699999999744, 0.00013170799999999427, 0.00013158300000000456, 0.00013118000000000157, 0.0001315980000000036, 0.00013137500000000302, 0.00013106899999999755, 0.00013112499999999583, 0.0001317639999999995, 0.00013163900000000284, 0.00013194399999999495, 0.000131473, 0.00013152800000000575, 0.00013173699999999983, 0.00013156999999999752, 0.00013184700000000438, 0.00013051399999999824, 0.0001314310000000013]</msg>
<status status="PASS" starttime="20201030 11:00:11.444" endtime="20201030 11:00:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.432" endtime="20201030 11:00:11.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:11.459" endtime="20201030 11:00:11.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.455" endtime="20201030 11:00:11.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.453" endtime="20201030 11:00:11.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.967" endtime="20201030 11:00:11.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:10.966" endtime="20201030 11:00:11.484"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.507" endtime="20201030 11:00:11.528"></status>
</kw>
<msg timestamp="20201030 11:00:11.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:11.504" endtime="20201030 11:00:11.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:11.531" endtime="20201030 11:00:11.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.537" endtime="20201030 11:00:11.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.496" endtime="20201030 11:00:11.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.491" endtime="20201030 11:00:11.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.562" endtime="20201030 11:00:11.897"></status>
</kw>
<msg timestamp="20201030 11:00:11.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040087917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:11.558" endtime="20201030 11:00:11.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040087917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:11.906" endtime="20201030 11:00:11.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.924" endtime="20201030 11:00:11.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.551" endtime="20201030 11:00:11.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.546" endtime="20201030 11:00:11.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:11.941" level="INFO">${RESULT} = [{'diff': 0.0001329860000000016}, {'diff': 0.0001325409999999999}, {'diff': 0.0001327080000000022}, {'diff': 0.00013250000000000067}, {'diff': 0.00013184800000000385}, {'diff': 0.00013245900000000144}...</msg>
<status status="PASS" starttime="20201030 11:00:11.932" endtime="20201030 11:00:11.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:11.955" level="INFO">${ACCURACY} = {'diff': [0.0001329860000000016, 0.0001325409999999999, 0.0001327080000000022, 0.00013250000000000067, 0.00013184800000000385, 0.00013245900000000144, 0.0001329730000000015, 0.0001320690000000055, 0.0...</msg>
<status status="PASS" starttime="20201030 11:00:11.943" endtime="20201030 11:00:11.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.966" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:00:11.964" endtime="20201030 11:00:11.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.972" level="INFO">VALUE: [0.0001329860000000016, 0.0001325409999999999, 0.0001327080000000022, 0.00013250000000000067, 0.00013184800000000385, 0.00013245900000000144, 0.0001329730000000015, 0.0001320690000000055, 0.00013261099999999776, 0.0001322910000000066, 0.00013245799999999502, 0.00013254199999999938, 0.00013137500000000302, 0.00013250000000000067, 0.0001320279999999993, 0.00013215299999999597, 0.00013283299999999887, 0.0001313890000000026, 0.00013273600000000135, 0.00013248599999999416, 0.00013218000000000257, 0.0001313890000000026, 0.00013234699999999794, 0.0001327080000000022, 0.00013230499999999923, 0.00013258299999999862, 0.00013287499999999758, 0.00013287500000000452, 0.00013222300000000076, 0.0001321519999999965, 0.00013205599999999845, 0.00013237499999999708, 0.0001315969999999972, 0.0001324310000000023, 0.0001322080000000017, 0.00013301400000000074, 0.000132264, 0.0001329730000000015, 0.0001328890000000041, 0.000131860999999997, 0.00013223700000000033, 0.00013287500000000452, 0.0001323609999999975, 0.00013263900000000384, 0.00013144500000000087, 0.0001327640000000005, 0.0001330410000000004, 0.00013297200000000203, 0.00013227799999999956, 0.00013269500000000212]</msg>
<status status="PASS" starttime="20201030 11:00:11.969" endtime="20201030 11:00:11.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.957" endtime="20201030 11:00:11.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:11.984" endtime="20201030 11:00:12.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.980" endtime="20201030 11:00:12.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.977" endtime="20201030 11:00:12.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.486" endtime="20201030 11:00:12.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.485" endtime="20201030 11:00:12.009"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.031" endtime="20201030 11:00:12.052"></status>
</kw>
<msg timestamp="20201030 11:00:12.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:12.028" endtime="20201030 11:00:12.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:12.055" endtime="20201030 11:00:12.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.061" endtime="20201030 11:00:12.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.021" endtime="20201030 11:00:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.015" endtime="20201030 11:00:12.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.084" endtime="20201030 11:00:12.421"></status>
</kw>
<msg timestamp="20201030 11:00:12.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039352597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039485083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.081" endtime="20201030 11:00:12.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039352597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039485083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.430" endtime="20201030 11:00:12.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.449" endtime="20201030 11:00:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.074" endtime="20201030 11:00:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.069" endtime="20201030 11:00:12.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:12.465" level="INFO">${RESULT} = [{'diff': 0.00013248599999999416}, {'diff': 0.00013383299999999987}, {'diff': 0.00013350000000000167}, {'diff': 0.0001339719999999961}, {'diff': 0.00013345799999999602}, {'diff': 0.0001334869999999946...</msg>
<status status="PASS" starttime="20201030 11:00:12.457" endtime="20201030 11:00:12.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:12.475" level="INFO">${ACCURACY} = {'diff': [0.00013248599999999416, 0.00013383299999999987, 0.00013350000000000167, 0.0001339719999999961, 0.00013345799999999602, 0.00013348699999999464, 0.00013375000000000192, 0.0001333890000000046, ...</msg>
<status status="PASS" starttime="20201030 11:00:12.468" endtime="20201030 11:00:12.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.485" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:00:12.483" endtime="20201030 11:00:12.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.491" level="INFO">VALUE: [0.00013248599999999416, 0.00013383299999999987, 0.00013350000000000167, 0.0001339719999999961, 0.00013345799999999602, 0.00013348699999999464, 0.00013375000000000192, 0.0001333890000000046, 0.00013333299999999937, 0.00013400000000000217, 0.00013372199999999584, 0.00013386100000000595, 0.00013337499999999808, 0.0001338190000000003, 0.00013354200000000038, 0.00013343000000000382, 0.0001331939999999962, 0.00013355599999999995, 0.00013327800000000056, 0.00013362500000000527, 0.00013366700000000398, 0.0001337080000000032, 0.00013334699999999894, 0.0001336389999999979, 0.00013329100000000066, 0.00013383299999999987, 0.00013350000000000167, 0.0001335410000000009, 0.00013380599999999326, 0.00013399999999999523, 0.00013225000000000042, 0.00013336100000000545, 0.00013212499999999683, 0.00013366699999999704, 0.00013205599999999845, 0.00013347200000000253, 0.00013362500000000527, 0.00013366699999999704, 0.00013297200000000203, 0.00013369500000000312, 0.00013245799999999502, 0.00013345900000000244, 0.0001338060000000002, 0.00013383299999999987, 0.0001339860000000026, 0.00013351400000000124, 0.0001336530000000044, 0.0001339860000000026, 0.00013340299999999722, 0.00013251400000000024]</msg>
<status status="PASS" starttime="20201030 11:00:12.487" endtime="20201030 11:00:12.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.476" endtime="20201030 11:00:12.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:12.503" endtime="20201030 11:00:12.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.499" endtime="20201030 11:00:12.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.496" endtime="20201030 11:00:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.011" endtime="20201030 11:00:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.010" endtime="20201030 11:00:12.528"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.550" endtime="20201030 11:00:12.572"></status>
</kw>
<msg timestamp="20201030 11:00:12.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:12.547" endtime="20201030 11:00:12.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:12.576" endtime="20201030 11:00:12.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.582" endtime="20201030 11:00:12.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.540" endtime="20201030 11:00:12.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.534" endtime="20201030 11:00:12.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.605" endtime="20201030 11:00:12.939"></status>
</kw>
<msg timestamp="20201030 11:00:12.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040682264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040815875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.602" endtime="20201030 11:00:12.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040682264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040815875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.948" endtime="20201030 11:00:12.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.966" endtime="20201030 11:00:12.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.594" endtime="20201030 11:00:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.590" endtime="20201030 11:00:12.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:12.983" level="INFO">${RESULT} = [{'diff': 0.00013361099999999876}, {'diff': 0.0001341530000000049}, {'diff': 0.0001343479999999994}, {'diff': 0.00013494499999999743}, {'diff': 0.00013454199999999444}, {'diff': 0.0001346389999999989}...</msg>
<status status="PASS" starttime="20201030 11:00:12.975" endtime="20201030 11:00:12.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:12.992" level="INFO">${ACCURACY} = {'diff': [0.00013361099999999876, 0.0001341530000000049, 0.0001343479999999994, 0.00013494499999999743, 0.00013454199999999444, 0.0001346389999999989, 0.0001341809999999971, 0.0001341389999999984, 0.0...</msg>
<status status="PASS" starttime="20201030 11:00:12.985" endtime="20201030 11:00:12.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.003" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:00:13.001" endtime="20201030 11:00:13.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.009" level="INFO">VALUE: [0.00013361099999999876, 0.0001341530000000049, 0.0001343479999999994, 0.00013494499999999743, 0.00013454199999999444, 0.0001346389999999989, 0.0001341809999999971, 0.0001341389999999984, 0.0001346809999999976, 0.0001349719999999971, 0.00013477800000000206, 0.0001345410000000019, 0.00013416599999999806, 0.0001350280000000023, 0.00013391600000000475, 0.00013433300000000037, 0.00013461099999999976, 0.00013362499999999833, 0.00013424999999999548, 0.00013434699999999994, 0.00013375000000000192, 0.000134473000000003, 0.00013490299999999872, 0.00013511100000000026, 0.00013445900000000344, 0.00013447299999999607, 0.00013322199999999534, 0.00013472200000000378, 0.00013433300000000037, 0.0001347640000000025, 0.00013425000000000242, 0.0001341389999999984, 0.00013373600000000235, 0.00013422199999999634, 0.00013493099999999786, 0.00013411099999999926, 0.00013440199999999874, 0.00013440300000000516, 0.0001349719999999971, 0.00013494499999999743, 0.00013438899999999865, 0.0001342770000000021, 0.00013504200000000188, 0.0001340969999999997, 0.00013424999999999548, 0.0001346530000000054, 0.00013463799999999942, 0.00013411099999999926, 0.0001344860000000031, 0.0001343609999999995]</msg>
<status status="PASS" starttime="20201030 11:00:13.006" endtime="20201030 11:00:13.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.994" endtime="20201030 11:00:13.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:13.023" endtime="20201030 11:00:13.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.017" endtime="20201030 11:00:13.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.014" endtime="20201030 11:00:13.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.530" endtime="20201030 11:00:13.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.529" endtime="20201030 11:00:13.047"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.070" endtime="20201030 11:00:13.091"></status>
</kw>
<msg timestamp="20201030 11:00:13.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:13.067" endtime="20201030 11:00:13.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:13.094" endtime="20201030 11:00:13.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.101" endtime="20201030 11:00:13.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.060" endtime="20201030 11:00:13.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.054" endtime="20201030 11:00:13.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.124" endtime="20201030 11:00:13.460"></status>
</kw>
<msg timestamp="20201030 11:00:13.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0392465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039382139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:13.120" endtime="20201030 11:00:13.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0392465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039382139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:13.469" endtime="20201030 11:00:13.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.487" endtime="20201030 11:00:13.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.113" endtime="20201030 11:00:13.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.109" endtime="20201030 11:00:13.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:13.504" level="INFO">${RESULT} = [{'diff': 0.0001356389999999999}, {'diff': 0.00013525000000000342}, {'diff': 0.0001351939999999982}, {'diff': 0.00013483300000000087}, {'diff': 0.0001359169999999993}, {'diff': 0.00013565299999999947}...</msg>
<status status="PASS" starttime="20201030 11:00:13.495" endtime="20201030 11:00:13.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:13.514" level="INFO">${ACCURACY} = {'diff': [0.0001356389999999999, 0.00013525000000000342, 0.0001351939999999982, 0.00013483300000000087, 0.0001359169999999993, 0.00013565299999999947, 0.0001353060000000017, 0.00013407000000000002, 0....</msg>
<status status="PASS" starttime="20201030 11:00:13.506" endtime="20201030 11:00:13.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.525" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:00:13.523" endtime="20201030 11:00:13.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.530" level="INFO">VALUE: [0.0001356389999999999, 0.00013525000000000342, 0.0001351939999999982, 0.00013483300000000087, 0.0001359169999999993, 0.00013565299999999947, 0.0001353060000000017, 0.00013407000000000002, 0.00013577799999999612, 0.00013532000000000127, 0.00013419400000000414, 0.0001356389999999999, 0.00013594499999999843, 0.00013529100000000266, 0.00013598700000000408, 0.00013527800000000256, 0.00013561100000000076, 0.00013572200000000478, 0.00013538899999999965, 0.0001352919999999952, 0.00013584700000000144, 0.0001355410000000029, 0.0001359719999999981, 0.00013552799999999587, 0.0001355280000000028, 0.0001356119999999933, 0.00013538899999999965, 0.0001352770000000031, 0.0001355139999999963, 0.000135861000000001, 0.0001357919999999957, 0.000135264000000003, 0.0001353480000000004, 0.00013587500000000058, 0.00013502799999999537, 0.000135861000000001, 0.00013527800000000256, 0.00013604200000000288, 0.00013595800000000546, 0.00013544499999999793, 0.00013598599999999766, 0.00013515299999999897, 0.00013595799999999852, 0.0001357080000000052, 0.00013422199999999634, 0.0001355840000000011, 0.0001358060000000022, 0.00013529100000000266, 0.00013573600000000435, 0.00013583299999999493]</msg>
<status status="PASS" starttime="20201030 11:00:13.527" endtime="20201030 11:00:13.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.516" endtime="20201030 11:00:13.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:13.544" endtime="20201030 11:00:13.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.539" endtime="20201030 11:00:13.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.536" endtime="20201030 11:00:13.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.050" endtime="20201030 11:00:13.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.048" endtime="20201030 11:00:13.570"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.592" endtime="20201030 11:00:13.613"></status>
</kw>
<msg timestamp="20201030 11:00:13.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:13.589" endtime="20201030 11:00:13.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:13.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:13.616" endtime="20201030 11:00:13.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.623" endtime="20201030 11:00:13.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.582" endtime="20201030 11:00:13.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.576" endtime="20201030 11:00:13.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:13.646" endtime="20201030 11:00:13.981"></status>
</kw>
<msg timestamp="20201030 11:00:13.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040360847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:13.643" endtime="20201030 11:00:13.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040360847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:13.990" endtime="20201030 11:00:14.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.008" endtime="20201030 11:00:14.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.635" endtime="20201030 11:00:14.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.631" endtime="20201030 11:00:14.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:14.025" level="INFO">${RESULT} = [{'diff': 0.00013591599999999981}, {'diff': 0.00013644399999999945}, {'diff': 0.00013615299999999997}, {'diff': 0.00013679200000000363}, {'diff': 0.00013679100000000416}, {'diff': 0.000136583000000002...</msg>
<status status="PASS" starttime="20201030 11:00:14.017" endtime="20201030 11:00:14.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:14.036" level="INFO">${ACCURACY} = {'diff': [0.00013591599999999981, 0.00013644399999999945, 0.00013615299999999997, 0.00013679200000000363, 0.00013679100000000416, 0.00013658300000000262, 0.0001365840000000021, 0.00013677800000000406,...</msg>
<status status="PASS" starttime="20201030 11:00:14.027" endtime="20201030 11:00:14.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.047" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:00:14.044" endtime="20201030 11:00:14.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.052" level="INFO">VALUE: [0.00013591599999999981, 0.00013644399999999945, 0.00013615299999999997, 0.00013679200000000363, 0.00013679100000000416, 0.00013658300000000262, 0.0001365840000000021, 0.00013677800000000406, 0.0001360970000000017, 0.00013643099999999936, 0.00013620899999999825, 0.00013641600000000031, 0.0001353190000000018, 0.00013606900000000255, 0.00013619400000000614, 0.00013654199999999644, 0.00013658399999999515, 0.00013683300000000287, 0.0001367770000000046, 0.0001365970000000022, 0.0001367640000000045, 0.00013619499999999868, 0.0001365280000000038, 0.00013682000000000277, 0.00013554199999999544, 0.00013622200000000528, 0.00013569400000000564, 0.00013612500000000083, 0.0001365970000000022, 0.00013683400000000234, 0.00013661100000000176, 0.00013680500000000373, 0.0001360689999999956, 0.00013688900000000115, 0.0001360970000000017, 0.0001361390000000004, 0.00013642999999999988, 0.0001367640000000045, 0.0001351939999999982, 0.00013656999999999558, 0.00013516699999999854, 0.0001369730000000055, 0.0001360280000000033, 0.00013649999999999773, 0.000136346999999995, 0.00013551400000000324, 0.00013637499999999414, 0.0001361809999999991, 0.0001369719999999991, 0.00013642999999999988]</msg>
<status status="PASS" starttime="20201030 11:00:14.049" endtime="20201030 11:00:14.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.038" endtime="20201030 11:00:14.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:14.065" endtime="20201030 11:00:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.060" endtime="20201030 11:00:14.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.058" endtime="20201030 11:00:14.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.572" endtime="20201030 11:00:14.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:13.571" endtime="20201030 11:00:14.090"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.112" endtime="20201030 11:00:14.133"></status>
</kw>
<msg timestamp="20201030 11:00:14.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:14.109" endtime="20201030 11:00:14.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:14.136" endtime="20201030 11:00:14.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.142" endtime="20201030 11:00:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.102" endtime="20201030 11:00:14.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.096" endtime="20201030 11:00:14.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.166" endtime="20201030 11:00:14.504"></status>
</kw>
<msg timestamp="20201030 11:00:14.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039316306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039452819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:14.163" endtime="20201030 11:00:14.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039316306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039452819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:14.514" endtime="20201030 11:00:14.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.532" endtime="20201030 11:00:14.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.155" endtime="20201030 11:00:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.150" endtime="20201030 11:00:14.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:14.549" level="INFO">${RESULT} = [{'diff': 0.00013651299999999783}, {'diff': 0.00013740200000000174}, {'diff': 0.00013718000000000063}, {'diff': 0.00013754099999999797}, {'diff': 0.00013783300000000387}, {'diff': 0.000137486000000006...</msg>
<status status="PASS" starttime="20201030 11:00:14.540" endtime="20201030 11:00:14.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:14.558" level="INFO">${ACCURACY} = {'diff': [0.00013651299999999783, 0.00013740200000000174, 0.00013718000000000063, 0.00013754099999999797, 0.00013783300000000387, 0.0001374860000000061, 0.00013729100000000466, 0.00013661100000000176,...</msg>
<status status="PASS" starttime="20201030 11:00:14.551" endtime="20201030 11:00:14.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.569" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:00:14.566" endtime="20201030 11:00:14.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.574" level="INFO">VALUE: [0.00013651299999999783, 0.00013740200000000174, 0.00013718000000000063, 0.00013754099999999797, 0.00013783300000000387, 0.0001374860000000061, 0.00013729100000000466, 0.00013661100000000176, 0.0001376810000000006, 0.00013781999999999683, 0.00013774999999999898, 0.00013756900000000405, 0.00013773599999999941, 0.00013770899999999975, 0.000136346999999995, 0.00013805499999999804, 0.0001373610000000025, 0.00013619499999999868, 0.0001371810000000001, 0.00013755599999999701, 0.00013707000000000302, 0.00013788900000000215, 0.000137264000000005, 0.00013651400000000424, 0.0001365139999999973, 0.00013619499999999868, 0.0001379720000000001, 0.00013737500000000208, 0.00013798599999999966, 0.0001375840000000031, 0.00013786099999999607, 0.00013695799999999952, 0.00013743000000000088, 0.00013708399999999565, 0.0001368469999999955, 0.0001376810000000006, 0.00013733299999999643, 0.00013794400000000095, 0.00013763899999999496, 0.0001374719999999996, 0.000137652000000002, 0.00013802799999999837, 0.00013731899999999686, 0.00013629200000000313, 0.00013787499999999564, 0.00013783299999999693, 0.00013787499999999564, 0.00013655599999999601, 0.0001373190000000038, 0.0001373610000000025]</msg>
<status status="PASS" starttime="20201030 11:00:14.571" endtime="20201030 11:00:14.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.560" endtime="20201030 11:00:14.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:14.586" endtime="20201030 11:00:14.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.582" endtime="20201030 11:00:14.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.580" endtime="20201030 11:00:14.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.092" endtime="20201030 11:00:14.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.091" endtime="20201030 11:00:14.611"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.634" endtime="20201030 11:00:14.656"></status>
</kw>
<msg timestamp="20201030 11:00:14.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:14.631" endtime="20201030 11:00:14.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:14.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:14.660" endtime="20201030 11:00:14.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.666" endtime="20201030 11:00:14.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.623" endtime="20201030 11:00:14.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.618" endtime="20201030 11:00:14.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:14.689" endtime="20201030 11:00:15.023"></status>
</kw>
<msg timestamp="20201030 11:00:15.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040793097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:14.686" endtime="20201030 11:00:15.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040793097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:15.033" endtime="20201030 11:00:15.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.051" endtime="20201030 11:00:15.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.679" endtime="20201030 11:00:15.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.674" endtime="20201030 11:00:15.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:15.068" level="INFO">${RESULT} = [{'diff': 0.00013812500000000283}, {'diff': 0.00013840299999999528}, {'diff': 0.00013806999999999708}, {'diff': 0.00013813899999999546}, {'diff': 0.00013872200000000084}, {'diff': 0.000138152000000002...</msg>
<status status="PASS" starttime="20201030 11:00:15.059" endtime="20201030 11:00:15.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:15.077" level="INFO">${ACCURACY} = {'diff': [0.00013812500000000283, 0.00013840299999999528, 0.00013806999999999708, 0.00013813899999999546, 0.00013872200000000084, 0.0001381520000000025, 0.00013887500000000358, 0.00013881999999999783,...</msg>
<status status="PASS" starttime="20201030 11:00:15.070" endtime="20201030 11:00:15.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.088" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:00:15.085" endtime="20201030 11:00:15.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.093" level="INFO">VALUE: [0.00013812500000000283, 0.00013840299999999528, 0.00013806999999999708, 0.00013813899999999546, 0.00013872200000000084, 0.0001381520000000025, 0.00013887500000000358, 0.00013881999999999783, 0.00013749999999999873, 0.00013869500000000118, 0.00013877799999999912, 0.00013740300000000122, 0.0001383190000000048, 0.00013834700000000394, 0.00013761100000000276, 0.0001373339999999959, 0.0001373889999999947, 0.00013815300000000197, 0.00013870800000000127, 0.0001390139999999998, 0.00013893100000000186, 0.0001381669999999946, 0.00013831999999999733, 0.0001386810000000016, 0.00013844400000000145, 0.0001386390000000029, 0.0001386249999999964, 0.00013887499999999664, 0.00013865199999999606, 0.00013745800000000002, 0.00013812500000000283, 0.0001382919999999982, 0.00013894400000000195, 0.00013863899999999596, 0.00013858300000000462, 0.0001386810000000016, 0.0001381940000000012, 0.00013842999999999495, 0.0001373049999999973, 0.00013844400000000145, 0.0001383610000000035, 0.00013812500000000283, 0.00013874999999999998, 0.00013822200000000034, 0.0001373060000000037, 0.00013861100000000376, 0.00013859800000000366, 0.0001385139999999993, 0.00013737499999999514, 0.0001380970000000037]</msg>
<status status="PASS" starttime="20201030 11:00:15.090" endtime="20201030 11:00:15.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.079" endtime="20201030 11:00:15.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:15.107" endtime="20201030 11:00:15.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.101" endtime="20201030 11:00:15.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.099" endtime="20201030 11:00:15.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.614" endtime="20201030 11:00:15.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:14.612" endtime="20201030 11:00:15.132"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.154" endtime="20201030 11:00:15.175"></status>
</kw>
<msg timestamp="20201030 11:00:15.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.151" endtime="20201030 11:00:15.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.178" endtime="20201030 11:00:15.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.185" endtime="20201030 11:00:15.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.144" endtime="20201030 11:00:15.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.138" endtime="20201030 11:00:15.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.208" endtime="20201030 11:00:15.543"></status>
</kw>
<msg timestamp="20201030 11:00:15.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:15.204" endtime="20201030 11:00:15.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:15.552" endtime="20201030 11:00:15.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.570" endtime="20201030 11:00:15.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.197" endtime="20201030 11:00:15.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.193" endtime="20201030 11:00:15.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:15.587" level="INFO">${RESULT} = [{'diff': 0.0001396810000000026}, {'diff': 0.00013915199999999656}, {'diff': 0.0001393889999999967}, {'diff': 0.00013993099999999592}, {'diff': 0.00013993000000000339}, {'diff': 0.00013922200000000134...</msg>
<status status="PASS" starttime="20201030 11:00:15.579" endtime="20201030 11:00:15.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:15.597" level="INFO">${ACCURACY} = {'diff': [0.0001396810000000026, 0.00013915199999999656, 0.0001393889999999967, 0.00013993099999999592, 0.00013993000000000339, 0.00013922200000000134, 0.00013858299999999768, 0.00013827799999999862, ...</msg>
<status status="PASS" starttime="20201030 11:00:15.589" endtime="20201030 11:00:15.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.608" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:00:15.606" endtime="20201030 11:00:15.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.613" level="INFO">VALUE: [0.0001396810000000026, 0.00013915199999999656, 0.0001393889999999967, 0.00013993099999999592, 0.00013993000000000339, 0.00013922200000000134, 0.00013858299999999768, 0.00013827799999999862, 0.0001389720000000011, 0.00013927799999999962, 0.00013984700000000544, 0.00013925000000000048, 0.00013929099999999972, 0.00013945799999999509, 0.0001385139999999993, 0.0001396810000000026, 0.00014002800000000037, 0.0001393049999999993, 0.00013952799999999987, 0.00013981999999999883, 0.00013934700000000494, 0.0001393339999999979, 0.00013990200000000425, 0.00013911100000000426, 0.0001397919999999997, 0.00013950000000000073, 0.0001394170000000028, 0.0001391940000000022, 0.00013995799999999559, 0.0001386810000000016, 0.00013984799999999797, 0.00013995899999999506, 0.00013942999999999595, 0.00014005599999999951, 0.00013886099999999707, 0.00013866700000000204, 0.00013840299999999528, 0.00013970900000000175, 0.0001388889999999962, 0.00013925000000000048, 0.0001396249999999974, 0.00013849999999999973, 0.00013958299999999868, 0.00013930500000000623, 0.0001393060000000057, 0.00013973600000000141, 0.00013945800000000202, 0.0001393610000000045, 0.0001391669999999956, 0.00013998600000000166]</msg>
<status status="PASS" starttime="20201030 11:00:15.610" endtime="20201030 11:00:15.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.599" endtime="20201030 11:00:15.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:15.631" endtime="20201030 11:00:15.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.627" endtime="20201030 11:00:15.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.624" endtime="20201030 11:00:15.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.134" endtime="20201030 11:00:15.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.133" endtime="20201030 11:00:15.656"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.679" endtime="20201030 11:00:15.699"></status>
</kw>
<msg timestamp="20201030 11:00:15.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.675" endtime="20201030 11:00:15.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.703" endtime="20201030 11:00:15.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.709" endtime="20201030 11:00:15.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.668" endtime="20201030 11:00:15.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.662" endtime="20201030 11:00:15.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.732" endtime="20201030 11:00:16.065"></status>
</kw>
<msg timestamp="20201030 11:00:16.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039430889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039570931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:15.729" endtime="20201030 11:00:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039430889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039570931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:16.074" endtime="20201030 11:00:16.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.092" endtime="20201030 11:00:16.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.722" endtime="20201030 11:00:16.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.717" endtime="20201030 11:00:16.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:16.109" level="INFO">${RESULT} = [{'diff': 0.00014004199999999994}, {'diff': 0.00014075000000000198}, {'diff': 0.0001409720000000031}, {'diff': 0.00014034700000000594}, {'diff': 0.0001410140000000018}, {'diff': 0.00014091699999999735...</msg>
<status status="PASS" starttime="20201030 11:00:16.101" endtime="20201030 11:00:16.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:16.120" level="INFO">${ACCURACY} = {'diff': [0.00014004199999999994, 0.00014075000000000198, 0.0001409720000000031, 0.00014034700000000594, 0.0001410140000000018, 0.00014091699999999735, 0.00014038900000000465, 0.00014020799999999584, ...</msg>
<status status="PASS" starttime="20201030 11:00:16.111" endtime="20201030 11:00:16.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.131" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:00:16.129" endtime="20201030 11:00:16.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.136" level="INFO">VALUE: [0.00014004199999999994, 0.00014075000000000198, 0.0001409720000000031, 0.00014034700000000594, 0.0001410140000000018, 0.00014091699999999735, 0.00014038900000000465, 0.00014020799999999584, 0.00014097299999999563, 0.00014079100000000122, 0.00014009799999999822, 0.00014031999999999933, 0.00014045800000000302, 0.00014066599999999763, 0.00013956999999999858, 0.00013927799999999962, 0.00014104200000000094, 0.00014104200000000094, 0.00014019499999999574, 0.00014044500000000293, 0.0001404170000000038, 0.00013965300000000347, 0.00014090299999999778, 0.00014040299999999728, 0.00014098600000000266, 0.00014059799999999872, 0.00014077800000000112, 0.00013958399999999815, 0.00014018099999999617, 0.0001396249999999974, 0.00014063899999999796, 0.00013905499999999904, 0.00014098599999999573, 0.0001401810000000031, 0.00014081900000000036, 0.00014105600000000051, 0.00014031999999999933, 0.00014051399999999437, 0.00013965300000000347, 0.00014040300000000422, 0.00014044500000000293, 0.00014024999999999455, 0.00014102800000000137, 0.00014084799999999897, 0.00014050000000000173, 0.00013962500000000433, 0.00013938799999999724, 0.0001394720000000016, 0.00014083299999999993, 0.00014090300000000472]</msg>
<status status="PASS" starttime="20201030 11:00:16.133" endtime="20201030 11:00:16.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.122" endtime="20201030 11:00:16.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:16.148" endtime="20201030 11:00:16.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.144" endtime="20201030 11:00:16.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.142" endtime="20201030 11:00:16.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.658" endtime="20201030 11:00:16.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.657" endtime="20201030 11:00:16.173"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.196" endtime="20201030 11:00:16.217"></status>
</kw>
<msg timestamp="20201030 11:00:16.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:16.193" endtime="20201030 11:00:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:16.220" endtime="20201030 11:00:16.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.226" endtime="20201030 11:00:16.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.186" endtime="20201030 11:00:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.180" endtime="20201030 11:00:16.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.250" endtime="20201030 11:00:16.587"></status>
</kw>
<msg timestamp="20201030 11:00:16.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039293083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:16.246" endtime="20201030 11:00:16.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039293083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:16.596" endtime="20201030 11:00:16.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.614" endtime="20201030 11:00:16.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.239" endtime="20201030 11:00:16.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.235" endtime="20201030 11:00:16.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:16.631" level="INFO">${RESULT} = [{'diff': 0.00014122300000000282}, {'diff': 0.00014027800000000062}, {'diff': 0.0001417920000000017}, {'diff': 0.00014204100000000247}, {'diff': 0.00014108399999999965}, {'diff': 0.0001405130000000018...</msg>
<status status="PASS" starttime="20201030 11:00:16.623" endtime="20201030 11:00:16.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:16.640" level="INFO">${ACCURACY} = {'diff': [0.00014122300000000282, 0.00014027800000000062, 0.0001417920000000017, 0.00014204100000000247, 0.00014108399999999965, 0.00014051300000000183, 0.00014051300000000183, 0.0001416249999999994, ...</msg>
<status status="PASS" starttime="20201030 11:00:16.633" endtime="20201030 11:00:16.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.651" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:00:16.649" endtime="20201030 11:00:16.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.656" level="INFO">VALUE: [0.00014122300000000282, 0.00014027800000000062, 0.0001417920000000017, 0.00014204100000000247, 0.00014108399999999965, 0.00014051300000000183, 0.00014051300000000183, 0.0001416249999999994, 0.00014158300000000068, 0.00014058299999999968, 0.00014154100000000197, 0.00014191699999999835, 0.0001413889999999987, 0.0001408469999999995, 0.00014175000000000298, 0.00014097199999999616, 0.00014109699999999975, 0.00014125000000000248, 0.000141347, 0.00014194500000000443, 0.0001416669999999981, 0.00014130600000000076, 0.00014152799999999494, 0.0001413480000000064, 0.0001416810000000046, 0.00014122299999999588, 0.00014097300000000257, 0.00014182000000000083, 0.00014122300000000282, 0.00014109699999999975, 0.00014172200000000384, 0.00014036099999999857, 0.00014195800000000453, 0.00014157000000000058, 0.00014138799999999924, 0.00014130600000000076, 0.00014130600000000076, 0.00014157000000000058, 0.00014125000000000248, 0.0001413889999999987, 0.0001416249999999994, 0.00014169500000000418, 0.00014183300000000093, 0.00014158300000000068, 0.00014104100000000147, 0.00014033299999999943, 0.0001415690000000011, 0.0001418470000000005, 0.00014026399999999412, 0.00014154200000000144]</msg>
<status status="PASS" starttime="20201030 11:00:16.653" endtime="20201030 11:00:16.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.642" endtime="20201030 11:00:16.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:16.669" endtime="20201030 11:00:16.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.664" endtime="20201030 11:00:16.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.662" endtime="20201030 11:00:16.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.176" endtime="20201030 11:00:16.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.174" endtime="20201030 11:00:16.694"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.716" endtime="20201030 11:00:16.743"></status>
</kw>
<msg timestamp="20201030 11:00:16.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:16.713" endtime="20201030 11:00:16.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:16.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:16.746" endtime="20201030 11:00:16.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.752" endtime="20201030 11:00:16.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.706" endtime="20201030 11:00:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.700" endtime="20201030 11:00:16.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:16.776" endtime="20201030 11:00:17.107"></status>
</kw>
<msg timestamp="20201030 11:00:17.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044660583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:16.772" endtime="20201030 11:00:17.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044660583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:17.116" endtime="20201030 11:00:17.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.135" endtime="20201030 11:00:17.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.765" endtime="20201030 11:00:17.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.760" endtime="20201030 11:00:17.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:17.151" level="INFO">${RESULT} = [{'diff': 0.00014162500000000633}, {'diff': 0.00014263899999999996}, {'diff': 0.00014245799999999809}, {'diff': 0.00014133300000000043}, {'diff': 0.00014158400000000015}, {'diff': 0.000142306000000001...</msg>
<status status="PASS" starttime="20201030 11:00:17.143" endtime="20201030 11:00:17.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:17.161" level="INFO">${ACCURACY} = {'diff': [0.00014162500000000633, 0.00014263899999999996, 0.00014245799999999809, 0.00014133300000000043, 0.00014158400000000015, 0.00014230600000000176, 0.00014237500000000014, 0.00014223600000000391...</msg>
<status status="PASS" starttime="20201030 11:00:17.154" endtime="20201030 11:00:17.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.171" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:00:17.169" endtime="20201030 11:00:17.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.177" level="INFO">VALUE: [0.00014162500000000633, 0.00014263899999999996, 0.00014245799999999809, 0.00014133300000000043, 0.00014158400000000015, 0.00014230600000000176, 0.00014237500000000014, 0.00014223600000000391, 0.0001428890000000002, 0.0001423889999999997, 0.00014286100000000107, 0.00014226400000000305, 0.00014205600000000151, 0.00014295899999999806, 0.00014144400000000446, 0.00014197199999999716, 0.00014233300000000143, 0.0001424019999999998, 0.00014292999999999945, 0.00014248599999999723, 0.00014247299999999713, 0.00014237500000000014, 0.00014166600000000557, 0.00014269500000000518, 0.00014300000000000423, 0.00014284699999999456, 0.0001428340000000014, 0.00014215299999999903, 0.0001422089999999973, 0.00014232000000000133, 0.0001421669999999986, 0.00014263899999999996, 0.00014223599999999698, 0.00014286100000000107, 0.00014273599999999748, 0.00014226400000000305, 0.00014286100000000107, 0.00014190299999999878, 0.00014202800000000237, 0.00014247299999999713, 0.00014301399999999687, 0.00014211100000000032, 0.00014108300000000018, 0.00014261100000000082, 0.00014220800000000478, 0.0001421249999999999, 0.00014300000000000423, 0.00014180599999999433, 0.00014237500000000014, 0.0001427219999999979]</msg>
<status status="PASS" starttime="20201030 11:00:17.174" endtime="20201030 11:00:17.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.162" endtime="20201030 11:00:17.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:17.191" endtime="20201030 11:00:17.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.185" endtime="20201030 11:00:17.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.182" endtime="20201030 11:00:17.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.696" endtime="20201030 11:00:17.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:16.695" endtime="20201030 11:00:17.216"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.238" endtime="20201030 11:00:17.259"></status>
</kw>
<msg timestamp="20201030 11:00:17.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.235" endtime="20201030 11:00:17.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.263" endtime="20201030 11:00:17.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.269" endtime="20201030 11:00:17.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.228" endtime="20201030 11:00:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.222" endtime="20201030 11:00:17.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.292" endtime="20201030 11:00:17.628"></status>
</kw>
<msg timestamp="20201030 11:00:17.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039476931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:17.289" endtime="20201030 11:00:17.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039476931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:17.637" endtime="20201030 11:00:17.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.655" endtime="20201030 11:00:17.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.282" endtime="20201030 11:00:17.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.277" endtime="20201030 11:00:17.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:17.672" level="INFO">${RESULT} = [{'diff': 0.000143444999999999}, {'diff': 0.00014327800000000362}, {'diff': 0.00014372299999999838}, {'diff': 0.00014401399999999787}, {'diff': 0.00014337500000000114}, {'diff': 0.00014342999999999995...</msg>
<status status="PASS" starttime="20201030 11:00:17.664" endtime="20201030 11:00:17.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:17.683" level="INFO">${ACCURACY} = {'diff': [0.000143444999999999, 0.00014327800000000362, 0.00014372299999999838, 0.00014401399999999787, 0.00014337500000000114, 0.00014342999999999995, 0.00014326400000000405, 0.00014329099999999678, ...</msg>
<status status="PASS" starttime="20201030 11:00:17.675" endtime="20201030 11:00:17.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.694" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:00:17.692" endtime="20201030 11:00:17.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.699" level="INFO">VALUE: [0.000143444999999999, 0.00014327800000000362, 0.00014372299999999838, 0.00014401399999999787, 0.00014337500000000114, 0.00014342999999999995, 0.00014326400000000405, 0.00014329099999999678, 0.00014251399999999637, 0.0001438470000000025, 0.00014330599999999583, 0.00014345799999999909, 0.00014395799999999959, 0.0001432219999999984, 0.00014376399999999762, 0.0001431250000000009, 0.000143444999999999, 0.0001425690000000021, 0.00014330499999999635, 0.0001436250000000014, 0.00014358300000000268, 0.00014327799999999669, 0.00014240299999999928, 0.0001435140000000043, 0.00014387500000000164, 0.0001426250000000004, 0.00014393099999999992, 0.0001422089999999973, 0.00014393099999999992, 0.0001438890000000012, 0.0001435419999999965, 0.0001430129999999974, 0.00014405599999999658, 0.0001425419999999955, 0.00014372300000000532, 0.00014365300000000053, 0.00014326399999999712, 0.00014394400000000002, 0.00014313900000000046, 0.00014373699999999795, 0.00014383300000000293, 0.0001435419999999965, 0.0001439449999999995, 0.00014379100000000422, 0.00014342999999999995, 0.00014318099999999917, 0.00014384799999999504, 0.00014376399999999762, 0.00014311100000000132, 0.0001429999999999973]</msg>
<status status="PASS" starttime="20201030 11:00:17.696" endtime="20201030 11:00:17.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.685" endtime="20201030 11:00:17.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:17.712" endtime="20201030 11:00:17.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.707" endtime="20201030 11:00:17.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.705" endtime="20201030 11:00:17.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.218" endtime="20201030 11:00:17.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.217" endtime="20201030 11:00:17.737"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.761" endtime="20201030 11:00:17.782"></status>
</kw>
<msg timestamp="20201030 11:00:17.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.757" endtime="20201030 11:00:17.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:17.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:17.785" endtime="20201030 11:00:17.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.792" endtime="20201030 11:00:17.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.749" endtime="20201030 11:00:17.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.743" endtime="20201030 11:00:17.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:17.815" endtime="20201030 11:00:18.151"></status>
</kw>
<msg timestamp="20201030 11:00:18.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:17.812" endtime="20201030 11:00:18.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:18.161" endtime="20201030 11:00:18.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.179" endtime="20201030 11:00:18.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.805" endtime="20201030 11:00:18.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.800" endtime="20201030 11:00:18.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:18.196" level="INFO">${RESULT} = [{'diff': 0.00014329199999999626}, {'diff': 0.0001444999999999988}, {'diff': 0.00014350000000000473}, {'diff': 0.00014445899999999956}, {'diff': 0.00014379100000000422}, {'diff': 0.0001440690000000036...</msg>
<status status="PASS" starttime="20201030 11:00:18.187" endtime="20201030 11:00:18.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:18.206" level="INFO">${ACCURACY} = {'diff': [0.00014329199999999626, 0.0001444999999999988, 0.00014350000000000473, 0.00014445899999999956, 0.00014379100000000422, 0.0001440690000000036, 0.00014373599999999848, 0.00014431899999999692, ...</msg>
<status status="PASS" starttime="20201030 11:00:18.198" endtime="20201030 11:00:18.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.217" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:00:18.215" endtime="20201030 11:00:18.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.222" level="INFO">VALUE: [0.00014329199999999626, 0.0001444999999999988, 0.00014350000000000473, 0.00014445899999999956, 0.00014379100000000422, 0.0001440690000000036, 0.00014373599999999848, 0.00014431899999999692, 0.00014436100000000257, 0.00014347199999999866, 0.0001442920000000042, 0.00014459800000000272, 0.00014390300000000078, 0.00014452799999999794, 0.00014318000000000664, 0.00014491700000000135, 0.00014340300000000028, 0.00014332000000000233, 0.00014441700000000085, 0.00014441700000000085, 0.0001435969999999953, 0.0001440690000000036, 0.0001441670000000006, 0.00014329199999999626, 0.0001442219999999994, 0.00014483300000000393, 0.00014470800000000034, 0.00014451399999999837, 0.00014382000000000283, 0.00014495800000000059, 0.00014480599999999733, 0.0001444999999999988, 0.00014440300000000128, 0.00014423599999999898, 0.00014465300000000153, 0.00014454099999999803, 0.00014458299999999674, 0.0001439999999999983, 0.00014305599999999558, 0.00014366600000000063, 0.00014441700000000085, 0.0001446380000000025, 0.0001446659999999947, 0.00014387500000000164, 0.00014466600000000163, 0.0001447219999999999, 0.00014440300000000128, 0.0001439999999999983, 0.0001436659999999937, 0.00014465200000000206]</msg>
<status status="PASS" starttime="20201030 11:00:18.220" endtime="20201030 11:00:18.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.208" endtime="20201030 11:00:18.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:18.235" endtime="20201030 11:00:18.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.231" endtime="20201030 11:00:18.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.228" endtime="20201030 11:00:18.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.739" endtime="20201030 11:00:18.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:17.738" endtime="20201030 11:00:18.260"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.283" endtime="20201030 11:00:18.304"></status>
</kw>
<msg timestamp="20201030 11:00:18.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:18.279" endtime="20201030 11:00:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:18.307" endtime="20201030 11:00:18.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.313" endtime="20201030 11:00:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.272" endtime="20201030 11:00:18.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.266" endtime="20201030 11:00:18.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.336" endtime="20201030 11:00:18.671"></status>
</kw>
<msg timestamp="20201030 11:00:18.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039571944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:18.333" endtime="20201030 11:00:18.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039571944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:18.680" endtime="20201030 11:00:18.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.698" endtime="20201030 11:00:18.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.326" endtime="20201030 11:00:18.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.321" endtime="20201030 11:00:18.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:18.715" level="INFO">${RESULT} = [{'diff': 0.0001455129999999999}, {'diff': 0.00014591599999999594}, {'diff': 0.00014474999999999905}, {'diff': 0.0001452220000000004}, {'diff': 0.00014441700000000085}, {'diff': 0.00014606899999999867...</msg>
<status status="PASS" starttime="20201030 11:00:18.707" endtime="20201030 11:00:18.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:18.724" level="INFO">${ACCURACY} = {'diff': [0.0001455129999999999, 0.00014591599999999594, 0.00014474999999999905, 0.0001452220000000004, 0.00014441700000000085, 0.00014606899999999867, 0.0001441250000000019, 0.0001453329999999975, 0....</msg>
<status status="PASS" starttime="20201030 11:00:18.717" endtime="20201030 11:00:18.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.735" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:00:18.733" endtime="20201030 11:00:18.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.740" level="INFO">VALUE: [0.0001455129999999999, 0.00014591599999999594, 0.00014474999999999905, 0.0001452220000000004, 0.00014441700000000085, 0.00014606899999999867, 0.0001441250000000019, 0.0001453329999999975, 0.00014523599999999998, 0.00014591600000000288, 0.00014540299999999534, 0.00014429099999999778, 0.0001450969999999968, 0.0001452920000000052, 0.0001449999999999993, 0.00014441700000000085, 0.00014563899999999602, 0.00014563900000000296, 0.00014545900000000056, 0.00014511099999999638, 0.00014590300000000278, 0.00014590299999999584, 0.00014527799999999869, 0.00014558300000000468, 0.00014458299999999674, 0.00014513900000000246, 0.00014558299999999774, 0.00014575000000000005, 0.00014598600000000073, 0.00014570800000000134, 0.00014593100000000192, 0.00014534699999999706, 0.00014598600000000073, 0.00014532000000000433, 0.00014474999999999905, 0.00014515300000000203, 0.00014558300000000468, 0.00014462499999999545, 0.0001455969999999973, 0.00014519400000000127, 0.0001460140000000068, 0.00014426299999999864, 0.0001452220000000004, 0.0001452220000000004, 0.00014520800000000084, 0.00014495800000000059, 0.00014559800000000372, 0.00014573600000000048, 0.0001445549999999976, 0.00014515200000000256]</msg>
<status status="PASS" starttime="20201030 11:00:18.737" endtime="20201030 11:00:18.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.726" endtime="20201030 11:00:18.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:18.752" endtime="20201030 11:00:18.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.748" endtime="20201030 11:00:18.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.746" endtime="20201030 11:00:18.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.262" endtime="20201030 11:00:18.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.261" endtime="20201030 11:00:18.777"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.800" endtime="20201030 11:00:18.823"></status>
</kw>
<msg timestamp="20201030 11:00:18.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:18.797" endtime="20201030 11:00:18.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:18.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:18.826" endtime="20201030 11:00:18.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.832" endtime="20201030 11:00:18.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.790" endtime="20201030 11:00:18.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.784" endtime="20201030 11:00:18.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:18.855" endtime="20201030 11:00:19.189"></status>
</kw>
<msg timestamp="20201030 11:00:19.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0409205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:18.852" endtime="20201030 11:00:19.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0409205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:19.198" endtime="20201030 11:00:19.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.216" endtime="20201030 11:00:19.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.845" endtime="20201030 11:00:19.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.840" endtime="20201030 11:00:19.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:19.233" level="INFO">${RESULT} = [{'diff': 0.000146832999999999}, {'diff': 0.00014513900000000246}, {'diff': 0.00014697200000000216}, {'diff': 0.00014609799999999729}, {'diff': 0.00014619399999999533}, {'diff': 0.00014618100000000217...</msg>
<status status="PASS" starttime="20201030 11:00:19.225" endtime="20201030 11:00:19.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:19.243" level="INFO">${ACCURACY} = {'diff': [0.000146832999999999, 0.00014513900000000246, 0.00014697200000000216, 0.00014609799999999729, 0.00014619399999999533, 0.00014618100000000217, 0.00014591600000000288, 0.00014562499999999645, ...</msg>
<status status="PASS" starttime="20201030 11:00:19.236" endtime="20201030 11:00:19.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.253" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:00:19.251" endtime="20201030 11:00:19.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.259" level="INFO">VALUE: [0.000146832999999999, 0.00014513900000000246, 0.00014697200000000216, 0.00014609799999999729, 0.00014619399999999533, 0.00014618100000000217, 0.00014591600000000288, 0.00014562499999999645, 0.00014701400000000087, 0.0001465000000000008, 0.0001465000000000008, 0.00014598600000000073, 0.00014622300000000088, 0.00014606899999999867, 0.0001462079999999949, 0.00014658399999999822, 0.0001466800000000032, 0.0001462079999999949, 0.0001466670000000031, 0.0001468749999999977, 0.00014527799999999869, 0.00014609800000000422, 0.00014519400000000127, 0.00014562499999999645, 0.00014697199999999522, 0.00014691700000000335, 0.0001468199999999989, 0.00014675000000000105, 0.00014677800000000019, 0.00014694400000000302, 0.00014658400000000515, 0.00014643100000000242, 0.0001462220000000014, 0.00014680599999999933, 0.0001463619999999971, 0.00014604099999999953, 0.00014641700000000285, 0.00014615300000000303, 0.0001466800000000032, 0.00014695900000000206, 0.00014625000000000055, 0.00014680499999999985, 0.000146832999999999, 0.00014652799999999994, 0.00014690199999999737, 0.00014645799999999515, 0.00014575000000000005, 0.00014629199999999926, 0.00014683399999999847, 0.00014668099999999573]</msg>
<status status="PASS" starttime="20201030 11:00:19.256" endtime="20201030 11:00:19.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.244" endtime="20201030 11:00:19.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:19.272" endtime="20201030 11:00:19.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.267" endtime="20201030 11:00:19.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.264" endtime="20201030 11:00:19.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.780" endtime="20201030 11:00:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:18.778" endtime="20201030 11:00:19.297"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.320" endtime="20201030 11:00:19.341"></status>
</kw>
<msg timestamp="20201030 11:00:19.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:19.316" endtime="20201030 11:00:19.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:19.344" endtime="20201030 11:00:19.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.351" endtime="20201030 11:00:19.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.309" endtime="20201030 11:00:19.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.304" endtime="20201030 11:00:19.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.374" endtime="20201030 11:00:19.707"></status>
</kw>
<msg timestamp="20201030 11:00:19.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039414, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:00:19.370" endtime="20201030 11:00:19.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039414, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:00:19.716" endtime="20201030 11:00:19.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.734" endtime="20201030 11:00:19.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.363" endtime="20201030 11:00:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.359" endtime="20201030 11:00:19.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:19.751" level="INFO">${RESULT} = [{'diff': 0.0001472079999999959}, {'diff': 0.00014723700000000145}, {'diff': 0.00014673599999999454}, {'diff': 0.00014780500000000085}, {'diff': 0.000146832999999999}, {'diff': 0.00014768100000000367}...</msg>
<status status="PASS" starttime="20201030 11:00:19.743" endtime="20201030 11:00:19.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:19.761" level="INFO">${ACCURACY} = {'diff': [0.0001472079999999959, 0.00014723700000000145, 0.00014673599999999454, 0.00014780500000000085, 0.000146832999999999, 0.00014768100000000367, 0.00014641600000000338, 0.00014751400000000137, 0...</msg>
<status status="PASS" starttime="20201030 11:00:19.753" endtime="20201030 11:00:19.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.772" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:00:19.770" endtime="20201030 11:00:19.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.777" level="INFO">VALUE: [0.0001472079999999959, 0.00014723700000000145, 0.00014673599999999454, 0.00014780500000000085, 0.000146832999999999, 0.00014768100000000367, 0.00014641600000000338, 0.00014751400000000137, 0.00014795799999999665, 0.0001472079999999959, 0.0001467090000000018, 0.00014665199999999712, 0.0001479169999999974, 0.0001472499999999946, 0.0001467079999999954, 0.0001473329999999995, 0.00014745799999999615, 0.00014761099999999888, 0.00014756999999999965, 0.0001478749999999987, 0.00014763899999999802, 0.00014775000000000205, 0.00014751400000000137, 0.00014801400000000187, 0.00014751400000000137, 0.00014730599999999983, 0.00014732000000000633, 0.0001475420000000005, 0.00014727800000000069, 0.0001473890000000047, 0.0001461120000000038, 0.00014623600000000098, 0.00014712499999999795, 0.00014675000000000105, 0.00014730599999999983, 0.00014725000000000155, 0.00014611099999999738, 0.00014768100000000367, 0.0001466670000000031, 0.00014656899999999917, 0.00014698600000000173, 0.00014725000000000155, 0.0001473199999999994, 0.000147833, 0.0001463050000000063, 0.00014804100000000153, 0.000147833, 0.00014641599999999644, 0.00014695799999999565, 0.00014788899999999827]</msg>
<status status="PASS" starttime="20201030 11:00:19.774" endtime="20201030 11:00:19.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.763" endtime="20201030 11:00:19.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:19.790" endtime="20201030 11:00:19.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.786" endtime="20201030 11:00:19.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.783" endtime="20201030 11:00:19.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.300" endtime="20201030 11:00:19.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.298" endtime="20201030 11:00:19.815"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.837" endtime="20201030 11:00:19.859"></status>
</kw>
<msg timestamp="20201030 11:00:19.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:19.834" endtime="20201030 11:00:19.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:19.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:19.862" endtime="20201030 11:00:19.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.868" endtime="20201030 11:00:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.827" endtime="20201030 11:00:19.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.821" endtime="20201030 11:00:19.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:19.891" endtime="20201030 11:00:20.226"></status>
</kw>
<msg timestamp="20201030 11:00:20.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039345111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:19.888" endtime="20201030 11:00:20.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039345111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:20.236" endtime="20201030 11:00:20.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.254" endtime="20201030 11:00:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.881" endtime="20201030 11:00:20.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.876" endtime="20201030 11:00:20.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:20.270" level="INFO">${RESULT} = [{'diff': 0.00014784699999999956}, {'diff': 0.0001475409999999941}, {'diff': 0.00014740300000000428}, {'diff': 0.00014831900000000092}, {'diff': 0.00014804100000000153}, {'diff': 0.0001486530000000055...</msg>
<status status="PASS" starttime="20201030 11:00:20.262" endtime="20201030 11:00:20.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:20.281" level="INFO">${ACCURACY} = {'diff': [0.00014784699999999956, 0.0001475409999999941, 0.00014740300000000428, 0.00014831900000000092, 0.00014804100000000153, 0.00014865300000000553, 0.00014794499999999655, 0.00014790199999999837,...</msg>
<status status="PASS" starttime="20201030 11:00:20.273" endtime="20201030 11:00:20.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.292" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:00:20.290" endtime="20201030 11:00:20.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.297" level="INFO">VALUE: [0.00014784699999999956, 0.0001475409999999941, 0.00014740300000000428, 0.00014831900000000092, 0.00014804100000000153, 0.00014865300000000553, 0.00014794499999999655, 0.00014790199999999837, 0.0001477220000000029, 0.00014823600000000298, 0.0001483059999999939, 0.00014756999999999965, 0.00014722300000000188, 0.00014741599999999744, 0.00014756900000000017, 0.00014901399999999593, 0.00014823600000000298, 0.0001485420000000015, 0.00014880600000000133, 0.00014904100000000253, 0.00014843100000000442, 0.00014804100000000153, 0.00014854199999999457, 0.00014845900000000356, 0.00014851399999999543, 0.00014823599999999604, 0.0001476529999999976, 0.00014851400000000237, 0.00014755600000000008, 0.0001485409999999951, 0.00014840300000000528, 0.0001478749999999987, 0.00014806900000000067, 0.00014751399999999443, 0.00014740300000000428, 0.00014845900000000356, 0.00014867999999999826, 0.00014769500000000324, 0.00014897300000000363, 0.00014726400000000112, 0.0001489859999999968, 0.00014840300000000528, 0.00014817999999999776, 0.00014762499999999845, 0.0001480969999999998, 0.00014719500000000274, 0.00014893099999999798, 0.00014730500000000035, 0.000149042000000002, 0.0001474169999999969]</msg>
<status status="PASS" starttime="20201030 11:00:20.294" endtime="20201030 11:00:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.283" endtime="20201030 11:00:20.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:20.310" endtime="20201030 11:00:20.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.305" endtime="20201030 11:00:20.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.303" endtime="20201030 11:00:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.817" endtime="20201030 11:00:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:19.816" endtime="20201030 11:00:20.335"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.357" endtime="20201030 11:00:20.379"></status>
</kw>
<msg timestamp="20201030 11:00:20.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:20.354" endtime="20201030 11:00:20.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:20.382" endtime="20201030 11:00:20.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.388" endtime="20201030 11:00:20.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.347" endtime="20201030 11:00:20.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.341" endtime="20201030 11:00:20.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.412" endtime="20201030 11:00:20.748"></status>
</kw>
<msg timestamp="20201030 11:00:20.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039520694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039669181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:20.408" endtime="20201030 11:00:20.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039520694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039669181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:20.757" endtime="20201030 11:00:20.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.776" endtime="20201030 11:00:20.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.401" endtime="20201030 11:00:20.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.396" endtime="20201030 11:00:20.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:20.793" level="INFO">${RESULT} = [{'diff': 0.00014848699999999576}, {'diff': 0.0001491529999999991}, {'diff': 0.00014988900000000027}, {'diff': 0.00014911100000000038}, {'diff': 0.00014955600000000208}, {'diff': 0.0001496390000000000...</msg>
<status status="PASS" starttime="20201030 11:00:20.784" endtime="20201030 11:00:20.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:20.802" level="INFO">${ACCURACY} = {'diff': [0.00014848699999999576, 0.0001491529999999991, 0.00014988900000000027, 0.00014911100000000038, 0.00014955600000000208, 0.00014963900000000002, 0.00014938899999999977, 0.00014962500000000045,...</msg>
<status status="PASS" starttime="20201030 11:00:20.795" endtime="20201030 11:00:20.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.813" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:00:20.811" endtime="20201030 11:00:20.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.818" level="INFO">VALUE: [0.00014848699999999576, 0.0001491529999999991, 0.00014988900000000027, 0.00014911100000000038, 0.00014955600000000208, 0.00014963900000000002, 0.00014938899999999977, 0.00014962500000000045, 0.0001500000000000043, 0.00014866699999999816, 0.00014936100000000063, 0.00014988900000000027, 0.00014976400000000362, 0.00014917999999999876, 0.0001497499999999971, 0.00014881900000000142, 0.0001493750000000002, 0.00014966699999999916, 0.00014979200000000276, 0.0001492770000000032, 0.0001494859999999973, 0.00014844399999999758, 0.00015004100000000353, 0.0001496659999999997, 0.0001497499999999971, 0.00014981900000000242, 0.00014973599999999754, 0.00014916699999999866, 0.0001493200000000014, 0.00014975000000000405, 0.0001496529999999996, 0.00014915199999999962, 0.0001497499999999971, 0.00014923599999999704, 0.00014923600000000398, 0.00014936100000000063, 0.00014916699999999866, 0.00014916699999999866, 0.00014983299999999505, 0.00014926400000000312, 0.00014967999999999926, 0.00014841599999999844, 0.00014873600000000348, 0.0001482220000000034, 0.00014823600000000298, 0.00014973599999999754, 0.0001496800000000062, 0.00014997199999999822, 0.00014956900000000217, 0.0001495699999999947]</msg>
<status status="PASS" starttime="20201030 11:00:20.815" endtime="20201030 11:00:20.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.804" endtime="20201030 11:00:20.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:20.835" endtime="20201030 11:00:20.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.831" endtime="20201030 11:00:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.829" endtime="20201030 11:00:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.337" endtime="20201030 11:00:20.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.336" endtime="20201030 11:00:20.860"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.883" endtime="20201030 11:00:20.906"></status>
</kw>
<msg timestamp="20201030 11:00:20.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:20.880" endtime="20201030 11:00:20.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:20.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:20.909" endtime="20201030 11:00:20.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.915" endtime="20201030 11:00:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.872" endtime="20201030 11:00:20.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.867" endtime="20201030 11:00:20.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:20.938" endtime="20201030 11:00:21.272"></status>
</kw>
<msg timestamp="20201030 11:00:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040755403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04090525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:20.935" endtime="20201030 11:00:21.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040755403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04090525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:21.281" endtime="20201030 11:00:21.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.300" endtime="20201030 11:00:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.928" endtime="20201030 11:00:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.923" endtime="20201030 11:00:21.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:21.316" level="INFO">${RESULT} = [{'diff': 0.00014984699999999462}, {'diff': 0.00015080600000000333}, {'diff': 0.0001495000000000038}, {'diff': 0.00015034699999999512}, {'diff': 0.0001507780000000042}, {'diff': 0.00015094499999999955...</msg>
<status status="PASS" starttime="20201030 11:00:21.308" endtime="20201030 11:00:21.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:21.325" level="INFO">${ACCURACY} = {'diff': [0.00014984699999999462, 0.00015080600000000333, 0.0001495000000000038, 0.00015034699999999512, 0.0001507780000000042, 0.00015094499999999955, 0.00015104199999999707, 0.00015084700000000256, ...</msg>
<status status="PASS" starttime="20201030 11:00:21.319" endtime="20201030 11:00:21.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.336" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:00:21.334" endtime="20201030 11:00:21.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.342" level="INFO">VALUE: [0.00014984699999999462, 0.00015080600000000333, 0.0001495000000000038, 0.00015034699999999512, 0.0001507780000000042, 0.00015094499999999955, 0.00015104199999999707, 0.00015084700000000256, 0.0001509300000000005, 0.0001493750000000002, 0.00014929199999999532, 0.00014995899999999812, 0.00015043, 0.00015079100000000428, 0.00014917999999999876, 0.00015047200000000566, 0.00015051400000000437, 0.00015052800000000394, 0.000150527999999997, 0.00014918100000000517, 0.0001498750000000007, 0.00015023599999999804, 0.00015099999999999836, 0.0001510829999999963, 0.0001506530000000006, 0.0001503330000000025, 0.00015099999999999836, 0.00015048600000000523, 0.00014969399999999883, 0.0001500970000000018, 0.0001509859999999988, 0.00014926400000000312, 0.00015034800000000154, 0.00015063900000000102, 0.0001502220000000054, 0.00014976399999999668, 0.00015066700000000016, 0.0001505420000000035, 0.0001497770000000037, 0.0001504169999999999, 0.00015106900000000367, 0.00015018099999999923, 0.00015079200000000376, 0.0001493059999999949, 0.00015022199999999847, 0.00014995799999999865, 0.0001500970000000018, 0.00015017999999999976, 0.00015044400000000652, 0.0001496659999999997]</msg>
<status status="PASS" starttime="20201030 11:00:21.339" endtime="20201030 11:00:21.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.327" endtime="20201030 11:00:21.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:21.355" endtime="20201030 11:00:21.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.350" endtime="20201030 11:00:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.347" endtime="20201030 11:00:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.862" endtime="20201030 11:00:21.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:20.861" endtime="20201030 11:00:21.380"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.403" endtime="20201030 11:00:21.425"></status>
</kw>
<msg timestamp="20201030 11:00:21.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:21.400" endtime="20201030 11:00:21.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:21.428" endtime="20201030 11:00:21.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.434" endtime="20201030 11:00:21.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.393" endtime="20201030 11:00:21.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.387" endtime="20201030 11:00:21.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.457" endtime="20201030 11:00:21.792"></status>
</kw>
<msg timestamp="20201030 11:00:21.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039443569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039593681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:21.454" endtime="20201030 11:00:21.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039443569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039593681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:21.801" endtime="20201030 11:00:21.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.819" endtime="20201030 11:00:21.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.447" endtime="20201030 11:00:21.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.442" endtime="20201030 11:00:21.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:21.836" level="INFO">${RESULT} = [{'diff': 0.00015011200000000086}, {'diff': 0.0001507499999999981}, {'diff': 0.0001503330000000025}, {'diff': 0.000151736999999999}, {'diff': 0.00015169400000000083}, {'diff': 0.00015158399999999628},...</msg>
<status status="PASS" starttime="20201030 11:00:21.827" endtime="20201030 11:00:21.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:21.850" level="INFO">${ACCURACY} = {'diff': [0.00015011200000000086, 0.0001507499999999981, 0.0001503330000000025, 0.000151736999999999, 0.00015169400000000083, 0.00015158399999999628, 0.0001510000000000053, 0.0001516950000000003, 0.00...</msg>
<status status="PASS" starttime="20201030 11:00:21.838" endtime="20201030 11:00:21.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.861" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:00:21.859" endtime="20201030 11:00:21.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.866" level="INFO">VALUE: [0.00015011200000000086, 0.0001507499999999981, 0.0001503330000000025, 0.000151736999999999, 0.00015169400000000083, 0.00015158399999999628, 0.0001510000000000053, 0.0001516950000000003, 0.00015202699999999902, 0.00015052800000000394, 0.00015138799999999536, 0.000151430000000001, 0.0001519859999999998, 0.00015084700000000256, 0.0001515699999999967, 0.00015130499999999741, 0.00015127799999999775, 0.00015077799999999725, 0.0001517499999999991, 0.0001511530000000011, 0.00015131999999999646, 0.00015013900000000052, 0.00015072299999999844, 0.00015113900000000152, 0.00015207000000000415, 0.00015104100000000453, 0.00015126400000000512, 0.000151833000000004, 0.00015134699999999612, 0.00015080499999999691, 0.00015201399999999893, 0.00015162500000000245, 0.00015086100000000213, 0.00015184800000000304, 0.00015137499999999526, 0.00015205499999999816, 0.00015172199999999997, 0.00015098699999999826, 0.00015188899999999533, 0.00015129199999999732, 0.00015120899999999937, 0.0001510829999999963, 0.00015106899999999673, 0.00015195800000000065, 0.00015063900000000102, 0.00015086100000000213, 0.00015105499999999716, 0.00015113900000000152, 0.00015154199999999757, 0.00015188900000000227]</msg>
<status status="PASS" starttime="20201030 11:00:21.863" endtime="20201030 11:00:21.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.852" endtime="20201030 11:00:21.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:21.878" endtime="20201030 11:00:21.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.874" endtime="20201030 11:00:21.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.872" endtime="20201030 11:00:21.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.383" endtime="20201030 11:00:21.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.381" endtime="20201030 11:00:21.903"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.926" endtime="20201030 11:00:21.947"></status>
</kw>
<msg timestamp="20201030 11:00:21.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:21.922" endtime="20201030 11:00:21.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:21.951" endtime="20201030 11:00:21.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.957" endtime="20201030 11:00:21.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.915" endtime="20201030 11:00:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.910" endtime="20201030 11:00:21.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.980" endtime="20201030 11:00:22.315"></status>
</kw>
<msg timestamp="20201030 11:00:22.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039185958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039337194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:21.977" endtime="20201030 11:00:22.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039185958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039337194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:22.324" endtime="20201030 11:00:22.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.342" endtime="20201030 11:00:22.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.970" endtime="20201030 11:00:22.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.965" endtime="20201030 11:00:22.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:22.359" level="INFO">${RESULT} = [{'diff': 0.00015123599999999904}, {'diff': 0.0001523609999999967}, {'diff': 0.0001525420000000055}, {'diff': 0.00015297200000000122}, {'diff': 0.0001525970000000043}, {'diff': 0.00015238899999999583}...</msg>
<status status="PASS" starttime="20201030 11:00:22.350" endtime="20201030 11:00:22.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:22.370" level="INFO">${ACCURACY} = {'diff': [0.00015123599999999904, 0.0001523609999999967, 0.0001525420000000055, 0.00015297200000000122, 0.0001525970000000043, 0.00015238899999999583, 0.0001525409999999991, 0.00015190199999999543, 0....</msg>
<status status="PASS" starttime="20201030 11:00:22.361" endtime="20201030 11:00:22.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.380" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:00:22.378" endtime="20201030 11:00:22.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.386" level="INFO">VALUE: [0.00015123599999999904, 0.0001523609999999967, 0.0001525420000000055, 0.00015297200000000122, 0.0001525970000000043, 0.00015238899999999583, 0.0001525409999999991, 0.00015190199999999543, 0.00015227699999999927, 0.0001526530000000026, 0.00015216700000000166, 0.00015276399999999968, 0.0001522499999999996, 0.00015123599999999904, 0.0001519729999999997, 0.00015262500000000345, 0.00015234700000000406, 0.00015281899999999848, 0.0001513750000000022, 0.00015123600000000598, 0.00015201399999999893, 0.00015244400000000158, 0.0001525829999999978, 0.00015261099999999694, 0.00015222200000000047, 0.00015145800000000015, 0.00015222200000000047, 0.00015194500000000055, 0.00015126399999999818, 0.00015179200000000476, 0.00015252699999999952, 0.00015199999999999936, 0.00015172299999999944, 0.00015112500000000195, 0.0001522499999999996, 0.0001528750000000037, 0.0001513750000000022, 0.0001523059999999979, 0.0001521660000000022, 0.00015186100000000313, 0.00015294500000000155, 0.00015263899999999608, 0.0001527080000000014, 0.00015176399999999868, 0.00015284699999999762, 0.00015159699999999637, 0.0001529170000000024, 0.00015204199999999807, 0.00015165199999999518, 0.00015188899999999533]</msg>
<status status="PASS" starttime="20201030 11:00:22.383" endtime="20201030 11:00:22.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.371" endtime="20201030 11:00:22.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:22.398" endtime="20201030 11:00:22.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.394" endtime="20201030 11:00:22.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.391" endtime="20201030 11:00:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.905" endtime="20201030 11:00:22.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.904" endtime="20201030 11:00:22.423"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.446" endtime="20201030 11:00:22.467"></status>
</kw>
<msg timestamp="20201030 11:00:22.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:22.442" endtime="20201030 11:00:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:22.471" endtime="20201030 11:00:22.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.477" endtime="20201030 11:00:22.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.435" endtime="20201030 11:00:22.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.429" endtime="20201030 11:00:22.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.500" endtime="20201030 11:00:22.837"></status>
</kw>
<msg timestamp="20201030 11:00:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039479111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03963225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:22.497" endtime="20201030 11:00:22.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039479111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03963225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:22.846" endtime="20201030 11:00:22.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.865" endtime="20201030 11:00:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.490" endtime="20201030 11:00:22.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.485" endtime="20201030 11:00:22.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:22.882" level="INFO">${RESULT} = [{'diff': 0.00015313900000000352}, {'diff': 0.0001533750000000042}, {'diff': 0.000154013999999994}, {'diff': 0.00015312500000000395}, {'diff': 0.0001536249999999975}, {'diff': 0.00015288899999999633},...</msg>
<status status="PASS" starttime="20201030 11:00:22.873" endtime="20201030 11:00:22.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:22.891" level="INFO">${ACCURACY} = {'diff': [0.00015313900000000352, 0.0001533750000000042, 0.000154013999999994, 0.00015312500000000395, 0.0001536249999999975, 0.00015288899999999633, 0.00015276399999999968, 0.00015344500000000205, 0....</msg>
<status status="PASS" starttime="20201030 11:00:22.884" endtime="20201030 11:00:22.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.901" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:00:22.899" endtime="20201030 11:00:22.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.907" level="INFO">VALUE: [0.00015313900000000352, 0.0001533750000000042, 0.000154013999999994, 0.00015312500000000395, 0.0001536249999999975, 0.00015288899999999633, 0.00015276399999999968, 0.00015344500000000205, 0.00015331899999999898, 0.00015244400000000158, 0.0001538609999999982, 0.00015273600000000054, 0.0001533059999999989, 0.00015330499999999941, 0.00015373600000000154, 0.00015313899999999658, 0.0001529170000000024, 0.0001540280000000005, 0.00015334800000000454, 0.0001526530000000026, 0.00015409699999999887, 0.00015397199999999528, 0.00015219400000000133, 0.00015255599999999814, 0.00015268100000000173, 0.00015395800000000265, 0.00015366699999999622, 0.00015218100000000123, 0.00015304199999999907, 0.00015329199999999932, 0.00015384699999999862, 0.00015276399999999968, 0.00015244400000000158, 0.00015404200000000007, 0.00015340199999999693, 0.0001523750000000032, 0.00015331999999999846, 0.0001535410000000001, 0.000153528, 0.00015333299999999855, 0.0001530279999999995, 0.00015258399999999728, 0.00015372300000000144, 0.00015344500000000205, 0.00015377800000000025, 0.00015295800000000165, 0.00015288900000000327, 0.00015401400000000093, 0.00015329199999999932, 0.00015398599999999485]</msg>
<status status="PASS" starttime="20201030 11:00:22.904" endtime="20201030 11:00:22.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.892" endtime="20201030 11:00:22.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:22.919" endtime="20201030 11:00:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.915" endtime="20201030 11:00:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.912" endtime="20201030 11:00:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.425" endtime="20201030 11:00:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.424" endtime="20201030 11:00:22.944"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.967" endtime="20201030 11:00:22.990"></status>
</kw>
<msg timestamp="20201030 11:00:22.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:22.963" endtime="20201030 11:00:22.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:22.993" endtime="20201030 11:00:22.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.000" endtime="20201030 11:00:23.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.956" endtime="20201030 11:00:23.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.951" endtime="20201030 11:00:23.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.023" endtime="20201030 11:00:23.357"></status>
</kw>
<msg timestamp="20201030 11:00:23.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041117389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:23.019" endtime="20201030 11:00:23.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041117389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:23.366" endtime="20201030 11:00:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.385" endtime="20201030 11:00:23.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.012" endtime="20201030 11:00:23.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.008" endtime="20201030 11:00:23.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:23.402" level="INFO">${RESULT} = [{'diff': 0.0001550830000000003}, {'diff': 0.0001544449999999961}, {'diff': 0.00015494399999999714}, {'diff': 0.0001540829999999993}, {'diff': 0.00015470799999999646}, {'diff': 0.00015484699999999962}...</msg>
<status status="PASS" starttime="20201030 11:00:23.393" endtime="20201030 11:00:23.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:23.411" level="INFO">${ACCURACY} = {'diff': [0.0001550830000000003, 0.0001544449999999961, 0.00015494399999999714, 0.0001540829999999993, 0.00015470799999999646, 0.00015484699999999962, 0.00015445800000000315, 0.000153915999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 11:00:23.404" endtime="20201030 11:00:23.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.421" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:00:23.419" endtime="20201030 11:00:23.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.427" level="INFO">VALUE: [0.0001550830000000003, 0.0001544449999999961, 0.00015494399999999714, 0.0001540829999999993, 0.00015470799999999646, 0.00015484699999999962, 0.00015445800000000315, 0.000153915999999997, 0.00015379100000000034, 0.00015484699999999962, 0.00015392999999999657, 0.00015458399999999928, 0.00015461099999999894, 0.00015326400000000018, 0.00015498599999999585, 0.00015438899999999783, 0.00015469400000000383, 0.00015412499999999801, 0.00015495800000000365, 0.0001546950000000033, 0.000155013999999995, 0.0001534449999999951, 0.00015473600000000254, 0.00015402700000000102, 0.00015461099999999894, 0.0001547500000000021, 0.00015404099999999366, 0.00015355599999999914, 0.0001535699999999987, 0.0001539029999999969, 0.00015479200000000082, 0.0001550830000000003, 0.00015455600000000014, 0.00015454200000000057, 0.00015391699999999647, 0.00015488900000000527, 0.00015317999999999582, 0.00015327799999999975, 0.0001545829999999998, 0.0001541809999999963, 0.00015337499999999726, 0.00015401400000000093, 0.00015354199999999957, 0.00015379199999999982, 0.00015451300000000195, 0.0001531950000000018, 0.00015393099999999604, 0.00015383399999999853, 0.00015420900000000237, 0.00015450000000000186]</msg>
<status status="PASS" starttime="20201030 11:00:23.424" endtime="20201030 11:00:23.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.412" endtime="20201030 11:00:23.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:23.441" endtime="20201030 11:00:23.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.435" endtime="20201030 11:00:23.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.432" endtime="20201030 11:00:23.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.946" endtime="20201030 11:00:23.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.945" endtime="20201030 11:00:23.466"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.488" endtime="20201030 11:00:23.510"></status>
</kw>
<msg timestamp="20201030 11:00:23.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:23.485" endtime="20201030 11:00:23.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:23.513" endtime="20201030 11:00:23.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.519" endtime="20201030 11:00:23.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.478" endtime="20201030 11:00:23.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.472" endtime="20201030 11:00:23.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.542" endtime="20201030 11:00:23.886"></status>
</kw>
<msg timestamp="20201030 11:00:23.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03955275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:23.539" endtime="20201030 11:00:23.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03955275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:00:23.895" endtime="20201030 11:00:23.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:23.913" endtime="20201030 11:00:23.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.532" endtime="20201030 11:00:23.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.527" endtime="20201030 11:00:23.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:23.931" level="INFO">${RESULT} = [{'diff': 0.00015494399999999714}, {'diff': 0.0001555830000000008}, {'diff': 0.00015593099999999804}, {'diff': 0.00015530500000000141}, {'diff': 0.0001557359999999966}, {'diff': 0.00015494399999999714...</msg>
<status status="PASS" starttime="20201030 11:00:23.922" endtime="20201030 11:00:23.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:23.941" level="INFO">${ACCURACY} = {'diff': [0.00015494399999999714, 0.0001555830000000008, 0.00015593099999999804, 0.00015530500000000141, 0.0001557359999999966, 0.00015494399999999714, 0.00015481900000000048, 0.00015587499999999976, ...</msg>
<status status="PASS" starttime="20201030 11:00:23.933" endtime="20201030 11:00:23.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.952" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:00:23.950" endtime="20201030 11:00:23.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:23.958" level="INFO">VALUE: [0.00015494399999999714, 0.0001555830000000008, 0.00015593099999999804, 0.00015530500000000141, 0.0001557359999999966, 0.00015494399999999714, 0.00015481900000000048, 0.00015587499999999976, 0.00015534700000000012, 0.0001543750000000052, 0.00015588899999999933, 0.00015470900000000287, 0.00015591699999999847, 0.00015462499999999851, 0.00015549999999999592, 0.00015597299999999675, 0.00015574999999999617, 0.00015561099999999994, 0.00015527800000000175, 0.0001546950000000033, 0.00015606900000000173, 0.00015522200000000347, 0.00015481900000000048, 0.0001554860000000033, 0.00015511099999999944, 0.0001560830000000013, 0.00015427800000000075, 0.00015512499999999901, 0.00015447199999999578, 0.00015473600000000254, 0.00015555600000000114, 0.00015542999999999807, 0.00015527800000000175, 0.00015572200000000397, 0.00015532000000000046, 0.0001552630000000027, 0.0001555559999999942, 0.00015515299999999815, 0.00015536199999999917, 0.00015601400000000293, 0.00015433399999999903, 0.0001545829999999998, 0.0001560689999999948, 0.00015574999999999617, 0.00015551400000000243, 0.00015523600000000304, 0.00015549999999999592, 0.0001559730000000037, 0.00015552700000000252, 0.00015524999999999567]</msg>
<status status="PASS" starttime="20201030 11:00:23.954" endtime="20201030 11:00:23.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.943" endtime="20201030 11:00:23.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:23.971" endtime="20201030 11:00:23.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.967" endtime="20201030 11:00:23.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.964" endtime="20201030 11:00:23.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.468" endtime="20201030 11:00:23.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.467" endtime="20201030 11:00:23.996"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.019" endtime="20201030 11:00:24.041"></status>
</kw>
<msg timestamp="20201030 11:00:24.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.016" endtime="20201030 11:00:24.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.045" endtime="20201030 11:00:24.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.051" endtime="20201030 11:00:24.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.009" endtime="20201030 11:00:24.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.003" endtime="20201030 11:00:24.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.075" endtime="20201030 11:00:24.420"></status>
</kw>
<msg timestamp="20201030 11:00:24.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040253222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:24.071" endtime="20201030 11:00:24.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040253222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040409875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:24.429" endtime="20201030 11:00:24.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.447" endtime="20201030 11:00:24.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.064" endtime="20201030 11:00:24.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.059" endtime="20201030 11:00:24.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:24.464" level="INFO">${RESULT} = [{'diff': 0.00015665299999999965}, {'diff': 0.00015699999999999742}, {'diff': 0.00015682000000000196}, {'diff': 0.0001564449999999981}, {'diff': 0.00015666699999999922}, {'diff': 0.0001570829999999953...</msg>
<status status="PASS" starttime="20201030 11:00:24.456" endtime="20201030 11:00:24.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:24.475" level="INFO">${ACCURACY} = {'diff': [0.00015665299999999965, 0.00015699999999999742, 0.00015682000000000196, 0.0001564449999999981, 0.00015666699999999922, 0.00015708299999999537, 0.0001566809999999988, 0.00015641699999999897, ...</msg>
<status status="PASS" starttime="20201030 11:00:24.466" endtime="20201030 11:00:24.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.486" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:00:24.484" endtime="20201030 11:00:24.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.491" level="INFO">VALUE: [0.00015665299999999965, 0.00015699999999999742, 0.00015682000000000196, 0.0001564449999999981, 0.00015666699999999922, 0.00015708299999999537, 0.0001566809999999988, 0.00015641699999999897, 0.0001569579999999987, 0.00015656900000000223, 0.00015673600000000454, 0.00015538900000000577, 0.00015512499999999901, 0.00015620900000000437, 0.00015654200000000257, 0.00015572199999999703, 0.00015645899999999768, 0.00015620799999999796, 0.0001558750000000067, 0.00015631900000000198, 0.0001553609999999997, 0.0001565830000000018, 0.00015679100000000334, 0.00015648599999999735, 0.00015579100000000234, 0.00015617999999999882, 0.0001559579999999977, 0.00015515200000000562, 0.00015679200000000282, 0.00015638899999999983, 0.00015683400000000153, 0.00015659699999999444, 0.00015595800000000465, 0.00015645899999999768, 0.00015676299999999727, 0.00015697200000000522, 0.00015591699999999847, 0.00015554200000000157, 0.0001557359999999966, 0.0001551939999999974, 0.00015538899999999883, 0.00015699999999999742, 0.00015688900000000033, 0.00015574999999999617, 0.00015645800000000515, 0.00015672199999999803, 0.00015572200000000397, 0.00015594399999999814, 0.00015704199999999613, 0.0001554029999999984]</msg>
<status status="PASS" starttime="20201030 11:00:24.488" endtime="20201030 11:00:24.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.477" endtime="20201030 11:00:24.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:24.505" endtime="20201030 11:00:24.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.500" endtime="20201030 11:00:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.497" endtime="20201030 11:00:24.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.998" endtime="20201030 11:00:24.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:23.997" endtime="20201030 11:00:24.530"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.553" endtime="20201030 11:00:24.576"></status>
</kw>
<msg timestamp="20201030 11:00:24.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.550" endtime="20201030 11:00:24.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:24.580" endtime="20201030 11:00:24.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.586" endtime="20201030 11:00:24.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.542" endtime="20201030 11:00:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.536" endtime="20201030 11:00:24.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.610" endtime="20201030 11:00:24.958"></status>
</kw>
<msg timestamp="20201030 11:00:24.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039822861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:24.606" endtime="20201030 11:00:24.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:24.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039822861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039979861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:24.967" endtime="20201030 11:00:24.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:24.985" endtime="20201030 11:00:24.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.599" endtime="20201030 11:00:24.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.594" endtime="20201030 11:00:24.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:25.002" level="INFO">${RESULT} = [{'diff': 0.00015699999999999742}, {'diff': 0.00015734699999999519}, {'diff': 0.0001566939999999989}, {'diff': 0.00015708299999999537}, {'diff': 0.00015726400000000418}, {'diff': 0.0001565550000000026...</msg>
<status status="PASS" starttime="20201030 11:00:24.994" endtime="20201030 11:00:25.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:25.011" level="INFO">${ACCURACY} = {'diff': [0.00015699999999999742, 0.00015734699999999519, 0.0001566939999999989, 0.00015708299999999537, 0.00015726400000000418, 0.00015655500000000266, 0.00015698599999999785, 0.00015733300000000255,...</msg>
<status status="PASS" starttime="20201030 11:00:25.004" endtime="20201030 11:00:25.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.022" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:00:25.020" endtime="20201030 11:00:25.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.027" level="INFO">VALUE: [0.00015699999999999742, 0.00015734699999999519, 0.0001566939999999989, 0.00015708299999999537, 0.00015726400000000418, 0.00015655500000000266, 0.00015698599999999785, 0.00015733300000000255, 0.0001580559999999967, 0.00015705600000000264, 0.0001569449999999986, 0.00015805499999999723, 0.00015783299999999612, 0.0001575139999999975, 0.0001578610000000022, 0.00015717999999999982, 0.00015779200000000382, 0.00015637500000000026, 0.00015630500000000241, 0.00015669499999999836, 0.0001577080000000064, 0.00015784699999999569, 0.00015758299999999587, 0.0001578060000000034, 0.00015765300000000065, 0.00015630500000000241, 0.00015666599999999975, 0.00015730599999999595, 0.00015632000000000146, 0.00015684700000000162, 0.00015776399999999774, 0.0001577500000000051, 0.0001564579999999982, 0.00015798599999999885, 0.00015793100000000004, 0.00015622199999999753, 0.0001578610000000022, 0.0001562909999999959, 0.00015672200000000497, 0.0001576939999999999, 0.00015654200000000257, 0.00015805500000000416, 0.00015651400000000343, 0.00015750000000000486, 0.00015774999999999817, 0.00015731900000000298, 0.00015749999999999792, 0.00015801300000000545, 0.00015761100000000194, 0.00015767999999999338]</msg>
<status status="PASS" starttime="20201030 11:00:25.024" endtime="20201030 11:00:25.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.013" endtime="20201030 11:00:25.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:25.040" endtime="20201030 11:00:25.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.035" endtime="20201030 11:00:25.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.033" endtime="20201030 11:00:25.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.532" endtime="20201030 11:00:25.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:24.531" endtime="20201030 11:00:25.065"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.087" endtime="20201030 11:00:25.112"></status>
</kw>
<msg timestamp="20201030 11:00:25.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.084" endtime="20201030 11:00:25.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.115" endtime="20201030 11:00:25.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.122" endtime="20201030 11:00:25.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.077" endtime="20201030 11:00:25.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.071" endtime="20201030 11:00:25.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.145" endtime="20201030 11:00:25.479"></status>
</kw>
<msg timestamp="20201030 11:00:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041225375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:25.141" endtime="20201030 11:00:25.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041225375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:25.488" endtime="20201030 11:00:25.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.506" endtime="20201030 11:00:25.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.134" endtime="20201030 11:00:25.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.130" endtime="20201030 11:00:25.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:25.523" level="INFO">${RESULT} = [{'diff': 0.00015743099999999954}, {'diff': 0.0001588060000000044}, {'diff': 0.00015712500000000101}, {'diff': 0.00015754199999999663}, {'diff': 0.00015893100000000104}, {'diff': 0.0001573189999999960...</msg>
<status status="PASS" starttime="20201030 11:00:25.515" endtime="20201030 11:00:25.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:00:25.532" level="INFO">${ACCURACY} = {'diff': [0.00015743099999999954, 0.0001588060000000044, 0.00015712500000000101, 0.00015754199999999663, 0.00015893100000000104, 0.00015731899999999605, 0.0001587359999999996, 0.0001585139999999985, 0...</msg>
<status status="PASS" starttime="20201030 11:00:25.525" endtime="20201030 11:00:25.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.543" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:00:25.541" endtime="20201030 11:00:25.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.548" level="INFO">VALUE: [0.00015743099999999954, 0.0001588060000000044, 0.00015712500000000101, 0.00015754199999999663, 0.00015893100000000104, 0.00015731899999999605, 0.0001587359999999996, 0.0001585139999999985, 0.00015812499999999508, 0.00015734700000000212, 0.0001574579999999992, 0.00015754199999999663, 0.0001575689999999963, 0.00015754199999999663, 0.00015897200000000028, 0.00015865200000000218, 0.00015859700000000337, 0.00015847199999999978, 0.0001582909999999979, 0.00015887499999999583, 0.00015770799999999946, 0.0001576939999999999, 0.00015852799999999806, 0.00015900000000000636, 0.00015881899999999755, 0.00015840200000000193, 0.00015892999999999463, 0.00015758400000000228, 0.00015866700000000122, 0.00015751400000000443, 0.00015729199999999638, 0.000158528000000005, 0.00015712500000000101, 0.00015897299999999975, 0.00015895900000000018, 0.00015865300000000165, 0.00015783299999999612, 0.00015833300000000355, 0.00015788900000000133, 0.00015802799999999756, 0.00015774999999999817, 0.00015829200000000432, 0.00015809699999999594, 0.00015745899999999868, 0.00015743099999999954, 0.00015783299999999612, 0.00015874999999999917, 0.00015754199999999663, 0.0001574160000000005, 0.00015777800000000425]</msg>
<status status="PASS" starttime="20201030 11:00:25.545" endtime="20201030 11:00:25.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.534" endtime="20201030 11:00:25.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:25.562" endtime="20201030 11:00:25.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.556" endtime="20201030 11:00:25.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.554" endtime="20201030 11:00:25.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.067" endtime="20201030 11:00:25.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.066" endtime="20201030 11:00:25.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.085" endtime="20201030 11:00:25.587"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:32.960" endtime="20201030 11:00:25.589" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:38.455" endtime="20201030 11:00:25.600"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.737" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:00:25.753" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:00:27.664" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:00:25.734" endtime="20201030 11:00:27.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:00:27.671" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:00:27.668" endtime="20201030 11:00:27.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.731" endtime="20201030 11:00:27.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:27.678" endtime="20201030 11:00:28.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:27.675" endtime="20201030 11:00:28.007"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.036" endtime="20201030 11:00:28.054"></status>
</kw>
<msg timestamp="20201030 11:00:28.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:28.033" endtime="20201030 11:00:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:28.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:28.058" endtime="20201030 11:00:28.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:28.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:28.064" endtime="20201030 11:00:28.071"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:28.027" endtime="20201030 11:00:28.073"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:28.021" endtime="20201030 11:00:28.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.019" endtime="20201030 11:00:28.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:28.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:28.081" endtime="20201030 11:00:28.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.077" endtime="20201030 11:00:28.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.017" endtime="20201030 11:00:28.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.015" endtime="20201030 11:00:28.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.086" endtime="20201030 11:00:28.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.012" endtime="20201030 11:00:28.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.093" endtime="20201030 11:00:28.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.009" endtime="20201030 11:00:28.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.728" endtime="20201030 11:00:28.099"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:28.113" endtime="20201030 11:00:28.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.110" endtime="20201030 11:00:28.137"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.169" endtime="20201030 11:00:28.187"></status>
</kw>
<msg timestamp="20201030 11:00:28.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:28.166" endtime="20201030 11:00:28.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:28.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:28.191" endtime="20201030 11:00:28.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:28.201" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:28.197" endtime="20201030 11:00:28.202"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:28.159" endtime="20201030 11:00:28.204"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:28.153" endtime="20201030 11:00:28.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.150" endtime="20201030 11:00:28.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:28.214" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:28.212" endtime="20201030 11:00:28.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.208" endtime="20201030 11:00:28.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.148" endtime="20201030 11:00:28.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.146" endtime="20201030 11:00:28.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.217" endtime="20201030 11:00:28.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.143" endtime="20201030 11:00:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.138" endtime="20201030 11:00:28.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.107" endtime="20201030 11:00:28.224"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:28.248" endtime="20201030 11:00:34.384"></status>
</kw>
<msg timestamp="20201030 11:00:34.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:28.245" endtime="20201030 11:00:34.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:34.387" endtime="20201030 11:00:34.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.393" endtime="20201030 11:00:34.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.238" endtime="20201030 11:00:34.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.231" endtime="20201030 11:00:34.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:34.406" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:00:34.402" endtime="20201030 11:00:34.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.416" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:34.414" endtime="20201030 11:00:34.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.421" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:34.419" endtime="20201030 11:00:34.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.407" endtime="20201030 11:00:34.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.433" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:34.431" endtime="20201030 11:00:34.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.437" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:34.435" endtime="20201030 11:00:34.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.425" endtime="20201030 11:00:34.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.449" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:34.447" endtime="20201030 11:00:34.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.453" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:00:34.451" endtime="20201030 11:00:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.441" endtime="20201030 11:00:34.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.472" endtime="20201030 11:00:34.823"></status>
</kw>
<msg timestamp="20201030 11:00:34.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.226391694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.226392167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:00:34.469" endtime="20201030 11:00:34.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.226391694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.226392167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:00:34.832" endtime="20201030 11:00:34.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.850" endtime="20201030 11:00:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.462" endtime="20201030 11:00:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.457" endtime="20201030 11:00:34.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:34.867" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10023848599999999}, {'diff': 0.10024074999999999}, {'diff': 0.10023283400000005}, {'diff': 0.10023544399999995}, {'diff': 0.10022882}, {'diff': 0.10023850000000001}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 11:00:34.858" endtime="20201030 11:00:34.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:34.877" level="INFO">${RESULT} = {'diff': [0, 0.10023848599999999, 0.10024074999999999, 0.10023283400000005, 0.10023544399999995, 0.10022882, 0.10023850000000001, 0.10023818100000004, 0.10022749999999991, 0.10023541700000016, 0.10023...</msg>
<status status="PASS" starttime="20201030 11:00:34.869" endtime="20201030 11:00:34.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.887" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:34.885" endtime="20201030 11:00:34.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.892" level="INFO">VALUE: [0, 0.10023848599999999, 0.10024074999999999, 0.10023283400000005, 0.10023544399999995, 0.10022882, 0.10023850000000001, 0.10023818100000004, 0.10022749999999991, 0.10023541700000016, 0.10023768100000008, 0.10022623599999991, 0.100239403, 0.10024883400000006, 0.10025055499999991, 0.10025423600000005, 0.10024683299999992, 0.10025137500000003, 0.10024313900000004, 0.10024845799999982, 0.10025443099999976, 0.10024709700000001, 0.10024568, 0.10023365300000009, 0.10023290299999976, 0.10023926399999983, 0.10023651300000003, 0.10024387499999987, 0.10026063900000004, 0.10024505599999989, 0.10023523600000006, 0.10022706999999986, 0.10023208299999986, 0.10023237500000004, 0.10023209699999969, 0.10022869400000012, 0.10023913900000014, 0.10023948599999999, 0.10022879200000023, 0.10023931899999994, 0.10023801399999943, 0.10023934700000048, 0.1002376810000003, 0.10023491699999987, 0.10022827799999945, 0.10024502800000068, 0.10023455500000011, 0.10024131900000022, 0.10024369500000052, 0.10026079199999938, 0.10024533300000016]</msg>
<status status="PASS" starttime="20201030 11:00:34.890" endtime="20201030 11:00:34.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.879" endtime="20201030 11:00:34.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:28.226" endtime="20201030 11:00:34.897"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:28.100" endtime="20201030 11:00:34.899" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:34.917" endtime="20201030 11:00:34.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.914" endtime="20201030 11:00:34.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.975" endtime="20201030 11:00:34.994"></status>
</kw>
<msg timestamp="20201030 11:00:34.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:34.972" endtime="20201030 11:00:34.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:35.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:34.998" endtime="20201030 11:00:35.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:35.009" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:35.005" endtime="20201030 11:00:35.010"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:34.964" endtime="20201030 11:00:35.011"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:34.958" endtime="20201030 11:00:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.955" endtime="20201030 11:00:35.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:35.021" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:35.020" endtime="20201030 11:00:35.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:35.015" endtime="20201030 11:00:35.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.953" endtime="20201030 11:00:35.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.951" endtime="20201030 11:00:35.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:35.025" endtime="20201030 11:00:35.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.947" endtime="20201030 11:00:35.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.942" endtime="20201030 11:00:35.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.911" endtime="20201030 11:00:35.032"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:35.054" endtime="20201030 11:00:41.189"></status>
</kw>
<msg timestamp="20201030 11:00:41.190" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:35.051" endtime="20201030 11:00:41.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:41.193" endtime="20201030 11:00:41.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.199" endtime="20201030 11:00:41.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:35.044" endtime="20201030 11:00:41.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:35.038" endtime="20201030 11:00:41.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:41.212" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:00:41.207" endtime="20201030 11:00:41.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.222" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:41.220" endtime="20201030 11:00:41.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.226" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:41.224" endtime="20201030 11:00:41.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.214" endtime="20201030 11:00:41.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.238" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:41.236" endtime="20201030 11:00:41.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.243" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:41.241" endtime="20201030 11:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.230" endtime="20201030 11:00:41.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.254" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:41.252" endtime="20201030 11:00:41.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.259" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:00:41.257" endtime="20201030 11:00:41.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.246" endtime="20201030 11:00:41.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.277" endtime="20201030 11:00:41.625"></status>
</kw>
<msg timestamp="20201030 11:00:41.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127825708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228124597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:41.274" endtime="20201030 11:00:41.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127825708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228124597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:41.635" endtime="20201030 11:00:41.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.653" endtime="20201030 11:00:41.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.267" endtime="20201030 11:00:41.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.262" endtime="20201030 11:00:41.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:41.670" level="INFO">${FILTERED} = [{'diff': 0.100298889}, {'diff': 0.10053741699999996}, {'diff': 0.09992200000000001}, {'diff': 0.10023469399999996}, {'diff': 0.10022944500000008}, {'diff': 0.10022434700000005}, {'diff': 0.1002385980...</msg>
<status status="PASS" starttime="20201030 11:00:41.661" endtime="20201030 11:00:41.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:41.679" level="INFO">${RESULT} = {'diff': [0.100298889, 0.10053741699999996, 0.09992200000000001, 0.10023469399999996, 0.10022944500000008, 0.10022434700000005, 0.10023859800000001, 0.10022681899999997, 0.10022883400000004, 0.1002340...</msg>
<status status="PASS" starttime="20201030 11:00:41.672" endtime="20201030 11:00:41.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.689" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:41.686" endtime="20201030 11:00:41.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.694" level="INFO">VALUE: [0.100298889, 0.10053741699999996, 0.09992200000000001, 0.10023469399999996, 0.10022944500000008, 0.10022434700000005, 0.10023859800000001, 0.10022681899999997, 0.10022883400000004, 0.10023406900000009, 0.10023366600000005, 0.10022855499999994, 0.1002321530000001, 0.10023755599999995, 0.100240514, 0.10023961100000012, 0.10022934699999997, 0.10024669399999997, 0.10024955499999999, 0.10024599999999984, 0.10025462500000026, 0.10026059699999967, 0.10024127800000038, 0.10025331999999976, 0.10024204200000009, 0.10023234699999994, 0.10025415300000029, 0.10024745899999976, 0.10023844400000037, 0.10023747200000033, 0.10023006899999976, 0.10023601400000004, 0.10024637500000022, 0.10024222199999988, 0.10023669499999999, 0.10023441700000024, 0.10022259699999969, 0.10022758300000012, 0.10023380600000031, 0.10022593099999977, 0.10023177800000038, 0.1002461109999997, 0.10023515299999985, 0.10023451400000027, 0.10025157000000018, 0.10024937499999975, 0.10024012500000001, 0.10023720800000024, 0.10023562499999983, 0.10024056999999953, 0.100236153]</msg>
<status status="PASS" starttime="20201030 11:00:41.691" endtime="20201030 11:00:41.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.680" endtime="20201030 11:00:41.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:35.034" endtime="20201030 11:00:41.698"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:34.905" endtime="20201030 11:00:41.701" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:41.718" endtime="20201030 11:00:41.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.715" endtime="20201030 11:00:41.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.776" endtime="20201030 11:00:41.794"></status>
</kw>
<msg timestamp="20201030 11:00:41.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:41.773" endtime="20201030 11:00:41.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:41.797" endtime="20201030 11:00:41.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.809" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:41.804" endtime="20201030 11:00:41.809"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:41.766" endtime="20201030 11:00:41.811"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:41.759" endtime="20201030 11:00:41.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.755" endtime="20201030 11:00:41.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:41.822" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:41.820" endtime="20201030 11:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.815" endtime="20201030 11:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.753" endtime="20201030 11:00:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.752" endtime="20201030 11:00:41.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.825" endtime="20201030 11:00:41.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.747" endtime="20201030 11:00:41.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.743" endtime="20201030 11:00:41.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.712" endtime="20201030 11:00:41.833"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.855" endtime="20201030 11:00:47.990"></status>
</kw>
<msg timestamp="20201030 11:00:47.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:41.851" endtime="20201030 11:00:47.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:47.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:47.993" endtime="20201030 11:00:47.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.000" endtime="20201030 11:00:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.844" endtime="20201030 11:00:48.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.839" endtime="20201030 11:00:48.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:48.013" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:00:48.009" endtime="20201030 11:00:48.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.023" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:48.021" endtime="20201030 11:00:48.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.027" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:48.025" endtime="20201030 11:00:48.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.015" endtime="20201030 11:00:48.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.039" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:48.037" endtime="20201030 11:00:48.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.044" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:48.042" endtime="20201030 11:00:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.031" endtime="20201030 11:00:48.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.057" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:48.053" endtime="20201030 11:00:48.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.062" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:00:48.060" endtime="20201030 11:00:48.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.047" endtime="20201030 11:00:48.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.081" endtime="20201030 11:00:48.429"></status>
</kw>
<msg timestamp="20201030 11:00:48.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1274875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228094681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:48.077" endtime="20201030 11:00:48.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1274875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228094681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:00:48.438" endtime="20201030 11:00:48.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.456" endtime="20201030 11:00:48.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.070" endtime="20201030 11:00:48.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.065" endtime="20201030 11:00:48.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:48.473" level="INFO">${FILTERED} = [{'diff': 0.10060718099999999}, {'diff': 0.09992454099999998}, {'diff': 0.10024102700000004}, {'diff': 0.10023691599999995}, {'diff': 0.10023413800000003}, {'diff': 0.10023147200000004}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:48.465" endtime="20201030 11:00:48.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:48.482" level="INFO">${RESULT} = {'diff': [0.10060718099999999, 0.09992454099999998, 0.10024102700000004, 0.10023691599999995, 0.10023413800000003, 0.10023147200000004, 0.10024552799999997, 0.10023769500000002, 0.10022940300000016, 0...</msg>
<status status="PASS" starttime="20201030 11:00:48.475" endtime="20201030 11:00:48.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.492" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:48.490" endtime="20201030 11:00:48.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.497" level="INFO">VALUE: [0.10060718099999999, 0.09992454099999998, 0.10024102700000004, 0.10023691599999995, 0.10023413800000003, 0.10023147200000004, 0.10024552799999997, 0.10023769500000002, 0.10022940300000016, 0.10024190299999991, 0.10023765299999998, 0.100231819, 0.10023727800000004, 0.10023234800000003, 0.10023115300000018, 0.10022688899999999, 0.10022088900000004, 0.10022568099999996, 0.10022933300000014, 0.10023236199999985, 0.10023934700000003, 0.1002345280000001, 0.10023516700000012, 0.10023925, 0.10023722300000015, 0.10024272199999995, 0.10023411099999979, 0.10023911100000005, 0.10023476400000009, 0.10023581899999989, 0.10023826400000013, 0.10024030499999981, 0.10022324999999999, 0.10022686099999989, 0.10023834700000034, 0.10024176299999965, 0.10024136100000014, 0.10025209699999982, 0.10025254199999978, 0.10024244499999924, 0.10022447200000073, 0.10022174999999933, 0.10023756899999992, 0.10023902800000073, 0.10023437499999943, 0.10023838800000018, 0.10024301400000013, 0.10024298599999959, 0.10024055600000015, 0.10022816700000003, 0.10024306900000024]</msg>
<status status="PASS" starttime="20201030 11:00:48.494" endtime="20201030 11:00:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.484" endtime="20201030 11:00:48.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.834" endtime="20201030 11:00:48.502"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:41.706" endtime="20201030 11:00:48.505" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:48.526" endtime="20201030 11:00:48.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.521" endtime="20201030 11:00:48.549"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.582" endtime="20201030 11:00:48.603"></status>
</kw>
<msg timestamp="20201030 11:00:48.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:48.579" endtime="20201030 11:00:48.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:48.606" endtime="20201030 11:00:48.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:48.617" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:48.613" endtime="20201030 11:00:48.617"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:48.572" endtime="20201030 11:00:48.619"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:48.565" endtime="20201030 11:00:48.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.563" endtime="20201030 11:00:48.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:48.629" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:48.628" endtime="20201030 11:00:48.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.623" endtime="20201030 11:00:48.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.561" endtime="20201030 11:00:48.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.559" endtime="20201030 11:00:48.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.633" endtime="20201030 11:00:48.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.555" endtime="20201030 11:00:48.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.551" endtime="20201030 11:00:48.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.518" endtime="20201030 11:00:48.640"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:48.662" endtime="20201030 11:00:54.801"></status>
</kw>
<msg timestamp="20201030 11:00:54.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:48.659" endtime="20201030 11:00:54.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:54.805" endtime="20201030 11:00:54.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:54.811" endtime="20201030 11:00:54.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.652" endtime="20201030 11:00:54.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.646" endtime="20201030 11:00:54.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:54.824" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:00:54.820" endtime="20201030 11:00:54.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.836" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:54.832" endtime="20201030 11:00:54.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.841" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:54.838" endtime="20201030 11:00:54.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.826" endtime="20201030 11:00:54.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.852" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:54.850" endtime="20201030 11:00:54.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.857" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:54.855" endtime="20201030 11:00:54.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.844" endtime="20201030 11:00:54.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.869" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:54.866" endtime="20201030 11:00:54.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.873" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:00:54.871" endtime="20201030 11:00:54.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.860" endtime="20201030 11:00:54.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:54.891" endtime="20201030 11:00:55.249"></status>
</kw>
<msg timestamp="20201030 11:00:55.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:54.888" endtime="20201030 11:00:55.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:55.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:55.259" endtime="20201030 11:00:55.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:55.277" endtime="20201030 11:00:55.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.881" endtime="20201030 11:00:55.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.876" endtime="20201030 11:00:55.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:55.294" level="INFO">${FILTERED} = [{'diff': 0.10081224999999999}, {'diff': 0.09973551400000003}, {'diff': 0.10023298600000002}, {'diff': 0.10023194499999999}, {'diff': 0.10022927800000003}, {'diff': 0.10022551400000002}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:55.285" endtime="20201030 11:00:55.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:55.304" level="INFO">${RESULT} = {'diff': [0.10081224999999999, 0.09973551400000003, 0.10023298600000002, 0.10023194499999999, 0.10022927800000003, 0.10022551400000002, 0.10023605599999996, 0.100233986, 0.10023237500000004, 0.1002335...</msg>
<status status="PASS" starttime="20201030 11:00:55.296" endtime="20201030 11:00:55.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:55.314" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:55.311" endtime="20201030 11:00:55.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:55.319" level="INFO">VALUE: [0.10081224999999999, 0.09973551400000003, 0.10023298600000002, 0.10023194499999999, 0.10022927800000003, 0.10022551400000002, 0.10023605599999996, 0.100233986, 0.10023237500000004, 0.10023350000000009, 0.1002299160000002, 0.10022279199999984, 0.10024598600000001, 0.10022240199999999, 0.10023047200000001, 0.10022698600000002, 0.10022622299999995, 0.10023937500000013, 0.10022351400000007, 0.10022186100000008, 0.1002212499999997, 0.10022563900000003, 0.10022563900000003, 0.10022023600000018, 0.10022912499999981, 0.10022269400000017, 0.10023052799999999, 0.10023277800000008, 0.10023626399999985, 0.10023236100000021, 0.10022633299999972, 0.10022686100000033, 0.10022970800000008, 0.1002329310000003, 0.10023298599999997, 0.1002512499999999, 0.1002440280000001, 0.1002356390000001, 0.10022529099999966, 0.10023758400000027, 0.10024243099999985, 0.10022813900000038, 0.10023266700000022, 0.10021938899999938, 0.10023591700000001, 0.1002504860000002, 0.10024545799999984, 0.10023886100000023, 0.10023423600000037, 0.1002314309999992, 0.1002512219999998]</msg>
<status status="PASS" starttime="20201030 11:00:55.316" endtime="20201030 11:00:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.305" endtime="20201030 11:00:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:48.642" endtime="20201030 11:00:55.324"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:48.511" endtime="20201030 11:00:55.326" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:55.346" endtime="20201030 11:00:55.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.342" endtime="20201030 11:00:55.369"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:55.402" endtime="20201030 11:00:55.422"></status>
</kw>
<msg timestamp="20201030 11:00:55.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:55.399" endtime="20201030 11:00:55.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:55.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:55.425" endtime="20201030 11:00:55.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:55.436" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:55.431" endtime="20201030 11:00:55.436"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:55.391" endtime="20201030 11:00:55.438"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:55.385" endtime="20201030 11:00:55.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.383" endtime="20201030 11:00:55.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:55.448" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:55.447" endtime="20201030 11:00:55.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.442" endtime="20201030 11:00:55.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.381" endtime="20201030 11:00:55.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.379" endtime="20201030 11:00:55.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:55.452" endtime="20201030 11:00:55.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.375" endtime="20201030 11:00:55.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.371" endtime="20201030 11:00:55.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.339" endtime="20201030 11:00:55.459"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:55.483" endtime="20201030 11:01:01.618"></status>
</kw>
<msg timestamp="20201030 11:01:01.620" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:55.480" endtime="20201030 11:01:01.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.626" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:01.622" endtime="20201030 11:01:01.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:01.628" endtime="20201030 11:01:01.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.471" endtime="20201030 11:01:01.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.465" endtime="20201030 11:01:01.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:01.641" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:01:01.637" endtime="20201030 11:01:01.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.651" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:01.649" endtime="20201030 11:01:01.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.656" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:01:01.653" endtime="20201030 11:01:01.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:01.643" endtime="20201030 11:01:01.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.667" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:01.665" endtime="20201030 11:01:01.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.672" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:01:01.670" endtime="20201030 11:01:01.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:01.659" endtime="20201030 11:01:01.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.684" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:01:01.681" endtime="20201030 11:01:01.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:01.688" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:01:01.686" endtime="20201030 11:01:01.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:01.675" endtime="20201030 11:01:01.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:01.706" endtime="20201030 11:01:02.065"></status>
</kw>
<msg timestamp="20201030 11:01:02.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128725472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229737097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:01:01.703" endtime="20201030 11:01:02.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:02.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128725472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229737097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:01:02.074" endtime="20201030 11:01:02.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:02.092" endtime="20201030 11:01:02.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:01.696" endtime="20201030 11:01:02.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:01.691" endtime="20201030 11:01:02.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:01:02.109" level="INFO">${FILTERED} = [{'diff': 0.101011625}, {'diff': 0.09953686199999998}, {'diff': 0.10023880499999999}, {'diff': 0.10023695800000004}, {'diff': 0.10023948599999999}, {'diff': 0.10024048699999999}, {'diff': 0.100254375}...</msg>
<status status="PASS" starttime="20201030 11:01:02.100" endtime="20201030 11:01:02.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:02.119" level="INFO">${RESULT} = {'diff': [0.101011625, 0.09953686199999998, 0.10023880499999999, 0.10023695800000004, 0.10023948599999999, 0.10024048699999999, 0.100254375, 0.10024127799999993, 0.10023458299999999, 0.100235887999999...</msg>
<status status="PASS" starttime="20201030 11:01:02.111" endtime="20201030 11:01:02.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:02.129" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:01:02.127" endtime="20201030 11:01:02.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:02.134" level="INFO">VALUE: [0.101011625, 0.09953686199999998, 0.10023880499999999, 0.10023695800000004, 0.10023948599999999, 0.10024048699999999, 0.100254375, 0.10024127799999993, 0.10023458299999999, 0.10023588799999983, 0.10023147199999993, 0.1002298199999998, 0.10023455499999989, 0.10023680499999998, 0.10022961100000005, 0.10023165200000017, 0.10022963900000015, 0.1002229859999999, 0.10023288899999994, 0.10021838900000013, 0.10023056999999991, 0.10022801400000025, 0.10022497199999991, 0.10021534700000023, 0.10022245799999974, 0.10024531899999989, 0.10023751400000025, 0.1002372359999999, 0.10023919399999981, 0.10025088900000023, 0.10026205600000004, 0.10024627800000019, 0.1002358059999997, 0.10023573600000013, 0.10024563900000016, 0.10023874999999993, 0.10024669399999997, 0.10025420900000004, 0.10022740299999988, 0.10023109699999999, 0.10023794499999994, 0.10023459700000004, 0.10024597299999982, 0.1002270550000004, 0.1002305269999999, 0.100225805, 0.10023319500000039, 0.1002342220000001, 0.10022519400000007, 0.10023061100000064, 0.10024372200000009]</msg>
<status status="PASS" starttime="20201030 11:01:02.131" endtime="20201030 11:01:02.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.121" endtime="20201030 11:01:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:55.461" endtime="20201030 11:01:02.139"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:55.333" endtime="20201030 11:01:02.141" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:01:02.159" endtime="20201030 11:01:02.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.155" endtime="20201030 11:01:02.182"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:02.215" endtime="20201030 11:01:02.233"></status>
</kw>
<msg timestamp="20201030 11:01:02.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:02.212" endtime="20201030 11:01:02.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:02.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:02.236" endtime="20201030 11:01:02.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:01:02.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:01:02.242" endtime="20201030 11:01:02.247"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:02.205" endtime="20201030 11:01:02.249"></status>
</kw>
<status status="FAIL" starttime="20201030 11:01:02.198" endtime="20201030 11:01:02.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.196" endtime="20201030 11:01:02.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:01:02.259" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:01:02.258" endtime="20201030 11:01:02.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.253" endtime="20201030 11:01:02.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.194" endtime="20201030 11:01:02.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.192" endtime="20201030 11:01:02.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:02.269" endtime="20201030 11:01:02.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.188" endtime="20201030 11:01:02.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.184" endtime="20201030 11:01:02.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.152" endtime="20201030 11:01:02.276"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:02.298" endtime="20201030 11:01:08.433"></status>
</kw>
<msg timestamp="20201030 11:01:08.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:02.295" endtime="20201030 11:01:08.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.441" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:08.437" endtime="20201030 11:01:08.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:08.443" endtime="20201030 11:01:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.288" endtime="20201030 11:01:08.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.282" endtime="20201030 11:01:08.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:08.456" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:01:08.452" endtime="20201030 11:01:08.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.466" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:08.464" endtime="20201030 11:01:08.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.470" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:01:08.468" endtime="20201030 11:01:08.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.458" endtime="20201030 11:01:08.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.482" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:08.480" endtime="20201030 11:01:08.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.486" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:01:08.484" endtime="20201030 11:01:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.474" endtime="20201030 11:01:08.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.498" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:01:08.496" endtime="20201030 11:01:08.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.503" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:01:08.501" endtime="20201030 11:01:08.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.490" endtime="20201030 11:01:08.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:08.521" endtime="20201030 11:01:08.868"></status>
</kw>
<msg timestamp="20201030 11:01:08.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13056175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231834083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:01:08.518" endtime="20201030 11:01:08.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13056175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231834083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:01:08.877" endtime="20201030 11:01:08.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:08.895" endtime="20201030 11:01:08.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.511" endtime="20201030 11:01:08.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.506" endtime="20201030 11:01:08.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:01:08.912" level="INFO">${FILTERED} = [{'diff': 0.10127233299999999}, {'diff': 0.10037279099999999}, {'diff': 0.09910376399999998}, {'diff': 0.10022317999999997}, {'diff': 0.10022011099999995}, {'diff': 0.10022524999999993}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:01:08.903" endtime="20201030 11:01:08.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:08.922" level="INFO">${RESULT} = {'diff': [0.10127233299999999, 0.10037279099999999, 0.09910376399999998, 0.10022317999999997, 0.10022011099999995, 0.10022524999999993, 0.10022443000000003, 0.10022277699999993, 0.100234139, 0.1002401...</msg>
<status status="PASS" starttime="20201030 11:01:08.915" endtime="20201030 11:01:08.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.932" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:01:08.930" endtime="20201030 11:01:08.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:08.937" level="INFO">VALUE: [0.10127233299999999, 0.10037279099999999, 0.09910376399999998, 0.10022317999999997, 0.10022011099999995, 0.10022524999999993, 0.10022443000000003, 0.10022277699999993, 0.100234139, 0.10024013900000006, 0.10022052799999992, 0.10020661100000017, 0.10021204199999989, 0.10021737500000016, 0.100223014, 0.10022638899999992, 0.10022816599999995, 0.10022715300000007, 0.10024019500000003, 0.10023706999999993, 0.10023497199999998, 0.1002261390000001, 0.10022516700000006, 0.10023951400000009, 0.10022956999999977, 0.10022911099999998, 0.10022697299999983, 0.10022681899999997, 0.10023004200000019, 0.10022041700000006, 0.10023015300000004, 0.10023022199999998, 0.10022102699999991, 0.10021974999999994, 0.10022062499999995, 0.10022116699999994, 0.10021341699999997, 0.10021038900000034, 0.10023343099999993, 0.10022081899999957, 0.10022843100000056, 0.10022837499999948, 0.10022508400000074, 0.10022684700000006, 0.10023351399999925, 0.10022391600000002, 0.10022965300000042, 0.10021955599999988, 0.10023227800000001, 0.10023088900000054, 0.1002358749999992]</msg>
<status status="PASS" starttime="20201030 11:01:08.934" endtime="20201030 11:01:08.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:08.924" endtime="20201030 11:01:08.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:02.278" endtime="20201030 11:01:08.942"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:01:02.146" endtime="20201030 11:01:08.944" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:00:25.624" endtime="20201030 11:01:08.962"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:57:37.122" endtime="20201030 11:01:09.041"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
